var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/FrameImpl.html",[0,0.05,1,2.023]],["body/classes/FrameImpl.html",[0,0.05,1,2.578,2,0.473,3,0.155,4,0.155,5,0.134,6,4.864,7,1.284,8,0.155,9,2.287,10,1.814,11,0.265,12,2.508,13,1.374,14,0.435,15,0.177,16,0.791,17,3.916,18,3.171,19,3.171,20,1.879,21,3.025,22,5.257,23,1.689,24,2.642,25,3.287,26,1.306,27,3.655,28,3.635,29,2.508,30,2.508,31,2.508,32,3.655,33,2.508,34,4.738,35,3.655,36,2.508,37,3.655,38,2.508,39,1.814,40,2.434,41,2.827,42,1.259,43,2.508,44,3.655,45,0.663,46,1.501,47,2.508,48,2.089,49,1.282,50,0.034,51,1.455,52,0.984,53,2.642,54,3.077,55,1.541,56,1.347,57,1.541,58,1.541,59,2.606,60,1.541,61,1.216,62,1.541,63,2.033,64,1.396,65,2.089,66,1.541,67,2.343,68,1.443,69,2.089,70,2.089,71,1.733,72,1.814,73,1.541,74,2.122,75,2.246,76,2.508,77,1.733,78,1.541,79,2.508,80,1.814,81,2.089,82,1.284,83,2.508,84,1.541,85,2.508,86,2.315,87,2.103,88,2.642,89,2.508,90,1.541,91,2.508,92,1.541,93,2.508,94,1.541,95,2.642,96,2.293,97,3.045,98,1.814,99,1.086,100,1.541,101,2.508,102,1.608,103,2.508,104,2.089,105,2.508,106,2.508,107,2.642,108,1.541,109,2.508,110,1.541,111,2.508,112,2.508,113,2.508,114,2.508,115,2.089,116,2.089,117,2.508,118,2.508,119,2.508,120,1.541,121,2.508,122,1.541,123,3.171,124,1.541,125,1.541,126,1.541,127,1.541,128,0.532,129,1.608,130,1.114,131,2.246,132,0.155,133,4.022,134,4.312,135,2.246,136,1.541,137,2.351,138,3.655,139,1.541,140,2.606,141,3.655,142,1.541,143,0.887,144,1.284,145,0.988,146,3.171,147,2.508,148,3.171,149,1.541,150,1.541,151,1.114,152,1.541,153,1.284,154,0.731,155,0.612,156,1.541,157,1.541,158,1.541,159,1.541,160,1.541,161,3.171,162,1.608,163,1.608,164,1.541,165,1.541,166,1.541,167,2.508,168,1.284,169,1.541,170,1.541,171,1.541,172,1.541,173,1.541,174,1.541,175,0.988,176,1.541,177,1.541,178,1.541,179,1.541,180,1.541,181,1.541,182,1.541,183,1.541,184,2.508,185,1.541,186,1.825,187,1.541,188,3.171,189,1.541,190,1.541,191,1.541,192,1.541,193,1.541,194,2.508,195,1.541,196,1.541,197,1.541,198,1.541,199,2.508,200,1.541,201,1.541,202,1.541,203,1.541,204,1.541,205,1.541,206,1.541,207,1.541,208,1.541,209,1.541,210,1.541,211,1.541,212,0.008,213,0.013,214,0.008]],["title/classes/HeartbeatInfo.html",[0,0.05,215,2.283]],["body/classes/HeartbeatInfo.html",[0,0.062,2,1.217,3,0.4,4,0.4,5,0.346,8,0.4,14,1.117,15,0.456,39,3.607,42,1.572,45,0.628,46,1.528,49,1.54,50,0.034,51,1.677,52,1.182,64,1.76,74,1.98,75,2.935,128,0.577,131,2.064,132,0.4,137,2.161,212,0.02,213,0.026,214,0.02,215,3.607,216,5.023,217,3.301,218,0.435,219,0.807,220,4.549,221,3.948,222,3.962,223,4.144,224,3.962,225,2.844,226,3.962,227,3.962,228,3.962,229,3.962,230,2.161,231,3.962,232,3.962,233,3.962,234,3.962,235,3.301,236,3.301,237,4.989,238,2.598,239,3.962,240,4.989,241,3.962]],["title/interfaces/IFrame.html",[13,1.367,242,0.89]],["body/interfaces/IFrame.html",[3,0.358,4,0.358,5,0.31,8,0.358,9,2.43,10,3.361,11,0.296,13,2.622,15,0.408,16,1.006,21,3.37,23,1.859,24,4.581,40,2.622,41,2.864,45,0.674,50,0.034,54,3.285,56,1.31,59,2.457,61,1.551,63,2.979,64,1.428,65,3.872,67,2.979,68,2.674,69,3.872,70,3.872,71,2.203,72,3.361,99,2.013,128,0.516,132,0.469,154,2.203,212,0.018,213,0.024,214,0.018,218,0.406,219,0.752,242,1.001,243,1.682,244,2.042,245,2.566,246,3.872,247,3.872,248,3.872,249,3.872,250,3.872,251,3.872,252,2.979,253,1.844,254,3.872,255,2.956,256,2.956,257,1.428,258,3.872,259,2.956]],["title/interfaces/IMessage.html",[242,0.89,253,1.253]],["body/interfaces/IMessage.html",[1,3.009,3,0.364,4,0.364,5,0.314,8,0.364,9,1.43,11,0.178,13,2.262,14,1.659,15,0.415,16,1.197,23,1.699,40,1.561,45,0.601,50,0.034,61,1.472,71,2.226,128,0.683,132,0.474,212,0.019,213,0.024,214,0.019,218,0.456,219,0.845,230,2.034,242,1.016,243,1.708,244,2.074,252,3.009,253,2.195,254,3.911,255,3.002,257,1.442,260,2.606,261,2.701,262,2.703,263,3.009,264,1.877,265,3.911,266,1.393,267,4.35,268,2.034,269,4.253,270,4.9,271,1.699,272,4,273,5.532,274,4.608,275,3.183,276,4,277,4.694,278,4.694,279,3.603,280,3.002,281,3.603,282,3.603,283,3.603,284,3.002,285,3.603,286,3.603,287,2.31]],["title/interfaces/IPublishParams.html",[242,0.89,288,1.644]],["body/interfaces/IPublishParams.html",[3,0.291,4,0.291,5,0.252,8,0.291,9,1.85,11,0.143,13,2.02,15,0.332,16,0.875,21,1.662,23,1.773,25,3.653,40,2.5,41,2.769,45,0.697,49,1.14,50,0.034,52,1.331,54,2.907,56,1.3,59,2.211,61,1.425,67,2.591,77,1.916,86,2.907,99,1.751,128,0.679,131,2.105,132,0.592,145,2.591,155,1.146,175,2.591,212,0.015,213,0.021,214,0.015,218,0.512,219,0.949,230,2.303,238,2.105,242,1.14,243,1.369,253,1.85,257,1.552,262,1.751,264,2.769,287,2.591,288,2.631,289,1.851,290,3.367,291,2.683,292,3.367,293,3.532,294,2.923,295,3.367,296,1.352,297,2.923,298,3.367,299,3.367,300,3.845,301,3.408,302,1.662,303,2.088,304,1.851,305,1.851,306,2.088,307,2.406,308,3.367,309,2.406,310,1.851,311,3.367,312,2.088,313,2.406,314,2.406,315,1.851,316,1.851,317,2.406,318,1.851,319,1.851,320,1.851,321,2.923,322,1.662,323,2.406,324,1.851,325,2.406]],["title/interfaces/IRawFrameType.html",[77,1.497,242,0.89]],["body/interfaces/IRawFrameType.html",[3,0.31,4,0.31,5,0.268,8,0.31,9,1.675,11,0.152,13,2.088,15,0.354,16,0.913,21,2.985,23,1.767,25,2.222,40,2.088,41,2.832,45,0.692,49,0.867,50,0.034,52,1.043,54,2.985,56,1.287,59,1.457,61,1.19,67,1.97,77,2.285,86,2.428,99,1.331,128,0.701,131,2.198,132,0.6,145,1.97,155,1.219,175,1.97,212,0.016,213,0.022,214,0.016,218,0.519,219,0.962,230,2.355,238,1.601,242,1.19,243,1.457,253,1.913,257,1.594,262,1.828,264,2.832,287,1.97,288,2.51,289,1.97,290,2.56,291,2.428,292,2.56,293,2.705,294,2.222,295,2.56,296,1.028,297,2.222,298,2.56,299,2.56,300,3.932,301,3.485,302,1.768,303,2.222,304,1.97,305,1.97,306,2.222,307,2.56,308,3.515,309,2.56,310,1.97,311,3.515,312,2.222,313,2.56,314,2.56,315,1.97,316,1.97,317,2.56,318,1.97,319,1.97,320,1.97,321,3.752,322,2.428,323,3.515,324,2.705,325,3.515]],["title/interfaces/IRxStompPublishParams.html",[242,0.89,326,2.283]],["body/interfaces/IRxStompPublishParams.html",[3,0.423,4,0.423,5,0.366,8,0.423,11,0.277,15,0.482,16,1.118,45,0.482,50,0.033,52,1.118,59,2.655,99,2.238,128,0.61,132,0.423,145,3.747,212,0.022,213,0.027,214,0.022,218,0.451,219,0.678,238,2.691,242,1.182,243,1.987,262,2.238,268,2.238,288,2.917,296,1.728,326,3.736,327,1.987,328,1.987,329,3.03,330,3.491,331,5.166,332,4.304,333,5.166,334,1.728,335,5.846,336,5.166,337,4.227,338,5.166,339,5.166,340,3.736,341,5.166,342,5.166,343,4.191]],["title/interfaces/ITransaction.html",[242,0.89,344,2.283]],["body/interfaces/ITransaction.html",[3,0.414,4,0.414,5,0.358,8,0.414,14,1.683,15,0.472,16,1.103,45,0.638,50,0.034,56,1.2,132,0.414,154,2.417,212,0.021,213,0.026,214,0.021,218,0.358,219,0.664,230,2.208,242,1.157,243,1.944,244,2.36,252,3.267,266,1.374,269,3.686,270,4.246,271,1.782,344,3.686,345,3.416,346,6.167,347,3.416,348,3.416,349,4.101,350,4.101,351,4.101,352,6.082,353,6.082,354,3.719,355,5.097,356,5.097,357,3.686,358,4.246,359,4.101,360,4.101]],["title/injectables/InjectableRxStompConfig.html",[361,0.89,362,2.283]],["body/injectables/InjectableRxStompConfig.html",[0,0.084,3,0.387,4,0.387,5,0.334,8,0.387,11,0.28,50,0.033,64,1.5,128,0.711,132,0.387,140,2.316,154,2.316,212,0.02,213,0.025,214,0.02,218,0.426,257,1.651,266,1.341,268,1.66,271,1.5,334,1.282,361,1.597,362,3.532,363,1.817,364,1.396,365,2.457,366,1.817,367,1.66,368,2.116,369,1.938,370,2.116,371,3.114,372,4.069,373,3.532,374,4.069,375,2.544,376,2.811,377,3.532,378,3.532,379,3.532,380,4.094,381,2.116,382,5.662,383,2.544,384,4.885,385,4.717,386,4.885,387,3.131,388,4.069,389,4.885,390,2.949,391,4.885,392,4.885,393,3.532,394,4.885,395,4.885,396,4.885,397,4.885,398,4.069,399,1.996]],["title/injectables/InjectableRxStompRPCConfig.html",[361,0.89,400,1.816]],["body/injectables/InjectableRxStompRPCConfig.html",[0,0.067,3,0.433,4,0.433,5,0.375,8,0.433,11,0.26,50,0.033,128,0.763,132,0.529,140,2.035,212,0.022,213,0.027,214,0.022,218,0.458,257,1.739,266,1.242,268,1.86,318,2.752,319,2.752,334,1.436,361,1.663,363,2.035,364,1.563,365,2.752,366,2.035,367,1.86,368,2.554,369,2.081,370,2.271,381,2.271,399,2.236,400,3.479,401,2.035,402,3.392,403,4.368,404,4.368,405,3.791,406,3.791,407,2.236,408,1.86,409,2.752]],["title/classes/Parser.html",[0,0.05,322,1.816]],["body/classes/Parser.html",[0,0.023,2,0.459,3,0.151,4,0.151,5,0.13,8,0.151,9,1.687,11,0.178,14,0.422,15,0.172,16,0.53,17,4.062,20,1.667,21,1.787,23,1.378,26,1.274,40,2.028,41,0.779,42,0.593,45,0.649,46,1.527,49,1.44,50,0.034,51,1.569,52,1.105,54,0.86,56,1.013,64,1.216,68,1.408,71,1.16,74,2.166,75,2.813,77,1.877,81,2.99,82,2.038,86,2.446,87,1.408,96,2.596,107,2.588,115,2.038,116,2.038,128,0.218,129,3.273,130,1.081,131,2.062,132,0.151,135,2.22,137,1.715,140,1.877,168,1.246,175,1.991,186,2.065,212,0.008,213,0.013,214,0.008,218,0.214,219,0.396,221,3.386,230,2.482,247,2.038,258,3.541,271,1.629,296,1.039,297,2.246,322,2.938,324,1.569,370,1.06,387,1.569,408,1.06,409,1.569,410,1.081,411,2.447,412,3.106,413,3.106,414,2.038,415,5.211,416,2.447,417,2.447,418,2.447,419,2.447,420,2.038,421,2.447,422,3.589,423,4.846,424,3.589,425,2.99,426,4.486,427,3.589,428,2.447,429,2.447,430,3.959,431,3.959,432,2.447,433,2.038,434,2.038,435,2.447,436,2.447,437,1.769,438,2.447,439,2.447,440,3.589,441,2.447,442,2.038,443,1.769,444,2.447,445,3.589,446,2.99,447,2.447,448,1.769,449,2.99,450,2.876,451,2.038,452,2.447,453,3.541,454,2.038,455,4.037,456,2.447,457,2.447,458,2.447,459,3.589,460,2.447,461,1.769,462,3.589,463,2.447,464,2.596,465,2.447,466,2.447,467,2.447,468,2.447,469,2.447,470,2.447,471,2.596,472,3.589,473,2.038,474,3.589,475,1.769,476,4.251,477,2.447,478,2.447,479,2.447,480,2.447,481,1.769,482,2.447,483,4.487,484,2.447,485,2.447,486,2.038,487,2.447,488,2.447,489,2.447,490,2.447,491,2.447,492,2.447,493,3.589,494,2.99,495,2.447,496,1.769,497,2.038,498,2.038,499,2.447,500,2.038,501,2.447,502,2.447,503,3.106,504,3.106,505,3.106,506,3.106,507,3.589,508,3.959,509,2.447,510,2.447,511,2.447,512,2.447,513,2.447,514,2.447,515,2.447,516,2.447,517,3.589,518,3.589,519,3.589,520,3.589,521,3.106,522,2.447,523,1.495,524,2.447,525,1.495,526,2.447,527,1.495,528,2.447,529,1.495,530,1.495,531,1.495,532,1.495,533,2.447,534,2.447,535,1.495,536,2.447,537,1.495,538,1.495,539,1.495,540,1.495,541,1.495,542,1.495,543,1.495,544,1.495,545,1.495,546,1.495,547,1.495,548,2.447,549,1.495,550,1.495,551,1.495,552,1.495,553,1.495,554,1.495,555,1.495,556,1.495,557,2.447,558,1.495,559,2.447,560,0.958,561,2.038,562,0.958,563,1.246,564,1.081,565,1.246,566,1.246,567,2.447,568,1.495,569,1.495,570,1.495,571,1.246,572,1.081,573,1.495,574,1.495,575,1.495,576,2.447,577,1.495,578,3.106,579,1.495,580,1.495,581,2.447,582,2.447,583,1.495,584,1.495,585,1.495,586,1.495,587,1.495,588,1.495,589,1.495,590,1.495,591,1.495,592,1.495,593,2.447,594,1.495,595,2.447,596,1.495,597,3.106,598,1.495,599,1.495]],["title/classes/RxStompConfig.html",[0,0.05,371,1.644]],["body/classes/RxStompConfig.html",[0,0.025,2,0.492,3,0.162,4,0.162,5,0.14,8,0.162,10,1.873,11,0.3,14,1.055,15,0.185,16,0.561,20,2.092,23,1.349,45,0.631,46,1.418,50,0.034,52,1.317,56,0.561,59,2.082,61,1.158,68,1.49,71,1.228,75,2.28,80,1.873,96,1.873,99,2.374,102,2.398,104,2.157,128,0.233,132,0.162,135,2.082,137,2.083,143,2.152,151,1.873,154,1.228,155,1.743,162,2.815,186,2.527,212,0.008,213,0.013,214,0.008,218,0.226,219,0.259,220,3.116,221,1.873,225,1.349,238,2.854,251,2.157,252,1.66,261,1.49,264,2.287,266,0.613,271,1.477,275,1.49,296,0.866,302,1.875,324,2.398,327,2.631,328,2.631,334,0.866,337,3.175,367,0.694,370,1.122,371,1.349,376,2.152,383,1.948,387,1.66,408,1.122,442,2.157,443,1.873,451,2.157,453,3.116,464,1.873,471,1.873,496,1.873,497,2.157,498,2.157,572,1.873,600,1.62,601,2.59,602,2.59,603,2.157,604,2.714,605,2.714,606,2.714,607,2.714,608,2.714,609,2.714,610,2.714,611,2.714,612,2.714,613,2.714,614,2.714,615,2.714,616,2.714,617,2.714,618,1.603,619,2.59,620,2.59,621,2.59,622,3.116,623,1.603,624,2.59,625,1.603,626,3.258,627,2.157,628,2.59,629,2.59,630,2.59,631,2.59,632,2.59,633,2.59,634,1.349,635,1.873,636,2.157,637,4.994,638,2.157,639,1.603,640,2.157,641,2.59,642,2.59,643,3.741,644,3.741,645,3.175,646,1.603,647,2.59,648,3.741,649,2.59,650,2.59,651,2.59,652,2.59,653,3.116,654,2.157,655,2.59,656,2.157,657,2.157,658,1.603,659,3.741,660,2.59,661,1.603,662,2.59,663,2.157,664,1.336,665,2.157,666,1.603,667,3.741,668,3.741,669,4.391,670,4.391,671,2.59,672,1.603,673,2.157,674,1.603,675,2.59,676,2.59,677,2.59,678,2.59,679,2.59,680,2.59,681,3.116,682,2.59,683,2.59,684,2.59,685,2.157,686,1.336,687,2.157,688,1.603,689,2.157,690,2.59,691,2.59,692,1.336,693,2.157,694,2.59,695,2.59,696,2.59,697,2.59,698,2.59,699,3.116,700,2.59,701,2.59,702,2.59,703,2.157,704,2.587,705,1.603,706,2.157,707,1.873,708,2.157,709,3.116,710,3.658,711,2.59,712,2.59,713,2.59,714,2.59,715,2.157,716,1.336,717,2.157,718,2.59,719,3.116,720,2.59,721,2.59,722,2.59,723,2.59,724,3.116,725,2.59,726,2.157,727,2.59,728,1.873,729,1.603,730,2.59,731,2.356,732,1.873,733,1.336,734,1.336,735,1.159,736,1.336,737,2.157,738,1.336,739,1.336,740,1.336,741,1.336,742,1.603,743,1.603,744,1.603,745,1.603,746,1.603,747,1.603,748,1.336,749,1.336]],["title/classes/RxStompRPC.html",[0,0.05,750,2.023]],["body/classes/RxStompRPC.html",[0,0.041,2,0.806,3,0.265,4,0.265,5,0.229,8,0.265,11,0.292,14,1.065,15,0.302,16,0.818,17,3.732,20,1.786,23,1.16,26,1.968,40,1.636,41,1.968,42,1.042,45,0.615,46,1.381,49,1.248,50,0.034,51,1.359,52,0.958,53,3.686,56,0.568,61,1.065,64,1.16,74,1.499,128,0.777,132,0.265,137,2.221,140,2.098,143,1.511,144,2.187,153,2.187,212,0.014,213,0.019,214,0.014,219,0.425,236,2.187,253,1.756,261,2.174,262,1.137,263,2.421,266,1.334,275,2.174,291,3.166,293,1.683,296,1.263,327,2.609,328,2.609,334,1.263,354,2.421,357,1.898,366,1.791,375,1.968,376,2.785,381,2.096,390,1.968,401,2.76,402,2.785,405,3.862,406,3.5,414,4.032,448,2.732,464,1.898,600,2.313,750,2.421,751,2.187,752,5.34,753,3.778,754,2.421,755,4.425,756,4.425,757,4.425,758,2.187,759,4.032,760,3.778,761,2.421,762,1.683,763,3.527,764,3.147,765,3.147,766,3.147,767,2.625,768,3.2,769,2.625,770,3.778,771,2.625,772,4.84,773,4.272,774,3.778,775,2.625,776,3.778,777,1.898,778,2.625,779,2.187,780,3.147,781,1.898,782,1.511,783,4.84,784,4.84,785,2.625,786,3.778,787,3.778,788,3.778,789,2.625,790,2.625,791,2.187,792,2.625,793,2.625,794,3.778,795,2.625,796,2.625,797,2.625,798,2.625,799,3.778,800,4.425,801,2.625,802,2.625,803,2.625,804,2.625,805,2.625,806,2.625,807,2.625,808,2.625,809,2.625,810,2.625]],["title/classes/RxStompRPCConfig.html",[0,0.05,402,1.816]],["body/classes/RxStompRPCConfig.html",[0,0.059,2,1.15,3,0.378,4,0.378,5,0.327,8,0.378,11,0.288,14,1.5,15,0.431,16,1.042,20,1.987,45,0.612,46,1.245,50,0.034,51,1.478,52,1.215,56,1.151,97,4.009,128,0.774,132,0.485,212,0.019,213,0.025,214,0.019,219,0.606,253,1.486,266,1.432,296,1.609,327,2.521,328,2.521,334,1.252,366,1.775,367,1.622,376,3.23,381,2.618,401,2.752,402,2.769,600,2.304,754,2.4,763,3.085,764,4.009,765,4.009,766,4.009,768,3.845,777,2.708,782,2.769,791,4.676,811,5.613,812,5.318,813,3.744,814,4.059,815,4.812,816,4.812,817,3.744,818,4.812]],["title/injectables/RxStompRPCService.html",[361,0.89,819,2.283]],["body/injectables/RxStompRPCService.html",[0,0.064,3,0.414,4,0.414,5,0.358,8,0.414,11,0.287,42,1.627,45,0.472,46,1.061,49,1.157,50,0.033,51,1.26,52,1.2,128,0.844,132,0.414,212,0.021,213,0.026,214,0.021,218,0.445,257,1.566,266,1.207,268,1.777,334,1.371,361,1.683,363,1.944,364,1.856,366,2.417,368,2.513,369,2.023,370,2.208,381,2.208,399,2.136,400,3.339,401,1.944,403,4.246,404,4.246,405,3.686,406,3.686,600,1.777,750,3.719,758,4.246,759,4.833,762,2.629,782,2.36,819,3.686,820,3.267,821,3.416,822,2.751,823,4.101,824,4.101,825,4.101]],["title/injectables/RxStompService.html",[361,0.89,822,1.497]],["body/injectables/RxStompService.html",[0,0.088,3,0.422,4,0.422,5,0.365,8,0.422,11,0.277,50,0.034,128,0.751,132,0.422,212,0.022,213,0.027,214,0.022,218,0.45,257,1.794,266,1.448,268,1.812,334,1.399,361,1.648,363,1.983,364,1.523,368,2.235,369,2.048,370,2.235,372,4.298,373,3.731,374,4.298,375,2.687,376,2.969,377,3.731,378,3.731,379,3.731,380,4.225,381,2.235,399,2.178,600,2.647,820,2.681,822,2.446,826,3.484,827,3.307]],["title/classes/Stomp.html",[0,0.05,11,0.156]],["body/classes/Stomp.html",[0,0.082,2,0.685,3,0.225,4,0.225,5,0.195,8,0.225,11,0.266,14,0.945,15,0.257,16,0.725,20,1.346,26,1.745,28,3.525,45,0.463,46,1.041,49,0.945,50,0.034,51,1.236,52,0.725,56,1.09,64,0.685,74,1.33,102,3.694,128,0.488,132,0.225,135,2.607,137,2.264,140,1.908,143,1.928,151,2.423,154,1.589,155,0.885,163,2.148,212,0.011,213,0.017,214,0.011,218,0.292,219,0.542,223,3.469,225,3.17,235,1.858,257,1.473,261,2.575,266,0.528,271,1.651,275,1.284,276,3.469,296,0.746,320,3.446,348,1.858,358,2.792,369,1.33,370,2.329,375,2.8,390,2.8,393,2.423,407,2.864,408,2.078,409,1.43,446,2.792,448,1.613,450,2.58,461,1.613,475,1.613,571,1.858,572,3.977,640,3.996,645,2.423,654,3.996,693,2.792,704,1.745,717,2.792,719,2.792,728,3.236,731,1.613,732,2.911,735,2.423,761,2.148,762,1.43,828,1.858,829,3.351,830,5.376,831,5.376,832,4.025,833,3.351,834,2.231,835,3.351,836,3.351,837,3.351,838,3.351,839,4.475,840,3.351,841,3.351,842,5.038,843,2.231,844,2.792,845,2.792,846,3.351,847,5.038,848,3.351,849,3.351,850,3.351,851,2.231,852,3.351,853,3.351,854,2.792,855,3.351,856,4.025,857,3.351,858,3.351,859,2.792,860,3.351,861,3.351,862,3.351,863,3.351,864,3.351,865,3.728,866,3.351,867,3.351,868,4.475,869,3.351,870,3.351,871,2.792,872,3.351,873,3.351,874,4.025,875,2.231,876,3.351,877,3.351,878,2.231,879,2.231,880,2.231,881,3.351,882,2.231,883,2.231,884,3.351,885,2.231,886,2.231,887,3.351,888,2.231,889,2.231]],["title/classes/StompConfig.html",[0,0.05,890,1.816]],["body/classes/StompConfig.html",[0,0.033,2,0.648,3,0.213,4,0.213,5,0.184,8,0.213,11,0.193,15,0.243,16,0.695,20,2.179,23,0.648,42,1.274,45,0.705,46,1.584,50,0.034,51,0.986,52,1.388,56,0.695,59,2.337,61,1.32,63,2.058,71,1.522,75,2.505,128,0.566,130,1.524,132,0.213,212,0.011,213,0.017,214,0.011,218,0.28,219,0.52,225,2.568,257,0.986,265,2.675,266,1.522,271,0.986,280,1.756,302,2.238,304,2.493,305,3.598,310,2.493,315,2.493,332,2.675,367,0.913,373,2.322,383,1.672,604,3.24,605,3.24,606,3.24,607,3.24,608,3.24,609,3.24,610,3.24,611,3.24,612,3.24,613,3.24,614,3.24,615,3.24,616,3.24,617,3.24,638,2.675,645,2.322,657,2.675,663,2.675,664,1.756,665,2.675,673,2.675,685,2.675,686,1.756,687,2.675,692,1.756,699,2.675,704,2.265,715,2.675,716,1.756,728,2.322,731,1.524,733,1.756,734,1.756,735,1.524,736,1.756,737,1.756,738,1.756,739,1.756,740,1.756,741,1.756,748,1.756,749,1.756,890,1.848,891,3.94,892,2.675,893,3.211,894,2.675,895,3.211,896,3.889,897,3.889,898,3.889,899,3.889,900,3.889,901,3.889,902,3.889,903,3.889,904,2.108,905,2.108,906,2.108,907,2.108,908,3.211,909,2.108,910,2.108,911,3.211,912,2.108,913,2.108,914,2.108,915,2.108,916,3.211,917,3.211,918,3.211,919,2.108,920,3.211,921,2.108,922,2.108,923,3.211,924,3.211,925,2.108,926,3.211,927,2.108,928,3.211,929,2.108,930,2.108,931,2.108,932,2.108,933,2.108,934,2.108,935,2.108,936,2.108,937,2.108,938,2.108,939,2.108,940,2.108,941,2.108,942,2.108]],["title/classes/StompHeaders.html",[0,0.05,61,0.89]],["body/classes/StompHeaders.html",[0,0.072,2,1.404,3,0.461,4,0.461,5,0.399,8,0.461,11,0.226,23,1.787,46,1.183,48,3.809,49,1.289,50,0.032,56,1.303,61,1.536,63,3.86,64,1.404,98,3.306,99,1.981,132,0.461,212,0.024,213,0.028,214,0.024,218,0.399,219,0.74,246,3.809,256,3.809,471,3.306,560,2.931,562,2.931,603,3.809,622,3.809,891,3.491,943,3.809,944,3.306,945,4.572,946,4.572,947,4.572,948,4.572,949,4.572]],["title/injectables/StompRService.html",[361,0.89,950,2.023]],["body/injectables/StompRService.html",[0,0.057,3,0.129,4,0.129,5,0.112,8,0.129,9,1.925,11,0.285,14,0.606,15,0.147,16,0.705,17,1.782,20,1.886,23,1.653,26,1.697,28,1.782,39,1.554,40,1.204,42,1.103,45,0.418,46,1.356,49,1.025,50,0.034,51,1.116,52,0.786,56,1.165,61,1.18,64,1.526,68,1.237,71,1.545,74,2.048,75,1.019,80,1.554,86,2.264,87,1.237,88,1.79,98,1.554,99,2.235,128,0.639,132,0.129,135,0.606,137,2.235,140,1.019,154,1.019,155,1.562,162,1.377,163,3.11,212,0.007,213,0.011,214,0.007,218,0.188,219,0.207,225,2.049,230,2.152,238,2.179,248,1.79,249,1.79,250,1.79,257,0.66,262,2.358,263,2.088,264,2.379,268,0.554,269,2.356,271,0.854,272,1.554,274,3.278,276,2.356,291,1.875,293,1.377,294,1.554,296,1.089,301,1.377,303,1.554,306,3.731,316,1.377,329,2.356,334,0.428,337,3.303,340,2.845,354,2.088,357,2.356,361,0.606,363,0.606,364,1.936,368,1.411,369,0.853,371,1.448,375,1.697,383,1.697,387,2.088,390,1.697,399,0.666,407,1.119,408,1.705,420,1.79,425,2.714,426,3.278,434,1.79,437,1.554,443,2.356,454,2.714,475,2.356,481,1.554,486,1.79,494,1.79,496,1.554,500,1.79,600,0.931,627,2.714,634,1.697,635,1.554,636,1.79,637,1.79,681,2.316,689,1.79,703,2.714,706,2.316,707,1.554,724,1.065,732,0.925,762,0.82,763,3.11,773,3.278,777,0.925,779,1.065,780,1.79,781,1.554,782,1.6,814,2.845,822,1.019,844,1.79,845,3.658,854,2.714,859,1.79,865,2.714,871,1.065,890,1.237,892,1.79,894,1.79,950,1.377,951,3.844,952,1.065,953,1.554,954,1.554,955,1.554,956,1.79,957,2.149,958,2.149,959,1.79,960,2.714,961,1.79,962,1.79,963,1.79,964,1.79,965,1.79,966,2.088,967,2.149,968,4.183,969,3.258,970,3.258,971,2.149,972,2.78,973,2.78,974,2.78,975,2.78,976,2.78,977,1.278,978,2.149,979,3.278,980,1.278,981,3.633,982,2.714,983,1.278,984,1.278,985,2.149,986,1.278,987,2.149,988,3.258,989,2.149,990,2.149,991,4.183,992,2.149,993,1.278,994,3.258,995,3.258,996,2.149,997,2.149,998,2.149,999,2.149,1000,2.149,1001,2.78,1002,2.149,1003,2.149,1004,2.149,1005,2.149,1006,2.149,1007,2.149,1008,2.149,1009,2.149,1010,2.149,1011,2.149,1012,2.149,1013,1.278,1014,3.258,1015,3.258,1016,3.935,1017,2.149,1018,2.149,1019,3.935,1020,2.149,1021,2.149,1022,2.149,1023,2.149,1024,2.149,1025,2.149,1026,2.149,1027,2.149,1028,2.149,1029,2.149,1030,3.633,1031,2.149,1032,2.149,1033,2.149,1034,2.149,1035,2.149,1036,2.149,1037,3.633,1038,1.278,1039,3.935,1040,3.258,1041,3.935,1042,2.149,1043,1.278,1044,1.278,1045,4.967,1046,3.258,1047,2.149,1048,2.149,1049,2.149,1050,2.714,1051,2.149,1052,2.149,1053,2.78,1054,1.278,1055,1.278,1056,1.79,1057,3.258,1058,2.149,1059,2.149,1060,1.278,1061,1.278,1062,2.149,1063,4.568,1064,1.278,1065,1.278,1066,2.149,1067,1.278,1068,1.278,1069,2.149,1070,2.149,1071,1.278,1072,1.278,1073,1.278,1074,1.278,1075,1.278,1076,1.065,1077,1.278,1078,1.278,1079,1.278,1080,1.278,1081,1.278,1082,1.278,1083,1.278,1084,1.278,1085,1.278,1086,1.278,1087,1.278,1088,1.278,1089,1.278,1090,1.278,1091,1.278,1092,1.278,1093,2.149,1094,1.065,1095,1.278,1096,1.278,1097,1.278,1098,1.278,1099,1.278,1100,1.278,1101,1.278,1102,1.278,1103,1.278,1104,1.278,1105,1.278,1106,1.278,1107,1.278,1108,1.278,1109,1.278,1110,2.149,1111,1.278,1112,3.633,1113,1.278,1114,1.278,1115,1.278,1116,1.278,1117,1.278,1118,1.278,1119,1.278,1120,1.278,1121,1.278,1122,1.065,1123,1.278,1124,1.278,1125,1.278,1126,1.278]],["title/injectables/StompService.html",[361,0.89,966,2.023]],["body/injectables/StompService.html",[0,0.083,3,0.374,4,0.374,5,0.324,8,0.483,11,0.277,14,1.047,20,1.6,42,2.101,45,0.427,46,0.96,49,1.047,50,0.034,51,1.14,52,0.803,64,1.14,74,1.473,87,2.136,128,0.771,132,0.374,212,0.019,213,0.025,214,0.019,218,0.418,257,1.47,262,1.608,266,1.133,268,1.608,272,2.684,340,2.684,361,1.349,363,1.759,364,1.742,368,2.423,369,1.899,375,1.933,383,2.492,390,2.758,399,1.933,407,2.492,408,1.608,437,2.684,481,2.684,634,2.914,635,2.684,763,3.067,781,3.46,782,2.753,814,2.684,822,2.268,827,3.067,890,3.219,950,3.394,953,3.46,954,3.46,955,3.46,956,3.986,959,3.092,960,3.092,961,3.092,962,3.092,963,3.092,964,3.092,966,3.067,1076,3.092,1094,3.092,1122,3.092,1127,3.092,1128,4.785,1129,3.711,1130,4.785,1131,4.785,1132,4.785,1133,3.711,1134,3.092,1135,3.711,1136,3.711,1137,3.711,1138,3.711]],["title/classes/StompSubscription.html",[0,0.05,1139,2.283]],["body/classes/StompSubscription.html",[0,0.066,2,1.292,3,0.424,4,0.424,5,0.367,8,0.424,11,0.208,14,1.46,15,0.484,16,1.121,20,2.047,23,1.591,45,0.596,46,1.34,50,0.034,56,1.121,61,1.46,128,0.612,132,0.424,212,0.022,213,0.027,214,0.022,218,0.452,219,0.838,230,1.823,263,3.32,266,1.227,267,4.314,271,1.292,275,2.98,284,3.505,354,3.853,761,3.32,891,3.596,1139,4.233,1140,3.505,1141,6.011,1142,4.207,1143,5.179,1144,4.207,1145,5.179,1146,4.207]],["title/classes/Versions.html",[0,0.05,704,1.644]],["body/classes/Versions.html",[0,0.076,2,0.964,3,0.316,4,0.316,5,0.274,8,0.316,9,1.698,11,0.28,15,0.361,16,0.926,20,2.055,26,2.229,28,3.939,42,1.245,45,0.63,46,1.523,49,0.885,50,0.034,51,0.964,52,0.679,56,1.293,64,1.607,72,3.095,74,1.698,102,2.743,131,1.634,132,0.316,135,2.029,137,1.854,155,2.077,162,2.743,212,0.016,213,0.022,214,0.016,218,0.425,219,0.508,261,2.463,296,1.935,370,2.449,449,4.709,473,3.565,566,2.613,653,4.709,704,3.176,707,3.095,708,3.565,709,4.709,710,4.709,726,3.565,1134,3.565,1147,2.613,1148,4.871,1149,4.871,1150,4.871,1151,4.871,1152,5.233,1153,5.233,1154,3.137,1155,4.28,1156,4.28,1157,4.28,1158,4.28,1159,4.28,1160,4.28,1161,4.28,1162,4.28,1163,3.137,1164,5.653,1165,3.137,1166,3.137,1167,3.137,1168,3.137,1169,3.137,1170,3.137,1171,3.137,1172,3.137]],["title/coverage.html",[1173,3.581]],["body/coverage.html",[0,0.098,1,1.993,5,0.271,6,2.59,7,2.59,11,0.299,13,1.347,45,0.358,50,0.034,61,0.877,77,1.474,129,1.993,135,1.474,186,3,212,0.016,213,0.022,214,0.016,215,2.248,216,2.59,217,2.59,223,2.248,225,1.619,242,1.59,244,2.79,245,2.248,253,1.234,260,2.248,271,0.955,288,1.619,289,2.727,322,1.789,326,2.248,327,2.589,328,2.589,329,2.248,330,2.59,344,2.248,345,2.59,361,1.59,362,2.248,364,2.14,365,3.108,366,2.299,367,2.442,371,1.619,400,2.448,401,2.299,402,1.789,410,3.948,450,1.993,560,1.993,562,1.993,564,2.248,600,1.347,634,1.619,656,2.59,704,1.619,750,1.993,751,2.59,819,2.248,820,3.108,821,2.59,822,1.474,826,2.59,827,1.993,828,2.59,890,1.789,891,3.342,943,2.59,950,1.993,951,2.248,952,2.59,966,1.993,1127,2.59,1139,2.248,1140,2.59,1147,2.59,1173,2.59,1174,3.109,1175,3.109,1176,6.323,1177,5.772,1178,5.638,1179,4.254,1180,4.254,1181,2.59,1182,4.254,1183,4.254,1184,4.254,1185,3.109,1186,4.849,1187,3.109,1188,3.109,1189,3.109,1190,3.109,1191,3.109,1192,2.59,1193,3.109,1194,3.109,1195,3.109,1196,3.109,1197,3.109,1198,3.109,1199,3.109,1200,4.254,1201,3.109,1202,3.109,1203,4.254,1204,3.109,1205,3.109,1206,5.214,1207,3.109,1208,3.109,1209,3.109,1210,3.109,1211,3.109,1212,3.109,1213,3.109,1214,3.109,1215,3.109]],["title/dependencies.html",[1216,2.641,1217,3.161]],["body/dependencies.html",[50,0.031,212,0.026,213,0.03,214,0.026,1217,4.211,1218,5.055,1219,5.055]],["title/miscellaneous/enumerations.html",[1220,1.144,1221,3.161]],["body/miscellaneous/enumerations.html",[0,0.072,11,0.298,15,0.527,50,0.028,163,2.937,212,0.024,213,0.028,214,0.024,218,0.4,327,2.172,328,2.172,334,1.532,364,1.669,368,2.362,369,1.818,407,2.387,433,4.543,461,3.943,600,1.985,634,2.387,754,2.937,951,3.314,953,3.314,954,3.314,955,3.314,979,4.85,982,4.543,1220,1.985,1221,3.817,1222,3.314,1223,6.026,1224,4.582,1225,4.582,1226,4.582,1227,4.582,1228,5.453,1229,4.582,1230,4.582]],["title/miscellaneous/functions.html",[944,2.743,1220,1.144]],["body/miscellaneous/functions.html",[11,0.285,15,0.514,49,1.259,50,0.031,51,1.372,52,0.967,74,1.772,212,0.023,213,0.028,214,0.023,218,0.39,266,1.058,271,1.769,347,3.72,364,1.626,368,1.935,369,1.772,371,2.326,377,3.229,378,3.229,379,3.229,380,3.883,381,1.935,383,2.326,385,3.72,388,3.72,390,2.326,393,3.229,398,3.72,408,1.935,634,2.797,761,2.863,820,2.863,822,2.898,827,3.442,944,3.229,965,3.72,1050,3.72,1056,3.72,1181,4.473,1220,1.935,1222,3.229,1231,4.466,1232,4.466,1233,4.466,1234,4.466,1235,4.466,1236,4.466,1237,4.466]],["title/index.html",[15,0.363,1238,2.63]],["body/index.html",[2,1.542,50,0.03,212,0.026,213,0.03,214,0.026,243,2.379,363,2.379,1238,4.181,1239,5.751,1240,5.019]],["title/modules.html",[1241,3.581]],["body/modules.html",[50,0.03,212,0.026,213,0.03,214,0.026,1241,4.242]],["title/miscellaneous/typealiases.html",[1220,1.144,1242,3.794]],["body/miscellaneous/typealiases.html",[9,2.001,11,0.273,13,2.384,14,1.137,15,0.464,45,0.464,50,0.026,56,1.191,77,1.911,155,1.599,212,0.021,213,0.026,214,0.021,218,0.536,219,0.994,244,2.902,245,3.646,253,2.184,259,3.358,260,3.646,262,2.184,264,3.092,266,0.955,271,1.86,287,2.584,288,2.626,289,2.584,291,2.902,300,4.293,301,3.805,302,2.902,304,3.232,305,3.232,310,3.232,312,2.915,315,3.232,316,2.584,318,2.584,319,2.584,320,2.584,321,3.646,327,1.911,328,1.911,334,1.348,367,2.184,381,1.746,401,2.391,754,2.584,768,3.646,1220,1.746,1222,2.915,1243,4.03,1244,6.144,1245,5.042]],["title/miscellaneous/variables.html",[1220,1.144,1246,3.161]],["body/miscellaneous/variables.html",[11,0.275,15,0.474,45,0.688,50,0.033,64,1.87,75,2.754,87,2.369,95,3.43,129,3.829,143,2.369,155,1.634,186,2.94,212,0.021,213,0.026,214,0.021,218,0.359,219,0.666,296,2.036,364,1.499,365,2.639,366,2.422,367,2.213,400,3.343,401,2.422,407,2.144,408,1.783,409,2.639,410,2.977,450,3.724,455,4.257,560,3.561,561,4.257,562,3.275,563,3.43,564,3.695,565,3.43,1192,3.43,1220,1.783,1246,3.43,1247,4.117,1248,5.81,1249,4.117,1250,4.117,1251,4.117,1252,4.117,1253,4.117]]],"invertedIndex":[["",{"_index":50,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":186,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":624,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0/1",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":709,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":710,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1.8",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":653,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2.html",{"_index":438,"title":{},"body":{"classes/Parser.html":{}}}],["1/1",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["1/26",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["1/46",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":561,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["11/20",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":563,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":1240,"title":{},"body":{"index.html":{}}}],["15/15",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["22/26",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["37/45",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["41/51",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":565,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":1239,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":114,"title":{},"body":{"classes/FrameImpl.html":{}}}],["80",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["_binarybody",{"_index":18,"title":{},"body":{"classes/FrameImpl.html":{}}}],["_body",{"_index":19,"title":{},"body":{"classes/FrameImpl.html":{}}}],["_bodybytesremaining",{"_index":503,"title":{},"body":{"classes/Parser.html":{}}}],["_collect",{"_index":435,"title":{},"body":{"classes/Parser.html":{}}}],["_collectbodyfixedsize",{"_index":509,"title":{},"body":{"classes/Parser.html":{}}}],["_collectbodyfixedsize(byte",{"_index":534,"title":{},"body":{"classes/Parser.html":{}}}],["_collectbodynullterminated",{"_index":510,"title":{},"body":{"classes/Parser.html":{}}}],["_collectbodynullterminated(byte",{"_index":536,"title":{},"body":{"classes/Parser.html":{}}}],["_collectcommand",{"_index":511,"title":{},"body":{"classes/Parser.html":{}}}],["_collectcommand(byte",{"_index":538,"title":{},"body":{"classes/Parser.html":{}}}],["_collectframe",{"_index":512,"title":{},"body":{"classes/Parser.html":{}}}],["_collectframe(byte",{"_index":540,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheaderkey",{"_index":513,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheaderkey(byte",{"_index":542,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheaders",{"_index":514,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheaders(byte",{"_index":544,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheadervalue",{"_index":515,"title":{},"body":{"classes/Parser.html":{}}}],["_collectheadervalue(byte",{"_index":546,"title":{},"body":{"classes/Parser.html":{}}}],["_consumebyte",{"_index":516,"title":{},"body":{"classes/Parser.html":{}}}],["_consumebyte(byte",{"_index":548,"title":{},"body":{"classes/Parser.html":{}}}],["_consumetokenasraw",{"_index":517,"title":{},"body":{"classes/Parser.html":{}}}],["_consumetokenasutf8",{"_index":518,"title":{},"body":{"classes/Parser.html":{}}}],["_decoder",{"_index":504,"title":{},"body":{"classes/Parser.html":{}}}],["_encoder",{"_index":505,"title":{},"body":{"classes/Parser.html":{}}}],["_headerkey",{"_index":506,"title":{},"body":{"classes/Parser.html":{}}}],["_initstate",{"_index":519,"title":{},"body":{"classes/Parser.html":{}}}],["_mapstompstate",{"_index":967,"title":{},"body":{"injectables/StompRService.html":{}}}],["_mapstompstate(st",{"_index":978,"title":{},"body":{"injectables/StompRService.html":{}}}],["_onbyte",{"_index":423,"title":{},"body":{"classes/Parser.html":{}}}],["_reinjectbyte",{"_index":459,"title":{},"body":{"classes/Parser.html":{}}}],["_reinjectbyte(byte",{"_index":553,"title":{},"body":{"classes/Parser.html":{}}}],["_repliesobservable",{"_index":755,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":756,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_results",{"_index":431,"title":{},"body":{"classes/Parser.html":{}}}],["_retrievedbody",{"_index":520,"title":{},"body":{"classes/Parser.html":{}}}],["_setupcollectbody",{"_index":521,"title":{},"body":{"classes/Parser.html":{}}}],["_setupreplyqueue",{"_index":757,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_token",{"_index":430,"title":{},"body":{"classes/Parser.html":{}}}],["abort",{"_index":352,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":945,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":252,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["accessors",{"_index":39,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"injectables/StompRService.html":{}}}],["accumulating",{"_index":429,"title":{},"body":{"classes/Parser.html":{}}}],["ack",{"_index":269,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/StompRService.html":{}}}],["acknowledgement",{"_index":274,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{}}}],["acknowledges",{"_index":1033,"title":{},"body":{"injectables/StompRService.html":{}}}],["activated",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activemq",{"_index":816,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":829,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":443,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["actually",{"_index":1024,"title":{},"body":{"injectables/StompRService.html":{}}}],["added",{"_index":298,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["addition",{"_index":946,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":331,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["additionally",{"_index":1058,"title":{},"body":{"injectables/StompRService.html":{}}}],["advance",{"_index":386,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["advanced",{"_index":250,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["again",{"_index":458,"title":{},"body":{"classes/Parser.html":{}}}],["alias",{"_index":259,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":287,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":1243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":475,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["allows",{"_index":446,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{}}}],["already",{"_index":1050,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["alternative",{"_index":852,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":870,"title":{},"body":{"classes/Stomp.html":{}}}],["always",{"_index":1052,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular's",{"_index":396,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/core",{"_index":399,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":781,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular7.html",{"_index":379,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["another",{"_index":877,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":144,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompRPC.html":{}}}],["app_initializer",{"_index":397,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["array",{"_index":473,"title":{},"body":{"classes/Parser.html":{},"classes/Versions.html":{}}}],["arraybuffer",{"_index":107,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{}}}],["associated",{"_index":1143,"title":{},"body":{"classes/StompSubscription.html":{}}}],["assumes",{"_index":683,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":625,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":744,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":635,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["asynchronously",{"_index":1017,"title":{},"body":{"injectables/StompRService.html":{}}}],["attempt",{"_index":706,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["attempted",{"_index":711,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":602,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":1001,"title":{},"body":{"injectables/StompRService.html":{}}}],["automatically",{"_index":689,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["available",{"_index":48,"title":{},"body":{"classes/FrameImpl.html":{},"classes/StompHeaders.html":{}}}],["backward",{"_index":318,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":68,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["beating",{"_index":1096,"title":{},"body":{"injectables/StompRService.html":{}}}],["became",{"_index":460,"title":{},"body":{"classes/Parser.html":{}}}],["before",{"_index":442,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":604,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behaviorsubject",{"_index":1037,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.closed",{"_index":1124,"title":{},"body":{"injectables/StompRService.html":{}}}],["binary",{"_index":67,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["binarybody",{"_index":41,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{}}}],["binarybody.length",{"_index":188,"title":{},"body":{"classes/FrameImpl.html":{}}}],["body",{"_index":40,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body/binarybody",{"_index":70,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":282,"title":{},"body":{"interfaces/IMessage.html":{}}}],["bodylength",{"_index":27,"title":{},"body":{"classes/FrameImpl.html":{}}}],["boolean",{"_index":59,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":644,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":99,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokers",{"_index":703,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":605,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["byte",{"_index":129,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["byte.lf",{"_index":184,"title":{},"body":{"classes/FrameImpl.html":{}}}],["byte.null",{"_index":171,"title":{},"body":{"classes/FrameImpl.html":{}}}],["bytes",{"_index":116,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{}}}],["c",{"_index":207,"title":{},"body":{"classes/FrameImpl.html":{}}}],["call",{"_index":275,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{}}}],["call.html",{"_index":406,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callable",{"_index":861,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":264,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":279,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":247,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Parser.html":{}}}],["called",{"_index":627,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["calling",{"_index":348,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":603,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["carry",{"_index":1014,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":151,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":501,"title":{},"body":{"classes/Parser.html":{}}}],["caution",{"_index":682,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":351,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":453,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["changing",{"_index":428,"title":{},"body":{"classes/Parser.html":{}}}],["characters",{"_index":117,"title":{},"body":{"classes/FrameImpl.html":{}}}],["check",{"_index":498,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["chunk",{"_index":483,"title":{},"body":{"classes/Parser.html":{}}}],["chunks",{"_index":485,"title":{},"body":{"classes/Parser.html":{}}}],["class",{"_index":0,"title":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{}}}],["cleanup",{"_index":809,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":225,"title":{},"body":{"classes/HeartbeatInfo.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["client#abort",{"_index":355,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":360,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":277,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":285,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#beforeconnect",{"_index":638,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":748,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":349,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":645,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":731,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":356,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":359,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":895,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":932,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":657,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":740,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":908,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":942,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":663,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":741,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":665,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":738,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":911,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@client#heartbeatincoming",{"_index":671,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":934,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":673,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":736,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":685,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":734,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":687,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":739,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":278,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":286,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onconnect",{"_index":916,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":937,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":917,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":938,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":918,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":939,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":920,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":936,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":265,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":280,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":923,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":935,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":924,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":940,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":926,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":941,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":290,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#publish]{@link",{"_index":317,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#reconnectdelay",{"_index":928,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@client#reconnectdelay",{"_index":691,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":933,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":699,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":737,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":715,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":733,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":267,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":284,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":1145,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":1146,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":1036,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#watchforreceipt]{@link",{"_index":1119,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#websocketfactory",{"_index":728,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":735,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":841,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":860,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["closed",{"_index":1228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closeevent",{"_index":312,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":307,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["closeeventcallbacktype",{"_index":310,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closing",{"_index":1227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cmdandheaders",{"_index":123,"title":{},"body":{"classes/FrameImpl.html":{}}}],["collect",{"_index":467,"title":{},"body":{"classes/Parser.html":{}}}],["colon",{"_index":564,"title":{},"body":{"classes/Parser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["combination",{"_index":486,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["combined",{"_index":395,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["command",{"_index":21,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{}}}],["commit",{"_index":353,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":676,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":235,"title":{},"body":{"classes/HeartbeatInfo.html":{},"classes/Stomp.html":{}}}],["compatclient",{"_index":223,"title":{},"body":{"classes/HeartbeatInfo.html":{},"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":887,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":319,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["complaint",{"_index":1023,"title":{},"body":{"injectables/StompRService.html":{}}}],["complete",{"_index":418,"title":{},"body":{"classes/Parser.html":{}}}],["completed",{"_index":1025,"title":{},"body":{"injectables/StompRService.html":{}}}],["compliant",{"_index":694,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc/compodoc",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["composing",{"_index":118,"title":{},"body":{"classes/FrameImpl.html":{}}}],["compute",{"_index":111,"title":{},"body":{"classes/FrameImpl.html":{}}}],["config",{"_index":782,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":1090,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":1103,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.headers",{"_index":1108,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":1098,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":1100,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":1102,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.ts",{"_index":367,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.ts:102",{"_index":692,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:107",{"_index":664,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:112",{"_index":686,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:117",{"_index":925,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":646,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:122",{"_index":913,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:127",{"_index":907,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:128",{"_index":661,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:146",{"_index":618,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:20",{"_index":813,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:21",{"_index":639,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":905,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:24",{"_index":817,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:27",{"_index":930,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:32",{"_index":931,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:34",{"_index":705,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:37",{"_index":927,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:42",{"_index":910,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":674,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:47",{"_index":912,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:49",{"_index":658,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:52",{"_index":929,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:57",{"_index":909,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:62",{"_index":914,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:67",{"_index":906,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:72",{"_index":716,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:77",{"_index":921,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:79",{"_index":688,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:82",{"_index":922,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:86",{"_index":666,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:87",{"_index":919,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:92",{"_index":904,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":672,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:97",{"_index":915,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.url",{"_index":1093,"title":{},"body":{"injectables/StompRService.html":{}}}],["configuration",{"_index":383,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":1094,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["configured",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connect",{"_index":162,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["connected",{"_index":163,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":606,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":1225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connection",{"_index":337,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["connectobservable",{"_index":972,"title":{},"body":{"injectables/StompRService.html":{}}}],["considered",{"_index":441,"title":{},"body":{"classes/Parser.html":{}}}],["console.log(new",{"_index":1105,"title":{},"body":{"injectables/StompRService.html":{}}}],["consolidated/.../byte.ts",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../i",{"_index":1245,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../injectable",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../parser.ts",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../rx",{"_index":1222,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":1224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.ts",{"_index":1244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":364,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["consolidated/rx",{"_index":327,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/byte.ts",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/heartbeat",{"_index":216,"title":{},"body":{"classes/HeartbeatInfo.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":828,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:32",{"_index":834,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:48",{"_index":843,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:92",{"_index":851,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/frame",{"_index":6,"title":{},"body":{"classes/FrameImpl.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/i",{"_index":244,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/parser.ts",{"_index":410,"title":{},"body":{"classes/Parser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consolidated/stompjs/src/parser.ts:113",{"_index":539,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:126",{"_index":545,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:138",{"_index":554,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:142",{"_index":543,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:151",{"_index":547,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:164",{"_index":556,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:177",{"_index":537,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:185",{"_index":535,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:194",{"_index":555,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:204",{"_index":549,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:208",{"_index":551,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:212",{"_index":550,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:218",{"_index":552,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:63",{"_index":529,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:64",{"_index":527,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:66",{"_index":531,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:68",{"_index":532,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:69",{"_index":530,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:70",{"_index":525,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:72",{"_index":524,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:74",{"_index":533,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:78",{"_index":558,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/parser.ts:97",{"_index":541,"title":{},"body":{"classes/Parser.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":891,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":289,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":1147,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":1163,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":1165,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":1166,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:23",{"_index":1155,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:31",{"_index":1167,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:37",{"_index":1169,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:44",{"_index":1168,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":140,"title":{},"body":{"classes/FrameImpl.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(client",{"_index":222,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["constructor(config",{"_index":1128,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(onframe",{"_index":523,"title":{},"body":{"classes/Parser.html":{}}}],["constructor(params",{"_index":43,"title":{},"body":{"classes/FrameImpl.html":{}}}],["constructor(private",{"_index":236,"title":{},"body":{"classes/HeartbeatInfo.html":{},"classes/RxStompRPC.html":{}}}],["constructor(public",{"_index":566,"title":{},"body":{"classes/Parser.html":{},"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":758,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(versions",{"_index":1154,"title":{},"body":{"classes/Versions.html":{}}}],["consuming",{"_index":457,"title":{},"body":{"classes/Parser.html":{}}}],["contain",{"_index":947,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":297,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{}}}],["contentlengthheader",{"_index":575,"title":{},"body":{"classes/Parser.html":{}}}],["continues",{"_index":489,"title":{},"body":{"classes/Parser.html":{}}}],["convert",{"_index":493,"title":{},"body":{"classes/Parser.html":{}}}],["converted",{"_index":445,"title":{},"body":{"classes/Parser.html":{}}}],["correlationid",{"_index":800,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["corresponding",{"_index":1028,"title":{},"body":{"injectables/StompRService.html":{}}}],["corresponds",{"_index":893,"title":{},"body":{"classes/StompConfig.html":{}}}],["counting",{"_index":115,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{}}}],["coverage",{"_index":1173,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":562,"title":{},"body":{"classes/Parser.html":{},"classes/StompHeaders.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":761,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":347,"title":{},"body":{"interfaces/ITransaction.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":844,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["creating",{"_index":72,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":631,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["current",{"_index":425,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["data",{"_index":81,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{}}}],["date",{"_index":1106,"title":{},"body":{"injectables/StompRService.html":{}}}],["debug",{"_index":607,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":302,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":660,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declared",{"_index":1159,"title":{},"body":{"classes/Versions.html":{}}}],["decrement",{"_index":584,"title":{},"body":{"classes/Parser.html":{}}}],["default",{"_index":296,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessagesobservable",{"_index":974,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscription",{"_index":799,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":810,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["define",{"_index":388,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["defining",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":690,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["delete",{"_index":173,"title":{},"body":{"classes/FrameImpl.html":{}}}],["dependencies",{"_index":1217,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":965,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["depending",{"_index":424,"title":{},"body":{"classes/Parser.html":{}}}],["deprecated",{"_index":407,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["descent",{"_index":413,"title":{},"body":{"classes/Parser.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["deserialize",{"_index":79,"title":{},"body":{"classes/FrameImpl.html":{}}}],["designed",{"_index":1010,"title":{},"body":{"injectables/StompRService.html":{}}}],["destination",{"_index":293,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["details",{"_index":376,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["determined",{"_index":462,"title":{},"body":{"classes/Parser.html":{}}}],["disable",{"_index":670,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discard",{"_index":585,"title":{},"body":{"classes/Parser.html":{}}}],["disconnect",{"_index":968,"title":{},"body":{"injectables/StompRService.html":{}}}],["disconnectheaders",{"_index":608,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnecting",{"_index":1230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnection",{"_index":662,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["documentation",{"_index":656,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["documentation/rpc",{"_index":784,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["down",{"_index":338,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["dropped",{"_index":954,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["drops",{"_index":997,"title":{},"body":{"injectables/StompRService.html":{}}}],["during",{"_index":707,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":718,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":892,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["effects",{"_index":680,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":1157,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":1039,"title":{},"body":{"injectables/StompRService.html":{}}}],["enable",{"_index":659,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":294,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["enqueued",{"_index":336,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["enumerations",{"_index":1221,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":836,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":1069,"title":{},"body":{"injectables/StompRService.html":{}}}],["errors",{"_index":1070,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":976,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":962,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["escape",{"_index":85,"title":{},"body":{"classes/FrameImpl.html":{}}}],["escapeheadervalues",{"_index":22,"title":{},"body":{"classes/FrameImpl.html":{}}}],["established",{"_index":1046,"title":{},"body":{"injectables/StompRService.html":{}}}],["etc",{"_index":633,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["even",{"_index":996,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":316,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":313,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["evented",{"_index":411,"title":{},"body":{"classes/Parser.html":{}}}],["evt",{"_index":311,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["exactly",{"_index":372,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["example",{"_index":14,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":1132,"title":{},"body":{"injectables/StompService.html":{}}}],["explicitly",{"_index":1000,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":132,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["expressions",{"_index":479,"title":{},"body":{"classes/Parser.html":{}}}],["extended",{"_index":254,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":268,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factory",{"_index":393,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.ts",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["faithful",{"_index":447,"title":{},"body":{"classes/Parser.html":{}}}],["false",{"_index":146,"title":{},"body":{"classes/FrameImpl.html":{}}}],["favor",{"_index":953,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["fed",{"_index":422,"title":{},"body":{"classes/Parser.html":{}}}],["fetch",{"_index":630,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":894,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["fields",{"_index":382,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":778,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":153,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompRPC.html":{}}}],["fixed",{"_index":384,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["following",{"_index":470,"title":{},"body":{"classes/Parser.html":{}}}],["forcebinarywsframes",{"_index":609,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["format",{"_index":101,"title":{},"body":{"classes/FrameImpl.html":{}}}],["frame",{"_index":9,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.serialize",{"_index":202,"title":{},"body":{"classes/FrameImpl.html":{}}}],["frame.ts",{"_index":245,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":305,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":1,"title":{"classes/FrameImpl.html":{}},"body":{"classes/FrameImpl.html":{},"interfaces/IMessage.html":{},"coverage.html":{}}}],["frameimpl#body",{"_index":283,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":281,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl(params",{"_index":201,"title":{},"body":{"classes/FrameImpl.html":{}}}],["frameimpl.hdrvalueunescape(value",{"_index":164,"title":{},"body":{"classes/FrameImpl.html":{}}}],["frameimpl.tounit8array(cmdandheaders",{"_index":169,"title":{},"body":{"classes/FrameImpl.html":{}}}],["frames",{"_index":324,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["fromrawframe",{"_index":29,"title":{},"body":{"classes/FrameImpl.html":{}}}],["fromrawframe(rawframe",{"_index":76,"title":{},"body":{"classes/FrameImpl.html":{}}}],["function",{"_index":271,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":374,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["functions",{"_index":944,"title":{"miscellaneous/functions.html":{}},"body":{"classes/StompHeaders.html":{},"miscellaneous/functions.html":{}}}],["getbinarybody",{"_index":126,"title":{},"body":{"classes/FrameImpl.html":{}}}],["getbody",{"_index":124,"title":{},"body":{"classes/FrameImpl.html":{}}}],["getclient",{"_index":1073,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobservable",{"_index":1043,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobservable",{"_index":1060,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":1067,"title":{},"body":{"injectables/StompRService.html":{}}}],["getincoming",{"_index":231,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["getoutgoing",{"_index":226,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["getreceiptsobservable",{"_index":1064,"title":{},"body":{"injectables/StompRService.html":{}}}],["gets",{"_index":990,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobservable",{"_index":1054,"title":{},"body":{"injectables/StompRService.html":{}}}],["given",{"_index":482,"title":{},"body":{"classes/Parser.html":{}}}],["guide",{"_index":381,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":377,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":403,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](../additional",{"_index":783,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["hack",{"_index":876,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":494,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["handled",{"_index":1062,"title":{},"body":{"injectables/StompRService.html":{}}}],["handler.ts",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["handles",{"_index":481,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshake",{"_index":708,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["hash",{"_index":474,"title":{},"body":{"classes/Parser.html":{}}}],["hdrvalueescape",{"_index":30,"title":{},"body":{"classes/FrameImpl.html":{}}}],["hdrvalueescape(str",{"_index":83,"title":{},"body":{"classes/FrameImpl.html":{}}}],["hdrvalueunescape",{"_index":31,"title":{},"body":{"classes/FrameImpl.html":{}}}],["hdrvalueunescape(str",{"_index":89,"title":{},"body":{"classes/FrameImpl.html":{}}}],["header",{"_index":86,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["header.indexof",{"_index":158,"title":{},"body":{"classes/FrameImpl.html":{}}}],["header[0",{"_index":574,"title":{},"body":{"classes/Parser.html":{}}}],["headers",{"_index":23,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.ts",{"_index":943,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":949,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":807,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":806,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers[key",{"_index":165,"title":{},"body":{"classes/FrameImpl.html":{}}}],["headers]{@link",{"_index":255,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heart",{"_index":1095,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":667,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":610,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatinfo",{"_index":215,"title":{"classes/HeartbeatInfo.html":{}},"body":{"classes/HeartbeatInfo.html":{},"coverage.html":{}}}],["heartbeatoutgoing",{"_index":611,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["helpers",{"_index":590,"title":{},"body":{"classes/Parser.html":{}}}],["higher",{"_index":491,"title":{},"body":{"classes/Parser.html":{}}}],["host",{"_index":651,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":856,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":308,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["https://stomp.github.io/stomp",{"_index":436,"title":{},"body":{"classes/Parser.html":{}}}],["i.e",{"_index":104,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompConfig.html":{}}}],["id",{"_index":354,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["identifier",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":157,"title":{},"body":{"classes/FrameImpl.html":{}}}],["iframe",{"_index":13,"title":{"interfaces/IFrame.html":{}},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":256,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["ignore",{"_index":1051,"title":{},"body":{"injectables/StompRService.html":{}}}],["imessage",{"_index":253,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":621,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["immediately",{"_index":1041,"title":{},"body":{"injectables/StompRService.html":{}}}],["impact",{"_index":620,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["impl.ts",{"_index":7,"title":{},"body":{"classes/FrameImpl.html":{},"coverage.html":{}}}],["impl.ts:110",{"_index":120,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:121",{"_index":100,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:131",{"_index":108,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:15",{"_index":58,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:151",{"_index":92,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:155",{"_index":73,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:164",{"_index":110,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:168",{"_index":122,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:184",{"_index":94,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:195",{"_index":84,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:20",{"_index":62,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:202",{"_index":90,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:25",{"_index":66,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:30",{"_index":125,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:36",{"_index":57,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:41",{"_index":127,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:47",{"_index":55,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:49",{"_index":60,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:50",{"_index":47,"title":{},"body":{"classes/FrameImpl.html":{}}}],["impl.ts:81",{"_index":78,"title":{},"body":{"classes/FrameImpl.html":{}}}],["implementation",{"_index":448,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implements",{"_index":12,"title":{},"body":{"classes/FrameImpl.html":{}}}],["imply",{"_index":439,"title":{},"body":{"classes/Parser.html":{}}}],["import",{"_index":128,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["important",{"_index":647,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["incoming",{"_index":221,"title":{},"body":{"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["incoming(value",{"_index":241,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":948,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicated",{"_index":432,"title":{},"body":{"classes/Parser.html":{}}}],["indicates",{"_index":1164,"title":{},"body":{"classes/Versions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["info.ts",{"_index":217,"title":{},"body":{"classes/HeartbeatInfo.html":{},"coverage.html":{}}}],["info.ts:12",{"_index":227,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["info.ts:16",{"_index":229,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["info.ts:20",{"_index":232,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["info.ts:24",{"_index":234,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["info.ts:8",{"_index":224,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["initandconnect",{"_index":969,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialization",{"_index":1047,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialize",{"_index":1136,"title":{},"body":{"injectables/StompService.html":{}}}],["inject",{"_index":389,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injectable",{"_index":361,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["injectablerxstompconfig",{"_index":362,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"coverage.html":{}}}],["injectablerxstomprpcconfig",{"_index":400,"title":{"injectables/InjectableRxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":363,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["injected",{"_index":392,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injection",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inspecting",{"_index":463,"title":{},"body":{"classes/Parser.html":{}}}],["instance",{"_index":261,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instanceof",{"_index":568,"title":{},"body":{"classes/Parser.html":{}}}],["instead",{"_index":409,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":242,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["interfaces",{"_index":243,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"index.html":{}}}],["internal",{"_index":131,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"classes/Versions.html":{}}}],["interval",{"_index":668,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoke",{"_index":420,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["invoked",{"_index":619,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ipublishparams",{"_index":288,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":77,"title":{"interfaces/IRawFrameType.html":{}},"body":{"classes/FrameImpl.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irxstomppublishparams",{"_index":326,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":24,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{}}}],["isbodyempty",{"_index":32,"title":{},"body":{"classes/FrameImpl.html":{}}}],["issue",{"_index":1009,"title":{},"body":{"injectables/StompRService.html":{}}}],["itransaction",{"_index":344,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["java",{"_index":701,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":732,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["keeps",{"_index":427,"title":{},"body":{"classes/Parser.html":{}}}],["key",{"_index":63,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":648,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":885,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":886,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":790,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":385,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["large",{"_index":697,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["later",{"_index":391,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leave",{"_index":1003,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":175,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{}}}],["length:${this.bodylength",{"_index":182,"title":{},"body":{"classes/FrameImpl.html":{}}}],["lengths",{"_index":440,"title":{},"body":{"classes/Parser.html":{}}}],["level",{"_index":492,"title":{},"body":{"classes/Parser.html":{}}}],["lf",{"_index":560,"title":{},"body":{"classes/Parser.html":{},"classes/StompHeaders.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":960,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["line:prefer",{"_index":573,"title":{},"body":{"classes/Parser.html":{}}}],["line:variable",{"_index":875,"title":{},"body":{"classes/Stomp.html":{}}}],["linefeed",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lines",{"_index":172,"title":{},"body":{"classes/FrameImpl.html":{}}}],["lines.join(byte.lf",{"_index":183,"title":{},"body":{"classes/FrameImpl.html":{}}}],["lines.push(`${name}:${frameimpl.hdrvalueescape(`${value",{"_index":178,"title":{},"body":{"classes/FrameImpl.html":{}}}],["lines.push(`${name}:${value",{"_index":179,"title":{},"body":{"classes/FrameImpl.html":{}}}],["lines.push(`content",{"_index":181,"title":{},"body":{"classes/FrameImpl.html":{}}}],["link",{"_index":257,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["listed",{"_index":957,"title":{},"body":{"injectables/StompRService.html":{}}}],["literal",{"_index":44,"title":{},"body":{"classes/FrameImpl.html":{}}}],["locally",{"_index":987,"title":{},"body":{"injectables/StompRService.html":{}}}],["located",{"_index":846,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":675,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":649,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":612,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":678,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":831,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":772,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":273,"title":{},"body":{"interfaces/IMessage.html":{}}}],["manually",{"_index":1135,"title":{},"body":{"injectables/StompService.html":{}}}],["many",{"_index":246,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["map",{"_index":1075,"title":{},"body":{"injectables/StompRService.html":{}}}],["maps",{"_index":637,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["marks",{"_index":655,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["marshall",{"_index":33,"title":{},"body":{"classes/FrameImpl.html":{}}}],["marshall(params",{"_index":93,"title":{},"body":{"classes/FrameImpl.html":{}}}],["matched",{"_index":1026,"title":{},"body":{"injectables/StompRService.html":{}}}],["matching",{"_index":213,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxwebsocketchunksize",{"_index":613,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":1002,"title":{},"body":{"injectables/StompRService.html":{}}}],["mechanism",{"_index":398,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":262,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":803,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.ts",{"_index":260,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":304,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":340,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["messaging",{"_index":753,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":276,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":669,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":1220,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":1008,"title":{},"body":{"injectables/StompRService.html":{}}}],["mode",{"_index":695,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["modes",{"_index":466,"title":{},"body":{"classes/Parser.html":{}}}],["modules",{"_index":1241,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":862,"title":{},"body":{"classes/Stomp.html":{}}}],["mozwebsocket",{"_index":878,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":303,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["mssages",{"_index":1007,"title":{},"body":{"injectables/StompRService.html":{}}}],["multiple",{"_index":476,"title":{},"body":{"classes/Parser.html":{}}}],["n').replace(/:/g",{"_index":206,"title":{},"body":{"classes/FrameImpl.html":{}}}],["n').replace(/\\\\c/g",{"_index":210,"title":{},"body":{"classes/FrameImpl.html":{}}}],["nack",{"_index":270,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":51,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":434,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["need",{"_index":154,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["needed",{"_index":869,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":1019,"title":{},"body":{"injectables/StompRService.html":{}}}],["new",{"_index":135,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":572,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":835,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":693,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":1004,"title":{},"body":{"injectables/StompRService.html":{}}}],["null",{"_index":450,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nullterminator",{"_index":192,"title":{},"body":{"classes/FrameImpl.html":{}}}],["nullterminator.length",{"_index":196,"title":{},"body":{"classes/FrameImpl.html":{}}}],["number",{"_index":75,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":143,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.headers",{"_index":176,"title":{},"body":{"classes/FrameImpl.html":{}}}],["observable",{"_index":763,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.create",{"_index":797,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":776,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":394,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["occurrence",{"_index":477,"title":{},"body":{"classes/Parser.html":{}}}],["occurs",{"_index":454,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["octet",{"_index":455,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/variables.html":{}}}],["octets",{"_index":415,"title":{},"body":{"classes/Parser.html":{}}}],["once",{"_index":863,"title":{},"body":{"classes/Stomp.html":{}}}],["onconnect",{"_index":896,"title":{},"body":{"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":897,"title":{},"body":{"classes/StompConfig.html":{}}}],["one",{"_index":464,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onframe",{"_index":507,"title":{},"body":{"classes/Parser.html":{}}}],["onincomingping",{"_index":508,"title":{},"body":{"classes/Parser.html":{}}}],["onstomperror",{"_index":898,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":899,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":900,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":901,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":902,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":903,"title":{},"body":{"classes/StompConfig.html":{}}}],["open",{"_index":1226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operate",{"_index":480,"title":{},"body":{"classes/Parser.html":{}}}],["operation",{"_index":1016,"title":{},"body":{"injectables/StompRService.html":{}}}],["optional",{"_index":52,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":332,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":857,"title":{},"body":{"classes/Stomp.html":{}}}],["otherwise",{"_index":468,"title":{},"body":{"classes/Parser.html":{}}}],["out",{"_index":1015,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgoing",{"_index":220,"title":{},"body":{"classes/HeartbeatInfo.html":{},"classes/RxStompConfig.html":{}}}],["outgoing(value",{"_index":239,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["output",{"_index":103,"title":{},"body":{"classes/FrameImpl.html":{}}}],["over",{"_index":833,"title":{},"body":{"classes/Stomp.html":{}}}],["over(ws",{"_index":850,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":1158,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":1238,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1216,"title":{"dependencies.html":{}},"body":{}}],["packets",{"_index":698,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":65,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{}}}],["param",{"_index":1112,"title":{},"body":{"injectables/StompRService.html":{}}}],["parameter",{"_index":301,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":49,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":53,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":793,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":330,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["parsechunk",{"_index":522,"title":{},"body":{"classes/Parser.html":{}}}],["parsechunk(segment",{"_index":557,"title":{},"body":{"classes/Parser.html":{}}}],["parsed",{"_index":679,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parseint(contentlengthheader[1",{"_index":577,"title":{},"body":{"classes/Parser.html":{}}}],["parser",{"_index":322,"title":{"classes/Parser.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{},"coverage.html":{}}}],["parser.spec.js",{"_index":499,"title":{},"body":{"classes/Parser.html":{}}}],["parsing",{"_index":444,"title":{},"body":{"classes/Parser.html":{}}}],["part",{"_index":218,"title":{},"body":{"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["partial",{"_index":488,"title":{},"body":{"classes/Parser.html":{}}}],["pass",{"_index":248,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["passcode",{"_index":650,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":71,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passing",{"_index":871,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["peek",{"_index":452,"title":{},"body":{"classes/Parser.html":{}}}],["per",{"_index":95,"title":{},"body":{"classes/FrameImpl.html":{},"miscellaneous/variables.html":{}}}],["ping",{"_index":419,"title":{},"body":{"classes/Parser.html":{}}}],["please",{"_index":375,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["point",{"_index":295,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["possible",{"_index":461,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["post",{"_index":583,"title":{},"body":{"classes/Parser.html":{}}}],["prat",{"_index":754,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["prefer",{"_index":722,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["present",{"_index":451,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["prior",{"_index":879,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":17,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedure",{"_index":405,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["promise",{"_index":626,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":746,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":16,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":449,"title":{},"body":{"classes/Parser.html":{},"classes/Versions.html":{}}}],["protocols",{"_index":842,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":1152,"title":{},"body":{"classes/Versions.html":{}}}],["provider",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":1056,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":20,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["publish",{"_index":329,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["publish(queuename",{"_index":985,"title":{},"body":{"injectables/StompRService.html":{}}}],["published",{"_index":341,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishing",{"_index":1029,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparams",{"_index":291,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["pubparams",{"_index":1116,"title":{},"body":{"injectables/StompRService.html":{}}}],["pushed",{"_index":490,"title":{},"body":{"classes/Parser.html":{}}}],["queue",{"_index":814,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":765,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queued",{"_index":988,"title":{},"body":{"injectables/StompRService.html":{}}}],["queuename",{"_index":991,"title":{},"body":{"injectables/StompRService.html":{}}}],["queues",{"_index":994,"title":{},"body":{"injectables/StompRService.html":{}}}],["r').replace(/\\\\n/g",{"_index":209,"title":{},"body":{"classes/FrameImpl.html":{}}}],["r').replace(/\\n/g",{"_index":205,"title":{},"body":{"classes/FrameImpl.html":{}}}],["r.service",{"_index":1133,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.ts",{"_index":952,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:103",{"_index":1072,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:132",{"_index":984,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:143",{"_index":983,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:157",{"_index":986,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:183",{"_index":993,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:215",{"_index":1013,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:219",{"_index":1074,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:221",{"_index":977,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:40",{"_index":1038,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:42",{"_index":980,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:63",{"_index":1044,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:76",{"_index":1055,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:83",{"_index":1061,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:90",{"_index":1065,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:98",{"_index":1068,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":815,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["random",{"_index":1022,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":1031,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":80,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rawframe",{"_index":82,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{}}}],["rawframe.binarybody",{"_index":166,"title":{},"body":{"classes/FrameImpl.html":{}}}],["rawframe.command",{"_index":161,"title":{},"body":{"classes/FrameImpl.html":{}}}],["rawframe.headers.reverse",{"_index":156,"title":{},"body":{"classes/FrameImpl.html":{}}}],["rawheadertype",{"_index":321,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["rawresult",{"_index":593,"title":{},"body":{"classes/Parser.html":{}}}],["re)connection",{"_index":1049,"title":{},"body":{"injectables/StompRService.html":{}}}],["readme",{"_index":1130,"title":{},"body":{"injectables/StompService.html":{}}}],["readonly",{"_index":258,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Parser.html":{}}}],["rec",{"_index":412,"title":{},"body":{"classes/Parser.html":{}}}],["receipt",{"_index":306,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":1030,"title":{},"body":{"injectables/StompRService.html":{}}}],["receipts",{"_index":1066,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobservable",{"_index":975,"title":{},"body":{"injectables/StompRService.html":{}}}],["receive",{"_index":300,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":249,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["recent",{"_index":1057,"title":{},"body":{"injectables/StompRService.html":{}}}],["recognizes",{"_index":417,"title":{},"body":{"classes/Parser.html":{}}}],["reconnect",{"_index":681,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["reconnectdelay",{"_index":614,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":864,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":859,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnects",{"_index":998,"title":{},"body":{"injectables/StompRService.html":{}}}],["reestablished",{"_index":342,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["registered",{"_index":421,"title":{},"body":{"classes/Parser.html":{}}}],["regular",{"_index":478,"title":{},"body":{"classes/Parser.html":{}}}],["reliably",{"_index":629,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remarks",{"_index":882,"title":{},"body":{"classes/Stomp.html":{}}}],["remembers",{"_index":487,"title":{},"body":{"classes/Parser.html":{}}}],["remote",{"_index":752,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":830,"title":{},"body":{"classes/Stomp.html":{}}}],["repeated",{"_index":152,"title":{},"body":{"classes/FrameImpl.html":{}}}],["replace(/\\\\\\\\/g",{"_index":211,"title":{},"body":{"classes/FrameImpl.html":{}}}],["replace(/\\r/g",{"_index":204,"title":{},"body":{"classes/FrameImpl.html":{}}}],["replies",{"_index":766,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["reply",{"_index":791,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":811,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":10,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":773,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["requesting",{"_index":1018,"title":{},"body":{"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":837,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":840,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":628,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["response",{"_index":1059,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscribe",{"_index":999,"title":{},"body":{"injectables/StompRService.html":{}}}],["result",{"_index":212,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":214,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retryifdisconnected",{"_index":335,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":137,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["returned",{"_index":472,"title":{},"body":{"classes/Parser.html":{}}}],["returns",{"_index":74,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["rpc",{"_index":401,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rpc(params",{"_index":770,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.ts",{"_index":821,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":823,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.ts",{"_index":751,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:19",{"_index":767,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:21",{"_index":769,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:25",{"_index":760,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:44",{"_index":771,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:52",{"_index":775,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver",{"_index":798,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":805,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":366,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":777,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/operators",{"_index":779,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":600,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rxstomp#configure",{"_index":601,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":729,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":743,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate",{"_index":623,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":742,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":333,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":343,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp.publish({destination",{"_index":1034,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":1032,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig",{"_index":371,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompconfig#websocketfactory",{"_index":643,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":730,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":1092,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connectheaders",{"_index":1107,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":1104,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincoming",{"_index":1097,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgoing",{"_index":1099,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":1101,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompversions",{"_index":713,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":724,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":750,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstomprpcconfig",{"_index":402,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstomprpcservice",{"_index":819,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstompservice",{"_index":822,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory",{"_index":827,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstate",{"_index":979,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.closed",{"_index":1082,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.closing",{"_index":1080,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connecting",{"_index":1077,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":1079,"title":{},"body":{"injectables/StompRService.html":{}}}],["s",{"_index":119,"title":{},"body":{"classes/FrameImpl.html":{}}}],["safely",{"_index":995,"title":{},"body":{"injectables/StompRService.html":{}}}],["same",{"_index":373,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{}}}],["samples",{"_index":1131,"title":{},"body":{"injectables/StompService.html":{}}}],["see",{"_index":266,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["segment",{"_index":559,"title":{},"body":{"classes/Parser.html":{}}}],["send",{"_index":357,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["sent",{"_index":98,"title":{},"body":{"classes/FrameImpl.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequence",{"_index":1021,"title":{},"body":{"injectables/StompRService.html":{}}}],["serialize",{"_index":34,"title":{},"body":{"classes/FrameImpl.html":{}}}],["serializecmdandheaders",{"_index":35,"title":{},"body":{"classes/FrameImpl.html":{}}}],["serialized",{"_index":106,"title":{},"body":{"classes/FrameImpl.html":{}}}],["server",{"_index":845,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["serverheadersobservable",{"_index":973,"title":{},"body":{"injectables/StompRService.html":{}}}],["service",{"_index":634,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":238,"title":{},"body":{"classes/HeartbeatInfo.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":1071,"title":{},"body":{"injectables/StompRService.html":{}}}],["setincoming(value",{"_index":233,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["setoutgoing(value",{"_index":228,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["setting",{"_index":723,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":818,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":812,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":768,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":1042,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":717,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simplest",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["size",{"_index":112,"title":{},"body":{"classes/FrameImpl.html":{}}}],["sizeofutf8",{"_index":36,"title":{},"body":{"classes/FrameImpl.html":{}}}],["sizeofutf8(s",{"_index":109,"title":{},"body":{"classes/FrameImpl.html":{}}}],["skipcontentlengthheader",{"_index":25,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["skipped",{"_index":299,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["socket",{"_index":868,"title":{},"body":{"classes/Stomp.html":{}}}],["sockjs",{"_index":719,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":727,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["soon",{"_index":989,"title":{},"body":{"injectables/StompRService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":496,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["specification",{"_index":437,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specifications",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specify",{"_index":855,"title":{},"body":{"classes/Stomp.html":{}}}],["split",{"_index":484,"title":{},"body":{"classes/Parser.html":{}}}],["splitlargeframes",{"_index":615,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":696,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":702,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["st",{"_index":981,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":654,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":96,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["state",{"_index":426,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["state.ts",{"_index":1223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":433,"title":{},"body":{"classes/Parser.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":28,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["status",{"_index":1040,"title":{},"body":{"injectables/StompRService.html":{}}}],["step",{"_index":380,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":11,"title":{"classes/Stomp.html":{}},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stomp#client",{"_index":853,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":888,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":880,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":849,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":1076,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.js",{"_index":959,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.over",{"_index":881,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":872,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.service",{"_index":824,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.ts",{"_index":826,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.ts",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":839,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":368,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stomp/rx",{"_index":334,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/rx",{"_index":328,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.js",{"_index":956,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompjs",{"_index":219,"title":{},"body":{"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stompconfig",{"_index":890,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomphandler",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["stompheaders",{"_index":61,"title":{"classes/StompHeaders.html":{}},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":369,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stompjs.stomp",{"_index":838,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/2018/10/12/remote",{"_index":404,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/2018/11/04/ng2",{"_index":378,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/injectable",{"_index":365,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stompjs/src/rx",{"_index":820,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/stomp",{"_index":951,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/stomp.service.ts",{"_index":1127,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/stomp.service.ts:25",{"_index":1129,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs@8.x.x",{"_index":955,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":759,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":786,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":788,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservice",{"_index":950,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomprservice._mapstompstate(st",{"_index":1085,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservice",{"_index":966,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompstate",{"_index":982,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.closed",{"_index":1083,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connected",{"_index":1053,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnecting",{"_index":1081,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.trying",{"_index":1078,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscription",{"_index":1139,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":616,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["str",{"_index":88,"title":{},"body":{"classes/FrameImpl.html":{},"injectables/StompRService.html":{}}}],["str.replace(/\\\\/g",{"_index":203,"title":{},"body":{"classes/FrameImpl.html":{}}}],["str.replace(/\\\\r/g",{"_index":208,"title":{},"body":{"classes/FrameImpl.html":{}}}],["str.replace(/^\\s+|\\s+$/g",{"_index":150,"title":{},"body":{"classes/FrameImpl.html":{}}}],["stream",{"_index":414,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":774,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["streaming",{"_index":963,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["string",{"_index":56,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/ITransaction.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":471,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["string|arraybuffer",{"_index":168,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{}}}],["string|publishparams",{"_index":1113,"title":{},"body":{"injectables/StompRService.html":{}}}],["structure",{"_index":325,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["subject",{"_index":1063,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe",{"_index":970,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe((message",{"_index":804,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribe(queuename",{"_index":992,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribing",{"_index":272,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscription",{"_index":263,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["subscription.ts",{"_index":1140,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:12",{"_index":1142,"title":{},"body":{"classes/StompSubscription.html":{}}}],["subscription.ts:17",{"_index":1144,"title":{},"body":{"classes/StompSubscription.html":{}}}],["such",{"_index":339,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["suitable",{"_index":97,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":1122,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":825,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish(pubparams",{"_index":1117,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish({destination",{"_index":1115,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":1120,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":858,"title":{},"body":{"classes/Stomp.html":{}}}],["supported",{"_index":1148,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":1153,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":720,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["supposed",{"_index":502,"title":{},"body":{"classes/Parser.html":{}}}],["switch",{"_index":320,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":1156,"title":{},"body":{"classes/Versions.html":{}}}],["tcp",{"_index":867,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":764,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":1006,"title":{},"body":{"injectables/StompRService.html":{}}}],["terminator",{"_index":469,"title":{},"body":{"classes/Parser.html":{}}}],["test.destination",{"_index":1035,"title":{},"body":{"injectables/StompRService.html":{}}}],["text",{"_index":497,"title":{},"body":{"classes/Parser.html":{},"classes/RxStompConfig.html":{}}}],["textdecoder",{"_index":526,"title":{},"body":{"classes/Parser.html":{}}}],["textdecoder().decode(this._binarybody",{"_index":136,"title":{},"body":{"classes/FrameImpl.html":{}}}],["textencoder",{"_index":528,"title":{},"body":{"classes/Parser.html":{}}}],["textencoder().encode(cmdandheaders",{"_index":191,"title":{},"body":{"classes/FrameImpl.html":{}}}],["textencoder().encode(s).length",{"_index":189,"title":{},"body":{"classes/FrameImpl.html":{}}}],["textencoder().encode(this._body",{"_index":139,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this._binarybody",{"_index":138,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this._binarybody).buffer",{"_index":170,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this._body",{"_index":133,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this._bodybytesremaining",{"_index":576,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectbodyfixedsize",{"_index":579,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectbodynullterminated",{"_index":580,"title":{},"body":{"classes/Parser.html":{}}}],["this._collectframe",{"_index":599,"title":{},"body":{"classes/Parser.html":{}}}],["this._consumebyte(byte",{"_index":582,"title":{},"body":{"classes/Parser.html":{}}}],["this._consumetokenasraw",{"_index":588,"title":{},"body":{"classes/Parser.html":{}}}],["this._decoder.decode(this._consumetokenasraw",{"_index":592,"title":{},"body":{"classes/Parser.html":{}}}],["this._encoder.encode(segment",{"_index":570,"title":{},"body":{"classes/Parser.html":{}}}],["this._headerkey",{"_index":598,"title":{},"body":{"classes/Parser.html":{}}}],["this._initstate",{"_index":567,"title":{},"body":{"classes/Parser.html":{}}}],["this._onbyte",{"_index":578,"title":{},"body":{"classes/Parser.html":{}}}],["this._repliesobservable",{"_index":794,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((message",{"_index":802,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":787,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._results",{"_index":596,"title":{},"body":{"classes/Parser.html":{}}}],["this._results.binarybody",{"_index":587,"title":{},"body":{"classes/Parser.html":{}}}],["this._retrievedbody",{"_index":581,"title":{},"body":{"classes/Parser.html":{}}}],["this._setupreplyqueue",{"_index":789,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuename",{"_index":795,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompclient",{"_index":1121,"title":{},"body":{"injectables/StompRService.html":{}}}],["this._token",{"_index":595,"title":{},"body":{"classes/Parser.html":{}}}],["this._token.push(byte",{"_index":591,"title":{},"body":{"classes/Parser.html":{}}}],["this.activate",{"_index":1111,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.binarybody",{"_index":187,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.bodylength",{"_index":185,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.client.heartbeatincoming",{"_index":240,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["this.client.heartbeatoutgoing",{"_index":237,"title":{},"body":{"classes/HeartbeatInfo.html":{}}}],["this.command",{"_index":141,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.config",{"_index":1137,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":1109,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe(map((st",{"_index":1084,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":1125,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactivate",{"_index":1110,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.escapeheadervalues",{"_index":147,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.headers",{"_index":142,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.headers['content",{"_index":174,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.headers[name",{"_index":177,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.initandconnect",{"_index":1138,"title":{},"body":{"injectables/StompService.html":{}}}],["this.isbinarybody",{"_index":134,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.isbodyempty",{"_index":180,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.onframe(this._results",{"_index":589,"title":{},"body":{"classes/Parser.html":{}}}],["this.rxstomp",{"_index":796,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destination",{"_index":808,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":785,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serializecmdandheaders",{"_index":167,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.serverheaders",{"_index":1086,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.skipcontentlengthheader",{"_index":148,"title":{},"body":{"classes/FrameImpl.html":{}}}],["this.state",{"_index":1123,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":1126,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperrors",{"_index":1089,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":792,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessage",{"_index":1087,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipts",{"_index":1088,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":1170,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map((x",{"_index":1171,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuename",{"_index":1118,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":652,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["time",{"_index":1048,"title":{},"body":{"injectables/StompRService.html":{}}}],["todo",{"_index":350,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":632,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tostring",{"_index":37,"title":{},"body":{"classes/FrameImpl.html":{}}}],["tounit8array",{"_index":38,"title":{},"body":{"classes/FrameImpl.html":{}}}],["tounit8array(cmdandheaders",{"_index":121,"title":{},"body":{"classes/FrameImpl.html":{}}}],["trailing",{"_index":586,"title":{},"body":{"classes/Parser.html":{}}}],["transaction",{"_index":346,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":345,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transport",{"_index":866,"title":{},"body":{"classes/Stomp.html":{}}}],["trigger",{"_index":1045,"title":{},"body":{"injectables/StompRService.html":{}}}],["trim",{"_index":149,"title":{},"body":{"classes/FrameImpl.html":{}}}],["trim(header[0",{"_index":159,"title":{},"body":{"classes/FrameImpl.html":{}}}],["trim(header[1",{"_index":160,"title":{},"body":{"classes/FrameImpl.html":{}}}],["true",{"_index":145,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["try",{"_index":712,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["trying",{"_index":1229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tslint:disable",{"_index":571,"title":{},"body":{"classes/Parser.html":{},"classes/Stomp.html":{}}}],["two",{"_index":465,"title":{},"body":{"classes/Parser.html":{}}}],["type",{"_index":45,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1242,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1114,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(config.url",{"_index":1091,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(ws",{"_index":889,"title":{},"body":{"classes/Stomp.html":{}}}],["types",{"_index":130,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"classes/StompConfig.html":{}}}],["typical",{"_index":726,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":387,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["uint8array",{"_index":54,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Parser.html":{}}}],["uint8array([0",{"_index":193,"title":{},"body":{"classes/FrameImpl.html":{}}}],["uint8array(segment",{"_index":569,"title":{},"body":{"classes/Parser.html":{}}}],["uint8array(this._token",{"_index":594,"title":{},"body":{"classes/Parser.html":{}}}],["uint8array(uint8cmdandheaders.length",{"_index":195,"title":{},"body":{"classes/FrameImpl.html":{}}}],["uint8cmdandheaders",{"_index":190,"title":{},"body":{"classes/FrameImpl.html":{}}}],["uint8cmdandheaders.length",{"_index":199,"title":{},"body":{"classes/FrameImpl.html":{}}}],["uint8frame",{"_index":194,"title":{},"body":{"classes/FrameImpl.html":{}}}],["uint8frame.set(binarybody",{"_index":198,"title":{},"body":{"classes/FrameImpl.html":{}}}],["uint8frame.set(nullterminator",{"_index":200,"title":{},"body":{"classes/FrameImpl.html":{}}}],["uint8frame.set(uint8cmdandheaders",{"_index":197,"title":{},"body":{"classes/FrameImpl.html":{}}}],["undefined",{"_index":597,"title":{},"body":{"classes/Parser.html":{}}}],["underlying",{"_index":865,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":500,"title":{},"body":{"classes/Parser.html":{},"injectables/StompRService.html":{}}}],["unescape",{"_index":91,"title":{},"body":{"classes/FrameImpl.html":{}}}],["unescaping",{"_index":495,"title":{},"body":{"classes/Parser.html":{}}}],["unique",{"_index":1020,"title":{},"body":{"injectables/StompRService.html":{}}}],["unit8array",{"_index":105,"title":{},"body":{"classes/FrameImpl.html":{}}}],["unless",{"_index":958,"title":{},"body":{"injectables/StompRService.html":{}}}],["unset",{"_index":677,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubscribe",{"_index":1141,"title":{},"body":{"classes/StompSubscription.html":{}}}],["url",{"_index":640,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":309,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["us/docs/web/api/event",{"_index":314,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":747,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":745,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":251,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":408,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":155,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":700,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":854,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["using",{"_index":390,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["utf",{"_index":113,"title":{},"body":{"classes/FrameImpl.html":{}}}],["utf8",{"_index":684,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":780,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":801,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":1172,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":1149,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":1150,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":1151,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":622,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":64,"title":{},"body":{"classes/FrameImpl.html":{},"classes/HeartbeatInfo.html":{},"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Parser.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":87,"title":{},"body":{"classes/FrameImpl.html":{},"classes/Parser.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":847,"title":{},"body":{"classes/Stomp.html":{}}}],["variable",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1246,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":370,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/Parser.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["versions",{"_index":704,"title":{"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["versions(['1.0",{"_index":714,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions([versions.v1_0",{"_index":1160,"title":{},"body":{"classes/Versions.html":{}}}],["versions.default.protocolversions",{"_index":883,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_1",{"_index":1161,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":1162,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":961,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["void",{"_index":230,"title":{},"body":{"classes/HeartbeatInfo.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"interfaces/ITransaction.html":{},"classes/Parser.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["void|promise",{"_index":749,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["waitforreceipt",{"_index":971,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":1012,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":1134,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watching",{"_index":1027,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":636,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["websocket",{"_index":102,"title":{},"body":{"classes/FrameImpl.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":725,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":873,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":832,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":617,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":721,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":292,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["whenever",{"_index":416,"title":{},"body":{"classes/Parser.html":{}}}],["whether",{"_index":69,"title":{},"body":{"classes/FrameImpl.html":{},"interfaces/IFrame.html":{}}}],["wiring",{"_index":964,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":358,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["without",{"_index":456,"title":{},"body":{"classes/Parser.html":{}}}],["work",{"_index":1011,"title":{},"body":{"injectables/StompRService.html":{}}}],["working",{"_index":1005,"title":{},"body":{"injectables/StompRService.html":{}}}],["ws",{"_index":874,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":641,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":848,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":315,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":884,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":642,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["x00",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x0a",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":762,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":323,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/FrameImpl.html":{"url":"classes/FrameImpl.html","title":"class - FrameImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FrameImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/frame-impl.ts\n        \n\n            \n                Description\n            \n            \n                Frame class represents a STOMP frame.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IFrame\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _binaryBody\n                            \n                            \n                                    Private\n                                _body\n                            \n                            \n                                    Public\n                                command\n                            \n                            \n                                    Private\n                                escapeHeaderValues\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                isBinaryBody\n                            \n                            \n                                    Private\n                                skipContentLengthHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bodyLength\n                            \n                            \n                                    Static\n                                fromRawFrame\n                            \n                            \n                                    Private\n                                    Static\n                                hdrValueEscape\n                            \n                            \n                                    Private\n                                    Static\n                                hdrValueUnEscape\n                            \n                            \n                                    Private\n                                isBodyEmpty\n                            \n                            \n                                    Static\n                                marshall\n                            \n                            \n                                    Public\n                                serialize\n                            \n                            \n                                    Private\n                                serializeCmdAndHeaders\n                            \n                            \n                                    Private\n                                    Static\n                                sizeOfUTF8\n                            \n                            \n                                    Public\n                                toString\n                            \n                            \n                                    Private\n                                    Static\n                                toUnit8Array\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    body\n                                \n                                \n                                    binaryBody\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(params: literal type)\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/frame-impl.ts:50\n                            \n                        \n\n                \n                    \n                            Frame constructor. command, headers and body are available as properties.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _binaryBody\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Uint8Array\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            command\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:15\n                            \n                        \n\n                \n                    \n                        STOMP Command\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            escapeHeaderValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:20\n                            \n                        \n\n                \n                    \n                        Headers, key value pairs.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isBinaryBody\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:25\n                            \n                        \n\n                \n                    \n                        Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            skipContentLengthHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:50\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bodyLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        bodyLength()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:155\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            fromRawFrame\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fromRawFrame(rawFrame: IRawFrameType, escapeHeaderValues: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:81\n                            \n                        \n\n\n                \n                    \n                            deserialize a STOMP Frame from raw data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rawFrame\n                                                        \n                                                                    IRawFrameType\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        escapeHeaderValues\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FrameImpl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            hdrValueEscape\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hdrValueEscape(str: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:195\n                            \n                        \n\n\n                \n                    \n                            Escape header values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            hdrValueUnEscape\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hdrValueUnEscape(str: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:202\n                            \n                        \n\n\n                \n                    \n                            UnEscape header values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isBodyEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isBodyEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            marshall\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        marshall(params: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:184\n                            \n                        \n\n\n                \n                    \n                            Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        serialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:121\n                            \n                        \n\n\n                \n                    \n                            serialize this Frame in a format suitable to be passed to WebSocket.\nIf the body is string the output will be string.\nIf the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n\n\n                            \n                                Returns :     string | ArrayBuffer\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            serializeCmdAndHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        serializeCmdAndHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            sizeOfUTF8\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sizeOfUTF8(s: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:164\n                            \n                        \n\n\n                \n                    \n                            Compute the size of a UTF-8 string by counting its number of bytes\n(and not the number of characters composing the string)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        s\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            toUnit8Array\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toUnit8Array(cmdAndHeaders: string, binaryBody: Uint8Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cmdAndHeaders\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        binaryBody\n                                                        \n                                                                    Uint8Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Uint8Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:30\n                                \n                            \n                    \n                        \n                                body of the frame\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        binaryBody\n                    \n                \n\n                \n                    \n                        getbinaryBody()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/frame-impl.ts:41\n                                \n                            \n                    \n                        \n                                body as Uint8Array\n\n\n                                \n                                    Returns :     Uint8Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {BYTE} from './byte';\nimport {IFrame} from './i-frame';\nimport {StompHeaders} from './stomp-headers';\nimport {IRawFrameType} from './types';\n\n/**\n * Frame class represents a STOMP frame.\n *\n * @internal\n */\nexport class FrameImpl implements IFrame {\n  /**\n   * STOMP Command\n   */\n  public command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  public headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  public isBinaryBody: boolean;\n\n  /**\n   * body of the frame\n   */\n  get body(): string {\n    if (!this._body && this.isBinaryBody) {\n      this._body = new TextDecoder().decode(this._binaryBody);\n    }\n    return this._body;\n  }\n  private _body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  get binaryBody(): Uint8Array {\n    if (!this._binaryBody && !this.isBinaryBody) {\n      this._binaryBody = new TextEncoder().encode(this._body);\n    }\n    return this._binaryBody;\n  }\n  private _binaryBody: Uint8Array;\n\n  private escapeHeaderValues: boolean;\n  private skipContentLengthHeader: boolean;\n\n  /**\n   * Frame constructor. `command`, `headers` and `body` are available as properties.\n   *\n   * @internal\n   */\n  constructor(params: {\n    command: string, headers?: StompHeaders, body?: string, binaryBody?: Uint8Array,\n    escapeHeaderValues?: boolean, skipContentLengthHeader?: boolean\n  }) {\n    const {command, headers, body, binaryBody, escapeHeaderValues, skipContentLengthHeader} = params;\n    this.command = command;\n    this.headers = (Object as any).assign({}, headers || {});\n\n    if (binaryBody) {\n      this._binaryBody = binaryBody;\n      this.isBinaryBody = true;\n    } else {\n      this._body = body || '';\n      this.isBinaryBody = false;\n    }\n    this.escapeHeaderValues = escapeHeaderValues || false;\n    this.skipContentLengthHeader = skipContentLengthHeader || false;\n  }\n\n  /**\n   * deserialize a STOMP Frame from raw data.\n   *\n   * @internal\n   */\n  public static fromRawFrame(rawFrame: IRawFrameType, escapeHeaderValues: boolean): FrameImpl {\n    const headers: StompHeaders = {};\n    const trim = (str: string): string => str.replace(/^\\s+|\\s+$/g, '');\n\n    // In case of repeated headers, as per standards, first value need to be used\n    for (const header of rawFrame.headers.reverse()) {\n      const idx = header.indexOf(':');\n\n      const key = trim(header[0]);\n      let value = trim(header[1]);\n\n      if (escapeHeaderValues && (rawFrame.command !== 'CONNECT') && (rawFrame.command !== 'CONNECTED')) {\n        value = FrameImpl.hdrValueUnEscape(value);\n      }\n\n      headers[key] = value;\n    }\n\n    return new FrameImpl({\n      command: rawFrame.command,\n      headers,\n      binaryBody: rawFrame.binaryBody,\n      escapeHeaderValues\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public toString(): string {\n    return this.serializeCmdAndHeaders();\n  }\n\n  /**\n   * serialize this Frame in a format suitable to be passed to WebSocket.\n   * If the body is string the output will be string.\n   * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n   *\n   * @internal\n   */\n  public serialize(): string|ArrayBuffer {\n    const cmdAndHeaders = this.serializeCmdAndHeaders();\n\n    if (this.isBinaryBody) {\n      return FrameImpl.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n    } else {\n      return cmdAndHeaders + this._body + BYTE.NULL;\n    }\n  }\n\n  private serializeCmdAndHeaders(): string {\n    const lines = [this.command];\n    if (this.skipContentLengthHeader) {\n      delete this.headers['content-length'];\n    }\n\n    for (const name of Object.keys(this.headers || {})) {\n      const value = this.headers[name];\n      if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n        lines.push(`${name}:${FrameImpl.hdrValueEscape(`${value}`)}`);\n      } else {\n        lines.push(`${name}:${value}`);\n      }\n    }\n    if (this.isBinaryBody || (!this.isBodyEmpty() && !this.skipContentLengthHeader)) {\n      lines.push(`content-length:${this.bodyLength()}`);\n    }\n    return lines.join(BYTE.LF) + BYTE.LF + BYTE.LF;\n  }\n\n  private isBodyEmpty(): boolean {\n    return this.bodyLength() === 0;\n  }\n\n  private bodyLength(): number {\n    const binaryBody = this.binaryBody;\n    return binaryBody ? binaryBody.length : 0;\n  }\n\n  /**\n   * Compute the size of a UTF-8 string by counting its number of bytes\n   * (and not the number of characters composing the string)\n   */\n  private static sizeOfUTF8(s: string): number {\n    return s ? new TextEncoder().encode(s).length : 0;\n  }\n\n  private static toUnit8Array(cmdAndHeaders: string, binaryBody: Uint8Array): Uint8Array {\n    const uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n    const nullTerminator = new Uint8Array([0]);\n    const uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n\n    uint8Frame.set(uint8CmdAndHeaders);\n    uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n    uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n\n    return uint8Frame;\n  }\n  /**\n   * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n   *\n   * @internal\n   */\n  public static marshall(params: {\n    command: string, headers?: StompHeaders, body?: string, binaryBody?: Uint8Array,\n    escapeHeaderValues?: boolean, skipContentLengthHeader?: boolean\n  }) {\n    const frame = new FrameImpl(params);\n    return frame.serialize();\n  }\n\n  /**\n   *  Escape header values\n   */\n  private static hdrValueEscape(str: string): string {\n    return str.replace(/\\\\/g, '\\\\\\\\').replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/:/g, '\\\\c');\n  }\n\n  /**\n   * UnEscape header values\n   */\n  private static hdrValueUnEscape(str: string): string {\n    return str.replace(/\\\\r/g, '\\r').replace(/\\\\n/g, '\\n').replace(/\\\\c/g, ':').replace(/\\\\\\\\/g, '\\\\');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeartbeatInfo.html":{"url":"classes/HeartbeatInfo.html","title":"class - HeartbeatInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeartbeatInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/heartbeat-info.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/stompjs.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    outgoing\n                                \n                                \n                                    incoming\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: CompatClient)\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/compatibility/heartbeat-info.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    CompatClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        outgoing\n                    \n                \n\n                \n                    \n                        getoutgoing()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/compatibility/heartbeat-info.ts:12\n                                \n                            \n\n                \n                    \n                        setoutgoing(value: number)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/compatibility/heartbeat-info.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        incoming\n                    \n                \n\n                \n                    \n                        getincoming()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/compatibility/heartbeat-info.ts:20\n                                \n                            \n\n                \n                    \n                        setincoming(value: number)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/compatibility/heartbeat-info.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {CompatClient} from './compat-client';\n\n/**\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport class HeartbeatInfo {\n  constructor(private client: CompatClient) {\n  }\n\n  get outgoing(): number {\n    return this.client.heartbeatOutgoing;\n  }\n\n  set outgoing(value: number) {\n    this.client.heartbeatOutgoing = value;\n  }\n\n  get incoming(): number {\n    return this.client.heartbeatIncoming;\n  }\n\n  set incoming(value: number) {\n    this.client.heartbeatIncoming = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        body\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                                \n                                        isBinaryBody\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ack\n                                \n                                \n                                        nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                    \n                                \n                                \n                                    \n                                        ack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                    \n                                \n                                \n                                    \n                                        nack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IFrame} from './i-frame';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IFrame} from './i-frame';\nimport {IMessage} from './i-message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: Event) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRawFrameType.html":{"url":"interfaces/IRawFrameType.html","title":"interface - IRawFrameType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRawFrameType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                The parser yield frames in this structure\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     RawHeaderType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RawHeaderType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IFrame} from './i-frame';\nimport {IMessage} from './i-message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: Event) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-publish-params.ts\n        \n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                    IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        retryIfDisconnected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IPublishParams} from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRPCConfig.html":{"url":"injectables/InjectableRxStompRPCConfig.html","title":"injectable - InjectableRxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompRPCConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRPCConfig extends RxStompRPCConfig { }\n\n// Backward compatibility\n/**\n * Deprecated, use {@link InjectableRxStompRPCConfig} instead\n */\nexport const InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Parser.html":{"url":"classes/Parser.html","title":"class - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/parser.ts\n        \n\n            \n                Description\n            \n            \n                This is an evented, rec descent parser.\nA stream of Octets can be passed and whenever it recognizes\na complete Frame or an incoming ping it will invoke the registered callbacks.\nAll incoming Octets are fed into _onByte function.\nDepending on current state the _onByte function keeps changing.\nDepending on the state it keeps accumulating into _token and _results.\nState is indicated by current value of _onByte, all states are named as _collect.\nSTOMP standards https://stomp.github.io/stomp-specification-1.2.html\nimply that all lengths are considered in bytes (instead of string lengths).\nSo, before actual parsing, if the incoming data is String it is converted to Octets.\nThis allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\nThere is no peek function on the incoming data.\nWhen a state change occurs based on an Octet without consuming the Octet,\nthe Octet, after state change, is fed again (_reinjectByte).\nThis became possible as the state change can be determined by inspecting just one Octet.\nThere are two modes to collect the body, if content-length header is there then it by counting Octets\notherwise it is determined by NULL terminator.\nFollowing the standards, the command and headers are converted to Strings\nand the body is returned as Octets.\nHeaders are returned as an array and not as Hash - to allow multiple occurrence of an header.\nThis parser does not use Regular Expressions as that can only operate on Strings.\nIt handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\nany combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\nis pushed.\nTypically the higher level function will convert headers to Hash, handle unescaping of header values\n(which is protocol version specific), and convert body to text.\nCheck the parser.spec.js to understand cases that this parser is supposed to handle.\nPart of @stomp/stompjs.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bodyBytesRemaining\n                            \n                            \n                                    Private\n                                    Readonly\n                                _decoder\n                            \n                            \n                                    Private\n                                    Readonly\n                                _encoder\n                            \n                            \n                                    Private\n                                _headerKey\n                            \n                            \n                                    Private\n                                _onByte\n                            \n                            \n                                    Private\n                                _results\n                            \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Public\n                                onFrame\n                            \n                            \n                                    Public\n                                onIncomingPing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _collectBodyFixedSize\n                            \n                            \n                                    Private\n                                _collectBodyNullTerminated\n                            \n                            \n                                    Private\n                                _collectCommand\n                            \n                            \n                                    Private\n                                _collectFrame\n                            \n                            \n                                    Private\n                                _collectHeaderKey\n                            \n                            \n                                    Private\n                                _collectHeaders\n                            \n                            \n                                    Private\n                                _collectHeaderValue\n                            \n                            \n                                    Private\n                                _consumeByte\n                            \n                            \n                                    Private\n                                _consumeTokenAsRaw\n                            \n                            \n                                    Private\n                                _consumeTokenAsUTF8\n                            \n                            \n                                    Private\n                                _initState\n                            \n                            \n                                    Private\n                                _reinjectByte\n                            \n                            \n                                    Private\n                                _retrievedBody\n                            \n                            \n                                    Private\n                                _setupCollectBody\n                            \n                            \n                                    Public\n                                parseChunk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(onFrame: (rawFrame: IRawFrameType) => void, onIncomingPing: () => void)\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/parser.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onFrame\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onIncomingPing\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bodyBytesRemaining\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _decoder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new TextDecoder()\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            _encoder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new TextEncoder()\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _headerKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _onByte\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IRawFrameType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onFrame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onIncomingPing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:74\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collectBodyFixedSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _collectBodyFixedSize(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collectBodyNullTerminated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _collectBodyNullTerminated(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:177\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collectCommand\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _collectCommand(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collectFrame\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _collectFrame(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collectHeaderKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _collectHeaderKey(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:142\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _collectHeaders(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:126\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _collectHeaderValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _collectHeaderValue(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _consumeByte\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _consumeByte(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:204\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _consumeTokenAsRaw\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _consumeTokenAsRaw()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:212\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _consumeTokenAsUTF8\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _consumeTokenAsUTF8()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:208\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _initState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _initState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:218\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _reinjectByte\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _reinjectByte(byte: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:138\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        byte\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _retrievedBody\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _retrievedBody()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _setupCollectBody\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _setupCollectBody()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:164\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseChunk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseChunk(segment: string | ArrayBuffer)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/parser.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                        \n                                                                    string | ArrayBuffer\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {IRawFrameType} from './types';\n\n/**\n * @internal\n */\nconst NULL = 0;\n/**\n * @internal\n */\nconst LF = 10;\n/**\n * @internal\n */\nconst CR = 13;\n/**\n * @internal\n */\nconst COLON = 58;\n\n/**\n * This is an evented, rec descent parser.\n * A stream of Octets can be passed and whenever it recognizes\n * a complete Frame or an incoming ping it will invoke the registered callbacks.\n *\n * All incoming Octets are fed into _onByte function.\n * Depending on current state the _onByte function keeps changing.\n * Depending on the state it keeps accumulating into _token and _results.\n * State is indicated by current value of _onByte, all states are named as _collect.\n *\n * STOMP standards https://stomp.github.io/stomp-specification-1.2.html\n * imply that all lengths are considered in bytes (instead of string lengths).\n * So, before actual parsing, if the incoming data is String it is converted to Octets.\n * This allows faithful implementation of the protocol and allows NULL Octets to be present in the body.\n *\n * There is no peek function on the incoming data.\n * When a state change occurs based on an Octet without consuming the Octet,\n * the Octet, after state change, is fed again (_reinjectByte).\n * This became possible as the state change can be determined by inspecting just one Octet.\n *\n * There are two modes to collect the body, if content-length header is there then it by counting Octets\n * otherwise it is determined by NULL terminator.\n *\n * Following the standards, the command and headers are converted to Strings\n * and the body is returned as Octets.\n * Headers are returned as an array and not as Hash - to allow multiple occurrence of an header.\n *\n * This parser does not use Regular Expressions as that can only operate on Strings.\n *\n * It handles if multiple STOMP frames are given as one chunk, a frame is split into multiple chunks, or\n * any combination there of. The parser remembers its state (any partial frame) and continues when a new chunk\n * is pushed.\n *\n * Typically the higher level function will convert headers to Hash, handle unescaping of header values\n * (which is protocol version specific), and convert body to text.\n *\n * Check the parser.spec.js to understand cases that this parser is supposed to handle.\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport class Parser {\n  private readonly _encoder = new TextEncoder();\n  private readonly _decoder = new TextDecoder();\n\n  private _results: IRawFrameType;\n\n  private _token: number[] = [];\n  private _headerKey: string;\n  private _bodyBytesRemaining: number;\n\n  private _onByte: (byte: number) => void;\n\n  public constructor(public onFrame: (rawFrame: IRawFrameType) => void, public onIncomingPing: () => void) {\n    this._initState();\n  }\n\n  public parseChunk(segment: string|ArrayBuffer) {\n    let chunk: Uint8Array;\n\n    if ((segment instanceof ArrayBuffer)) {\n      chunk = new Uint8Array(segment);\n    } else {\n      chunk = this._encoder.encode(segment);\n    }\n\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i  {\n      return header[0] === 'content-length';\n    })[0];\n\n    if (contentLengthHeader) {\n      this._bodyBytesRemaining = parseInt(contentLengthHeader[1], 10);\n      this._onByte = this._collectBodyFixedSize;\n    } else {\n      this._onByte = this._collectBodyNullTerminated;\n    }\n  }\n\n  private _collectBodyNullTerminated(byte: number): void {\n    if (byte === NULL) {\n      this._retrievedBody();\n      return;\n    }\n    this._consumeByte(byte);\n  }\n\n  private _collectBodyFixedSize(byte: number): void {\n    // It is post decrement, so that we discard the trailing NULL octet\n    if (this._bodyBytesRemaining-- === 0) {\n      this._retrievedBody();\n      return;\n    }\n    this._consumeByte(byte);\n  }\n\n  private _retrievedBody() {\n    this._results.binaryBody = this._consumeTokenAsRaw();\n\n    this.onFrame(this._results);\n\n    this._initState();\n  }\n\n  // Rec Descent Parser helpers\n\n  private _consumeByte(byte: number) {\n    this._token.push(byte);\n  }\n\n  private _consumeTokenAsUTF8() {\n    return this._decoder.decode(this._consumeTokenAsRaw());\n  }\n\n  private _consumeTokenAsRaw() {\n    const rawResult = new Uint8Array(this._token);\n    this._token = [];\n    return rawResult;\n  }\n\n  private _initState() {\n    this._results = {\n      command: undefined,\n      headers: [],\n      binaryBody: undefined\n    };\n\n    this._token = [];\n    this._headerKey = undefined;\n\n    this._onByte = this._collectFrame;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:146\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nMaps to: Client#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:21\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:49\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:128\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:107\n                            \n                        \n\n                \n                    \n                        Maps to: Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:86\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:93\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:46\n                            \n                        \n\n                \n                    \n                        Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:112\n                            \n                        \n\n                \n                    \n                        Maps to: Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:34\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: Client#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: Client#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: () => void|Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPrat of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _repliesObservable\n                            \n                            \n                                    Private\n                                _replyQueueName\n                            \n                            \n                                    Private\n                                _setupReplyQueue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:25\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _repliesObservable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/temp-queue/rpc-replies'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:44\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:52\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, Observer, Subscription} from 'rxjs';\nimport {filter, first} from 'rxjs/operators';\n\nimport {UUID} from 'angular2-uuid';\n\nimport {IMessage, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport {RxStomp} from './rx-stomp';\nimport {RxStompRPCConfig, setupReplyQueueFnType} from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n *\n * Prat of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: IMessage) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:20\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:24\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Prat of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\n\nimport {RxStompRPC} from '@stomp/rx-stomp';\nimport {RxStompService} from './rx-stomp.service';\nimport {InjectableRxStompRPCConfig} from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(rxStomp: RxStompService, @Optional() stompRPCConfig?: InjectableRxStompRPCConfig) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:32\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:48\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:92\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from '../versions';\nimport {CompatClient} from './compat-client';\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.default.protocolVersions(); }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    const wsFn = typeof(ws) === 'function' ? ws : () => ws;\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:92\n                            \n                        \n\n                \n                    \n                        See Client#beforeConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:22\n                            \n                        \n\n                \n                    \n                        See Client#brokerURL.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:67\n                            \n                        \n\n                \n                    \n                        See Client#connectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:127\n                            \n                        \n\n                \n                    \n                        See Client#debug.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        See Client#disconnectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:57\n                            \n                        \n\n                \n                    \n                        See Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:42\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:47\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatOutgoing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:122\n                            \n                        \n\n                \n                    \n                        See Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:62\n                            \n                        \n\n                \n                    \n                        See Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:97\n                            \n                        \n\n                \n                    \n                        See Client#onConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDisconnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        See Client#onDisconnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onStompError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:107\n                            \n                        \n\n                \n                    \n                        See Client#onStompError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledFrame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:87\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledFrame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     messageCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:77\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledMessage.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledReceipt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:82\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledReceipt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     closeEventCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:112\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketClose.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     wsErrorCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:117\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:37\n                            \n                        \n\n                \n                    \n                        See Client#reconnectDelay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:52\n                            \n                        \n\n                \n                    \n                        See Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:27\n                            \n                        \n\n                \n                    \n                        See See Client#stompVersions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        See Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\nimport {\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType\n} from './types';\nimport {Versions} from './versions';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void|Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                _mapStompState\n                            \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:221\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            _mapStompState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _mapStompState(st: RxStompState)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        st\n                                                        \n                                                                    RxStompState\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     StompState\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, mssages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: Client#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:40\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:63\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:76\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:83\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:90\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:98\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:103\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:219\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {RxStomp, RxStompConfig, RxStompState} from '@stomp/rx-stomp';\n\nimport {publishParams, Client, Message, Frame} from '@stomp/stompjs';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {StompState} from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport {StompConfig} from './stomp.config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(map((st: RxStompState): StompState => {\n      return StompRService._mapStompState(st);\n    }));\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = { };\n\n    if (typeof(config.url) === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string|publishParams, message?: string, headers: StompHeaders = {}): void {\n    if (typeof queueName === 'string') {\n      super.publish({destination: queueName as string, body: message, headers});\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, mssages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link Frame}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:12\n                            \n                        \n\n                \n                    \n                        Id associated with this subscription.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:17\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                default\n                            \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:23\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2])\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:10\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:14\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:44\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:37\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {\n  }\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map((x) => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n            \n            injectable\n            InjectableRxStompConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            injectable\n            InjectableRxStompRPCConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            variable\n            InjectableRxStompRpcConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n            \n            injectable\n            RxStompRPCService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n            \n            function\n            rxStompServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp.service.ts\n            \n            injectable\n            RxStompService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp-r.service.ts\n            \n            injectable\n            StompRService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.service.ts\n            \n            injectable\n            StompService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                84 %\n                (22/26)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/byte.ts\n            \n            variable\n            BYTE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                82 %\n                (37/45)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                80 %\n                (41/51)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/heartbeat-info.ts\n            \n            class\n            HeartbeatInfo\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/frame-impl.ts\n            \n            class\n            FrameImpl\n            \n                55 %\n                (11/20)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/parser.ts\n            \n            class\n            Parser\n            \n                3 %\n                (1/26)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/parser.ts\n            \n            variable\n            COLON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/parser.ts\n            \n            variable\n            CR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/parser.ts\n            \n            variable\n            LF\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/parser.ts\n            \n            variable\n            NULL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-handler.ts\n            \n            class\n            StompHandler\n            \n                2 %\n                (1/46)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            class\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IRawFrameType\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                77 %\n                (7/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.8\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPrat of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n                            Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RxStompService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            RawHeaderType   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a CloseEvent\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                        IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RawHeaderType\n                \n            \n            \n                \n                    Used in IRawFrameType\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        [string, string]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an Event\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                        IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPrat of @stomp/rx-stomp\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BYTE   (consolidated/.../byte.ts)\n                        \n                        \n                            COLON   (consolidated/.../parser.ts)\n                        \n                        \n                            CR   (consolidated/.../parser.ts)\n                        \n                        \n                            InjectableRxStompRpcConfig   (consolidated/.../injectable-rx-stomp-rpc-config.ts)\n                        \n                        \n                            LF   (consolidated/.../parser.ts)\n                        \n                        \n                            NULL   (consolidated/.../parser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/byte.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BYTE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  // LINEFEED byte (octet 10)\n  LF: '\\x0A',\n  // NULL byte (octet 0)\n  NULL: '\\x00'\n}\n                        \n                    \n\n                \n                    \n                        Some byte values, used as per STOMP specifications.\nPart of @stomp/stompjs.\n\n                    \n                \n\n            \n        \n\n    consolidated/stompjs/src/parser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            COLON\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 58\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 13\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LF\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NULL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectableRxStompRpcConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : InjectableRxStompRPCConfig\n                        \n                    \n\n                \n                    \n                        Deprecated, use InjectableRxStompRPCConfig instead\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
