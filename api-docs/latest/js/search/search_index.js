var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.363,1,1.264]],["body/interfaces/IFrame.html",[0,0.388,1,2.388,2,1.053,3,0.462,4,0.462,5,0.388,6,1.535,7,2.036,8,0.388,9,3.204,10,0.334,11,3.146,12,3.204,13,3.956,14,3.956,15,3.956,16,1.796,17,3.956,18,3.204,19,2.338,20,2.338,21,1.834,22,0.424,23,0.424,24,1.401,25,3.204,26,0.319,27,0.614,28,3.838,29,3.6,30,4.109,31,4.739,32,3.996,33,0.662,34,0.049,35,1.107,36,1.145,37,2.708,38,2.042,39,3.956,40,1.782,41,3.204,42,3.204,43,3.956,44,3.956,45,1.796,46,3.204,47,0.718,48,1.535,49,2.408,50,2.036,51,2.042,52,0.614,53,2.708,54,2.408,55,0.034,56,0.034]],["title/interfaces/IMessage.html",[0,0.363,24,0.986]],["body/interfaces/IMessage.html",[0,0.393,1,2.25,2,1.067,3,0.468,4,0.468,5,0.393,6,1.555,8,0.393,10,0.194,20,2.358,21,1.584,22,0.479,23,0.479,24,1.687,25,3.231,26,0.323,27,0.739,29,2.062,33,0.583,34,0.049,36,1.081,45,1.812,47,0.964,48,1.555,49,2.439,50,2.062,51,2.06,52,0.619,55,0.034,56,0.034,57,2.062,58,2.06,59,2.467,60,2.358,61,1.555,62,3.231,63,1.403,64,3.623,65,1.803,66,3.231,67,4.124,68,4.124,69,1.909,70,4.764,71,4.764,72,4.764,73,2.459,74,3.857,75,3.99,76,3.99,77,2.439,78,3.013,79,2.439,80,3.013,81,3.013,82,2.439,83,3.013,84,1.812,85,3.013,86,2.062]],["title/interfaces/IPublishParams.html",[0,0.363,87,1.264]],["body/interfaces/IPublishParams.html",[0,0.56,1,1.53,2,0.642,3,0.281,4,0.281,5,0.236,8,0.236,10,0.117,11,1.992,16,1.26,21,1.582,22,0.506,23,0.506,24,1.194,26,0.194,27,0.431,28,3.296,29,3.154,30,1.468,32,3.058,33,0.648,34,0.05,35,1.098,36,1.037,40,1.846,41,2.73,47,0.912,48,0.936,51,1.949,52,0.79,53,1.241,55,0.024,56,0.024,59,0.823,61,2.101,77,1.468,84,2.092,86,1.899,87,1.714,88,1.072,89,1.432,90,2.775,91,2.73,92,2.775,93,1.591,94,3.476,95,3.776,96,2.775,97,2.247,98,1.112,99,2.775,100,2.775,101,3.058,102,2.775,103,1.64,104,1.899,105,2.775,106,1.813,107,0.983,108,1.241,109,2.405,110,2.786,111,1.64,112,1.813,113,1.899,114,2.938,115,1.813,116,2.775,117,1.813,118,1.899,119,2.775,120,2.775,121,1.813,122,1.813,123,1.899,124,1.813,125,1.468,126,1.241,127,1.241,128,0.936,129,2.775,130,2.786,131,2.775,132,1.813,133,1.813,134,1.468,135,1.813,136,4.467,137,2.775,138,3.776,139,3.776,140,1.813,141,1.072,142,1.813,143,1.813,144,1.813,145,1.813,146,1.899,147,1.241,148,1.813,149,3.776,150,3.296,151,1.813,152,1.813,153,1.813,154,1.813,155,1.64,156,1.241,157,2.247,158,1.813,159,1.813,160,1.468,161,1.813,162,1.899,163,2.307,164,1.813,165,2.247,166,1.813,167,2.585,168,1.813,169,1.813,170,1.813,171,0.936,172,1.813,173,1.899,174,1.468,175,2.775,176,1.468,177,1.468,178,1.468,179,1.468,180,1.468,181,1.241,182,1.468,183,1.468,184,1.468,185,1.813,186,1.241,187,1.241,188,1.241,189,1.241,190,1.241,191,1.241,192,1.241,193,1.241,194,1.241,195,1.241,196,1.241,197,1.241,198,1.468,199,1.468,200,1.468,201,1.468,202,1.468,203,1.468,204,1.468,205,1.468]],["title/interfaces/IRxStompPublishParams.html",[0,0.363,206,1.906]],["body/interfaces/IRxStompPublishParams.html",[0,0.464,2,1.261,3,0.553,4,0.553,5,0.464,8,0.464,10,0.312,16,2.017,22,0.476,23,0.381,26,0.381,27,0.69,33,0.464,34,0.049,40,1.941,47,0.86,52,0.553,55,0.038,56,0.038,59,2.017,66,3.598,87,2.199,93,1.389,98,1.78,103,2.625,104,3.472,163,3.472,206,3.041,207,1.261,208,2.437,209,1.616,210,2.883,211,2.437,212,4.443,213,3.041,214,4.443,215,1.573,216,5.072,217,4.443,218,4.443,219,3.598,220,4.443,221,4.443,222,4.443,223,3.56]],["title/interfaces/ITransaction.html",[0,0.363,224,1.906]],["body/interfaces/ITransaction.html",[0,0.456,2,1.239,3,0.543,4,0.543,5,0.456,6,1.806,8,0.456,19,2.597,20,2.597,22,0.375,23,0.375,26,0.375,27,0.682,33,0.627,34,0.049,35,1.011,52,0.543,55,0.038,56,0.038,63,1.388,65,1.839,67,3.559,68,3.559,69,2.02,84,1.995,224,3.008,225,2.833,226,5.379,227,3.499,228,2.833,229,3.499,230,3.499,231,3.499,232,5.3,233,5.3,234,3.45,235,4.395,236,4.395,237,3.559,238,3.559,239,3.499,240,3.499]],["title/interfaces/IWatchParams.html",[0,0.363,241,1.906]],["body/interfaces/IWatchParams.html",[0,0.285,2,0.773,3,0.339,4,0.339,5,0.285,8,0.285,10,0.206,16,2.088,21,1.787,22,0.342,23,0.234,26,0.234,27,0.495,33,0.54,34,0.05,35,0.927,36,1.2,38,1.646,40,1.509,45,1.88,47,0.527,52,0.339,53,2.835,55,0.027,56,0.027,59,1.88,60,2.447,61,2.138,93,1.523,94,4.087,98,1.278,101,2.582,103,1.884,171,1.646,207,0.773,208,1.495,211,1.495,213,2.182,215,1.129,219,2.582,241,2.182,242,1.768,243,4.142,244,4.6,245,4.142,246,4.6,247,3.188,248,3.188,249,4.142,250,2.582,251,2.582,252,2.182,253,3.188,254,3.188,255,3.188,256,3.188,257,3.188,258,3.188,259,3.333,260,4.6,261,2.375,262,4.142,263,4.142,264,4.142,265,4.142,266,4.142,267,3.354,268,4.142,269,3.354,270,2.582,271,3.188,272,2.582,273,2.182,274,3.188,275,3.188,276,3.188,277,2.582,278,3.188,279,3.188,280,3.188,281,3.188,282,3.188,283,3.188,284,4.6,285,3.354,286,1.884,287,2.182,288,2.582,289,3.188,290,3.188,291,3.188,292,3.188]],["title/classes/RxStompConfig.html",[293,0.363,294,1.906]],["body/classes/RxStompConfig.html",[3,0.183,4,0.183,5,0.154,8,0.154,9,1.595,10,0.342,16,2.086,18,1.595,19,1.164,20,1.164,21,1.255,22,0.211,23,0.127,26,0.127,27,0.306,33,0.624,34,0.049,35,0.415,36,0.793,40,1.691,42,1.595,45,0.894,47,0.476,52,0.183,55,0.017,56,0.017,58,1.017,61,2.033,63,0.814,65,1.046,69,1.579,73,1.017,84,0.537,93,1.663,98,1.184,103,2.716,107,1.449,109,1.164,110,1.348,111,1.497,128,1.83,134,2.393,141,1.746,147,1.348,163,2.696,167,2.889,186,1.734,187,1.734,188,1.734,189,1.734,190,1.734,191,1.734,192,1.734,193,1.734,194,1.734,195,1.734,196,1.734,197,1.734,207,1.712,209,0.537,215,0.698,251,2.393,261,2.033,269,1.595,270,1.595,277,1.595,293,0.154,294,1.348,295,0.37,296,2.195,297,0.61,298,2.393,299,2.393,300,1.788,301,1.97,302,1.97,303,1.595,304,2.487,305,2.051,306,2.051,307,2.051,308,2.051,309,2.051,310,1.917,311,1.182,312,1.595,313,1.182,314,1.97,315,1.97,316,2.871,317,2.393,318,1.182,319,1.164,320,1.97,321,1.182,322,1.97,323,2.393,324,1.348,325,1.97,326,1.97,327,1.97,328,1.97,329,1.97,330,1.97,331,1.97,332,1.97,333,1.97,334,1.97,335,1.97,336,1.97,337,5.192,338,1.595,339,1.182,340,1.97,341,1.97,342,1.97,343,1.595,344,2.955,345,2.955,346,2.427,347,1.182,348,1.97,349,2.955,350,1.97,351,1.97,352,1.97,353,1.97,354,2.393,355,1.595,356,1.97,357,1.97,358,1.97,359,1.164,360,2.022,361,1.97,362,1.595,363,1.182,364,1.97,365,1.97,366,1.97,367,3.939,368,3.939,369,1.97,370,1.97,371,1.595,372,1.182,373,2.955,374,1.307,375,1.97,376,1.182,377,1.595,378,1.182,379,1.97,380,1.595,381,1.182,382,1.595,383,1.182,384,1.97,385,2.955,386,2.955,387,3.545,388,1.97,389,1.182,390,2.955,391,1.595,392,1.182,393,1.97,394,1.97,395,1.97,396,1.97,397,1.97,398,1.97,399,1.97,400,1.97,401,1.595,402,2.393,403,1.97,404,1.97,405,1.97,406,1.595,407,1.595,408,1.182,409,1.595,410,0.957,411,1.97,412,1.97,413,1.182,414,1.595,415,1.97,416,1.97,417,1.595,418,1.97,419,1.97,420,1.97,421,1.97,422,2.393,423,1.97,424,1.97,425,1.97,426,1.97,427,1.182,428,1.97,429,1.595,430,1.595,431,2.393,432,2.658,433,1.97,434,1.97,435,1.97,436,2.095,437,1.97,438,1.182,439,1.595,440,0.957,441,1.595,442,1.97,443,2.393,444,1.97,445,1.97,446,1.97,447,1.97,448,1.595,449,2.955,450,1.97,451,1.595,452,1.97,453,1.348,454,1.182,455,1.97,456,1.734,457,1.595,458,0.957,459,0.957,460,0.809,461,0.957,462,0.957,463,1.595,464,0.957,465,0.957,466,0.957,467,0.957,468,0.957,469,0.957,470,1.182,471,1.182,472,1.182,473,1.182,474,1.182,475,1.182,476,0.957]],["title/classes/RxStompRPC.html",[293,0.363,477,1.646]],["body/classes/RxStompRPC.html",[3,0.314,4,0.314,5,0.264,8,0.264,10,0.307,21,1.414,22,0.323,23,0.217,24,1.276,26,0.217,33,0.47,34,0.05,36,0.728,40,0.811,45,1.368,47,1.081,52,0.314,55,0.026,56,0.026,58,1.556,59,0.918,60,2.359,63,1.312,65,1.067,73,2.061,87,2.105,89,1.86,93,1.126,104,1.385,128,1.86,155,1.781,171,1.556,207,1.414,209,1.368,215,1.067,234,3.174,237,1.638,259,2.466,261,2.204,267,1.638,272,2.441,286,1.195,287,3.064,288,2.441,293,0.264,295,0.633,296,1.812,300,2.032,304,2.032,310,1.443,324,1.385,343,1.638,360,2.732,477,1.781,478,1.638,479,2.441,480,3.014,481,4.476,482,2.559,483,3.014,484,2.063,485,2.732,486,2.063,487,3.992,488,2.063,489,2.023,490,3.992,491,2.359,492,2.023,493,2.063,494,1.86,495,1.638,496,3.014,497,2.023,498,3.992,499,4.269,500,3.014,501,3.014,502,3.014,503,3.014,504,3.602,505,3.014,506,2.023,507,3.014,508,2.441,509,3.014,510,3.014,511,3.992,512,3.014,513,2.441,514,3.014,515,2.023,516,2.023,517,2.023,518,3.014,519,2.023,520,2.063,521,1.638,522,3.992,523,3.992,524,3.992,525,3.992,526,4.636,527,2.023,528,1.638,529,1.638,530,1.638,531,2.023,532,2.023,533,2.023,534,2.023,535,2.023,536,3.014,537,1.638,538,3.014,539,2.023,540,3.014,541,3.602,542,3.014,543,3.014,544,3.014,545,2.023,546,2.023,547,1.638,548,2.023,549,2.023,550,2.023,551,2.023,552,3.602,553,3.014,554,2.023,555,2.023,556,1.638,557,2.023,558,2.023,559,2.023,560,3.014,561,3.602,562,3.014,563,2.023,564,2.023,565,2.023,566,2.023,567,2.023,568,2.023,569,2.023,570,2.023,571,2.023]],["title/classes/RxStompRPCConfig.html",[293,0.363,491,1.646]],["body/classes/RxStompRPCConfig.html",[3,0.489,4,0.489,5,0.411,8,0.411,10,0.324,22,0.338,23,0.338,24,1.116,26,0.338,27,0.638,33,0.597,34,0.049,35,0.963,47,1.105,52,0.638,55,0.035,56,0.035,63,1.447,65,1.62,93,1.516,98,1.648,207,1.62,209,1.431,215,1.116,286,1.863,287,2.814,293,0.411,295,0.986,296,2.077,297,1.627,300,2.077,304,2.341,310,1.648,360,3.319,482,2.596,485,3.595,491,2.43,494,2.122,520,3.132,521,3.329,528,3.329,529,3.329,530,3.329,547,3.926,556,3.926,572,4.849,573,4.575,574,2.553,575,4.111,576,4.111,577,4.111,578,3.153,579,4.111]],["title/classes/Stomp.html",[10,0.18,293,0.363]],["body/classes/Stomp.html",[3,0.27,4,0.27,5,0.227,8,0.227,10,0.293,19,1.588,22,0.288,23,0.288,26,0.186,27,0.417,33,0.428,34,0.05,35,0.982,38,0.898,47,0.793,51,2.062,52,0.27,55,0.023,56,0.023,58,1.907,63,0.74,65,0.952,69,1.822,73,0.898,74,3.234,89,1.387,93,0.84,98,0.697,107,0.616,108,1.191,109,1.028,127,3.112,128,0.898,130,1.191,141,2.948,146,2.248,147,2.89,150,2.66,155,1.588,157,2.992,160,2.177,171,2.347,173,1.191,228,1.409,238,2.177,252,1.84,259,2.248,261,2.272,293,0.574,295,0.544,299,2.177,304,1.491,310,1.316,319,2.687,324,1.84,346,1.84,355,3.234,374,2.692,401,3.778,402,1.409,414,2.177,436,2.816,441,2.177,443,2.177,448,3.234,453,2.529,456,1.191,457,2.66,460,1.84,479,1.409,484,3.194,486,1.84,493,1.84,494,1.696,495,1.409,513,1.409,537,2.992,580,1.409,581,2.688,582,3.285,583,4.401,584,4.546,585,4.546,586,3.778,587,3.285,588,1.74,589,2.688,590,2.688,591,1.84,592,2.688,593,2.688,594,3.695,595,1.74,596,2.688,597,4.401,598,1.74,599,2.688,600,2.688,601,2.688,602,2.688,603,4.222,604,2.688,605,1.74,606,3.234,607,2.688,608,1.74,609,2.688,610,2.688,611,2.688,612,2.688,613,3.285,614,2.688,615,2.688,616,2.688,617,2.688,618,2.177,619,2.688,620,2.688,621,2.688,622,2.688,623,2.688,624,2.688,625,2.688,626,2.688,627,2.688,628,2.688,629,3.695,630,1.74,631,1.74,632,1.409,633,1.74,634,1.74,635,1.74,636,1.74,637,1.74,638,1.74,639,2.688,640,1.74,641,2.688,642,1.74,643,1.74,644,1.74,645,3.285,646,1.74,647,1.74,648,3.695,649,1.74,650,1.74,651,2.688,652,1.74,653,1.74,654,1.74,655,1.74,656,1.74,657,1.74,658,1.74,659,1.74]],["title/classes/StompConfig.html",[293,0.363,660,1.906]],["body/classes/StompConfig.html",[3,0.24,4,0.24,5,0.202,8,0.202,10,0.197,22,0.263,23,0.263,26,0.166,27,0.381,33,0.695,34,0.049,35,0.516,36,0.913,37,1.679,40,1.847,45,1.114,47,0.736,48,0.799,51,1.266,52,0.24,55,0.021,56,0.021,62,1.986,63,1.544,69,1.221,79,1.253,84,1.114,93,1.752,107,1.079,108,1.059,111,1.8,113,2.085,114,3.219,118,2.085,123,2.085,162,1.059,167,3.155,181,1.679,186,2.085,187,2.085,188,2.085,189,2.085,190,2.085,191,2.085,192,2.085,193,2.085,194,2.085,195,2.085,196,2.085,197,2.085,198,2.467,199,2.467,200,2.467,201,2.467,202,2.467,203,2.467,204,2.467,205,2.467,213,1.679,273,1.679,293,0.202,295,0.484,297,0.799,298,1.986,304,2.589,305,2.467,306,2.467,307,2.467,308,2.467,309,2.467,310,2.136,312,1.986,323,1.253,338,1.986,346,1.679,362,1.986,371,1.986,374,2.075,377,1.986,380,1.986,382,1.986,391,1.986,407,1.986,409,1.986,410,1.253,422,1.986,439,1.986,440,1.253,453,1.679,456,1.059,458,1.253,459,1.253,460,1.059,461,1.253,462,1.253,463,1.253,464,1.253,465,1.253,466,1.253,467,1.253,468,1.253,469,1.253,476,1.253,488,1.679,494,1.266,574,1.253,632,1.253,660,1.679,661,3.161,662,2.453,663,2.453,664,2.453,665,2.453,666,3.047,667,1.548,668,1.548,669,1.548,670,1.548,671,1.548,672,2.453,673,1.548,674,1.548,675,1.548,676,1.548,677,2.453,678,1.548,679,1.548,680,1.548,681,2.453,682,1.548,683,2.453,684,1.548,685,2.453,686,1.548,687,2.453,688,1.548,689,2.453,690,1.548,691,2.453,692,1.548,693,2.453,694,1.548,695,2.453,696,1.548,697,2.453,698,1.548,699,1.548,700,1.548,701,1.548,702,1.548,703,1.548,704,1.548,705,1.548,706,1.548,707,1.548,708,1.548,709,1.548,710,1.548,711,1.548,712,1.548]],["title/classes/StompHeaders.html",[36,0.673,293,0.363]],["body/classes/StompHeaders.html",[3,0.613,4,0.613,5,0.515,8,0.515,10,0.255,12,3.198,16,1.793,21,1.795,22,0.423,23,0.423,34,0.046,35,1.106,36,1.143,37,3.598,38,2.038,50,2.703,52,0.613,55,0.041,56,0.041,89,2.038,293,0.515,295,1.235,303,3.198,310,1.582,317,3.198,406,3.198,661,2.797,713,3.198,714,3.949,715,3.949,716,3.949,717,3.949,718,3.949,719,3.949,720,3.949,721,3.949,722,3.949,723,3.949]],["title/interfaces/StompSubscription.html",[0,0.363,724,1.906]],["body/interfaces/StompSubscription.html",[0,0.476,2,1.292,3,0.566,4,0.566,5,0.476,8,0.476,10,0.235,21,1.292,22,0.483,23,0.483,26,0.391,27,0.7,33,0.588,34,0.049,35,1.031,36,1.09,47,0.881,48,1.883,52,0.566,55,0.039,56,0.039,60,2.665,63,1.242,64,3.653,65,1.597,69,1.807,73,2.328,82,2.954,84,1.656,234,3.666,285,4.337,493,3.088,661,2.156,724,3.502,725,2.954,726,4.511,727,4.511,728,3.648]],["title/classes/Versions.html",[107,0.986,293,0.363]],["body/classes/Versions.html",[3,0.413,4,0.413,5,0.347,8,0.347,10,0.317,11,2.169,22,0.45,23,0.285,26,0.285,27,0.57,33,0.619,34,0.049,35,1.059,38,2.169,46,3.667,52,0.413,55,0.031,56,0.031,58,1.895,89,1.374,93,0.832,98,1.814,107,1.899,128,2.337,130,1.822,141,2.169,155,2.169,156,3.361,261,1.895,293,0.548,295,0.832,304,2.435,310,2.016,316,2.972,319,2.902,354,3.976,429,2.972,430,2.972,431,3.976,432,3.976,436,1.573,451,2.972,486,2.513,488,1.822,494,1.374,508,2.972,586,4.265,729,2.156,730,4.201,731,4.201,732,4.201,733,4.201,734,4.528,735,4.528,736,2.662,737,2.662,738,3.671,739,3.671,740,3.671,741,3.671,742,3.671,743,2.662,744,4.91,745,2.662,746,2.662,747,2.662,748,2.662,749,2.662,750,2.662,751,2.662,752,2.662,753,2.662,754,2.662,755,2.662,756,2.662]],["title/coverage.html",[757,3.065]],["body/coverage.html",[0,0.689,1,1.471,5,0.423,6,2.393,7,2.218,10,0.327,24,1.148,33,0.423,34,0.048,36,0.783,55,0.036,56,0.036,57,2.218,87,1.471,88,1.915,107,1.148,206,2.218,207,1.84,208,2.865,209,1.471,210,2.624,211,2.865,224,2.218,225,2.624,241,2.218,242,2.624,293,0.712,294,2.218,296,2.225,297,2.393,300,1.471,359,1.915,374,1.673,436,1.915,477,1.915,478,2.624,482,1.673,491,1.915,580,2.624,606,2.624,660,2.218,661,2.74,713,2.624,724,2.218,725,2.624,729,2.624,757,2.624,758,3.241,759,3.241,760,5.601,761,3.241,762,3.241,763,3.241,764,4.636,765,4.636,766,3.241,767,3.241,768,3.241,769,3.241,770,3.241,771,3.241,772,3.241,773,3.241,774,4.186,775,3.241,776,3.241,777,3.241,778,3.241,779,3.241,780,3.241]],["title/miscellaneous/enumerations.html",[781,1.379,782,2.709]],["body/miscellaneous/enumerations.html",[10,0.329,22,0.429,26,0.429,34,0.041,55,0.041,56,0.041,88,2.368,146,2.743,162,2.743,165,3.867,173,3.492,174,3.867,176,3.867,177,3.867,178,3.867,179,3.867,180,3.245,181,3.269,182,3.245,183,3.245,184,3.245,207,1.419,215,1.419,296,1.819,300,1.819,781,2.368,782,3.245,783,3.867,784,4.776,785,3.245,786,4.776]],["title/index.html",[26,0.25,787,2.333,788,2.333]],["body/index.html",[10,0.322,23,0.496,34,0.04,55,0.04,56,0.04,63,1.274,97,4.038,107,1.638,126,2.602,156,2.602,171,2.388,209,1.726,215,1.346,250,3.078,252,2.602,273,2.602,286,2.246,295,1.447,300,1.726,359,2.246,374,1.962,417,3.078,477,2.246,482,1.962,484,2.602,591,2.602,618,3.078,789,3.801,790,3.801,791,4.626,792,5.189,793,3.801,794,3.801,795,3.801,796,3.801,797,3.801,798,3.801,799,3.801,800,3.801,801,3.801,802,3.801,803,3.801,804,3.801,805,3.801,806,3.801,807,3.801,808,3.801,809,3.801,810,3.801,811,3.801,812,3.801,813,4.987]],["title/modules.html",[814,3.065]],["body/modules.html",[34,0.043,55,0.043,56,0.043,814,3.61]],["title/overview.html",[815,3.065]],["body/overview.html",[2,1.561,34,0.043,55,0.043,56,0.043,295,1.379,815,3.571,816,4.409,817,4.409]],["title/properties.html",[27,0.519,818,2.333]],["body/properties.html",[8,0.557,27,0.663,34,0.048,55,0.042,56,0.042,319,2.523,359,2.523,591,2.923,819,4.27,820,4.27,821,4.27,822,4.27,823,4.27,824,4.27,825,4.27,826,4.27]],["title/miscellaneous/typealiases.html",[781,1.379,827,3.345]],["body/miscellaneous/typealiases.html",[1,2.177,6,2.262,7,3,10,0.309,11,2.59,22,0.576,23,0.567,24,1.698,26,0.373,33,0.454,34,0.041,35,0.733,54,2.821,55,0.038,56,0.038,57,3,59,1.99,61,2.677,63,0.959,65,1.234,69,2.078,86,2.385,87,1.99,88,2.059,91,3.549,109,3.065,110,3.55,111,2.59,113,3,114,3,118,3,123,3,125,2.821,126,2.385,127,2.385,207,1.234,215,1.234,296,1.582,297,2.262,482,2.262,485,2.385,520,3,781,2.059,783,4.287,785,2.821,828,3.484,829,4.383,830,3.484,831,3.484,832,3.484,833,3.484]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.0",{"_index":819,"title":{},"body":{"properties.html":{}}}],["0.1.1",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1']);maps",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.2",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":816,"title":{},"body":{"overview.html":{}}}],["100",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["2.0",{"_index":823,"title":{},"body":{"properties.html":{}}}],["2/2",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["44/44",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":817,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["_customreplyqueue",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_dummysubscription",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_repliesobservable",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":527,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":232,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":715,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["ack",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["acknowledgement",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["activation",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":182,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":577,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":581,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["added",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":718,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":212,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["alias",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":828,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":640,"title":{},"body":{"classes/Stomp.html":{}}}],["allowing",{"_index":254,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["allows",{"_index":625,"title":{},"body":{"classes/Stomp.html":{}}}],["alternative",{"_index":609,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":624,"title":{},"body":{"classes/Stomp.html":{}}}],["angular2",{"_index":519,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["another",{"_index":641,"title":{},"body":{"classes/Stomp.html":{}}}],["apache",{"_index":822,"title":{},"body":{"properties.html":{}}}],["api",{"_index":791,"title":{},"body":{"index.html":{}}}],["appendmissingnullonincoming",{"_index":196,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":502,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":738,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["associated",{"_index":726,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["assumes",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempt",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempted",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":302,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":824,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":655,"title":{},"body":{"classes/Stomp.html":{}}}],["automatic",{"_index":255,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["automatically",{"_index":277,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["available",{"_index":717,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["before",{"_index":270,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["belongs",{"_index":806,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarytype",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["brokers",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["brokerurl",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["builds",{"_index":803,"title":{},"body":{"index.html":{}}}],["bye",{"_index":262,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["call.html",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["callable",{"_index":617,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["calling",{"_index":228,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":509,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["case",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":283,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":231,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":293,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["classes",{"_index":295,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":235,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":240,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":229,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":236,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":239,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":665,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":701,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":672,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":711,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":677,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@client#heartbeatincoming",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":703,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":681,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":712,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":683,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":706,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":685,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":707,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":687,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":708,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":689,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":705,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":691,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":704,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":693,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":709,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":695,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":710,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":697,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@client#reconnectdelay",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":702,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":727,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":728,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#websocketfactory",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":596,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":616,"title":{},"body":{"classes/Stomp.html":{}}}],["client.js",{"_index":631,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closed",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent]://developer.mozilla.org/en",{"_index":830,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":233,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":630,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":606,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":651,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["compliant",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":811,"title":{},"body":{"index.html":{}}}],["config",{"_index":521,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["config.ts",{"_index":297,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:102",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:103",{"_index":668,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:108",{"_index":682,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:111",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:113",{"_index":684,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:116",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:118",{"_index":686,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:123",{"_index":692,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:126",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:128",{"_index":694,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:131",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:133",{"_index":679,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:138",{"_index":671,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:140",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:143",{"_index":673,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:147",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:148",{"_index":680,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:167",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":574,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":578,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:28",{"_index":699,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:33",{"_index":700,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:38",{"_index":670,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:43",{"_index":696,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:48",{"_index":676,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:50",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:53",{"_index":678,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:58",{"_index":698,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:63",{"_index":675,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:68",{"_index":667,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:73",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:78",{"_index":669,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:81",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:83",{"_index":674,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:88",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":690,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:95",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:98",{"_index":688,"title":{},"body":{"classes/StompConfig.html":{}}}],["configuration",{"_index":298,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connect",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["connected",{"_index":600,"title":{},"body":{"classes/Stomp.html":{}}}],["connectheaders",{"_index":188,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["connectiontimeout",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["consider",{"_index":257,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["console.warn",{"_index":654,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":829,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../rx",{"_index":785,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../types.ts",{"_index":783,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/rx",{"_index":207,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":580,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":608,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":588,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":598,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":661,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":88,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":729,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":743,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":745,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":746,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":737,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":747,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":749,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":748,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":259,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["constructor",{"_index":488,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["constructor(public",{"_index":753,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":489,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(versions",{"_index":736,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":719,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copied",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copy",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlation",{"_index":511,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":793,"title":{},"body":{"index.html":{}}}],["corresponds",{"_index":662,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":800,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":757,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":720,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":493,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["created",{"_index":227,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["creates",{"_index":599,"title":{},"body":{"classes/Stomp.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["custom",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["data",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["deactivating",{"_index":183,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":186,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declare",{"_index":633,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":742,"title":{},"body":{"classes/Versions.html":{}}}],["deepak",{"_index":825,"title":{},"body":{"properties.html":{}}}],["default",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["defaultmessagessubscription",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["defensively",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defined",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["delay",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependency",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["dependent",{"_index":248,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":583,"title":{},"body":{"classes/Stomp.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["destination",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["details",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["dev",{"_index":798,"title":{},"body":{"index.html":{}}}],["development",{"_index":799,"title":{},"body":{"index.html":{}}}],["disable",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":197,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnectheaders",{"_index":189,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnection",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["docs",{"_index":792,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":659,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["documents",{"_index":809,"title":{},"body":{"index.html":{}}}],["dom",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":218,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["during",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":273,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{},"index.html":{}}}],["effects",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":739,"title":{},"body":{"classes/Versions.html":{}}}],["enable",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enqueued",{"_index":217,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ensure",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["entry",{"_index":813,"title":{},"body":{"index.html":{}}}],["enum",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":782,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":590,"title":{},"body":{"classes/Stomp.html":{}}}],["established",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["etc",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["event]://developer.mozilla.org/en",{"_index":832,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["example",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["export",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["factory",{"_index":582,"title":{},"body":{"classes/Stomp.html":{}}}],["false",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["family",{"_index":820,"title":{},"body":{"properties.html":{}}}],["fetch",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":663,"title":{},"body":{"classes/StompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":515,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":516,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["flag",{"_index":276,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["following",{"_index":801,"title":{},"body":{"index.html":{}}}],["forcebinarywsframes",{"_index":194,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.js",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frames",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["function",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":714,"title":{},"body":{"classes/StompHeaders.html":{}}}],["generated",{"_index":810,"title":{},"body":{"index.html":{}}}],["generating",{"_index":510,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getting",{"_index":787,"title":{"index.html":{}},"body":{}}],["guide",{"_index":485,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["guide](/guide/rx",{"_index":522,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["guides",{"_index":807,"title":{},"body":{"index.html":{}}}],["hack",{"_index":639,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":268,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handshake",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{}}}],["headers.js",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["headers.ts",{"_index":713,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":723,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":190,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":191,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":613,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":657,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":234,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["identifier",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#body",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["iframe#headers",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/StompHeaders.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["impact",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":479,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implies",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["important",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["inactive",{"_index":184,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":722,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["information",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{},"index.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":513,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"overview.html":{}}}],["internal",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":288,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["interval",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoked",{"_index":269,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["invoking",{"_index":282,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":87,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":206,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issued",{"_index":289,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["istompthandlerconfig",{"_index":185,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":224,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":241,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":658,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":649,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":650,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":281,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["kumar",{"_index":826,"title":{},"body":{"properties.html":{}}}],["large",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["length",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":721,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":802,"title":{},"body":{"index.html":{}}}],["library",{"_index":805,"title":{},"body":{"index.html":{}}}],["license",{"_index":821,"title":{},"body":{"properties.html":{}}}],["line",{"_index":797,"title":{},"body":{"index.html":{}}}],["line:variable",{"_index":637,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["literal",{"_index":258,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["located",{"_index":602,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":195,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["main",{"_index":796,"title":{},"body":{"index.html":{}}}],["major",{"_index":585,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":498,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["maps",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["marks",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matching",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["maxwebsocketchunksize",{"_index":193,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.js",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":220,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["messaging",{"_index":483,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{}}}],["methods",{"_index":486,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":781,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modules",{"_index":814,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":618,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":642,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["nack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":494,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["navigating",{"_index":789,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["needed",{"_index":623,"title":{},"body":{"classes/Stomp.html":{}}}],["new",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":589,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":507,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["npm",{"_index":794,"title":{},"body":{"index.html":{}}}],["null",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["number",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["object",{"_index":299,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":287,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["observable.create((rpcobserver",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":514,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":280,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["once",{"_index":619,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":666,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":198,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":199,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["one",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onmessage",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":200,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":205,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":203,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":204,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":201,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":202,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["open",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["options",{"_index":213,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":614,"title":{},"body":{"classes/Stomp.html":{}}}],["outgoing",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":607,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":741,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":815,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":818,"title":{"properties.html":{}},"body":{}}],["packets",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["parameter",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["params",{"_index":504,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":211,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{}}}],["passcode",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["passing",{"_index":626,"title":{},"body":{"classes/Stomp.html":{}}}],["pipe",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":484,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["point",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["preferred",{"_index":812,"title":{},"body":{"index.html":{}}}],["present",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["primitives",{"_index":804,"title":{},"body":{"index.html":{}}}],["prior",{"_index":643,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["procedure",{"_index":481,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["promise",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["protocol",{"_index":744,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":597,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":734,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":634,"title":{},"body":{"classes/Stomp.html":{}}}],["public",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["publish",{"_index":210,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["published",{"_index":221,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishparams",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/rpc",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuename",{"_index":266,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rabbitmq",{"_index":576,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["raw",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re)connection",{"_index":275,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["re)subscription",{"_index":271,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["readystate",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["receive",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{}}}],["reconnect",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reconnectdelay",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":620,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":615,"title":{},"body":{"classes/Stomp.html":{}}}],["reestablished",{"_index":222,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["released",{"_index":795,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remains",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["remarks",{"_index":646,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":480,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":584,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["repliesobservable",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":572,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":499,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["require('../../esm5",{"_index":592,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":635,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket;deprecated",{"_index":595,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["resubscribe",{"_index":278,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["resubscriptions",{"_index":256,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["results",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retry",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":216,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":261,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["returns",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["rpc",{"_index":482,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(params",{"_index":496,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts",{"_index":478,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:30",{"_index":492,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:56",{"_index":497,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:67",{"_index":506,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":209,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":286,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"index.html":{}}}],["rxjs/operators",{"_index":517,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomp",{"_index":300,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#configure",{"_index":301,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":214,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":223,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":243,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":291,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.watch",{"_index":265,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp](@link",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":294,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#websocketfactory",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":455,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":477,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":503,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":491,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstompstate",{"_index":784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["same",{"_index":664,"title":{},"body":{"classes/StompConfig.html":{}}}],["scripts",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":237,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{}}}],["send(data",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sent",{"_index":716,"title":{},"body":{"classes/StompHeaders.html":{}}}],["server",{"_index":601,"title":{},"body":{"classes/Stomp.html":{}}}],["service",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["set",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["setting",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":579,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":573,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":520,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["similar",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":500,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["skipcontentlengthheader",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specified",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specify",{"_index":612,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":192,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["standard",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["started",{"_index":788,"title":{"index.html":{}},"body":{}}],["state",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":586,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":610,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":652,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":644,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":638,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url);deprecated",{"_index":605,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over",{"_index":645,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":627,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.ts",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":594,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":523,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomp/rx",{"_index":215,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":208,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":296,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":660,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":591,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"properties.html":{}}}],["stompjs.stomp",{"_index":593,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/remote",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig",{"_index":490,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stompsocketstate",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompsubscription",{"_index":724,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":187,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["stream",{"_index":487,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":505,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":264,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":290,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":244,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":260,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribe((message",{"_index":267,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribed",{"_index":272,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribeonlyonce",{"_index":245,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["subscription.ts",{"_index":725,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["successful",{"_index":274,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":219,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":575,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["support",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":730,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":735,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":508,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["target",{"_index":247,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":622,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["terminate",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["text",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["this._customreplyqueue",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._dummysubscription",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.stream(params).pipe(first",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":754,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":755,"title":{},"body":{"classes/Versions.html":{}}}],["though",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["through",{"_index":790,"title":{},"body":{"index.html":{}}}],["time",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["todo",{"_index":230,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":226,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":225,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":621,"title":{},"body":{"classes/Stomp.html":{}}}],["true",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["try",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tslint:disable",{"_index":636,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":808,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":827,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":653,"title":{},"body":{"classes/Stomp.html":{}}}],["types.js",{"_index":632,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["typescript",{"_index":292,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["typical",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["undefined",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["unset",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":246,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":284,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":285,"title":{},"body":{"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}}}],["unsubscribing",{"_index":279,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/closeeventhttps",{"_index":831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/event",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/eventhttps",{"_index":833,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["used",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["useful",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":611,"title":{},"body":{"classes/Stomp.html":{}}}],["using",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["utf8",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":518,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["uuid.uuid",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":756,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":731,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":732,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":733,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["values",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["var",{"_index":603,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"properties.html":{}}}],["versions",{"_index":107,"title":{"classes/Versions.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.0",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":647,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.js",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["versions.v1_0",{"_index":752,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":751,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":750,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":512,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["void",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["wait",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["want",{"_index":740,"title":{},"body":{"classes/Versions.html":{}}}],["watch",{"_index":242,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["way",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":628,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":587,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":445,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["within",{"_index":238,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":656,"title":{},"body":{"classes/Stomp.html":{}}}],["world",{"_index":263,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":501,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["ws",{"_index":629,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":604,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":648,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":495,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["yield",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            isBinaryBody\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended IFrame, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ack\n                                        \n                                \n                                \n                                        \n                                            nack\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame.js';\nimport { StompHeaders } from './stomp-headers.js';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link IFrame}, you can access [headers]{@link IFrame#headers}\n * and [body]{@link IFrame#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipContentLengthHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame.js';\nimport { IMessage } from './i-message.js';\nimport { StompHeaders } from './stomp-headers.js';\nimport { Versions } from './versions.js';\n\n/**\n * This callback will receive a `string` as a parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = ((frame: IFrame) => void) | (() => void);\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default, a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string | undefined;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  url: string;\n  onclose: ((ev?: any) => any) | undefined | null;\n  onerror: ((ev: any) => any) | undefined | null;\n  onmessage: ((ev: IStompSocketMessageEvent) => any) | undefined | null;\n  onopen: ((ev?: any) => any) | undefined | null;\n  terminate?: (() => any) | undefined | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType?: string;\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n/**\n * @internal\n */\nexport interface IStomptHandlerConfig {\n  debug: debugFnType;\n  stompVersions: Versions;\n  connectHeaders: StompHeaders;\n  disconnectHeaders: StompHeaders;\n  heartbeatIncoming: number;\n  heartbeatOutgoing: number;\n  splitLargeFrames: boolean;\n  maxWebSocketChunkSize: number;\n  forceBinaryWSFrames: boolean;\n  logRawCommunication: boolean;\n  appendMissingNULLonIncoming: boolean;\n  discardWebsocketOnCommFailure: boolean;\n  onConnect: frameCallbackType;\n  onDisconnect: frameCallbackType;\n  onStompError: frameCallbackType;\n  onWebSocketClose: closeEventCallbackType;\n  onWebSocketError: wsErrorCallbackType;\n  onUnhandledMessage: messageCallbackType;\n  onUnhandledReceipt: frameCallbackType;\n  onUnhandledFrame: frameCallbackType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            retryIfDisconnected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abort\n                                        \n                                \n                                \n                                        \n                                            commit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subscribeOnlyOnce\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unsubHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\nIf header information can change over time and you are allowing automatic resubscriptions,\nconsider using a callback as the value rather than a string literal.\n             const subHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // The subHeadersCallback will be invoked before every (re)subscription.\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n             const unsubHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n             // `unsubHeadersCallback` will be invoked to get the headers.\n             sub.unsubscribe();\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   *\n   * If header information can change over time and you are allowing automatic resubscriptions,\n   * consider using a callback as the value rather than a string literal.\n   *\n   * ```typescript\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:167\n                        \n                    \n\n            \n                \n                    Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                        \n                    \n\n            \n                \n                    The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:140\n                        \n                    \n\n            \n                \n                    Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:81\n                        \n                    \n\n            \n                \n                    Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait for ever.\nMaps to: Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:50\n                        \n                    \n\n            \n                \n                    Enable client debugging?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:131\n                        \n                    \n\n            \n                \n                    Maps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:147\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:116\n                        \n                    \n\n            \n                \n                    Maps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                        \n                    \n\n            \n                \n                    Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:126\n                        \n                    \n\n            \n                \n                    Maps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                        \n                    \n\n            \n                \n                    Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:111\n                        \n                    \n\n            \n                \n                    Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n       // Try only versions 1.0 and 1.1\n       rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:73\n                        \n                    \n\n            \n                \n                    This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n       // use a WebSocket\n       rxStompConfig.webSocketFactory= function () {\n         return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n       };\n\n       // Typical usage with SockJS\n       rxStompConfig.webSocketFactory= function () {\n         return new SockJS(\"http://broker.329broker.com/stomp\");\n       };Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 0, which implies wait for ever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:30\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:56\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:67\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport { IMessage, IPublishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: IPublishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: IPublishParams): Observable {\n    // defensively copy\n    const headers: StompHeaders = { ...(params.headers || {}) };\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || UUID.UUID();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ ...params, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                        \n                    \n\n            \n                \n                    Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                        \n                    \n\n            \n                \n                    Setup the reply queue. See the guide for details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        WebSocketClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                        \n                    \n\n            \n                \n                    In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n       StompJs = require('../../esm5/');\n       Stomp = StompJs.Stomp;\n       Stomp.WebSocketClass = require('websocket').w3cwebsocket;Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        client\n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n       var url = \"ws://localhost:61614/stomp\";\n       var client = Stomp.client(url);Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        over\n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n       var client = Stomp.over(function(){\n         return new WebSocket('ws://localhost:15674/ws')\n       });Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions.js';\nimport { CompatClient } from './compat-client.js';\nimport { IStompSocket } from '../types.js';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:68\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:103\n                        \n                    \n\n            \n                \n                    See Client#beforeConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:23\n                        \n                    \n\n            \n                \n                    See Client#brokerURL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:78\n                        \n                    \n\n            \n                \n                    See Client#connectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:38\n                        \n                    \n\n            \n                \n                    See Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:138\n                        \n                    \n\n            \n                \n                    See Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:143\n                        \n                    \n\n            \n                \n                    See Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:83\n                        \n                    \n\n            \n                \n                    See Client#disconnectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:63\n                        \n                    \n\n            \n                \n                    See Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:48\n                        \n                    \n\n            \n                \n                    See Client#heartbeatIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:53\n                        \n                    \n\n            \n                \n                    See Client#heartbeatOutgoing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:133\n                        \n                    \n\n            \n                \n                    See Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:73\n                        \n                    \n\n            \n                \n                    See Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:148\n                        \n                    \n\n            \n                \n                    See Client#onChangeState.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:108\n                        \n                    \n\n            \n                \n                    See Client#onConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDisconnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:113\n                        \n                    \n\n            \n                \n                    See Client#onDisconnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:118\n                        \n                    \n\n            \n                \n                    See Client#onStompError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:98\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledFrame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         messageCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:88\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledMessage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledReceipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:93\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledReceipt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         closeEventCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:123\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketClose.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         wsErrorCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:128\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:43\n                        \n                    \n\n            \n                \n                    See Client#reconnectDelay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:58\n                        \n                    \n\n            \n                \n                    See Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:28\n                        \n                    \n\n            \n                \n                    See Client#stompVersions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:33\n                        \n                    \n\n            \n                \n                    See Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\nimport {\n  ActivationState,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType,\n} from './types.js';\nimport { Versions } from './versions.js';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            unsubscribe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id associated with this subscription.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubscribe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubscribe:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unsubscribe. See Client#unsubscribe for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\nYou will be creating an instance of this class if you want to override\nsupported versions to be declared during STOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_0\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:10\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.1'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:14\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.2'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:18\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.2\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        protocolVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        supportedVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n   *\n   * You will be creating an instance of this class if you want to override\n   * supported versions to be declared during STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (44/44)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            interface\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to NPM released main line versions. Please see dev docs for development versions.\nThe API docs cover the following libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs with RxJS primitives\n\nThe documentation for classes also indicates which library each of the classes\n belongs. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using the compatibility mode, your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Documentation for StompJS family\n        \n            License : Apache-2.0\n        \n            Author : Deepak Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a [CloseEvent]://developer.mozilla.org/en-US/docs/Web/API/CloseEventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as a parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an [Event]://developer.mozilla.org/en-US/docs/Web/API/Eventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
