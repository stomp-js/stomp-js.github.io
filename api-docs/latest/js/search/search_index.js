var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.922,1,1.513]],["body/interfaces/IFrame.html",[0,0.959,1,2.843,2,1.575,3,0.39,4,0.39,5,0.336,6,1.755,7,2.242,8,0.39,9,3.496,10,0.256,11,2.88,12,3.496,13,4.235,14,3.496,15,3.496,16,2.113,17,3.496,18,3.496,19,2.113,20,2.646,21,2.104,22,0.451,23,0.856,24,1.725,25,3.496,26,0.447,27,1.167,28,3.63,29,3.168,30,4.53,31,5.11,32,4.4,33,0.881,34,0.039,35,1.57,36,1.554,37,3.009,38,1.725,39,4.235,40,2.658,41,3.496,42,3.009,43,4.235,44,4.235,45,2.355,46,3.496,47,0.57,48,2.605,49,2.605,50,1.288,51,0.524,52,4.235,53,2.605,54,0.019,55,0.026,56,0.019]],["title/interfaces/IMessage.html",[0,0.922,24,1.235]],["body/interfaces/IMessage.html",[0,0.976,1,2.407,2,1.603,3,0.397,4,0.397,5,0.342,6,1.786,8,0.397,10,0.147,11,1.603,20,2.677,21,1.901,22,0.514,23,0.975,24,2.096,25,3.538,26,0.455,27,1.418,29,1.786,33,0.775,34,0.039,36,1.467,45,2.383,47,0.774,48,2.651,50,1.303,51,0.53,54,0.02,55,0.026,56,0.02,57,2.282,58,2.383,59,2.655,60,2.677,61,1.786,62,3.538,63,4.286,64,1.114,65,3.981,66,1.848,67,1.746,68,3.919,69,4.553,70,1.565,71,3.656,72,5.146,73,4.248,74,2.862,75,3.656,76,4.286,77,4.286,78,3.212,79,2.651,80,3.212,81,3.212,82,3.212,83,2.651,84,3.212,85,2.383,86,3.212,87,2.282]],["title/interfaces/IPublishParams.html",[0,0.922,88,1.686]],["body/interfaces/IPublishParams.html",[0,1.094,1,2.105,2,1.246,3,0.309,4,0.309,5,0.266,8,0.309,10,0.114,11,2.105,16,1.795,21,1.986,22,0.584,23,1.107,24,1.718,26,0.354,27,0.991,28,3.477,29,2.99,30,2.061,32,3.811,33,0.914,34,0.039,35,1.552,36,1.404,40,2.346,41,2.97,47,0.762,50,1.404,51,0.677,54,0.015,55,0.022,56,0.015,59,1.62,61,2.721,85,2.721,87,2.556,88,2.567,89,1.774,90,1.329,91,3.598,92,2.635,93,3.598,94,1.594,95,3.622,96,4.617,97,2.97,98,3.598,99,1.466,100,3.598,101,3.598,102,3.811,103,3.598,104,2.248,105,2.97,106,3.598,107,4.039,108,3.477,109,1.56,110,2.061,111,1.774,112,1.774,113,2.061,114,2.497,115,3.598,116,2.497,117,1.774,118,3.598,119,2.061,120,2.497,121,2.497,122,1.774,123,1.774,124,2.497,125,1.774,126,1.774,127,1.774,128,1.388,129,3.598,130,2.97,131,3.598,132,2.497,133,2.497,134,2.061,135,2.497]],["title/interfaces/IRxStompPublishParams.html",[0,0.922,136,2.154]],["body/interfaces/IRxStompPublishParams.html",[0,1.165,2,1.912,3,0.474,4,0.474,5,0.408,8,0.474,10,0.239,16,2.398,22,0.512,23,0.774,26,0.543,27,1.324,33,0.615,34,0.038,40,2.919,47,0.692,51,0.474,54,0.024,55,0.03,56,0.024,59,2.163,67,1.957,88,2.919,94,1.324,99,1.957,104,3.001,105,4.543,136,3.414,137,1.725,138,1.725,139,2.723,140,3.163,141,4.805,142,3.966,143,4.805,144,1.461,145,5.503,146,4.805,147,3.91,148,4.805,149,4.805,150,3.414,151,4.805,152,4.805,153,3.832]],["title/interfaces/ITransaction.html",[0,0.922,154,2.154]],["body/interfaces/ITransaction.html",[0,1.136,2,1.864,3,0.462,4,0.462,5,0.398,6,2.077,8,0.462,19,2.359,20,2.953,22,0.398,23,0.755,26,0.529,27,1.303,33,0.833,34,0.038,35,1.429,51,0.462,54,0.023,55,0.029,56,0.023,64,1.102,66,1.885,68,3.359,69,3.903,70,1.658,85,2.629,154,3.359,155,3.084,156,5.836,157,3.084,158,3.084,159,3.736,160,3.736,161,3.736,162,5.746,163,5.746,164,3.406,165,4.728,166,4.728,167,3.359,168,3.903,169,3.736,170,3.736]],["title/injectables/InjectableRxStompConfig.html",[171,0.756,172,2.154]],["body/injectables/InjectableRxStompConfig.html",[3,0.426,4,0.426,5,0.368,8,0.426,10,0.241,19,2.242,22,0.479,34,0.038,38,1.83,47,0.812,50,1.519,51,0.426,54,0.021,55,0.028,56,0.021,64,1.069,67,1.405,70,1.366,144,1.049,171,1.319,172,3.192,173,1.553,174,1.156,175,2.155,176,1.553,177,1.405,178,1.83,179,1.659,180,0.228,181,2.022,182,2.808,183,3.709,184,3.192,185,3.709,186,2.242,187,2.498,188,3.192,189,3.192,190,3.192,191,3.76,192,1.83,193,5.293,194,2.242,195,4.493,196,4.369,197,4.493,198,3.192,199,3.709,200,2.498,201,4.493,202,2.641,203,4.493,204,4.493,205,3.192,206,4.493,207,4.493,208,4.493,209,4.493,210,3.709,211,1.722]],["title/injectables/InjectableRxStompRPCConfig.html",[171,0.756,212,1.686]],["body/injectables/InjectableRxStompRPCConfig.html",[3,0.488,4,0.488,5,0.42,8,0.488,10,0.223,22,0.521,34,0.038,47,0.884,50,1.617,51,0.605,54,0.024,55,0.03,56,0.024,64,0.988,67,1.606,125,2.802,126,2.802,144,1.199,171,1.386,173,1.775,174,1.322,175,2.463,176,1.775,177,1.606,178,2.265,179,1.807,180,0.18,181,2.202,192,1.992,200,2.193,211,1.968,212,3.178,213,1.775,214,3.091,215,4.038,216,4.038,217,3.475,218,3.475,219,1.968,220,1.775,221,2.802]],["title/classes/RxStompConfig.html",[180,0.138,182,1.513]],["body/classes/RxStompConfig.html",[3,0.163,4,0.163,5,0.14,8,0.163,9,1.803,10,0.259,16,2.514,18,1.803,19,1.09,20,1.364,21,1.442,22,0.233,23,0.266,26,0.186,27,0.602,33,0.809,34,0.039,35,0.602,36,1.1,40,2.171,42,1.552,45,1.215,47,0.238,51,0.163,54,0.008,55,0.013,56,0.008,58,1.215,61,2.171,64,0.441,66,1.093,70,1.317,74,1.215,94,1.57,99,0.89,104,3.146,109,1.75,128,2.171,134,2.693,137,2.301,138,2.301,144,0.664,147,2.774,177,0.536,180,0.06,181,0.983,182,1.09,187,1.814,194,1.628,198,1.552,220,0.983,222,0.486,223,2.318,224,1.329,225,2.184,226,2.184,227,1.803,228,2.176,229,2.312,230,2.312,231,2.312,232,2.312,233,2.312,234,2.312,235,2.312,236,2.312,237,2.312,238,2.312,239,2.312,240,2.312,241,2.312,242,2.312,243,1.532,244,1.315,245,2.184,246,2.184,247,3.262,248,2.184,249,2.184,250,2.774,251,2.693,252,1.315,253,2.184,254,1.315,255,2.184,256,2.408,257,2.801,258,1.803,259,1.803,260,2.184,261,2.184,262,2.184,263,2.184,264,2.184,265,2.184,266,1.09,267,1.552,268,1.803,269,4.622,270,1.803,271,1.315,272,1.803,273,2.184,274,2.184,275,1.803,276,3.262,277,3.262,278,2.774,279,1.315,280,2.184,281,3.262,282,2.184,283,2.184,284,2.184,285,2.184,286,2.693,287,1.803,288,2.184,289,2.184,290,2.184,291,1.803,292,1.803,293,1.803,294,1.315,295,3.262,296,1.215,297,2.184,298,1.315,299,2.184,300,1.803,301,1.086,302,1.803,303,3.077,304,1.315,305,2.184,306,3.262,307,3.262,308,3.904,309,3.904,310,3.904,311,2.184,312,1.315,313,3.262,314,1.803,315,1.315,316,2.184,317,1.803,318,1.803,319,2.184,320,2.184,321,2.184,322,2.184,323,2.184,324,1.803,325,2.693,326,2.184,327,2.184,328,2.184,329,1.803,330,1.803,331,1.086,332,1.803,333,1.315,334,1.803,335,2.184,336,2.184,337,1.086,338,1.803,339,2.184,340,2.184,341,2.184,342,2.184,343,2.184,344,2.184,345,2.184,346,2.693,347,2.184,348,2.184,349,2.184,350,1.803,351,2.242,352,1.315,353,1.803,354,1.552,355,1.803,356,2.693,357,3.223,358,2.184,359,2.184,360,2.184,361,2.171,362,2.184,363,1.803,364,1.086,365,2.318,366,1.803,367,2.184,368,2.693,369,2.184,370,2.184,371,2.184,372,2.184,373,2.693,374,2.184,375,1.803,376,2.184,377,1.552,378,1.315,379,2.184,380,1.99,381,1.552,382,1.086,383,1.086,384,0.935,385,1.086,386,1.803,387,1.086,388,1.086,389,1.086,390,1.086,391,1.315,392,1.315,393,1.315,394,1.315,395,1.315,396,1.315,397,1.086,398,1.086]],["title/classes/RxStompRPC.html",[180,0.138,399,1.894]],["body/classes/RxStompRPC.html",[3,0.298,4,0.298,5,0.257,8,0.298,10,0.243,21,1.296,23,0.487,24,1.685,26,0.341,28,2.493,29,1.951,33,0.664,34,0.039,36,1.067,47,0.91,51,0.298,54,0.015,55,0.022,56,0.015,58,1.951,59,1.085,60,2.192,64,1.076,66,1.176,74,1.951,90,1.528,92,3.247,94,1.14,95,1.713,137,2.044,138,2.044,144,1.067,164,2.192,167,1.713,176,1.579,180,0.11,186,1.751,187,2.526,192,1.85,200,2.3,202,1.751,213,2.483,214,2.526,217,3.579,218,3.227,222,0.891,223,1.713,224,2.052,228,1.86,243,1.258,256,2.684,275,1.991,399,2.192,400,1.991,401,2.896,402,5.037,403,3.509,404,2.192,405,2.192,406,4.542,407,1.203,408,1.991,409,3.75,410,2.412,411,2.192,412,1.528,413,1.506,414,3.509,415,2.412,416,4.542,417,3.984,418,4.136,419,1.751,420,3.146,421,3.509,422,2.412,423,3.509,424,1.713,425,2.412,426,2.412,427,1.991,428,2.896,429,1.713,430,2.493,431,1.341,432,4.542,433,4.542,434,3.75,435,2.412,436,1.991,437,1.991,438,1.991,439,2.412,440,2.412,441,2.412,442,2.412,443,3.509,444,3.509,445,3.509,446,2.412,447,2.412,448,1.991,449,2.412,450,2.412,451,2.412,452,3.509,453,2.412,454,2.412,455,2.412,456,2.412,457,3.509,458,4.136,459,2.412,460,2.412,461,2.412,462,2.412,463,2.412,464,2.412,465,2.412,466,2.412,467,2.412,468,2.412]],["title/classes/RxStompRPCConfig.html",[180,0.138,214,1.686]],["body/classes/RxStompRPCConfig.html",[3,0.415,4,0.415,5,0.358,8,0.415,10,0.248,23,0.678,24,1.368,26,0.475,27,1.216,33,0.792,34,0.038,35,1.359,47,0.891,51,0.546,54,0.021,55,0.027,56,0.021,64,1.15,66,1.652,94,1.443,99,1.798,137,2.219,138,2.219,144,1.021,176,1.511,177,1.368,180,0.153,187,2.912,192,2.319,213,2.449,214,2.454,222,1.24,224,2.008,228,2.063,243,1.342,404,2.097,412,1.63,420,2.757,424,2.386,430,3.503,431,2.454,436,3.643,437,3.643,438,3.643,448,4.323,469,5.237,470,4.931,471,3.358,472,3.721,473,4.414,474,4.414,475,4.414,476,3.358,477,4.414]],["title/injectables/RxStompRPCService.html",[171,0.756,478,2.154]],["body/injectables/RxStompRPCService.html",[3,0.462,4,0.462,5,0.398,8,0.462,10,0.249,22,0.504,33,0.6,34,0.038,47,0.985,50,1.438,51,0.462,54,0.023,55,0.029,56,0.023,64,0.955,67,1.522,90,1.38,94,1.429,144,1.136,171,1.402,173,1.681,174,1.584,176,2.128,178,2.221,179,1.746,180,0.17,181,2.128,192,1.926,211,1.864,212,3.032,213,1.681,215,3.903,216,3.903,217,3.359,218,3.359,224,1.522,243,1.136,399,3.406,407,1.864,408,3.903,409,4.501,412,1.38,413,2.333,431,2.077,478,3.359,479,2.953,480,3.084,481,2.454,482,3.736,483,3.736,484,3.736]],["title/injectables/RxStompService.html",[171,0.756,481,1.365]],["body/injectables/RxStompService.html",[3,0.473,4,0.473,5,0.407,8,0.473,10,0.239,22,0.511,34,0.038,47,0.867,50,1.672,51,0.473,54,0.024,55,0.03,56,0.024,64,1.168,67,1.557,144,1.162,171,1.371,173,1.721,174,1.281,178,1.954,179,1.772,180,0.239,181,2.159,183,3.96,184,3.409,185,3.96,186,2.394,187,2.668,188,3.409,189,3.409,190,3.409,191,3.907,192,1.954,211,1.908,224,2.354,479,2.388,481,2.159,485,3.156,486,2.997]],["title/classes/Stomp.html",[10,0.138,180,0.138]],["body/classes/Stomp.html",[3,0.232,4,0.232,5,0.2,8,0.232,10,0.225,19,1.45,22,0.31,23,0.587,26,0.266,27,0.801,33,0.571,34,0.039,35,1.263,38,0.765,47,0.525,50,1.317,51,0.232,54,0.012,55,0.018,56,0.012,58,2.227,64,0.379,66,0.974,70,1.502,74,1.044,75,3.078,90,1.074,94,0.801,99,0.765,127,3.509,128,1.044,158,1.549,168,2.399,179,1.074,180,0.218,181,2.223,186,2.464,200,1.978,202,2.464,205,2.065,219,2.53,220,1.95,221,1.334,222,0.693,223,2.065,228,1.314,243,1.082,256,2.658,258,2.399,272,3.577,278,2.065,287,3.577,296,3.174,324,4.185,338,2.399,351,1.45,361,2.819,365,3.804,366,2.399,368,2.399,377,2.846,380,1.334,381,2.527,384,2.065,401,1.549,405,1.816,411,1.816,412,1.314,413,1.172,419,1.45,487,1.549,488,2.907,489,4.939,490,4.939,491,3.602,492,3.557,493,2.907,494,3.557,495,1.877,496,2.907,497,2.907,498,2.907,499,2.907,500,4.005,501,2.907,502,2.907,503,4.583,504,1.877,505,2.399,506,2.065,507,2.399,508,2.907,509,4.583,510,2.907,511,2.907,512,3.577,513,2.907,514,1.877,515,2.907,516,2.907,517,2.399,518,2.907,519,3.557,520,2.907,521,2.907,522,2.399,523,2.907,524,2.907,525,2.907,526,2.907,527,2.907,528,3.306,529,2.907,530,2.907,531,4.005,532,2.907,533,2.907,534,2.907,535,2.399,536,2.907,537,2.907,538,3.557,539,1.877,540,1.877,541,1.877,542,2.907,543,1.549,544,2.907,545,1.549,546,1.877,547,1.877,548,1.877,549,2.907,550,1.877,551,1.877,552,2.907,553,1.877,554,1.877,555,2.907,556,1.877,557,1.877]],["title/classes/StompConfig.html",[180,0.138,558,1.686]],["body/classes/StompConfig.html",[3,0.218,4,0.218,5,0.188,8,0.218,10,0.156,21,0.652,22,0.295,23,0.56,26,0.25,27,0.763,33,0.923,34,0.039,35,0.763,36,1.28,37,1.968,40,2.484,45,1.541,47,0.618,50,0.842,51,0.218,54,0.011,55,0.017,56,0.011,62,2.287,64,1.23,70,0.842,79,1.457,94,1.674,109,2.136,111,2.43,112,3.687,117,2.43,122,2.43,142,2.287,177,0.719,180,0.081,184,1.968,194,1.382,222,0.652,228,2.286,229,2.823,230,2.823,231,2.823,232,2.823,233,2.823,234,2.823,235,2.823,236,2.823,237,2.823,238,2.823,239,2.823,240,2.823,241,2.823,242,2.823,243,1.747,270,2.287,278,1.968,293,2.287,296,2.484,300,2.287,301,1.457,302,2.287,303,3.437,314,2.287,330,2.287,331,1.457,332,2.287,337,1.457,346,2.287,351,1.933,363,2.287,364,1.457,377,1.968,380,1.254,382,1.457,383,1.457,384,1.254,385,1.457,386,1.457,387,1.457,388,1.457,389,1.457,390,1.457,397,1.457,398,1.457,407,1.382,412,1.023,558,1.541,559,3.607,560,2.287,561,2.771,562,2.287,563,2.771,564,3.42,565,3.42,566,3.42,567,3.42,568,3.42,569,3.42,570,3.42,571,3.42,572,1.765,573,1.765,574,1.765,575,1.765,576,2.771,577,1.765,578,1.765,579,2.771,580,1.765,581,1.765,582,1.765,583,1.765,584,2.771,585,2.771,586,2.771,587,1.765,588,2.771,589,1.765,590,1.765,591,2.771,592,2.771,593,1.765,594,2.771,595,1.765,596,2.771,597,1.765,598,1.765,599,1.765,600,1.765,601,1.765,602,1.765,603,1.765,604,1.765,605,1.765,606,1.765,607,1.765,608,1.765,609,1.765,610,1.765,611,1.765]],["title/classes/StompHeaders.html",[36,0.922,180,0.138]],["body/classes/StompHeaders.html",[3,0.526,4,0.526,5,0.453,8,0.526,10,0.194,12,3.511,16,2.122,21,2.03,22,0.453,23,0.859,34,0.036,35,1.572,36,1.558,37,4.054,38,1.733,49,3.511,51,0.526,54,0.026,55,0.032,56,0.026,90,1.571,180,0.194,222,1.571,227,3.511,243,1.293,251,3.511,329,3.511,559,3.2,612,3.511,613,3.022,614,4.253,615,3.511,616,4.253,617,4.253,618,4.253,619,4.253,620,4.253,621,4.253,622,4.253]],["title/injectables/StompRService.html",[171,0.756,623,1.894]],["body/injectables/StompRService.html",[3,0.13,4,0.13,5,0.112,8,0.13,10,0.244,11,2.191,14,1.491,15,1.491,16,2.351,17,1.491,19,0.901,21,1.827,22,0.192,23,0.212,26,0.149,27,0.777,29,1.321,33,0.453,34,0.039,35,1.363,36,1.13,38,1.837,42,1.283,45,1.569,47,0.709,50,0.549,51,0.13,54,0.006,55,0.011,56,0.006,59,2.255,60,1.762,61,2.28,66,0.605,67,0.428,68,2.004,70,0.722,71,1.283,73,2.865,75,2.004,85,2.508,90,1.042,92,1.762,94,0.777,95,1.283,97,1.491,99,1.149,102,2.865,104,2.321,108,1.283,110,1.491,113,3.89,123,1.283,128,1.93,139,2.004,144,0.319,147,2.914,150,2.466,164,1.762,167,2.004,171,0.45,173,0.473,174,1.608,178,1.149,179,0.667,180,0.145,182,1.185,186,1.408,194,1.408,198,2.004,200,1.004,202,1.408,211,0.524,219,0.901,220,1.562,224,0.736,228,1.928,243,1.433,250,1.283,256,2.62,259,2.328,266,1.408,267,1.283,268,1.491,269,1.491,292,1.491,296,1.93,303,1.283,317,2.328,318,1.491,325,1.961,334,1.491,350,2.328,353,1.961,354,1.283,361,0.584,373,0.867,381,0.746,405,1.762,407,1.185,412,1.042,413,0.656,417,2.865,419,2.304,420,2.743,424,0.746,427,0.867,428,1.491,429,1.283,431,1.321,434,0.867,472,2.466,481,0.813,491,0.746,505,1.491,506,3.12,507,3.238,517,2.328,522,1.491,528,2.328,535,0.867,543,2.328,558,1.004,560,1.491,562,1.491,615,1.491,623,1.128,624,3.409,625,0.867,626,1.283,627,1.283,628,1.283,629,1.491,630,1.806,631,1.806,632,1.491,633,1.491,634,2.328,635,1.491,636,1.491,637,1.491,638,1.491,639,1.491,640,1.491,641,1.491,642,1.762,643,3.471,644,3.716,645,2.821,646,2.821,647,1.806,648,1.806,649,2.376,650,2.376,651,2.376,652,2.376,653,2.376,654,1.05,655,1.05,656,1.05,657,1.806,658,1.05,659,1.806,660,1.806,661,2.821,662,1.806,663,1.806,664,3.716,665,1.806,666,1.05,667,2.821,668,2.821,669,1.806,670,1.806,671,1.806,672,1.806,673,1.806,674,2.376,675,1.806,676,1.806,677,1.806,678,1.806,679,1.806,680,1.806,681,1.806,682,1.806,683,1.806,684,1.806,685,1.806,686,1.806,687,1.05,688,2.821,689,2.821,690,3.471,691,1.806,692,1.806,693,3.471,694,1.806,695,1.806,696,1.806,697,1.806,698,1.806,699,1.806,700,1.806,701,1.806,702,1.806,703,1.806,704,1.806,705,1.806,706,3.178,707,1.806,708,1.806,709,1.806,710,1.806,711,1.806,712,1.806,713,3.178,714,1.05,715,3.471,716,2.821,717,2.821,718,3.471,719,1.806,720,1.05,721,1.05,722,4.51,723,2.821,724,1.806,725,1.806,726,1.806,727,2.821,728,2.328,729,1.806,730,1.806,731,2.376,732,1.05,733,1.05,734,1.491,735,2.821,736,1.806,737,1.806,738,1.05,739,1.05,740,1.806,741,4.101,742,1.05,743,1.05,744,1.806,745,1.05,746,1.05,747,1.806,748,1.806,749,1.806,750,1.05,751,1.05,752,1.05,753,1.05,754,2.328,755,1.05,756,1.961,757,0.867,758,1.05,759,2.821,760,1.05,761,1.05,762,1.05,763,1.05,764,1.05,765,1.05,766,1.05,767,1.05,768,1.05,769,1.05,770,1.05,771,1.05,772,1.05,773,1.05,774,1.05,775,1.05,776,1.806,777,0.867,778,1.05,779,1.05,780,1.05,781,1.05,782,1.05,783,1.05,784,1.05,785,1.05,786,1.05,787,1.05,788,1.806,789,1.05,790,1.05,791,1.05,792,1.05,793,1.05,794,1.806,795,1.05,796,3.178,797,1.05,798,1.05,799,1.05,800,1.05,801,1.05,802,1.05,803,1.05,804,1.05,805,1.05,806,0.867,807,1.05,808,1.05,809,1.05,810,1.05]],["title/injectables/StompService.html",[171,0.756,642,1.894]],["body/injectables/StompService.html",[3,0.411,4,0.411,5,0.354,8,0.542,10,0.238,22,0.467,33,0.534,34,0.039,38,1.354,47,0.886,50,1.333,51,0.411,54,0.02,55,0.027,56,0.02,59,1.496,64,0.886,66,1.114,67,1.354,71,2.361,90,1.227,94,0.916,150,2.361,171,1.093,173,1.496,174,1.469,178,2.125,179,1.619,180,0.224,186,1.658,194,2.188,202,2.448,211,1.658,219,2.188,220,1.496,228,1.619,243,1.01,266,2.603,267,2.361,407,2.448,412,1.227,419,1.658,420,2.738,429,3.115,431,2.438,472,2.361,481,1.973,486,2.738,558,2.901,623,3.064,626,3.115,627,3.115,628,3.115,629,3.619,632,2.743,633,2.743,634,2.743,635,2.743,636,2.743,637,2.743,638,2.743,639,2.743,640,2.743,642,2.738,757,2.743,777,2.743,806,2.743,811,2.743,812,4.384,813,3.323,814,4.384,815,4.384,816,4.384,817,3.323,818,2.743,819,3.323,820,3.323,821,3.323,822,3.323]],["title/classes/StompSubscription.html",[180,0.138,823,2.154]],["body/classes/StompSubscription.html",[3,0.476,4,0.476,5,0.41,8,0.476,10,0.176,21,1.78,22,0.513,23,0.974,26,0.545,27,1.328,33,0.774,34,0.038,35,1.328,36,1.465,47,0.696,51,0.476,54,0.024,55,0.03,56,0.024,60,3.01,64,0.974,65,3.978,66,1.615,70,1.171,74,2.68,83,3.178,85,2.141,164,3.545,180,0.176,222,1.422,228,2.138,243,1.465,411,3.01,559,3.286,823,3.917,824,3.178,825,5.676,826,3.851,827,4.819,828,3.851,829,4.819,830,3.851]],["title/classes/Versions.html",[180,0.138,351,1.513]],["body/classes/Versions.html",[3,0.346,4,0.346,5,0.299,8,0.346,10,0.242,11,1.948,22,0.479,23,0.566,26,0.397,27,1.076,33,0.821,34,0.039,35,1.551,38,1.831,46,3.223,51,0.346,54,0.017,55,0.024,56,0.017,58,2.171,90,1.035,94,0.772,99,1.98,128,2.703,130,2.313,180,0.205,181,2.383,222,1.035,228,2.146,243,1.651,250,2.774,256,2.171,286,4.37,351,2.874,354,2.774,355,3.223,356,4.37,357,4.37,361,1.558,365,2.774,375,3.223,405,2.439,407,1.398,412,1.035,419,1.948,491,4.049,818,3.223,831,2.313,832,4.494,833,4.494,834,4.494,835,4.494,836,4.861,837,4.861,838,2.802,839,2.802,840,3.905,841,3.905,842,3.905,843,3.905,844,3.905,845,2.802,846,5.294,847,5.294,848,2.802,849,2.802,850,2.802,851,2.802,852,2.802,853,2.802,854,2.802,855,2.802,856,2.802,857,2.802,858,2.802,859,2.802]],["title/coverage.html",[860,3.403]],["body/coverage.html",[0,1.598,1,1.513,5,0.323,6,2.605,7,2.154,10,0.264,24,1.235,33,0.487,34,0.038,36,0.922,54,0.019,55,0.025,56,0.019,57,2.154,70,0.922,88,1.686,89,2.154,136,2.154,137,2.366,138,2.366,139,2.154,140,2.503,154,2.154,155,2.503,171,1.352,172,2.154,174,1.892,175,2.926,176,2.108,177,2.209,180,0.267,182,1.513,212,2.292,213,2.108,214,1.686,224,1.235,266,1.513,291,2.503,296,1.686,351,1.513,361,1.686,399,1.894,400,2.503,478,2.154,479,2.926,480,2.503,481,1.365,485,2.503,486,1.894,487,2.503,512,2.503,558,1.686,559,2.926,612,2.503,623,1.894,624,2.154,625,2.503,642,1.894,811,2.503,823,2.154,824,2.503,831,2.503,860,2.503,861,3.032,862,3.032,863,6.112,864,5.423,865,3.032,866,3.032,867,3.032,868,2.503,869,4.123,870,4.123,871,4.123,872,3.032,873,4.684,874,4.684,875,3.032,876,3.032,877,3.032,878,3.032,879,3.032,880,3.032,881,3.032,882,4.123,883,3.032,884,3.032,885,3.032]],["title/dependencies.html",[886,2.539,887,3.007]],["body/dependencies.html",[34,0.036,54,0.03,55,0.034,56,0.03,887,3.968,888,4.807,889,4.807]],["title/miscellaneous/enumerations.html",[890,1.034,891,3.007]],["body/miscellaneous/enumerations.html",[10,0.261,22,0.454,26,0.604,34,0.032,54,0.026,55,0.032,56,0.026,137,1.919,138,1.919,144,1.297,174,1.429,178,2.09,179,1.575,180,0.195,219,2.128,224,1.737,266,2.128,404,2.664,506,3.03,545,4.235,624,3.03,626,3.03,627,3.03,628,3.03,754,4.543,756,4.235,890,1.737,891,3.52,892,3.03,893,5.711,894,4.265,895,5.131,896,4.265,897,4.265,898,4.265,899,5.131,900,4.265,901,4.265]],["title/miscellaneous/functions.html",[613,2.588,890,1.034]],["body/miscellaneous/functions.html",[10,0.248,22,0.44,26,0.585,34,0.035,54,0.025,55,0.031,56,0.025,64,0.835,70,1.651,90,1.527,94,1.139,157,3.413,174,1.386,178,1.684,179,1.527,182,2.063,188,2.937,189,2.937,190,2.937,191,3.578,192,1.684,194,2.063,196,3.413,199,3.413,202,2.063,205,2.937,210,3.413,220,1.861,266,2.513,411,2.582,412,1.527,419,2.063,479,2.582,481,2.607,486,3.145,613,2.937,641,3.413,728,3.413,734,3.413,868,4.157,890,1.684,892,2.937,902,4.134,903,4.134,904,4.134,905,4.134,906,4.134,907,4.134,908,4.134]],["title/index.html",[26,0.429,909,2.503]],["body/index.html",[2,2.377,34,0.034,54,0.029,55,0.034,56,0.029,173,2.144,222,1.76,909,3.933,910,4.764,911,4.764,912,4.764]],["title/modules.html",[913,3.403]],["body/modules.html",[34,0.034,54,0.03,55,0.034,56,0.03,913,4.003]],["title/miscellaneous/typealiases.html",[890,1.034,914,3.642]],["body/miscellaneous/typealiases.html",[1,2.588,6,2.629,7,3.359,10,0.237,11,2.359,22,0.612,23,1.161,24,2.113,26,0.529,33,0.6,34,0.029,35,1.029,53,3.084,54,0.023,55,0.029,56,0.023,57,3.359,59,2.128,61,3.128,64,0.755,66,1.252,70,1.747,87,2.654,88,2.629,89,2.654,92,2.953,107,4.643,108,3.996,109,2.953,111,3.359,112,3.359,117,3.359,119,3.084,122,3.359,123,2.654,125,2.654,126,2.654,127,2.654,137,1.681,138,1.681,144,1.136,177,1.926,192,1.522,213,2.128,404,2.333,430,3.359,890,1.522,892,2.654,915,3.736,916,5.746,917,4.728]],["title/miscellaneous/variables.html",[890,1.034,918,3.007]],["body/miscellaneous/variables.html",[10,0.243,26,0.643,34,0.035,38,1.849,54,0.028,55,0.033,56,0.028,99,1.849,174,1.521,175,2.835,176,2.396,177,2.169,212,3.241,213,2.396,219,2.265,220,2.043,221,3.224,890,1.849,918,3.746,919,4.538]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.1",{"_index":253,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1.8",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":286,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":911,"title":{},"body":{"index.html":{}}}],["15/15",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["36/36",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":912,"title":{},"body":{"index.html":{}}}],["50",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":910,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["_mapstompstate(st",{"_index":758,"title":{},"body":{"injectables/StompRService.html":{}}}],["_repliesobservable",{"_index":441,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":435,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":439,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":162,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":614,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["accessors",{"_index":648,"title":{},"body":{"injectables/StompRService.html":{}}}],["ack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/StompRService.html":{}}}],["acknowledgement",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{}}}],["acknowledges",{"_index":709,"title":{},"body":{"injectables/StompRService.html":{}}}],["activated",{"_index":906,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activemq",{"_index":475,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":488,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["actually",{"_index":699,"title":{},"body":{"injectables/StompRService.html":{}}}],["added",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":617,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":141,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["additionally",{"_index":736,"title":{},"body":{"injectables/StompRService.html":{}}}],["advance",{"_index":197,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["alias",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":87,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":915,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":543,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["allows",{"_index":534,"title":{},"body":{"classes/Stomp.html":{}}}],["already",{"_index":728,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["alternative",{"_index":515,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":533,"title":{},"body":{"classes/Stomp.html":{}}}],["always",{"_index":730,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular's",{"_index":208,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/core",{"_index":211,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":429,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular7.html",{"_index":190,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["another",{"_index":544,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":450,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["app_initializer",{"_index":209,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["array",{"_index":841,"title":{},"body":{"classes/Versions.html":{}}}],["associated",{"_index":827,"title":{},"body":{"classes/StompSubscription.html":{}}}],["assumes",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":254,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":267,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["asynchronously",{"_index":691,"title":{},"body":{"injectables/StompRService.html":{}}}],["attempt",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["attempted",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":226,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":674,"title":{},"body":{"injectables/StompRService.html":{}}}],["automatically",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["available",{"_index":616,"title":{},"body":{"classes/StompHeaders.html":{}}}],["backward",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["beating",{"_index":779,"title":{},"body":{"injectables/StompRService.html":{}}}],["before",{"_index":246,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":229,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behaviorsubject",{"_index":713,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.closed",{"_index":808,"title":{},"body":{"injectables/StompRService.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":277,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokers",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":230,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["call",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{}}}],["call.html",{"_index":218,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callable",{"_index":524,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":259,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["calling",{"_index":158,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":227,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["carry",{"_index":688,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":258,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["caution",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":161,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":247,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["check",{"_index":290,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":180,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":222,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{}}}],["cleanup",{"_index":467,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":296,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["client#abort",{"_index":165,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":170,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#beforeconnect",{"_index":270,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":159,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":278,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":166,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":169,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":563,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":601,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":293,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":576,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":611,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":300,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":302,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":579,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@client#heartbeatincoming",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":603,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onconnect",{"_index":584,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":606,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":585,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":607,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":586,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":608,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":588,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":605,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":591,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":604,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":592,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":609,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":594,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":610,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":596,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@client#reconnectdelay",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":602,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":829,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":830,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":712,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#watchforreceipt]{@link",{"_index":803,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#websocketfactory",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":502,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":523,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["closed",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closeevent",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closing",{"_index":898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["combination",{"_index":697,"title":{},"body":{"injectables/StompRService.html":{}}}],["combined",{"_index":207,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":163,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":539,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":512,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":555,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["complaint",{"_index":698,"title":{},"body":{"injectables/StompRService.html":{}}}],["completed",{"_index":700,"title":{},"body":{"injectables/StompRService.html":{}}}],["compliant",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc/compodoc",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":431,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":773,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":786,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.headers",{"_index":792,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":781,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":783,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":785,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.ts",{"_index":177,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.ts:102",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:107",{"_index":301,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:112",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:117",{"_index":593,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":279,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:122",{"_index":581,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:127",{"_index":575,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:128",{"_index":298,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:146",{"_index":244,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:20",{"_index":471,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:21",{"_index":271,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":573,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:24",{"_index":476,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:27",{"_index":598,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:32",{"_index":599,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:34",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:37",{"_index":595,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:42",{"_index":578,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:47",{"_index":580,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:49",{"_index":294,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:52",{"_index":597,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:57",{"_index":577,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:62",{"_index":582,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:67",{"_index":574,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:72",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:77",{"_index":589,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:79",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:82",{"_index":590,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:86",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:87",{"_index":587,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:92",{"_index":572,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:97",{"_index":583,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.url",{"_index":776,"title":{},"body":{"injectables/StompRService.html":{}}}],["configuration",{"_index":194,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":777,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["configured",{"_index":905,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connect",{"_index":250,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["connected",{"_index":506,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":231,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connection",{"_index":147,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["connectobservable",{"_index":649,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.log(new",{"_index":789,"title":{},"body":{"injectables/StompRService.html":{}}}],["consolidated/.../i",{"_index":917,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../injectable",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../rx",{"_index":892,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.ts",{"_index":916,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":174,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["consolidated/rx",{"_index":137,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":487,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:32",{"_index":495,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:48",{"_index":504,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:92",{"_index":514,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":559,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":831,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":845,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":848,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":849,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:23",{"_index":839,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:31",{"_index":850,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:37",{"_index":852,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:44",{"_index":851,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":200,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":407,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":812,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(private",{"_index":442,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(public",{"_index":856,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":408,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(versions",{"_index":838,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":618,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["correlationid",{"_index":458,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["corresponding",{"_index":704,"title":{},"body":{"injectables/StompRService.html":{}}}],["corresponds",{"_index":561,"title":{},"body":{"classes/StompConfig.html":{}}}],["coverage",{"_index":860,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":619,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":411,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":157,"title":{},"body":{"interfaces/ITransaction.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":505,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":263,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["current",{"_index":716,"title":{},"body":{"injectables/StompRService.html":{}}}],["date",{"_index":790,"title":{},"body":{"injectables/StompRService.html":{}}}],["debug",{"_index":232,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":297,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declared",{"_index":844,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessagesobservable",{"_index":651,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscription",{"_index":457,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":468,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["define",{"_index":199,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":243,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["defining",{"_index":903,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependencies",{"_index":887,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":641,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["deprecated",{"_index":219,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["designed",{"_index":684,"title":{},"body":{"injectables/StompRService.html":{}}}],["destination",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["details",{"_index":187,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["disable",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["disconnect",{"_index":644,"title":{},"body":{"injectables/StompRService.html":{}}}],["disconnectheaders",{"_index":233,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnecting",{"_index":901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnection",{"_index":299,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["documentation",{"_index":291,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["documentation/rpc",{"_index":433,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["down",{"_index":148,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["dropped",{"_index":627,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["drops",{"_index":670,"title":{},"body":{"injectables/StompRService.html":{}}}],["during",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":560,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["effects",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":842,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":715,"title":{},"body":{"injectables/StompRService.html":{}}}],["enable",{"_index":295,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["enqueued",{"_index":146,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["enumerations",{"_index":891,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":497,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":747,"title":{},"body":{"injectables/StompRService.html":{}}}],["errors",{"_index":749,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":653,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":637,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["established",{"_index":723,"title":{},"body":{"injectables/StompRService.html":{}}}],["etc",{"_index":265,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["even",{"_index":669,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["exactly",{"_index":183,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["example",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":816,"title":{},"body":{"injectables/StompService.html":{}}}],["explicitly",{"_index":673,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factory",{"_index":205,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.ts",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["favor",{"_index":626,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":262,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":562,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["fields",{"_index":193,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":425,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":426,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fixed",{"_index":195,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["forcebinarywsframes",{"_index":234,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#body",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frames",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["function",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":185,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["functions",{"_index":613,"title":{"miscellaneous/functions.html":{}},"body":{"classes/StompHeaders.html":{},"miscellaneous/functions.html":{}}}],["getclient",{"_index":752,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobservable",{"_index":720,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobservable",{"_index":738,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":745,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobservable",{"_index":742,"title":{},"body":{"injectables/StompRService.html":{}}}],["gets",{"_index":663,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobservable",{"_index":732,"title":{},"body":{"injectables/StompRService.html":{}}}],["guide",{"_index":192,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":188,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":215,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](../additional",{"_index":432,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["hack",{"_index":542,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":748,"title":{},"body":{"injectables/StompRService.html":{}}}],["handled",{"_index":740,"title":{},"body":{"injectables/StompRService.html":{}}}],["handles",{"_index":632,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshake",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.ts",{"_index":612,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":622,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":465,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":464,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heart",{"_index":778,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":235,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":236,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":284,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":519,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["i.e",{"_index":255,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":164,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["identifier",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["ignore",{"_index":729,"title":{},"body":{"injectables/StompRService.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":249,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["immediately",{"_index":718,"title":{},"body":{"injectables/StompRService.html":{}}}],["impact",{"_index":248,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":401,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["important",{"_index":280,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["incoming",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":621,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":846,"title":{},"body":{"classes/Versions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["initandconnect",{"_index":645,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialization",{"_index":724,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialize",{"_index":820,"title":{},"body":{"injectables/StompService.html":{}}}],["inject",{"_index":201,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injectable",{"_index":171,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["injectablerxstompconfig",{"_index":172,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"coverage.html":{}}}],["injectablerxstomprpcconfig",{"_index":212,"title":{"injectables/InjectableRxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":173,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["injected",{"_index":204,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injection",{"_index":908,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":221,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"index.html":{}}}],["internal",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{}}}],["interval",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoke",{"_index":703,"title":{},"body":{"injectables/StompRService.html":{}}}],["invoked",{"_index":245,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ipublishparams",{"_index":88,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":136,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issue",{"_index":683,"title":{},"body":{"injectables/StompRService.html":{}}}],["itransaction",{"_index":154,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["java",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":281,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":553,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":554,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":447,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":196,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["large",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["later",{"_index":203,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leave",{"_index":677,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":620,"title":{},"body":{"classes/StompHeaders.html":{}}}],["library",{"_index":634,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["line:variable",{"_index":541,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["listed",{"_index":630,"title":{},"body":{"injectables/StompRService.html":{}}}],["locally",{"_index":660,"title":{},"body":{"injectables/StompRService.html":{}}}],["located",{"_index":508,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":282,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":237,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":490,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":416,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["manually",{"_index":819,"title":{},"body":{"injectables/StompService.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["map",{"_index":755,"title":{},"body":{"injectables/StompRService.html":{}}}],["maps",{"_index":269,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["marks",{"_index":288,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matched",{"_index":701,"title":{},"body":{"injectables/StompRService.html":{}}}],["matching",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxwebsocketchunksize",{"_index":238,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":676,"title":{},"body":{"injectables/StompRService.html":{}}}],["mechanism",{"_index":210,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":461,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":150,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["messaging",{"_index":403,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["methods",{"_index":405,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":890,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":682,"title":{},"body":{"injectables/StompRService.html":{}}}],["mode",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["modules",{"_index":913,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":525,"title":{},"body":{"classes/Stomp.html":{}}}],["mozwebsocket",{"_index":546,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["mssages",{"_index":681,"title":{},"body":{"injectables/StompRService.html":{}}}],["nack",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":412,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":659,"title":{},"body":{"injectables/StompRService.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["needed",{"_index":532,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":693,"title":{},"body":{"injectables/StompRService.html":{}}}],["new",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":496,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":678,"title":{},"body":{"injectables/StompRService.html":{}}}],["null",{"_index":494,"title":{},"body":{"classes/Stomp.html":{}}}],["number",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["object",{"_index":223,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":420,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.create",{"_index":455,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":423,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":206,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["occurs",{"_index":727,"title":{},"body":{"injectables/StompRService.html":{}}}],["once",{"_index":526,"title":{},"body":{"classes/Stomp.html":{}}}],["onconnect",{"_index":564,"title":{},"body":{"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":565,"title":{},"body":{"classes/StompConfig.html":{}}}],["one",{"_index":275,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onstomperror",{"_index":566,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":567,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":568,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":569,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":570,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":571,"title":{},"body":{"classes/StompConfig.html":{}}}],["open",{"_index":897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operation",{"_index":690,"title":{},"body":{"injectables/StompRService.html":{}}}],["optional",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":142,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":520,"title":{},"body":{"classes/Stomp.html":{}}}],["out",{"_index":689,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgoing",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":493,"title":{},"body":{"classes/Stomp.html":{}}}],["over(ws",{"_index":513,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":843,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":909,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":886,"title":{"dependencies.html":{}},"body":{}}],["packets",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["param",{"_index":796,"title":{},"body":{"injectables/StompRService.html":{}}}],["parameter",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":418,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":451,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":140,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["parsed",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["passcode",{"_index":283,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passing",{"_index":535,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["please",{"_index":186,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["point",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["possible",{"_index":545,"title":{},"body":{"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prat",{"_index":404,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["prefer",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["present",{"_index":289,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":547,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":434,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedure",{"_index":217,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["promise",{"_index":257,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":847,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":503,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":836,"title":{},"body":{"classes/Versions.html":{}}}],["provider",{"_index":904,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":734,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":228,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["publish",{"_index":139,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["publish(queuename",{"_index":657,"title":{},"body":{"injectables/StompRService.html":{}}}],["published",{"_index":151,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishing",{"_index":705,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparams",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["pubparams",{"_index":800,"title":{},"body":{"injectables/StompRService.html":{}}}],["queue",{"_index":472,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":437,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queued",{"_index":661,"title":{},"body":{"injectables/StompRService.html":{}}}],["queuename",{"_index":664,"title":{},"body":{"injectables/StompRService.html":{}}}],["queues",{"_index":667,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service",{"_index":817,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.ts",{"_index":625,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:103",{"_index":751,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:132",{"_index":656,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:143",{"_index":655,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:157",{"_index":658,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:183",{"_index":666,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:215",{"_index":687,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:219",{"_index":753,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:221",{"_index":654,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:40",{"_index":714,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:63",{"_index":721,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:76",{"_index":733,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:83",{"_index":739,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:90",{"_index":743,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:98",{"_index":746,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":474,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["random",{"_index":696,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":707,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rawheadertype",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re)connection",{"_index":726,"title":{},"body":{"injectables/StompRService.html":{}}}],["readme",{"_index":814,"title":{},"body":{"injectables/StompService.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{}}}],["receipt",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":706,"title":{},"body":{"injectables/StompRService.html":{}}}],["receipts",{"_index":744,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobservable",{"_index":652,"title":{},"body":{"injectables/StompRService.html":{}}}],["receive",{"_index":107,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["recent",{"_index":735,"title":{},"body":{"injectables/StompRService.html":{}}}],["reconnect",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["reconnectdelay",{"_index":239,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":527,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":522,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnects",{"_index":671,"title":{},"body":{"injectables/StompRService.html":{}}}],["reestablished",{"_index":152,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["reliably",{"_index":261,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remarks",{"_index":550,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":402,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":489,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":438,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["reply",{"_index":448,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":469,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":417,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["requesting",{"_index":692,"title":{},"body":{"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":498,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":501,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":260,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["response",{"_index":737,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscribe",{"_index":672,"title":{},"body":{"injectables/StompRService.html":{}}}],["result",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retryifdisconnected",{"_index":145,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":256,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["returns",{"_index":419,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["rpc",{"_index":213,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rpc(params",{"_index":414,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.ts",{"_index":480,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":482,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.ts",{"_index":400,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:25",{"_index":410,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:44",{"_index":415,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:52",{"_index":422,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver",{"_index":456,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":463,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":176,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":424,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/operators",{"_index":427,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":224,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rxstomp#configure",{"_index":225,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate",{"_index":252,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":143,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":153,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp.publish({destination",{"_index":710,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":708,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig",{"_index":182,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompconfig#websocketfactory",{"_index":276,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":775,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connectheaders",{"_index":791,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":787,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincoming",{"_index":780,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgoing",{"_index":782,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":784,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompversions",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":399,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstomprpcconfig",{"_index":214,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstomprpcservice",{"_index":478,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstompservice",{"_index":481,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory",{"_index":486,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":902,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstate",{"_index":754,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.closed",{"_index":765,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.closing",{"_index":763,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connecting",{"_index":760,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":762,"title":{},"body":{"injectables/StompRService.html":{}}}],["safely",{"_index":668,"title":{},"body":{"injectables/StompRService.html":{}}}],["same",{"_index":184,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{}}}],["samples",{"_index":815,"title":{},"body":{"injectables/StompService.html":{}}}],["see",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":167,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["sent",{"_index":615,"title":{},"body":{"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequence",{"_index":695,"title":{},"body":{"injectables/StompRService.html":{}}}],["server",{"_index":507,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["serverheadersobservable",{"_index":650,"title":{},"body":{"injectables/StompRService.html":{}}}],["service",{"_index":266,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":750,"title":{},"body":{"injectables/StompRService.html":{}}}],["setting",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":477,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":470,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":430,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":719,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simplest",{"_index":907,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skipcontentlengthheader",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":531,"title":{},"body":{"classes/Stomp.html":{}}}],["sockjs",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["soon",{"_index":662,"title":{},"body":{"injectables/StompRService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":292,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["specification",{"_index":638,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specify",{"_index":518,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":240,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["st",{"_index":759,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":287,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["state",{"_index":643,"title":{},"body":{"injectables/StompRService.html":{}}}],["state.ts",{"_index":893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["static",{"_index":491,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["status",{"_index":717,"title":{},"body":{"injectables/StompRService.html":{}}}],["step",{"_index":191,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stomp#client",{"_index":516,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":556,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":548,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":511,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":757,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.js",{"_index":633,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.over",{"_index":549,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":536,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.service",{"_index":483,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.ts",{"_index":485,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.ts",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":500,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":178,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stomp/rx",{"_index":144,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/rx",{"_index":138,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.js",{"_index":629,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":558,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":179,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stompjs.stomp",{"_index":499,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/2018/10/12/remote",{"_index":216,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/2018/11/04/ng2",{"_index":189,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/injectable",{"_index":175,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stompjs/src/rx",{"_index":479,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/stomp",{"_index":624,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/stomp.service.ts",{"_index":811,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/stomp.service.ts:25",{"_index":813,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs@8.x.x",{"_index":628,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":409,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":443,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":445,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservice",{"_index":623,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomprservice._mapstompstate(st",{"_index":768,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservice",{"_index":642,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompstate",{"_index":756,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.closed",{"_index":766,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connected",{"_index":731,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnecting",{"_index":764,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.trying",{"_index":761,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscription",{"_index":823,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":241,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["str",{"_index":788,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":406,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":421,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["streaming",{"_index":639,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["string|publishparams",{"_index":797,"title":{},"body":{"injectables/StompRService.html":{}}}],["structure",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["subject",{"_index":741,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe",{"_index":646,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe((message",{"_index":462,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribe(queuename",{"_index":665,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribing",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["subscription.ts",{"_index":824,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:12",{"_index":826,"title":{},"body":{"classes/StompSubscription.html":{}}}],["subscription.ts:17",{"_index":828,"title":{},"body":{"classes/StompSubscription.html":{}}}],["such",{"_index":149,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["suitable",{"_index":473,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":806,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":484,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish(pubparams",{"_index":801,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish({destination",{"_index":799,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":804,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":521,"title":{},"body":{"classes/Stomp.html":{}}}],["supported",{"_index":832,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":837,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":840,"title":{},"body":{"classes/Versions.html":{}}}],["tcp",{"_index":530,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":436,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":680,"title":{},"body":{"injectables/StompRService.html":{}}}],["test.destination",{"_index":711,"title":{},"body":{"injectables/StompRService.html":{}}}],["text",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["this._repliesobservable",{"_index":452,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((message",{"_index":460,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":444,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":446,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuename",{"_index":453,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompclient",{"_index":805,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.activate",{"_index":795,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.config",{"_index":821,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":793,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe(map((st",{"_index":767,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":809,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactivate",{"_index":794,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.initandconnect",{"_index":822,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":454,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destination",{"_index":466,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":440,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverheaders",{"_index":769,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state",{"_index":807,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":810,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperrors",{"_index":772,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":449,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessage",{"_index":770,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipts",{"_index":771,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":857,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map((x",{"_index":858,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuename",{"_index":802,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":285,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["time",{"_index":725,"title":{},"body":{"injectables/StompRService.html":{}}}],["todo",{"_index":160,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":264,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":156,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":155,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transport",{"_index":529,"title":{},"body":{"classes/Stomp.html":{}}}],["trigger",{"_index":722,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["try",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["trying",{"_index":900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tslint:disable",{"_index":540,"title":{},"body":{"classes/Stomp.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":914,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":798,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(config.url",{"_index":774,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(ws",{"_index":557,"title":{},"body":{"classes/Stomp.html":{}}}],["types",{"_index":600,"title":{},"body":{"classes/StompConfig.html":{}}}],["typical",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":198,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":528,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":675,"title":{},"body":{"injectables/StompRService.html":{}}}],["unique",{"_index":694,"title":{},"body":{"injectables/StompRService.html":{}}}],["unless",{"_index":631,"title":{},"body":{"injectables/StompRService.html":{}}}],["unset",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubscribe",{"_index":825,"title":{},"body":{"classes/StompSubscription.html":{}}}],["url",{"_index":272,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/event",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":220,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["useful",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":517,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["using",{"_index":202,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["utf8",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":428,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":459,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":859,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":833,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":834,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":835,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":251,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":635,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["var",{"_index":509,"title":{},"body":{"classes/Stomp.html":{}}}],["variable",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":918,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":181,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["versions",{"_index":351,"title":{"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["versions(['1.0",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions([versions.v1_0",{"_index":853,"title":{},"body":{"classes/Versions.html":{}}}],["versions.default.protocolversions",{"_index":551,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_1",{"_index":854,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":855,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":636,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["void",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["void|promise",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["waitforreceipt",{"_index":647,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":686,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":818,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watching",{"_index":702,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":268,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["websocket",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":537,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":492,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":242,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["wiring",{"_index":640,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":168,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":685,"title":{},"body":{"injectables/StompRService.html":{}}}],["working",{"_index":679,"title":{},"body":{"injectables/StompRService.html":{}}}],["ws",{"_index":538,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":273,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":510,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":552,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":274,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":413,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        body\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                                \n                                        isBinaryBody\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ack\n                                \n                                \n                                        nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                    \n                                \n                                \n                                    \n                                        ack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                    \n                                \n                                \n                                    \n                                        nack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IFrame} from './i-frame';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IFrame} from './i-frame';\nimport {IMessage} from './i-message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: Event) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-publish-params.ts\n        \n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                    IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        retryIfDisconnected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IPublishParams} from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRPCConfig.html":{"url":"injectables/InjectableRxStompRPCConfig.html","title":"injectable - InjectableRxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompRPCConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRPCConfig extends RxStompRPCConfig { }\n\n// Backward compatibility\n/**\n * Deprecated, use {@link InjectableRxStompRPCConfig} instead\n */\nexport const InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:146\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nMaps to: Client#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:21\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:49\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:128\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:107\n                            \n                        \n\n                \n                    \n                        Maps to: Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:86\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:93\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:46\n                            \n                        \n\n                \n                    \n                        Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:112\n                            \n                        \n\n                \n                    \n                        Maps to: Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:34\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: Client#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: Client#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: () => void|Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPrat of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:25\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:44\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:52\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, Observer, Subscription} from 'rxjs';\nimport {filter, first} from 'rxjs/operators';\n\nimport {UUID} from 'angular2-uuid';\n\nimport {IMessage, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport {RxStomp} from './rx-stomp';\nimport {RxStompRPCConfig, setupReplyQueueFnType} from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n *\n * Prat of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: IMessage) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:20\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:24\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Prat of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\n\nimport {RxStompRPC} from '@stomp/rx-stomp';\nimport {RxStompService} from './rx-stomp.service';\nimport {InjectableRxStompRPCConfig} from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(rxStomp: RxStompService, @Optional() stompRPCConfig?: InjectableRxStompRPCConfig) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:32\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:48\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:92\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from '../versions';\nimport {CompatClient} from './compat-client';\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.default.protocolVersions(); }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    const wsFn = typeof(ws) === 'function' ? ws : () => ws;\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:92\n                            \n                        \n\n                \n                    \n                        See Client#beforeConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:22\n                            \n                        \n\n                \n                    \n                        See Client#brokerURL.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:67\n                            \n                        \n\n                \n                    \n                        See Client#connectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:127\n                            \n                        \n\n                \n                    \n                        See Client#debug.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        See Client#disconnectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:57\n                            \n                        \n\n                \n                    \n                        See Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:42\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:47\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatOutgoing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:122\n                            \n                        \n\n                \n                    \n                        See Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:62\n                            \n                        \n\n                \n                    \n                        See Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:97\n                            \n                        \n\n                \n                    \n                        See Client#onConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDisconnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        See Client#onDisconnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onStompError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:107\n                            \n                        \n\n                \n                    \n                        See Client#onStompError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledFrame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:87\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledFrame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     messageCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:77\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledMessage.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledReceipt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:82\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledReceipt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     closeEventCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:112\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketClose.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     wsErrorCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:117\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:37\n                            \n                        \n\n                \n                    \n                        See Client#reconnectDelay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:52\n                            \n                        \n\n                \n                    \n                        See Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:27\n                            \n                        \n\n                \n                    \n                        See See Client#stompVersions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        See Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\nimport {\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType\n} from './types';\nimport {Versions} from './versions';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void|Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:221\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, mssages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: Client#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:40\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:63\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:76\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:83\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:90\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:98\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:103\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:219\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {RxStomp, RxStompConfig, RxStompState} from '@stomp/rx-stomp';\n\nimport {publishParams, Client, Message, Frame} from '@stomp/stompjs';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {StompState} from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport {StompConfig} from './stomp.config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(map((st: RxStompState): StompState => {\n      return StompRService._mapStompState(st);\n    }));\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = { };\n\n    if (typeof(config.url) === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string|publishParams, message?: string, headers: StompHeaders = {}): void {\n    if (typeof queueName === 'string') {\n      super.publish({destination: queueName as string, body: message, headers});\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, mssages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link Frame}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:12\n                            \n                        \n\n                \n                    \n                        Id associated with this subscription.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:17\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:23\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:10\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:14\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:44\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:37\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {\n  }\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map((x) => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n            \n            injectable\n            InjectableRxStompConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            injectable\n            InjectableRxStompRPCConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            variable\n            InjectableRxStompRpcConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n            \n            injectable\n            RxStompRPCService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n            \n            function\n            rxStompServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp.service.ts\n            \n            injectable\n            RxStompService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp-r.service.ts\n            \n            injectable\n            StompRService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.service.ts\n            \n            injectable\n            StompService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (36/36)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            class\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.8\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPrat of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n                            Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RxStompService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a CloseEvent\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                        IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an Event\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                        IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPrat of @stomp/rx-stomp\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InjectableRxStompRpcConfig   (consolidated/.../injectable-rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectableRxStompRpcConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : InjectableRxStompRPCConfig\n                        \n                    \n\n                \n                    \n                        Deprecated, use InjectableRxStompRPCConfig instead\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
