var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.922,1,1.513]],["body/interfaces/IFrame.html",[0,0.966,1,2.847,2,1.585,3,0.393,4,0.393,5,0.338,6,1.767,7,2.257,8,0.393,9,3.512,10,0.256,11,2.884,12,3.512,13,4.255,14,3.512,15,3.512,16,2.123,17,3.512,18,3.512,19,2.123,20,2.657,21,2.108,22,0.318,23,0.86,24,1.733,25,3.512,26,0.45,27,1.172,28,3.64,29,3.173,30,4.538,31,5.124,32,4.409,33,0.883,34,0.039,35,1.572,36,1.558,37,3.023,38,1.733,39,4.255,40,2.667,41,3.512,42,3.023,43,4.255,44,4.255,45,2.123,46,3.512,47,0.574,48,2.622,49,2.622,50,1.294,51,0.526,52,4.255,53,2.622,54,0.02,55,0.026,56,0.02]],["title/interfaces/IMessage.html",[0,0.922,24,1.235]],["body/interfaces/IMessage.html",[0,0.983,1,2.415,2,1.613,3,0.4,4,0.4,5,0.344,6,1.798,8,0.4,10,0.147,11,1.613,20,2.689,21,1.906,22,0.362,23,0.978,24,2.102,25,3.553,26,0.458,27,1.422,29,1.798,33,0.777,34,0.039,36,1.471,45,2.148,47,0.778,48,2.668,50,1.309,51,0.532,54,0.02,55,0.026,56,0.02,57,2.297,58,2.393,59,2.658,60,2.689,61,1.798,62,3.553,63,4.304,64,1.116,65,3.994,66,1.852,67,1.753,68,3.926,69,4.561,70,1.569,71,3.666,72,5.159,73,4.259,74,2.869,75,3.666,76,4.304,77,4.304,78,3.233,79,2.668,80,3.233,81,3.233,82,3.233,83,2.668,84,3.233,85,2.393,86,3.233,87,2.297]],["title/interfaces/IPublishParams.html",[0,0.922,88,1.686]],["body/interfaces/IPublishParams.html",[0,1.101,1,2.116,2,1.257,3,0.311,4,0.311,5,0.268,8,0.311,10,0.115,11,2.116,16,1.807,21,1.991,22,0.41,23,1.109,24,1.727,26,0.357,27,0.998,28,3.489,29,2.998,30,2.08,32,3.827,33,0.915,34,0.039,35,1.554,36,1.41,40,2.358,41,2.99,47,0.766,50,1.41,51,0.679,54,0.016,55,0.022,56,0.016,59,1.63,61,2.731,85,2.731,87,2.573,88,2.578,89,1.79,90,1.338,91,3.622,92,2.649,93,3.622,94,1.597,95,3.633,96,4.636,97,2.99,98,3.622,99,1.475,100,3.622,101,3.622,102,3.827,103,3.622,104,2.262,105,2.99,106,3.622,107,3.489,108,3.489,109,1.574,110,2.08,111,1.79,112,1.79,113,2.08,114,2.52,115,3.622,116,2.52,117,1.79,118,3.622,119,2.08,120,2.52,121,2.52,122,1.79,123,1.79,124,2.52,125,1.79,126,1.79,127,1.79,128,1.257,129,3.622,130,2.99,131,3.622,132,2.52,133,2.52,134,2.08,135,2.52]],["title/interfaces/IRxStompPublishParams.html",[0,0.922,136,2.154]],["body/interfaces/IRxStompPublishParams.html",[0,1.17,2,1.92,3,0.476,4,0.476,5,0.41,8,0.476,10,0.24,16,2.404,22,0.36,23,0.778,26,0.545,27,1.327,33,0.618,34,0.038,40,2.924,47,0.695,51,0.476,54,0.024,55,0.03,56,0.024,59,2.168,67,1.962,88,2.924,94,1.327,99,1.962,104,3.009,105,4.549,136,3.423,137,1.732,138,1.732,139,2.734,140,3.177,141,4.817,142,3.977,143,4.817,144,1.465,145,5.511,146,4.817,147,3.916,148,4.817,149,4.817,150,3.423,151,4.817,152,4.817,153,3.848]],["title/interfaces/ITransaction.html",[0,0.922,154,2.154]],["body/interfaces/ITransaction.html",[0,1.141,2,1.872,3,0.464,4,0.464,5,0.4,6,2.087,8,0.464,19,2.366,20,2.962,22,0.28,23,0.758,26,0.531,27,1.307,33,0.835,34,0.038,35,1.432,51,0.464,54,0.023,55,0.029,56,0.023,64,1.104,66,1.888,68,3.369,69,3.914,70,1.661,85,2.637,154,3.369,155,3.098,156,5.841,157,3.098,158,3.098,159,3.752,160,3.752,161,3.752,162,5.752,163,5.752,164,3.411,165,4.742,166,4.742,167,3.369,168,3.914,169,3.752,170,3.752]],["title/injectables/InjectableRxStompConfig.html",[171,0.756,172,2.154]],["body/injectables/InjectableRxStompConfig.html",[3,0.429,4,0.429,5,0.37,8,0.429,10,0.242,19,2.25,22,0.337,34,0.038,38,1.837,47,0.815,50,1.523,51,0.429,54,0.021,55,0.028,56,0.021,64,1.072,67,1.413,70,1.371,144,1.055,171,1.322,172,3.204,173,1.562,174,1.163,175,2.167,176,1.562,177,1.413,178,1.665,179,1.665,180,0.229,181,2.03,182,2.812,183,3.722,184,3.204,185,3.722,186,2.25,187,2.507,188,3.204,189,3.204,190,3.204,191,3.768,192,1.837,193,5.304,194,2.25,195,4.509,196,4.378,197,4.509,198,3.204,199,3.722,200,2.507,201,4.509,202,2.647,203,4.509,204,4.509,205,3.204,206,4.509,207,4.509,208,4.509,209,4.509,210,3.722,211,1.731]],["title/injectables/InjectableRxStompRPCConfig.html",[171,0.756,212,1.686]],["body/injectables/InjectableRxStompRPCConfig.html",[3,0.489,4,0.489,5,0.422,8,0.489,10,0.224,22,0.366,34,0.038,47,0.886,50,1.619,51,0.606,54,0.024,55,0.03,56,0.024,64,0.991,67,1.612,125,2.813,126,2.813,144,1.204,171,1.388,173,1.782,174,1.327,175,2.473,176,1.782,177,1.612,178,2.056,179,1.811,180,0.181,181,2.207,192,1.997,200,2.201,211,1.975,212,3.182,213,1.782,214,3.096,215,4.047,216,3.484,217,3.484,218,3.484,219,1.975,220,1.782,221,2.473]],["title/classes/RxStompConfig.html",[180,0.138,182,1.513]],["body/classes/RxStompConfig.html",[3,0.162,4,0.162,5,0.139,8,0.162,9,1.794,10,0.26,16,2.509,18,1.794,19,1.084,20,1.357,21,1.437,22,0.162,23,0.264,26,0.185,27,0.599,33,0.819,34,0.039,35,0.599,36,1.097,40,2.402,42,1.544,45,1.084,47,0.236,51,0.162,54,0.008,55,0.013,56,0.008,58,1.208,61,2.164,64,0.657,66,1.089,70,1.313,74,1.208,94,1.58,99,0.885,104,3.141,109,1.742,128,1.942,134,2.682,137,2.327,138,2.327,144,0.661,147,2.765,177,0.532,180,0.06,181,0.978,182,1.084,187,1.807,194,1.621,198,1.544,220,0.978,222,0.483,223,2.309,224,1.324,225,2.173,226,2.173,227,1.794,228,2.187,229,2.302,230,2.302,231,2.302,232,2.302,233,2.302,234,2.302,235,2.302,236,2.302,237,2.302,238,2.302,239,2.302,240,2.302,241,2.302,242,2.302,243,2.302,244,1.552,245,1.079,246,1.794,247,1.307,248,2.173,249,2.173,250,3.249,251,2.173,252,2.173,253,2.765,254,2.682,255,1.307,256,2.173,257,1.307,258,2.173,259,2.402,260,2.789,261,1.794,262,1.794,263,2.173,264,2.173,265,2.173,266,2.173,267,2.173,268,2.173,269,1.084,270,1.544,271,1.794,272,4.618,273,1.794,274,1.307,275,1.794,276,2.173,277,2.173,278,1.794,279,3.249,280,3.249,281,2.765,282,1.307,283,2.173,284,3.249,285,2.173,286,2.173,287,2.173,288,2.173,289,2.682,290,1.794,291,2.173,292,2.173,293,2.173,294,1.794,295,1.794,296,1.794,297,1.307,298,3.249,299,1.208,300,2.173,301,1.307,302,2.173,303,1.794,304,1.079,305,1.794,306,3.069,307,1.307,308,2.173,309,3.249,310,3.249,311,3.892,312,3.892,313,3.892,314,2.173,315,1.307,316,3.249,317,1.794,318,1.307,319,2.173,320,1.794,321,1.794,322,2.173,323,2.173,324,2.173,325,2.173,326,2.173,327,1.794,328,2.309,329,2.173,330,2.173,331,2.173,332,1.794,333,1.794,334,1.079,335,1.794,336,1.307,337,1.794,338,2.173,339,2.173,340,1.079,341,1.794,342,2.173,343,2.173,344,2.173,345,2.173,346,2.173,347,2.173,348,2.173,349,2.682,350,2.173,351,2.173,352,2.173,353,1.794,354,2.237,355,1.307,356,1.794,357,1.544,358,1.794,359,2.682,360,3.213,361,2.173,362,2.173,363,2.173,364,2.164,365,2.173,366,1.794,367,1.079,368,2.309,369,1.794,370,2.173,371,2.682,372,2.173,373,2.173,374,2.173,375,2.173,376,2.682,377,2.173,378,1.794,379,2.173,380,1.544,381,1.307,382,2.173,383,1.981,384,1.544,385,1.079,386,1.079,387,0.929,388,1.079,389,1.794,390,1.079,391,1.079,392,1.079,393,1.079,394,1.079,395,1.307,396,1.307,397,1.307,398,1.307,399,1.307,400,1.307,401,1.079,402,1.079]],["title/classes/RxStompRPC.html",[180,0.138,403,1.894]],["body/classes/RxStompRPC.html",[3,0.281,4,0.281,5,0.243,8,0.281,10,0.239,21,1.632,22,0.251,23,0.46,24,1.63,26,0.322,28,2.39,29,1.871,33,0.643,34,0.039,36,1.023,45,1.679,47,0.892,51,0.281,54,0.014,55,0.021,56,0.014,58,1.871,59,1.025,60,2.102,64,1.059,66,1.128,74,2.458,90,1.478,92,3.189,94,1.103,95,1.618,128,1.679,137,1.989,138,1.989,144,1.023,164,3.189,167,1.618,176,1.514,178,1.632,180,0.104,186,1.679,187,2.458,192,1.8,200,2.225,202,1.679,213,2.45,214,2.458,216,3.14,217,3.507,218,3.14,221,2.102,222,0.841,223,1.618,224,2.01,228,1.823,244,1.217,259,2.622,278,1.88,403,2.102,404,1.88,405,2.777,406,3.365,407,3.365,408,2.102,409,4.42,410,1.136,411,1.88,412,3.648,413,2.277,414,2.102,415,1.478,416,1.422,417,3.365,418,2.277,419,4.42,420,3.892,421,3.365,422,3.365,423,3.365,424,3.365,425,4.001,426,1.679,427,3.083,428,3.365,429,2.277,430,2.777,431,3.365,432,2.777,433,3.365,434,3.365,435,4.42,436,2.39,437,3.365,438,1.618,439,2.277,440,2.277,441,1.88,442,2.777,443,1.618,444,2.39,445,1.266,446,4.42,447,3.648,448,2.277,449,1.88,450,1.88,451,1.88,452,2.277,453,2.277,454,2.277,455,2.277,456,3.365,457,3.365,458,3.365,459,2.277,460,2.277,461,2.277,462,1.88,463,2.277,464,2.277,465,2.277,466,3.365,467,2.277,468,2.277,469,2.277,470,2.277,471,3.365,472,4.001,473,3.365,474,2.277,475,2.277,476,2.277,477,2.277,478,2.277,479,2.277,480,2.277,481,2.277,482,2.277]],["title/classes/RxStompRPCConfig.html",[180,0.138,214,1.686]],["body/classes/RxStompRPCConfig.html",[3,0.418,4,0.418,5,0.36,8,0.418,10,0.249,22,0.252,23,0.682,24,1.376,26,0.478,27,1.221,33,0.794,34,0.038,35,1.363,47,0.894,51,0.548,54,0.021,55,0.027,56,0.021,64,1.152,66,1.657,94,1.446,99,1.805,137,2.226,138,2.226,144,1.027,176,1.52,177,1.376,180,0.154,187,2.919,192,2.322,213,2.453,214,2.464,222,1.247,224,2.014,228,2.066,244,1.347,415,1.636,427,2.768,438,2.4,444,3.513,445,2.464,449,3.658,450,3.658,451,3.658,462,4.333,483,5.249,484,4.945,485,3.378,486,3.73,487,4.431,488,4.431,489,4.431,490,3.378,491,4.431]],["title/injectables/RxStompRPCService.html",[171,0.756,492,2.154]],["body/injectables/RxStompRPCService.html",[3,0.464,4,0.464,5,0.4,8,0.464,10,0.249,22,0.354,33,0.603,34,0.038,47,0.987,50,1.442,51,0.464,54,0.023,55,0.029,56,0.023,64,0.958,67,1.528,90,1.386,94,1.432,144,1.141,171,1.404,173,1.689,174,1.589,176,2.134,178,2.017,179,1.751,180,0.171,181,2.134,192,1.931,211,1.872,212,3.037,213,1.689,215,3.914,216,3.369,217,3.369,218,3.369,224,1.528,244,1.141,403,3.411,410,1.872,411,3.914,412,4.508,415,1.386,416,2.344,445,2.087,492,3.369,493,2.962,494,3.098,495,2.458,496,3.752,497,3.752,498,3.752]],["title/injectables/RxStompService.html",[171,0.756,495,1.365]],["body/injectables/RxStompService.html",[3,0.475,4,0.475,5,0.409,8,0.475,10,0.24,22,0.359,34,0.038,47,0.869,50,1.674,51,0.475,54,0.024,55,0.03,56,0.024,64,1.169,67,1.564,144,1.167,171,1.373,173,1.728,174,1.287,178,1.777,179,1.777,180,0.24,181,2.165,183,3.971,184,3.418,185,3.971,186,2.4,187,2.675,188,3.418,189,3.418,190,3.418,191,3.913,192,1.959,211,1.916,224,2.357,493,2.398,495,2.165,499,3.169,500,3.005]],["title/classes/Stomp.html",[10,0.138,180,0.138]],["body/classes/Stomp.html",[3,0.229,4,0.229,5,0.198,8,0.229,10,0.224,19,1.438,22,0.215,23,0.582,26,0.263,27,0.794,33,0.567,34,0.039,35,1.257,38,0.756,47,0.521,50,1.311,51,0.229,54,0.011,55,0.018,56,0.011,58,2.214,64,0.582,66,0.966,70,1.496,74,1.032,75,3.063,90,1.064,94,0.794,99,0.756,107,1.319,127,3.496,128,0.926,158,1.532,168,2.379,179,1.064,180,0.217,181,2.215,186,2.521,200,1.602,202,2.455,205,2.51,219,2.521,220,1.94,221,1.159,222,0.686,223,2.047,228,1.304,244,1.074,259,2.647,261,2.379,275,3.558,281,2.047,290,3.558,299,3.169,327,4.171,328,1.319,341,2.379,354,1.438,364,2.81,368,3.794,369,2.379,371,2.379,380,2.829,383,1.319,384,2.51,387,2.047,405,1.532,408,1.8,414,1.8,415,1.304,416,1.159,426,1.438,501,1.532,502,2.882,503,4.92,504,4.92,505,3.59,506,3.532,507,2.882,508,3.532,509,1.856,510,2.882,511,2.882,512,2.882,513,2.882,514,3.981,515,2.882,516,2.882,517,4.562,518,1.856,519,2.379,520,2.047,521,2.379,522,2.882,523,4.562,524,2.882,525,2.882,526,3.558,527,2.882,528,1.856,529,2.882,530,2.882,531,2.379,532,2.882,533,3.532,534,2.882,535,2.882,536,2.379,537,2.882,538,2.882,539,2.882,540,2.882,541,2.882,542,3.287,543,2.882,544,2.882,545,3.981,546,2.882,547,2.882,548,2.882,549,2.379,550,2.882,551,2.882,552,3.981,553,1.856,554,1.856,555,1.856,556,2.882,557,1.532,558,2.882,559,1.532,560,1.856,561,1.856,562,1.856,563,2.882,564,1.856,565,1.856,566,3.981,567,1.856,568,1.856,569,2.882,570,1.856,571,1.532,572,1.856,573,1.532,574,1.532,575,1.856,576,1.856,577,1.856]],["title/classes/StompConfig.html",[180,0.138,578,1.686]],["body/classes/StompConfig.html",[3,0.215,4,0.215,5,0.186,8,0.215,10,0.155,21,0.644,22,0.205,23,0.554,26,0.247,27,0.756,33,0.926,34,0.039,35,0.756,36,1.272,37,1.949,40,2.678,45,1.369,47,0.613,50,0.834,51,0.215,54,0.011,55,0.017,56,0.011,62,2.264,64,1.232,70,0.834,79,1.439,94,1.676,109,2.119,111,2.41,112,3.675,117,2.41,122,2.41,142,2.264,177,0.71,180,0.08,184,1.949,194,1.369,222,0.644,228,2.289,229,2.8,230,2.8,231,2.8,232,2.8,233,2.8,234,2.8,235,2.8,236,2.8,237,2.8,238,2.8,239,2.8,240,2.8,241,2.8,242,2.8,243,2.8,244,1.752,245,1.439,246,2.264,273,2.264,281,1.949,296,2.264,299,2.471,303,2.264,304,1.439,305,2.264,306,3.422,317,2.264,333,2.264,334,1.439,335,2.264,340,1.439,349,2.264,354,1.92,366,2.264,367,1.439,380,1.949,383,1.238,385,1.439,386,1.439,387,1.238,388,1.439,389,1.439,390,1.439,391,1.439,392,1.439,393,1.439,394,1.439,401,1.439,402,1.439,410,1.369,415,1.013,578,1.525,579,3.616,580,2.264,581,2.743,582,2.264,583,2.743,584,3.392,585,3.392,586,3.392,587,3.392,588,3.392,589,3.392,590,3.392,591,3.392,592,1.743,593,1.743,594,1.743,595,1.743,596,2.743,597,1.743,598,1.743,599,1.743,600,2.743,601,1.743,602,1.743,603,1.743,604,2.743,605,2.743,606,2.743,607,1.743,608,2.743,609,1.743,610,1.743,611,2.743,612,2.743,613,1.743,614,2.743,615,1.743,616,2.743,617,1.743,618,1.743,619,1.743,620,1.743,621,1.743,622,1.743,623,1.743,624,1.743,625,1.743,626,1.743,627,1.743,628,1.743,629,1.743,630,1.743,631,1.743]],["title/classes/StompHeaders.html",[36,0.922,180,0.138]],["body/classes/StompHeaders.html",[3,0.527,4,0.527,5,0.454,8,0.527,10,0.195,12,3.52,16,2.128,21,2.033,22,0.319,23,0.862,34,0.036,35,1.574,36,1.56,37,4.058,38,1.737,49,3.52,51,0.527,54,0.026,55,0.032,56,0.026,90,1.575,180,0.195,222,1.575,227,3.52,244,1.297,254,3.52,332,3.52,579,3.205,632,3.52,633,3.03,634,4.264,635,3.52,636,4.264,637,4.264,638,4.264,639,4.264,640,4.264,641,4.264,642,4.264]],["title/injectables/StompRService.html",[171,0.756,643,1.894]],["body/injectables/StompRService.html",[3,0.132,4,0.132,5,0.114,8,0.132,10,0.244,11,2.203,14,1.51,15,1.51,16,2.362,17,1.51,19,0.913,21,1.834,22,0.137,23,0.215,26,0.151,27,0.785,29,1.336,33,0.457,34,0.039,35,1.368,36,1.138,38,1.847,42,1.299,45,1.421,47,0.714,50,0.556,51,0.132,54,0.007,55,0.011,56,0.007,59,2.264,60,1.779,61,2.295,66,0.613,67,0.434,68,2.024,70,0.73,71,1.299,73,2.888,75,2.024,85,2.521,90,1.052,92,1.779,94,0.785,95,1.299,97,1.51,99,1.16,102,2.888,104,2.338,108,1.299,110,1.51,113,3.908,123,1.299,128,1.746,139,2.024,144,0.324,147,2.932,150,2.486,164,1.779,167,2.024,171,0.456,173,0.48,174,1.615,178,1.052,179,0.675,180,0.146,182,1.199,186,1.421,194,1.421,198,2.024,200,1.017,202,1.421,211,0.532,219,0.913,220,1.575,224,0.745,228,1.935,244,1.439,253,1.299,259,2.632,262,2.351,269,1.421,270,1.299,271,1.51,272,1.51,295,1.51,299,1.946,306,1.299,320,2.351,321,1.51,328,1.707,337,1.51,353,2.351,356,1.983,357,1.299,364,0.593,376,0.88,384,0.757,408,1.779,410,1.199,415,1.052,416,0.666,420,2.888,426,2.315,427,2.758,430,1.51,436,1.299,438,0.757,441,0.88,442,1.51,443,1.299,445,1.336,447,0.88,486,2.486,495,0.823,505,0.757,519,1.51,520,3.137,521,3.26,531,2.351,536,1.51,542,2.351,549,0.88,557,2.351,571,0.88,573,1.983,574,1.51,578,1.017,580,1.51,582,1.51,635,1.51,643,1.142,644,3.424,645,0.88,646,1.299,647,1.299,648,1.299,649,1.51,650,1.829,651,1.829,652,1.51,653,1.51,654,2.351,655,1.51,656,1.51,657,1.51,658,1.51,659,1.51,660,1.51,661,1.779,662,3.499,663,3.743,664,2.848,665,2.848,666,1.829,667,1.829,668,2.402,669,2.402,670,2.402,671,2.402,672,2.402,673,1.066,674,1.066,675,1.066,676,1.829,677,1.066,678,1.829,679,1.829,680,2.848,681,1.829,682,1.829,683,3.743,684,1.829,685,1.066,686,2.848,687,2.848,688,1.829,689,1.829,690,1.829,691,1.829,692,1.829,693,1.829,694,1.829,695,1.829,696,1.829,697,1.829,698,1.829,699,1.829,700,1.829,701,1.829,702,1.829,703,1.066,704,2.848,705,2.848,706,3.499,707,1.829,708,1.829,709,3.499,710,1.829,711,1.829,712,1.829,713,1.829,714,1.829,715,1.829,716,1.829,717,1.829,718,1.829,719,1.829,720,1.829,721,1.829,722,3.206,723,1.829,724,1.829,725,1.829,726,1.829,727,1.829,728,1.829,729,3.206,730,1.066,731,3.499,732,2.848,733,2.848,734,3.499,735,1.829,736,1.066,737,1.066,738,4.534,739,2.848,740,1.829,741,1.829,742,1.829,743,2.848,744,2.351,745,1.829,746,1.829,747,2.402,748,1.066,749,1.066,750,1.51,751,2.848,752,1.829,753,1.829,754,1.066,755,1.066,756,1.829,757,4.127,758,1.066,759,1.066,760,1.829,761,1.066,762,1.066,763,1.829,764,1.829,765,1.829,766,1.066,767,1.066,768,1.066,769,1.066,770,2.351,771,1.066,772,1.983,773,0.88,774,1.066,775,2.848,776,1.066,777,1.066,778,1.066,779,1.066,780,1.066,781,1.066,782,1.066,783,1.066,784,1.066,785,1.066,786,1.066,787,1.066,788,1.066,789,1.066,790,1.066,791,1.066,792,1.829,793,0.88,794,1.066,795,1.066,796,1.066,797,1.066,798,1.066,799,1.066,800,1.066,801,1.066,802,1.066,803,1.066,804,1.829,805,1.066,806,1.066,807,1.066,808,1.066,809,1.066,810,1.829,811,1.066,812,3.206,813,1.066,814,1.066,815,1.066,816,1.066,817,1.066,818,1.066,819,1.066,820,1.066,821,0.88,822,1.066,823,1.066,824,1.066,825,1.066]],["title/injectables/StompService.html",[171,0.756,661,1.894]],["body/injectables/StompService.html",[3,0.413,4,0.413,5,0.356,8,0.544,10,0.239,22,0.329,33,0.537,34,0.039,38,1.362,47,0.889,50,1.338,51,0.413,54,0.021,55,0.027,56,0.021,59,1.505,64,0.889,66,1.121,67,1.362,71,2.376,90,1.235,94,0.921,150,2.376,171,1.097,173,1.505,174,1.475,178,1.931,179,1.626,180,0.224,186,1.668,194,2.196,202,2.455,211,1.668,219,2.196,220,1.505,228,1.626,244,1.017,269,2.609,270,2.376,410,2.455,415,1.235,426,1.668,427,2.749,436,2.376,443,3.127,445,2.447,486,2.376,495,1.981,500,2.749,578,2.907,643,3.073,646,3.127,647,3.127,648,3.127,649,3.633,652,2.76,653,2.76,654,2.76,655,2.76,656,2.76,657,2.76,658,2.76,659,2.76,661,2.749,773,2.76,793,2.76,821,2.76,826,2.76,827,4.401,828,3.344,829,4.401,830,4.401,831,4.401,832,3.344,833,2.76,834,3.344,835,3.344,836,3.344,837,3.344]],["title/classes/StompSubscription.html",[180,0.138,838,2.154]],["body/classes/StompSubscription.html",[3,0.478,4,0.478,5,0.412,8,0.478,10,0.176,21,1.784,22,0.361,23,0.976,26,0.547,27,1.331,33,0.776,34,0.038,35,1.331,36,1.469,47,0.699,51,0.478,54,0.024,55,0.03,56,0.024,60,3.018,64,0.976,65,3.988,66,1.619,70,1.176,74,2.687,83,3.192,85,2.15,164,3.55,180,0.176,222,1.428,228,2.141,244,1.469,414,3.018,579,3.292,838,3.922,839,3.192,840,5.683,841,3.866,842,4.831,843,3.866,844,4.831,845,3.866]],["title/classes/Versions.html",[180,0.138,354,1.513]],["body/classes/Versions.html",[3,0.349,4,0.349,5,0.301,8,0.349,10,0.242,11,1.959,22,0.337,23,0.571,26,0.4,27,1.082,33,0.823,34,0.039,35,1.553,38,1.839,46,3.241,51,0.349,54,0.017,55,0.024,56,0.017,58,2.184,90,1.043,94,0.778,99,1.987,128,2.434,130,2.332,180,0.206,181,2.389,222,1.043,228,2.149,244,1.655,253,2.79,259,2.184,289,4.381,354,2.878,357,2.79,358,3.241,359,4.381,360,4.381,364,1.571,368,2.79,378,3.241,408,2.453,410,1.409,415,1.043,426,1.959,432,3.241,505,4.056,833,3.241,846,2.332,847,4.514,848,4.514,849,4.514,850,4.514,851,4.878,852,4.878,853,2.825,854,2.825,855,3.927,856,3.927,857,3.927,858,3.927,859,2.825,860,5.307,861,5.307,862,2.825,863,2.825,864,2.825,865,2.825,866,2.825,867,2.825,868,2.825,869,2.825,870,2.825,871,2.825,872,2.825,873,2.825]],["title/coverage.html",[874,3.403]],["body/coverage.html",[0,1.602,1,1.524,5,0.325,6,2.614,7,2.17,10,0.264,24,1.244,33,0.49,34,0.038,36,0.928,54,0.019,55,0.026,56,0.019,57,2.17,70,0.928,88,1.698,89,2.17,136,2.17,137,2.372,138,2.372,139,2.17,140,2.521,154,2.17,155,2.521,171,1.355,172,2.17,174,1.895,175,2.937,176,2.116,177,2.214,180,0.267,182,1.524,212,2.304,213,2.116,214,1.698,224,1.244,269,1.524,294,2.521,299,1.698,354,1.524,364,1.698,403,1.908,404,2.521,492,2.17,493,2.937,494,2.521,495,1.375,499,2.521,500,1.908,501,2.521,526,2.521,578,1.698,579,2.937,632,2.521,643,1.908,644,2.17,645,2.521,661,1.908,826,2.521,838,2.17,839,2.521,846,2.521,874,2.521,875,3.054,876,3.054,877,6.116,878,5.435,879,3.054,880,3.054,881,3.054,882,2.521,883,4.143,884,4.143,885,4.143,886,3.054,887,4.702,888,4.702,889,3.054,890,3.054,891,3.054,892,3.054,893,3.054,894,3.054,895,3.054,896,4.143,897,3.054,898,3.054,899,3.054]],["title/dependencies.html",[900,2.539,901,3.007]],["body/dependencies.html",[34,0.036,54,0.03,55,0.034,56,0.03,901,3.97,902,4.809,903,4.809]],["title/miscellaneous/enumerations.html",[904,1.034,905,3.007]],["body/miscellaneous/enumerations.html",[10,0.261,22,0.384,26,0.605,34,0.032,54,0.026,55,0.032,56,0.026,137,1.924,138,1.924,144,1.3,174,1.433,178,1.898,179,1.579,180,0.195,219,2.133,224,1.742,269,2.133,520,3.038,559,4.242,644,3.038,646,3.038,647,3.038,648,3.038,770,4.548,772,4.242,904,1.742,905,3.529,906,3.038,907,5.716,908,4.275,909,5.139,910,4.275,911,4.275,912,4.275,913,5.139,914,4.275,915,4.275]],["title/miscellaneous/functions.html",[633,2.588,904,1.034]],["body/miscellaneous/functions.html",[10,0.248,22,0.31,26,0.587,34,0.035,54,0.026,55,0.031,56,0.026,64,0.838,70,1.653,90,1.532,94,1.143,157,3.423,174,1.39,178,1.532,179,1.532,182,2.069,188,2.946,189,2.946,190,2.946,191,3.584,192,1.689,194,2.069,196,3.423,199,3.423,202,2.069,205,2.946,210,3.423,220,1.867,269,2.517,414,2.59,415,1.532,426,2.069,493,2.59,495,2.61,500,3.151,633,2.946,660,3.423,744,3.423,750,3.423,882,4.164,904,1.689,906,2.946,916,4.147,917,4.147,918,4.147,919,4.147,920,4.147,921,4.147,922,4.147]],["title/index.html",[26,0.429,923,2.503]],["body/index.html",[2,2.379,34,0.034,54,0.029,55,0.034,56,0.029,173,2.146,222,1.761,923,3.936,924,4.768,925,4.768,926,4.768]],["title/modules.html",[927,3.403]],["body/modules.html",[34,0.034,54,0.03,55,0.034,56,0.03,927,4.005]],["title/miscellaneous/typealiases.html",[904,1.034,928,3.642]],["body/miscellaneous/typealiases.html",[1,2.594,6,2.637,7,3.369,10,0.237,11,2.366,22,0.436,23,1.162,24,2.117,26,0.531,33,0.603,34,0.029,35,1.034,53,3.098,54,0.023,55,0.029,56,0.023,57,3.369,59,2.134,61,3.132,64,0.758,66,1.258,70,1.749,87,2.666,88,2.637,89,2.666,92,2.962,107,4.002,108,4.002,109,2.962,111,3.369,112,3.369,117,3.369,119,3.098,122,3.369,123,2.666,125,2.666,126,2.666,127,2.666,137,1.689,138,1.689,144,1.141,177,1.931,192,1.528,213,2.134,444,3.369,904,1.528,906,2.666,929,3.752,930,5.752,931,4.742]],["title/miscellaneous/variables.html",[904,1.034,932,3.007]],["body/miscellaneous/variables.html",[10,0.243,26,0.644,34,0.035,38,1.851,54,0.028,55,0.033,56,0.028,99,1.851,174,1.523,175,2.839,176,2.398,177,2.171,212,3.243,213,2.398,219,2.268,220,2.046,221,2.839,904,1.851,932,3.752,933,4.545]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.1",{"_index":256,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1.8",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":289,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":925,"title":{},"body":{"index.html":{}}}],["16/16",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["24/24",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["37/37",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["40/40",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":926,"title":{},"body":{"index.html":{}}}],["50",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":924,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["_mapstompstate(st",{"_index":774,"title":{},"body":{"injectables/StompRService.html":{}}}],["_repliesobservable",{"_index":454,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":448,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":452,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":162,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":634,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["accessors",{"_index":667,"title":{},"body":{"injectables/StompRService.html":{}}}],["ack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/StompRService.html":{}}}],["acknowledgement",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{}}}],["acknowledges",{"_index":725,"title":{},"body":{"injectables/StompRService.html":{}}}],["activated",{"_index":920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activemq",{"_index":489,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":502,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["actually",{"_index":715,"title":{},"body":{"injectables/StompRService.html":{}}}],["added",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":637,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":141,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["additionally",{"_index":752,"title":{},"body":{"injectables/StompRService.html":{}}}],["advance",{"_index":197,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["alias",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":87,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":929,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":557,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["allows",{"_index":548,"title":{},"body":{"classes/Stomp.html":{}}}],["already",{"_index":744,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["alternative",{"_index":529,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":547,"title":{},"body":{"classes/Stomp.html":{}}}],["always",{"_index":746,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular's",{"_index":208,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/core",{"_index":211,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":443,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular7.html",{"_index":190,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["another",{"_index":558,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":464,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["app_initializer",{"_index":209,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["appendmissingnullonincoming",{"_index":229,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":423,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":855,"title":{},"body":{"classes/Versions.html":{}}}],["associated",{"_index":842,"title":{},"body":{"classes/StompSubscription.html":{}}}],["assumes",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":257,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":270,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["asynchronously",{"_index":707,"title":{},"body":{"injectables/StompRService.html":{}}}],["attempt",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["attempted",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":226,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":573,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["automatically",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["available",{"_index":636,"title":{},"body":{"classes/StompHeaders.html":{}}}],["backward",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["beating",{"_index":795,"title":{},"body":{"injectables/StompRService.html":{}}}],["before",{"_index":249,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":230,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behaviorsubject",{"_index":729,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.closed",{"_index":823,"title":{},"body":{"injectables/StompRService.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":280,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokers",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":231,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["call",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{}}}],["call.html",{"_index":218,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callable",{"_index":538,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":262,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["calling",{"_index":158,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":227,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":433,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["carry",{"_index":704,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":261,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["caution",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":161,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":250,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["check",{"_index":293,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":180,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":222,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{}}}],["cleanup",{"_index":481,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":299,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["client#abort",{"_index":165,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":170,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":246,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":273,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":159,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":281,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":166,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":169,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":583,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":621,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":296,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":596,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":631,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":600,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@client#heartbeatincoming",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":623,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onconnect",{"_index":604,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":626,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":605,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":627,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":606,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":628,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":608,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":625,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":611,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":624,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":612,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":629,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":614,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":630,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":616,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@client#reconnectdelay",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":622,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":844,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":845,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":728,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#watchforreceipt]{@link",{"_index":818,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#websocketfactory",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":516,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":537,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["closed",{"_index":913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closeevent",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closing",{"_index":912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["combination",{"_index":713,"title":{},"body":{"injectables/StompRService.html":{}}}],["combined",{"_index":207,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":163,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":553,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":526,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":569,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["complaint",{"_index":714,"title":{},"body":{"injectables/StompRService.html":{}}}],["completed",{"_index":716,"title":{},"body":{"injectables/StompRService.html":{}}}],["compliant",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc/compodoc",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":445,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":789,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":802,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.headers",{"_index":808,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":797,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":799,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":801,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.ts",{"_index":177,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.ts:102",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:107",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:112",{"_index":245,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:117",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:122",{"_index":613,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:126",{"_index":282,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:127",{"_index":602,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:132",{"_index":595,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:133",{"_index":301,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:151",{"_index":247,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:20",{"_index":485,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:21",{"_index":274,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":594,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:24",{"_index":490,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:27",{"_index":618,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:32",{"_index":619,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:34",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:37",{"_index":615,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:42",{"_index":599,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:47",{"_index":601,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:49",{"_index":297,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:52",{"_index":617,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:57",{"_index":598,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:62",{"_index":592,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:67",{"_index":603,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:72",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:77",{"_index":597,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:79",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:82",{"_index":609,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:86",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:87",{"_index":610,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:92",{"_index":607,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:97",{"_index":593,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.url",{"_index":792,"title":{},"body":{"injectables/StompRService.html":{}}}],["configuration",{"_index":194,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":793,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["configured",{"_index":919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connect",{"_index":253,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["connected",{"_index":520,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":232,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connection",{"_index":147,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["connectobservable",{"_index":668,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.log(new",{"_index":805,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.warn('stomp.over",{"_index":572,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":931,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../injectable",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../rx",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.ts",{"_index":930,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":174,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["consolidated/rx",{"_index":137,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":501,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:32",{"_index":509,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:48",{"_index":518,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:92",{"_index":528,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":579,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":846,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":859,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":862,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":863,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:23",{"_index":854,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:31",{"_index":864,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:37",{"_index":866,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:44",{"_index":865,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":200,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":410,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":827,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(private",{"_index":455,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(public",{"_index":870,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":411,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(versions",{"_index":853,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":638,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["correlation",{"_index":435,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":472,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["corresponding",{"_index":720,"title":{},"body":{"injectables/StompRService.html":{}}}],["corresponds",{"_index":581,"title":{},"body":{"classes/StompConfig.html":{}}}],["coverage",{"_index":874,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":639,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":414,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":157,"title":{},"body":{"interfaces/ITransaction.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":519,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":266,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["current",{"_index":732,"title":{},"body":{"injectables/StompRService.html":{}}}],["date",{"_index":806,"title":{},"body":{"injectables/StompRService.html":{}}}],["debug",{"_index":233,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":300,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declared",{"_index":858,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessagesobservable",{"_index":670,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscription",{"_index":471,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":482,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["define",{"_index":199,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":244,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["defining",{"_index":917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependencies",{"_index":901,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":660,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["deprecated",{"_index":219,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["designed",{"_index":701,"title":{},"body":{"injectables/StompRService.html":{}}}],["destination",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["details",{"_index":187,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["disable",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["disconnect",{"_index":663,"title":{},"body":{"injectables/StompRService.html":{}}}],["disconnectheaders",{"_index":234,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnecting",{"_index":915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnection",{"_index":302,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":577,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":294,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["down",{"_index":148,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["dropped",{"_index":647,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["drops",{"_index":689,"title":{},"body":{"injectables/StompRService.html":{}}}],["during",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":580,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["effects",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":856,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":731,"title":{},"body":{"injectables/StompRService.html":{}}}],["enable",{"_index":298,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["enqueued",{"_index":146,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["enumerations",{"_index":905,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":511,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":763,"title":{},"body":{"injectables/StompRService.html":{}}}],["errors",{"_index":765,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":672,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":656,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["established",{"_index":739,"title":{},"body":{"injectables/StompRService.html":{}}}],["etc",{"_index":268,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["even",{"_index":688,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["exactly",{"_index":183,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["example",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":831,"title":{},"body":{"injectables/StompService.html":{}}}],["explicitly",{"_index":692,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factory",{"_index":205,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.ts",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["favor",{"_index":646,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":265,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":582,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["fields",{"_index":193,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":439,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":440,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fixed",{"_index":195,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["forcebinarywsframes",{"_index":235,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#body",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frames",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["function",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":185,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["functions",{"_index":633,"title":{"miscellaneous/functions.html":{}},"body":{"classes/StompHeaders.html":{},"miscellaneous/functions.html":{}}}],["generating",{"_index":434,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getclient",{"_index":768,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobservable",{"_index":736,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobservable",{"_index":754,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":761,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobservable",{"_index":758,"title":{},"body":{"injectables/StompRService.html":{}}}],["gets",{"_index":682,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobservable",{"_index":748,"title":{},"body":{"injectables/StompRService.html":{}}}],["guide",{"_index":192,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":188,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":215,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](/guide/rx",{"_index":446,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["hack",{"_index":556,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":764,"title":{},"body":{"injectables/StompRService.html":{}}}],["handled",{"_index":756,"title":{},"body":{"injectables/StompRService.html":{}}}],["handles",{"_index":652,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshake",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.ts",{"_index":632,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":642,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":473,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":479,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heart",{"_index":794,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":236,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":237,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":287,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":533,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":575,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":258,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":164,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["identifier",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["ignore",{"_index":745,"title":{},"body":{"injectables/StompRService.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":252,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["immediately",{"_index":734,"title":{},"body":{"injectables/StompRService.html":{}}}],["impact",{"_index":251,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":405,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["important",{"_index":283,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["incoming",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":641,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":860,"title":{},"body":{"classes/Versions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["initandconnect",{"_index":664,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialization",{"_index":740,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialize",{"_index":835,"title":{},"body":{"injectables/StompService.html":{}}}],["inject",{"_index":201,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injectable",{"_index":171,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["injectablerxstompconfig",{"_index":172,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"coverage.html":{}}}],["injectablerxstomprpcconfig",{"_index":212,"title":{"injectables/InjectableRxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":173,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["injected",{"_index":204,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injection",{"_index":922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":221,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"index.html":{}}}],["internal",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{}}}],["internally",{"_index":431,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["interval",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoke",{"_index":719,"title":{},"body":{"injectables/StompRService.html":{}}}],["invoked",{"_index":248,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ipublishparams",{"_index":88,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":136,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issue",{"_index":700,"title":{},"body":{"injectables/StompRService.html":{}}}],["itransaction",{"_index":154,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["java",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["js.github.io/api",{"_index":576,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":284,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":567,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":568,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":461,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":196,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["large",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["later",{"_index":203,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leave",{"_index":695,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":640,"title":{},"body":{"classes/StompHeaders.html":{}}}],["library",{"_index":654,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["line:variable",{"_index":555,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["listed",{"_index":650,"title":{},"body":{"injectables/StompRService.html":{}}}],["locally",{"_index":679,"title":{},"body":{"injectables/StompRService.html":{}}}],["located",{"_index":522,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":285,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":238,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":504,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":419,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["manually",{"_index":834,"title":{},"body":{"injectables/StompService.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["map",{"_index":771,"title":{},"body":{"injectables/StompRService.html":{}}}],["maps",{"_index":272,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["marks",{"_index":291,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matched",{"_index":717,"title":{},"body":{"injectables/StompRService.html":{}}}],["matching",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxwebsocketchunksize",{"_index":239,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":694,"title":{},"body":{"injectables/StompRService.html":{}}}],["mechanism",{"_index":210,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":476,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":150,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["messaging",{"_index":407,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["methods",{"_index":408,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":904,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":699,"title":{},"body":{"injectables/StompRService.html":{}}}],["mode",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["modules",{"_index":927,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":539,"title":{},"body":{"classes/Stomp.html":{}}}],["mozwebsocket",{"_index":560,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["mssages",{"_index":698,"title":{},"body":{"injectables/StompRService.html":{}}}],["nack",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":415,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":678,"title":{},"body":{"injectables/StompRService.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["needed",{"_index":546,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":709,"title":{},"body":{"injectables/StompRService.html":{}}}],["new",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":510,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":430,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["null",{"_index":508,"title":{},"body":{"classes/Stomp.html":{}}}],["number",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["object",{"_index":223,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":427,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.create",{"_index":469,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":437,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":206,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["occurs",{"_index":743,"title":{},"body":{"injectables/StompRService.html":{}}}],["once",{"_index":540,"title":{},"body":{"classes/Stomp.html":{}}}],["onconnect",{"_index":584,"title":{},"body":{"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":585,"title":{},"body":{"classes/StompConfig.html":{}}}],["one",{"_index":278,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onstomperror",{"_index":586,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":587,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":588,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":589,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":590,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":591,"title":{},"body":{"classes/StompConfig.html":{}}}],["open",{"_index":911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operation",{"_index":706,"title":{},"body":{"injectables/StompRService.html":{}}}],["optional",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":142,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":534,"title":{},"body":{"classes/Stomp.html":{}}}],["out",{"_index":705,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgoing",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":507,"title":{},"body":{"classes/Stomp.html":{}}}],["over(ws",{"_index":527,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":857,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":923,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":900,"title":{"dependencies.html":{}},"body":{}}],["packets",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["param",{"_index":812,"title":{},"body":{"injectables/StompRService.html":{}}}],["parameter",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":425,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":465,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":140,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["parsed",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["passcode",{"_index":286,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passing",{"_index":549,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["please",{"_index":186,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["point",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["possible",{"_index":559,"title":{},"body":{"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["present",{"_index":292,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":561,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":447,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedure",{"_index":217,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["promise",{"_index":260,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":861,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":517,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":851,"title":{},"body":{"classes/Versions.html":{}}}],["provider",{"_index":918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":750,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":228,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["publish",{"_index":139,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["publish(queuename",{"_index":676,"title":{},"body":{"injectables/StompRService.html":{}}}],["published",{"_index":151,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishing",{"_index":721,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparams",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["pubparams",{"_index":815,"title":{},"body":{"injectables/StompRService.html":{}}}],["queue",{"_index":486,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":450,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queued",{"_index":680,"title":{},"body":{"injectables/StompRService.html":{}}}],["queuename",{"_index":683,"title":{},"body":{"injectables/StompRService.html":{}}}],["queues",{"_index":686,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service",{"_index":832,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.ts",{"_index":645,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:103",{"_index":767,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:132",{"_index":675,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:143",{"_index":674,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:157",{"_index":677,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:183",{"_index":685,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:215",{"_index":703,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:219",{"_index":769,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:221",{"_index":673,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:40",{"_index":730,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:63",{"_index":737,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:76",{"_index":749,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:83",{"_index":755,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:90",{"_index":759,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:98",{"_index":762,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":488,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["random",{"_index":712,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":723,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rawheadertype",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re)connection",{"_index":742,"title":{},"body":{"injectables/StompRService.html":{}}}],["readme",{"_index":829,"title":{},"body":{"injectables/StompService.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{}}}],["receipt",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":722,"title":{},"body":{"injectables/StompRService.html":{}}}],["receipts",{"_index":760,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobservable",{"_index":671,"title":{},"body":{"injectables/StompRService.html":{}}}],["receive",{"_index":107,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["recent",{"_index":751,"title":{},"body":{"injectables/StompRService.html":{}}}],["reconnect",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnectdelay",{"_index":240,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":541,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":536,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnects",{"_index":690,"title":{},"body":{"injectables/StompRService.html":{}}}],["reestablished",{"_index":152,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["reliably",{"_index":264,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remarks",{"_index":564,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":406,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":503,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":451,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["reply",{"_index":462,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":483,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":420,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["requesting",{"_index":708,"title":{},"body":{"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":512,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":515,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":263,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["response",{"_index":753,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscribe",{"_index":691,"title":{},"body":{"injectables/StompRService.html":{}}}],["result",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retryifdisconnected",{"_index":145,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":259,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["returns",{"_index":426,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["rpc",{"_index":213,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rpc(params",{"_index":417,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.ts",{"_index":494,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":496,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.ts",{"_index":404,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:25",{"_index":413,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:46",{"_index":418,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:57",{"_index":429,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver",{"_index":470,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":478,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":176,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":438,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/operators",{"_index":441,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":224,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rxstomp#configure",{"_index":225,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate",{"_index":255,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":143,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":153,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp.publish({destination",{"_index":726,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":724,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig",{"_index":182,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompconfig#websocketfactory",{"_index":279,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":791,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connectheaders",{"_index":807,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":803,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincoming",{"_index":796,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgoing",{"_index":798,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":800,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompversions",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":403,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstomprpc#stream",{"_index":424,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":460,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":214,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstomprpcservice",{"_index":492,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstompservice",{"_index":495,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory",{"_index":500,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstate",{"_index":770,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.closed",{"_index":781,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.closing",{"_index":779,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connecting",{"_index":776,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":778,"title":{},"body":{"injectables/StompRService.html":{}}}],["safely",{"_index":687,"title":{},"body":{"injectables/StompRService.html":{}}}],["same",{"_index":184,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{}}}],["samples",{"_index":830,"title":{},"body":{"injectables/StompService.html":{}}}],["see",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":167,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["sent",{"_index":635,"title":{},"body":{"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequence",{"_index":711,"title":{},"body":{"injectables/StompRService.html":{}}}],["server",{"_index":521,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["serverheadersobservable",{"_index":669,"title":{},"body":{"injectables/StompRService.html":{}}}],["service",{"_index":269,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":766,"title":{},"body":{"injectables/StompRService.html":{}}}],["setting",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":491,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":484,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":444,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":735,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":421,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["simplest",{"_index":921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skipcontentlengthheader",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":545,"title":{},"body":{"classes/Stomp.html":{}}}],["sockjs",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["soon",{"_index":681,"title":{},"body":{"injectables/StompRService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":295,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["specification",{"_index":657,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specify",{"_index":532,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":241,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["st",{"_index":775,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":290,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["state",{"_index":662,"title":{},"body":{"injectables/StompRService.html":{}}}],["state.ts",{"_index":907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["static",{"_index":505,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["status",{"_index":733,"title":{},"body":{"injectables/StompRService.html":{}}}],["step",{"_index":191,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stomp#client",{"_index":530,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":570,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":562,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":525,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":773,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.js",{"_index":653,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.over",{"_index":563,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":550,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.service",{"_index":497,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.ts",{"_index":499,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.ts",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":514,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":178,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stomp/rx",{"_index":144,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/rx",{"_index":138,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.js",{"_index":649,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":578,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":179,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stompjs.stomp",{"_index":513,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/2018/10/12/remote",{"_index":216,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/2018/11/04/ng2",{"_index":189,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/injectable",{"_index":175,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stompjs/src/rx",{"_index":493,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/stomp",{"_index":644,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/stomp.service.ts",{"_index":826,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/stomp.service.ts:25",{"_index":828,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs@8.x.x",{"_index":648,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":412,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":456,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":458,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservice",{"_index":643,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomprservice._mapstompstate(st",{"_index":784,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservice",{"_index":661,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompstate",{"_index":772,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.closed",{"_index":782,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connected",{"_index":747,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnecting",{"_index":780,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.trying",{"_index":777,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscription",{"_index":838,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":242,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["str",{"_index":804,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":409,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":428,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["streaming",{"_index":658,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["string|publishparams",{"_index":813,"title":{},"body":{"injectables/StompRService.html":{}}}],["structure",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["subject",{"_index":757,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe",{"_index":665,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe((message",{"_index":477,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribe(queuename",{"_index":684,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribing",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["subscription.ts",{"_index":839,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:12",{"_index":841,"title":{},"body":{"classes/StompSubscription.html":{}}}],["subscription.ts:17",{"_index":843,"title":{},"body":{"classes/StompSubscription.html":{}}}],["such",{"_index":149,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["suitable",{"_index":487,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":821,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":498,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish(pubparams",{"_index":816,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish({destination",{"_index":814,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":819,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":535,"title":{},"body":{"classes/Stomp.html":{}}}],["supported",{"_index":847,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":852,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":432,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["tcp",{"_index":544,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":449,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":697,"title":{},"body":{"injectables/StompRService.html":{}}}],["test.destination",{"_index":727,"title":{},"body":{"injectables/StompRService.html":{}}}],["text",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["this._repliesobservable",{"_index":466,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((message",{"_index":475,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":457,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":459,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuename",{"_index":467,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompclient",{"_index":820,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.activate",{"_index":811,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.config",{"_index":836,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":809,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe(map((st",{"_index":783,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":824,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactivate",{"_index":810,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.initandconnect",{"_index":837,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":468,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destination",{"_index":480,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":453,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverheaders",{"_index":785,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state",{"_index":822,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":825,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperrors",{"_index":788,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":463,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessage",{"_index":786,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipts",{"_index":787,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":871,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map((x",{"_index":872,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuename",{"_index":817,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":288,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["time",{"_index":741,"title":{},"body":{"injectables/StompRService.html":{}}}],["todo",{"_index":160,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":267,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":156,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":155,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transport",{"_index":543,"title":{},"body":{"classes/Stomp.html":{}}}],["trigger",{"_index":738,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["try",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["trying",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tslint:disable",{"_index":554,"title":{},"body":{"classes/Stomp.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":928,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":571,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["typeof(config.url",{"_index":790,"title":{},"body":{"injectables/StompRService.html":{}}}],["types",{"_index":620,"title":{},"body":{"classes/StompConfig.html":{}}}],["typical",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":198,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":542,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":693,"title":{},"body":{"injectables/StompRService.html":{}}}],["unique",{"_index":710,"title":{},"body":{"injectables/StompRService.html":{}}}],["unless",{"_index":651,"title":{},"body":{"injectables/StompRService.html":{}}}],["unset",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubscribe",{"_index":840,"title":{},"body":{"classes/StompSubscription.html":{}}}],["url",{"_index":275,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/event",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":220,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["useful",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":531,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["using",{"_index":202,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["utf8",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":442,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":474,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":873,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":848,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":849,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":850,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":254,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":655,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["var",{"_index":523,"title":{},"body":{"classes/Stomp.html":{}}}],["variable",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":932,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":181,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["versions",{"_index":354,"title":{"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["versions(['1.0",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions([versions.v1_0",{"_index":867,"title":{},"body":{"classes/Versions.html":{}}}],["versions.default.protocolversions",{"_index":565,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_1",{"_index":868,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":869,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":436,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["void",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["void|promise",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["waitforreceipt",{"_index":666,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":702,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":833,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watching",{"_index":718,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":271,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["websocket",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":551,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":506,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":243,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["wiring",{"_index":659,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":168,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":574,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["working",{"_index":696,"title":{},"body":{"injectables/StompRService.html":{}}}],["wrapper",{"_index":422,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["ws",{"_index":552,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":276,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":524,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":566,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":277,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":416,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        body\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                                \n                                        isBinaryBody\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ack\n                                \n                                \n                                        nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                    \n                                \n                                \n                                    \n                                        ack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                    \n                                \n                                \n                                    \n                                        nack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IFrame} from './i-frame';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IFrame} from './i-frame';\nimport {IMessage} from './i-message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: Event) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-publish-params.ts\n        \n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                    IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        retryIfDisconnected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {IPublishParams} from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRPCConfig.html":{"url":"injectables/InjectableRxStompRPCConfig.html","title":"injectable - InjectableRxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompRPCConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRPCConfig extends RxStompRPCConfig { }\n\n// Backward compatibility\n/**\n * Deprecated, use {@link InjectableRxStompRPCConfig} instead\n */\nexport const InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:112\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:151\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nMaps to: Client#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:21\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:126\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:49\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:133\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:107\n                            \n                        \n\n                \n                    \n                        Maps to: Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:86\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:93\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:46\n                            \n                        \n\n                \n                    \n                        Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:117\n                            \n                        \n\n                \n                    \n                        Maps to: Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:34\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: Client#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: Client#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: () => void|Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:25\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:46\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:57\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, Observer, Subscription} from 'rxjs';\nimport {filter, first} from 'rxjs/operators';\n\nimport {UUID} from 'angular2-uuid';\n\nimport {IMessage, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport {RxStomp} from './rx-stomp';\nimport {RxStompRPCConfig, setupReplyQueueFnType} from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = headers['correlation-id'] || UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: IMessage) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:20\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:24\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\n\nimport {RxStompRPC} from '@stomp/rx-stomp';\nimport {RxStompService} from './rx-stomp.service';\nimport {InjectableRxStompRPCConfig} from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(rxStomp: RxStompService, @Optional() stompRPCConfig?: InjectableRxStompRPCConfig) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:32\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:48\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:92\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from '../versions';\nimport {CompatClient} from './compat-client';\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.default.protocolVersions(); }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof (ws) === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn('Stomp.over did not receive a factory, auto reconnect will not work. ' +\n        'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over');\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:62\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:97\n                            \n                        \n\n                \n                    \n                        See Client#beforeConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:22\n                            \n                        \n\n                \n                    \n                        See Client#brokerURL.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        See Client#connectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:132\n                            \n                        \n\n                \n                    \n                        See Client#debug.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:77\n                            \n                        \n\n                \n                    \n                        See Client#disconnectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:57\n                            \n                        \n\n                \n                    \n                        See Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:42\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:47\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatOutgoing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:127\n                            \n                        \n\n                \n                    \n                        See Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:67\n                            \n                        \n\n                \n                    \n                        See Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        See Client#onConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDisconnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:107\n                            \n                        \n\n                \n                    \n                        See Client#onDisconnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onStompError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:112\n                            \n                        \n\n                \n                    \n                        See Client#onStompError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledFrame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:92\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledFrame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     messageCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:82\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledMessage.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledReceipt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:87\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledReceipt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     closeEventCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:117\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketClose.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     wsErrorCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:122\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:37\n                            \n                        \n\n                \n                    \n                        See Client#reconnectDelay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:52\n                            \n                        \n\n                \n                    \n                        See Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:27\n                            \n                        \n\n                \n                    \n                        See See Client#stompVersions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        See Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\nimport {\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType\n} from './types';\nimport {Versions} from './versions';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void|Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:221\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, mssages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: Client#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:40\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:63\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:76\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:83\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:90\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:98\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:103\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:219\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {RxStomp, RxStompConfig, RxStompState} from '@stomp/rx-stomp';\n\nimport {publishParams, Client, Message, Frame} from '@stomp/stompjs';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {StompState} from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport {StompConfig} from './stomp.config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(map((st: RxStompState): StompState => {\n      return StompRService._mapStompState(st);\n    }));\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = { };\n\n    if (typeof(config.url) === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string|publishParams, message?: string, headers: StompHeaders = {}): void {\n    if (typeof queueName === 'string') {\n      super.publish({destination: queueName as string, body: message, headers});\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, mssages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link Frame}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:12\n                            \n                        \n\n                \n                    \n                        Id associated with this subscription.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:17\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:23\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:10\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:14\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:44\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:37\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {\n  }\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map((x) => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n            \n            injectable\n            InjectableRxStompConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            injectable\n            InjectableRxStompRPCConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            variable\n            InjectableRxStompRpcConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n            \n            injectable\n            RxStompRPCService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n            \n            function\n            rxStompServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp.service.ts\n            \n            injectable\n            RxStompService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp-r.service.ts\n            \n            injectable\n            StompRService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.service.ts\n            \n            injectable\n            StompService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (40/40)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            class\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.8\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n                            Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RxStompService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a CloseEvent\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                        IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an Event\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                        IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InjectableRxStompRpcConfig   (consolidated/.../injectable-rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectableRxStompRpcConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : InjectableRxStompRPCConfig\n                        \n                    \n\n                \n                    \n                        Deprecated, use InjectableRxStompRPCConfig instead\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
