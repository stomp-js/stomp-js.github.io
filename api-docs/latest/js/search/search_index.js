var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.791,1,1.547]],["body/interfaces/IFrame.html",[0,0.855,1,2.935,2,1.513,3,0.388,4,0.388,5,0.335,6,1.86,7,2.365,8,0.388,9,3.635,10,0.174,11,2.971,12,3.635,13,4.392,14,3.635,15,3.635,16,2.006,17,3.635,18,3.635,19,2.218,20,2.763,21,1.994,22,0.312,23,0.749,24,1.82,25,3.635,26,0.444,27,1.134,28,3.746,29,3.263,30,4.644,31,5.247,32,4.518,33,0.852,34,0.037,35,1.501,36,1.491,37,3.136,38,1.82,39,4.392,40,2.488,41,3.635,42,3.136,43,4.392,44,4.392,45,2.006,46,3.635,47,0.565,48,2.741,49,2.741,50,1.372,51,0.514,52,3.136,53,2.741,54,0.019,55,0.026,56,0.019]],["title/interfaces/IMessage.html",[0,0.791,24,1.27]],["body/interfaces/IMessage.html",[0,0.866,1,2.504,2,1.532,3,0.393,4,0.393,5,0.339,6,1.883,8,0.393,10,0.102,11,1.694,20,2.786,21,1.809,22,0.352,23,0.846,24,2.185,25,3.665,26,0.45,27,1.361,29,1.883,33,0.753,34,0.037,36,1.409,45,2.022,47,0.755,48,2.776,50,1.383,51,0.519,54,0.02,55,0.026,56,0.02,57,2.395,58,2.236,59,2.487,60,2.486,61,1.694,62,3.665,63,4.429,64,1.072,65,4.103,66,1.932,67,1.835,68,4.021,69,4.66,70,1.647,71,3.765,72,5.274,73,4.364,74,2.96,75,3.765,76,4.429,77,4.429,78,3.355,79,2.776,80,3.355,81,3.355,82,3.355,83,2.776,84,3.355,85,2.022,86,3.355,87,2.395]],["title/interfaces/IPublishParams.html",[0,0.791,88,1.72]],["body/interfaces/IPublishParams.html",[0,1.209,1,1.992,2,1.007,3,0.258,4,0.258,5,0.223,8,0.258,10,0.067,11,1.992,16,1.505,21,1.796,22,0.38,23,0.913,24,1.635,26,0.295,27,0.851,28,3.344,29,2.939,30,1.825,32,3.622,33,0.85,34,0.038,35,1.488,36,1.244,40,1.992,41,3.265,47,0.673,50,1.367,51,0.663,52,1.574,54,0.013,55,0.019,56,0.013,59,1.365,61,2.365,85,2.326,87,2.352,88,2.457,89,1.387,90,1.242,91,3.295,92,2.482,93,3.295,94,1.476,95,3.092,96,4.377,97,2.727,98,2.727,99,1.242,100,3.295,101,3.295,102,3.622,103,3.295,104,1.85,105,2.727,106,3.295,107,2.947,108,2.947,109,1.387,110,1.825,111,1.574,112,1.574,113,1.825,114,2.205,115,3.295,116,2.205,117,1.574,118,3.295,119,3.295,120,2.205,121,2.205,122,1.574,123,2.205,124,1.574,125,1.387,126,1.574,127,1.007,128,3.295,129,3.125,130,3.295,131,2.205,132,2.205,133,1.825,134,2.205,135,3.295,136,4.377,137,4.684,138,2.205,139,1.387,140,2.205,141,2.205,142,2.205,143,1.387,144,3.636,145,2.205,146,4.377,147,3.876,148,2.205,149,2.205,150,2.205,151,2.205,152,1.505,153,1.825,154,2.727,155,2.205,156,2.205,157,1.825,158,2.205,159,2.073,160,2.482,161,1.574,162,2.727,163,2.205,164,1.387,165,2.205,166,2.205,167,2.205,168,0.914,169,2.205,170,2.352,171,1.825,172,3.295,173,1.825,174,1.825,175,1.825,176,1.825,177,1.825,178,1.574,179,1.825,180,1.825,181,1.825]],["title/interfaces/IRxStompPublishParams.html",[0,0.791,182,2.188]],["body/interfaces/IRxStompPublishParams.html",[0,1.02,2,1.804,3,0.463,4,0.463,5,0.399,8,0.463,10,0.163,16,2.246,22,0.349,23,0.674,26,0.529,27,1.27,33,0.6,34,0.037,40,2.705,47,0.674,51,0.463,54,0.023,55,0.029,56,0.023,59,2.038,67,2.038,88,3.007,94,1.27,99,1.853,104,2.761,105,4.639,160,3.527,182,3.512,183,1.637,184,2.82,185,1.355,186,2.82,187,2.82,188,4.919,189,3.512,190,4.919,191,1.27,192,5.606,193,4.919,194,4.919,195,4.071,196,3.512,197,4.919,198,4.919,199,3.951]],["title/interfaces/ITransaction.html",[0,0.791,200,2.188]],["body/interfaces/ITransaction.html",[0,1.003,2,1.774,3,0.455,4,0.455,5,0.392,6,2.18,8,0.455,19,2.457,20,3.062,22,0.276,23,0.662,26,0.52,27,1.256,33,0.807,34,0.037,35,1.372,51,0.455,54,0.023,55,0.029,56,0.023,64,1.061,66,1.968,68,3.475,69,4.028,70,1.74,85,2.222,200,3.475,201,3.214,202,5.941,203,3.214,204,3.214,205,3.884,206,3.884,207,3.884,208,5.855,209,5.855,210,3.505,211,4.867,212,4.867,213,3.475,214,4.028,215,3.884,216,3.884]],["title/interfaces/IWatchParams.html",[0,0.791,217,2.188]],["body/interfaces/IWatchParams.html",[0,0.726,2,1.284,3,0.329,4,0.329,5,0.284,8,0.329,10,0.12,16,2.44,21,1.975,22,0.279,23,0.48,26,0.377,27,1.014,33,0.744,34,0.038,35,1.169,36,1.59,40,2.287,45,2.239,47,0.48,51,0.329,52,3.5,54,0.017,55,0.023,56,0.017,59,1.628,60,2.752,61,1.984,94,1.444,95,3.52,99,1.481,104,2.206,183,1.166,184,2.008,187,2.008,189,2.805,191,1.014,195,3.252,217,2.805,218,2.328,219,4.903,220,4.903,221,4.903,222,5.344,223,3.93,224,3.93,225,4.903,226,3.93,227,2.472,228,3.93,229,3.252,230,3.93,231,2.805,232,3.252,233,3.93,234,3.252,235,2.805,236,3.93,237,3.93,238,2.475,239,2.475,240,5.344,241,3.93,242,3.93,243,3.93,244,3.93,245,3.252,246,3.252,247,3.252,248,4.057,249,2.472,250,2.206,251,3.252,252,3.93,253,3.252,254,3.93,255,3.93,256,2.813]],["title/injectables/InjectableRxStompConfig.html",[257,0.717,258,1.72]],["body/injectables/InjectableRxStompConfig.html",[3,0.42,4,0.42,5,0.363,8,0.42,10,0.165,19,2.337,22,0.329,34,0.037,38,1.918,47,0.789,50,1.6,51,0.42,54,0.021,55,0.027,56,0.021,64,1.031,67,1.487,70,1.446,168,2.243,185,1.231,191,0.927,234,3.831,235,3.864,239,2.337,257,1.267,258,2.598,259,1.639,260,1.231,261,2.258,262,1.487,263,1.446,264,1.446,265,0.292,266,2.114,267,2.377,268,3.831,269,3.305,270,3.831,271,2.114,272,2.598,273,3.305,274,3.305,275,3.305,276,3.864,277,1.918,278,5.413,279,2.337,280,4.629,281,4.629,282,2.912,283,3.831,284,4.629,285,4.629,286,4.629,287,3.305,288,4.629,289,4.629,290,4.629,291,3.831,292,1.812]],["title/injectables/InjectableRxStompRPCConfig.html",[257,0.717,293,1.547]],["body/injectables/InjectableRxStompRPCConfig.html",[3,0.475,4,0.475,5,0.41,8,0.475,10,0.152,22,0.355,34,0.037,47,0.852,50,1.692,51,0.585,54,0.024,55,0.029,56,0.024,64,0.952,67,1.68,124,2.895,125,2.551,185,1.391,191,1.047,239,2.047,257,1.324,259,1.851,260,1.391,261,2.551,262,1.68,263,1.767,264,1.561,265,0.231,266,2.283,277,2.071,292,2.047,293,2.934,294,1.68,295,2.857,296,4.137,297,3.569,298,3.569,299,3.569,300,1.851,301,1.851,302,2.551]],["title/classes/RxStompConfig.html",[265,0.174,267,1.27]],["body/classes/RxStompConfig.html",[3,0.154,4,0.154,5,0.133,8,0.154,9,1.814,10,0.178,16,2.321,18,1.814,19,1.107,20,1.379,21,1.348,22,0.156,23,0.225,26,0.177,27,0.566,33,0.803,34,0.037,35,0.566,36,1.035,40,2.359,42,1.565,45,1.001,47,0.374,51,0.154,54,0.008,55,0.013,56,0.008,58,1.107,61,2.203,64,0.625,66,1.125,70,1.363,74,1.23,85,0.602,94,1.516,99,1.236,104,2.934,107,1.379,108,1.379,109,1.771,127,1.795,133,2.715,139,2.064,160,2.745,164,2.939,183,2.215,185,0.452,191,0.566,231,1.565,238,2.203,253,1.814,262,0.546,265,0.075,266,1.001,267,0.908,272,1.841,279,1.656,282,1.379,301,1.001,303,0.452,304,2.699,305,2.342,306,1.644,307,2.192,308,2.192,309,1.814,310,2.279,311,2.329,312,2.329,313,2.329,314,2.329,315,2.329,316,2.329,317,2.329,318,2.329,319,2.329,320,2.329,321,2.329,322,2.329,323,2.329,324,2.329,325,2.329,326,2.329,327,2.329,328,1.652,329,1.09,330,1.814,331,1.318,332,2.192,333,3.28,334,2.192,335,2.192,336,2.807,337,2.715,338,1.318,339,2.192,340,1.318,341,2.192,342,2.715,343,1.814,344,1.565,345,2.192,346,2.192,347,2.192,348,2.192,349,2.192,350,2.192,351,1.107,352,1.565,353,1.814,354,2.192,355,2.192,356,4.765,357,1.814,358,1.318,359,1.814,360,2.192,361,2.192,362,1.814,363,3.28,364,3.28,365,2.807,366,1.318,367,2.192,368,3.28,369,2.192,370,2.192,371,2.192,372,2.192,373,2.715,374,1.814,375,2.192,376,2.192,377,2.192,378,1.565,379,1.814,380,1.814,381,1.09,382,2.192,383,1.814,384,2.192,385,4.364,386,2.192,387,4.364,388,2.192,389,1.814,390,1.318,391,3.28,392,1.421,393,2.192,394,1.09,395,1.814,396,1.318,397,2.192,398,1.814,399,1.09,400,1.814,401,1.318,402,2.192,403,3.28,404,3.28,405,3.931,406,2.192,407,1.318,408,3.28,409,1.814,410,1.318,411,2.192,412,1.814,413,1.814,414,2.192,415,2.192,416,2.192,417,2.192,418,2.192,419,1.814,420,2.342,421,2.192,422,2.192,423,2.192,424,1.814,425,1.814,426,1.09,427,1.814,428,1.318,429,2.192,430,2.192,431,1.09,432,1.814,433,2.192,434,2.192,435,1.814,436,2.192,437,2.192,438,2.192,439,2.192,440,2.715,441,2.192,442,2.192,443,2.192,444,1.814,445,2.068,446,1.318,447,1.814,448,1.565,449,1.814,450,2.715,451,3.253,452,2.192,453,2.192,454,2.192,455,2.207,456,2.192,457,1.814,458,1.318,459,1.814,460,2.192,461,2.715,462,2.192,463,2.192,464,2.192,465,2.192,466,2.715,467,2.192,468,1.814,469,2.192,470,1.565,471,1.318,472,2.192,473,2.009,474,1.565,475,1.09,476,1.09,477,0.941,478,1.09,479,1.09,480,1.814,481,1.09,482,1.09,483,1.09,484,1.09,485,1.09,486,1.09,487,1.318,488,1.318,489,1.318,490,1.318,491,1.318,492,1.318,493,1.09]],["title/classes/RxStompRPC.html",[265,0.174,494,1.72]],["body/classes/RxStompRPC.html",[3,0.275,4,0.275,5,0.237,8,0.275,10,0.162,21,1.548,22,0.245,23,0.4,24,1.696,26,0.315,28,2.465,29,1.938,33,0.621,34,0.038,36,0.981,45,1.576,47,0.858,51,0.275,54,0.014,55,0.02,56,0.014,58,1.743,59,0.973,60,1.938,64,1.015,66,1.184,74,2.533,90,1.543,92,3.27,94,1.057,95,2.172,127,1.576,152,1.576,168,1.43,183,1.87,185,1.184,191,0.891,210,3.27,213,1.676,238,2.428,239,2.067,246,1.943,249,1.477,250,2.823,251,2.857,263,1.409,265,0.134,271,1.576,272,2.533,277,1.87,294,2.293,295,2.279,297,3.222,298,3.59,299,3.222,302,2.172,303,0.805,304,2.279,305,1.676,306,1.895,310,1.895,328,1.278,362,1.943,494,1.938,495,1.943,496,2.857,497,3.452,498,3.452,499,2.172,500,4.513,501,1.743,502,1.943,503,3.735,504,2.348,505,1.938,506,1.543,507,1.477,508,3.452,509,2.348,510,4.513,511,3.979,512,3.452,513,2.857,514,3.452,515,3.452,516,4.094,517,3.452,518,2.348,519,2.857,520,2.857,521,3.452,522,3.452,523,4.513,524,2.465,525,3.452,526,2.348,527,2.348,528,1.943,529,2.857,530,1.676,531,2.465,532,1.318,533,4.513,534,3.979,535,2.348,536,1.943,537,1.943,538,1.943,539,2.348,540,2.348,541,2.348,542,3.452,543,4.094,544,3.452,545,3.452,546,2.348,547,2.348,548,1.943,549,2.348,550,2.348,551,2.348,552,4.094,553,2.348,554,2.348,555,3.452,556,4.094,557,3.452,558,2.348,559,2.348,560,2.348,561,2.348,562,2.348,563,2.348,564,2.348,565,2.348,566,2.348]],["title/classes/RxStompRPCConfig.html",[265,0.174,295,1.547]],["body/classes/RxStompRPCConfig.html",[3,0.411,4,0.411,5,0.354,8,0.411,10,0.169,22,0.249,23,0.598,24,1.453,26,0.47,27,1.177,33,0.769,34,0.037,35,1.308,47,0.864,51,0.534,54,0.021,55,0.027,56,0.021,64,1.105,66,1.738,94,1.385,99,1.718,183,2.1,185,1.203,191,0.906,249,2.207,250,2.56,262,1.453,265,0.2,272,3.012,277,2.405,294,2.305,295,2.303,303,1.203,304,2.559,306,1.909,310,2.148,328,1.424,506,1.718,531,3.618,532,2.56,536,3.774,537,3.774,538,3.774,548,4.44,567,5.366,568,5.067,569,3.508,570,3.831,571,4.561,572,4.561,573,4.561,574,3.508,575,4.561]],["title/injectables/RxStompRPCService.html",[257,0.717,576,1.928]],["body/injectables/RxStompRPCService.html",[3,0.423,4,0.423,5,0.365,8,0.423,10,0.165,22,0.33,33,0.548,34,0.037,47,0.925,50,1.451,51,0.423,54,0.021,55,0.027,56,0.021,58,2.346,64,0.885,67,1.496,90,1.361,94,1.326,143,2.923,185,1.594,191,0.932,257,1.314,259,1.649,260,1.594,263,1.694,264,1.451,265,0.206,266,2.122,277,1.925,282,2.923,292,1.823,293,2.739,294,1.496,296,3.845,297,3.317,298,3.317,299,3.317,306,1.936,328,1.128,344,3.317,494,3.045,501,2.346,502,2.988,503,4.645,505,2.608,506,1.361,507,2.271,532,2.027,576,2.923,577,2.923,578,2.988,579,2.248,580,3.611,581,4.647,582,3.845,583,4.647,584,3.611,585,3.845,586,3.611]],["title/injectables/RxStompService.html",[257,0.717,579,1.27]],["body/injectables/RxStompService.html",[3,0.466,4,0.466,5,0.402,8,0.466,10,0.164,22,0.351,34,0.037,47,0.842,50,1.755,51,0.466,54,0.023,55,0.029,56,0.023,64,1.121,67,1.648,191,1.026,257,1.315,259,1.816,260,1.364,263,1.542,264,1.542,265,0.306,266,2.255,268,4.087,269,3.526,270,4.087,271,2.255,272,2.772,273,3.526,274,3.526,275,3.526,276,4.011,277,2.046,292,2.008,306,2.219,577,2.501,579,2.046,587,3.29,588,2.772]],["title/classes/Stomp.html",[10,0.093,265,0.174]],["body/classes/Stomp.html",[3,0.226,4,0.226,5,0.195,8,0.226,10,0.153,19,1.504,22,0.211,23,0.508,26,0.259,27,0.769,33,0.552,34,0.038,35,1.331,38,0.8,47,0.62,50,1.38,51,0.226,54,0.011,55,0.017,56,0.011,58,2.064,64,0.567,66,1.022,70,1.569,74,1.084,75,3.154,90,1.122,94,0.769,99,0.727,107,1.215,126,3.587,127,0.882,129,1.378,139,3.466,144,2.596,147,3.01,152,1.36,154,3.383,157,2.465,168,2.082,170,1.378,204,1.598,214,2.465,238,2.457,239,1.836,264,0.93,265,0.277,266,2.294,271,2.354,287,2.596,300,2.354,301,2.017,302,1.215,303,0.662,305,2.127,310,1.37,328,1.136,343,2.465,359,3.863,365,2.127,374,3.656,392,2.925,419,4.266,420,1.378,432,2.465,445,1.36,455,2.956,459,2.465,461,2.465,470,2.919,473,1.378,474,2.596,477,2.127,496,1.598,499,1.874,505,1.672,506,1.37,507,1.215,589,1.598,590,2.979,591,5.024,592,5.024,593,3.681,594,3.637,595,2.465,596,1.931,597,2.979,598,2.979,599,2.979,600,2.979,601,4.088,602,2.979,603,2.979,604,4.865,605,1.931,606,2.465,607,2.127,608,2.465,609,2.979,610,4.668,611,2.979,612,2.979,613,3.656,614,2.979,615,1.931,616,2.979,617,2.979,618,2.465,619,2.979,620,3.637,621,2.979,622,2.465,623,2.979,624,2.979,625,2.465,626,2.979,627,2.979,628,3.383,629,2.979,630,2.979,631,2.979,632,2.979,633,2.979,634,2.465,635,2.979,636,2.979,637,4.088,638,1.931,639,1.598,640,1.931,641,1.931,642,1.931,643,1.931,644,2.979,645,1.598,646,2.979,647,1.931,648,1.931,649,1.931,650,3.637,651,1.931,652,1.931,653,4.088,654,1.931,655,1.931,656,2.979,657,1.931,658,1.598,659,1.931,660,1.598,661,1.598,662,1.931,663,1.931,664,1.931]],["title/classes/StompConfig.html",[265,0.174,665,1.72]],["body/classes/StompConfig.html",[3,0.199,4,0.199,5,0.172,8,0.199,10,0.102,21,0.583,22,0.191,23,0.46,26,0.228,27,0.696,33,0.892,34,0.037,35,0.696,36,1.182,37,1.925,40,2.564,45,1.231,47,0.571,50,1.191,51,0.199,54,0.01,55,0.016,56,0.01,62,2.231,64,1.179,70,1.046,79,1.407,85,1.231,94,1.595,109,2.108,111,2.392,112,3.699,117,2.392,122,2.392,127,1.231,159,1.069,164,3.194,178,1.925,189,1.925,227,1.696,258,1.513,262,0.704,263,0.842,264,0.842,265,0.191,267,1.117,269,2.723,279,1.361,303,0.583,310,2.369,311,2.773,312,2.773,313,2.773,314,2.773,315,2.773,316,2.773,317,2.773,318,2.773,319,2.773,320,2.773,321,2.773,322,2.773,323,2.773,324,2.773,325,2.773,326,2.773,327,2.773,328,1.835,329,1.407,330,2.231,342,1.407,357,2.231,365,1.925,380,2.231,381,1.407,389,2.231,392,2.235,394,1.407,395,2.231,398,2.231,399,1.407,400,2.231,409,2.231,425,2.231,426,1.407,427,2.231,431,1.407,440,2.231,445,1.742,457,2.231,470,1.925,473,1.213,475,1.407,476,1.407,477,1.213,478,1.407,479,1.407,480,1.407,481,1.407,482,1.407,483,1.407,484,1.407,485,1.407,486,1.407,493,1.407,501,1.361,506,1.437,639,1.407,665,1.513,666,3.71,667,2.696,668,2.231,669,2.696,670,2.696,671,3.351,672,3.351,673,3.351,674,3.351,675,3.351,676,3.351,677,3.351,678,3.351,679,3.351,680,1.7,681,1.7,682,1.7,683,1.7,684,1.7,685,2.696,686,1.7,687,1.7,688,1.7,689,1.7,690,2.696,691,1.7,692,1.7,693,1.7,694,1.7,695,2.696,696,2.696,697,2.696,698,2.696,699,1.7,700,2.696,701,1.7,702,1.7,703,2.696,704,2.696,705,2.696,706,1.7,707,2.696,708,1.7,709,1.7,710,1.7,711,1.7,712,1.7,713,1.7,714,1.7,715,1.7,716,1.7,717,1.7,718,1.7,719,1.7,720,1.7,721,1.7,722,1.7]],["title/classes/StompHeaders.html",[36,0.871,265,0.174]],["body/classes/StompHeaders.html",[3,0.512,4,0.512,5,0.442,8,0.512,10,0.133,12,3.618,16,1.996,21,1.921,22,0.31,23,0.745,34,0.035,35,1.498,36,1.487,37,4.144,38,1.811,49,3.618,51,0.512,54,0.026,55,0.031,56,0.026,90,1.647,265,0.249,303,1.499,309,3.618,328,1.365,337,3.618,424,3.618,666,3.292,723,3.618,724,3.121,725,4.372,726,3.618,727,4.372,728,4.372,729,4.372,730,4.372,731,4.372,732,4.372,733,4.372]],["title/injectables/StompRService.html",[257,0.717,734,1.72]],["body/injectables/StompRService.html",[3,0.134,4,0.134,5,0.115,8,0.134,10,0.167,11,2.305,14,1.609,15,1.609,16,2.227,17,1.609,19,0.982,21,1.751,22,0.138,23,0.195,26,0.153,27,0.773,29,1.424,33,0.454,34,0.038,35,1.334,36,1.107,38,1.94,42,1.388,45,1.367,47,0.7,50,0.607,51,0.134,54,0.007,55,0.011,56,0.007,59,2.141,60,1.681,61,2.161,66,0.667,67,0.473,68,2.138,70,0.792,71,1.388,73,3.023,75,2.138,85,2.137,90,1.128,92,2.112,94,0.773,95,1.596,97,1.609,99,1.128,102,3.023,104,2.188,108,1.223,110,1.609,113,4.036,127,1.668,143,1.223,152,2.185,159,2.298,160,2.692,161,1.388,164,1.223,168,1.241,186,2.397,191,0.295,196,2.929,210,1.884,213,2.138,227,1.223,229,1.609,231,1.388,232,1.609,238,2.463,239,0.982,245,3.541,247,1.609,249,0.719,250,2.562,257,0.455,259,0.522,260,1.701,263,0.935,264,0.607,265,0.191,267,1.051,271,1.367,279,1.512,282,1.884,292,0.577,300,0.888,301,1.668,306,0.732,310,2.023,328,1.523,336,1.388,344,2.138,351,1.512,352,1.388,353,1.609,356,1.609,379,1.609,383,2.478,392,1.844,412,2.478,413,1.609,420,1.811,444,2.478,447,2.1,448,1.388,455,0.641,466,0.945,474,0.816,499,1.884,501,1.281,506,1.128,507,0.719,511,3.023,519,1.609,524,1.388,528,0.945,529,1.609,530,1.388,532,1.424,534,0.945,570,2.608,579,0.805,585,2.778,593,0.816,606,1.609,607,3.258,608,3.396,618,2.478,622,1.609,628,2.478,634,0.945,645,2.478,658,1.609,660,2.1,661,1.609,665,1.091,668,1.609,726,1.609,734,1.091,735,3.541,736,0.945,737,1.388,738,1.388,739,1.388,740,1.609,741,1.944,742,1.944,743,1.609,744,1.609,745,2.138,746,1.609,747,1.609,748,1.609,749,1.609,750,1.681,751,3.897,752,2.994,753,3.357,754,2.537,755,1.944,756,2.537,757,2.537,758,2.537,759,2.537,760,2.537,761,1.142,762,1.142,763,1.142,764,1.142,765,1.142,766,1.944,767,1.944,768,2.994,769,1.944,770,1.944,771,1.142,772,1.142,773,2.994,774,2.994,775,1.944,776,1.944,777,1.944,778,1.944,779,1.944,780,1.944,781,1.944,782,1.944,783,1.944,784,1.944,785,1.944,786,1.944,787,1.142,788,1.142,789,2.994,790,2.994,791,3.652,792,1.944,793,1.944,794,3.652,795,1.944,796,1.944,797,1.944,798,1.944,799,1.944,800,1.944,801,1.944,802,1.944,803,1.944,804,1.944,805,1.944,806,1.944,807,3.652,808,1.944,809,1.944,810,1.944,811,1.944,812,1.944,813,1.944,814,3.357,815,1.142,816,3.652,817,2.994,818,2.994,819,3.652,820,1.944,821,1.142,822,1.142,823,4.681,824,1.944,825,1.944,826,2.994,827,2.478,828,1.944,829,1.944,830,2.537,831,1.142,832,1.142,833,1.609,834,2.994,835,1.944,836,1.609,837,1.944,838,1.142,839,1.142,840,1.944,841,4.279,842,1.142,843,1.142,844,1.944,845,1.142,846,1.142,847,1.944,848,1.944,849,1.142,850,1.142,851,1.142,852,1.142,853,2.478,854,1.944,855,2.1,856,0.945,857,1.142,858,3.357,859,1.142,860,1.142,861,1.142,862,1.142,863,1.142,864,1.142,865,1.142,866,1.142,867,1.142,868,1.142,869,1.142,870,1.142,871,1.142,872,1.142,873,2.537,874,1.142,875,0.945,876,1.142,877,1.142,878,1.142,879,1.142,880,1.142,881,1.142,882,1.142,883,1.142,884,1.142,885,1.142,886,1.944,887,1.142,888,1.142,889,1.142,890,1.142,891,1.142,892,1.944,893,1.142,894,1.142,895,1.142,896,1.142,897,1.142,898,1.142,899,1.142,900,1.142,901,0.945,902,1.142,903,1.142,904,1.142,905,1.142]],["title/injectables/StompService.html",[257,0.717,750,1.72]],["body/injectables/StompService.html",[3,0.408,4,0.408,5,0.352,8,0.532,10,0.163,22,0.323,33,0.529,34,0.037,38,1.445,47,0.862,50,1.419,51,0.408,54,0.02,55,0.027,56,0.02,59,1.445,64,0.865,66,1.196,67,1.445,71,2.49,90,1.314,94,0.9,152,1.593,161,2.49,168,2.094,196,2.49,250,2.55,257,1.063,259,1.593,260,1.559,263,1.672,264,1.419,265,0.288,271,1.593,279,2.294,292,1.761,300,2.075,301,1.593,310,1.712,328,1.089,351,2.703,352,2.49,501,2.552,506,1.314,524,2.49,530,3.244,532,2.55,570,2.49,579,1.883,588,2.55,665,3.005,734,2.837,737,3.244,738,3.244,739,3.244,740,3.76,743,2.886,744,2.886,745,2.49,746,2.886,747,2.886,748,2.886,749,2.886,750,2.55,856,2.886,875,2.886,901,2.886,906,2.886,907,4.544,908,3.488,909,4.544,910,4.544,911,4.544,912,3.488,913,2.886,914,3.488,915,3.488,916,3.488,917,3.488]],["title/classes/StompSubscription.html",[265,0.174,918,2.188]],["body/classes/StompSubscription.html",[3,0.466,4,0.466,5,0.402,8,0.466,10,0.121,21,1.694,22,0.351,23,0.842,26,0.533,27,1.275,33,0.75,34,0.037,35,1.275,36,1.403,47,0.678,51,0.466,54,0.023,55,0.029,56,0.023,60,2.772,64,0.94,65,4.087,66,1.694,70,1.242,74,2.772,83,3.29,85,1.816,210,3.635,248,4.781,265,0.226,303,1.364,310,2.219,328,1.542,505,2.772,666,3.379,918,4.011,919,3.29,920,3.976,921,4.939,922,3.976,923,4.939,924,3.976]],["title/classes/Versions.html",[265,0.174,445,1.399]],["body/classes/Versions.html",[3,0.348,4,0.348,5,0.3,8,0.348,10,0.165,11,2.061,22,0.331,23,0.507,26,0.398,27,1.054,33,0.798,34,0.037,35,1.485,38,1.932,46,3.378,51,0.348,54,0.017,55,0.024,56,0.017,58,2.061,90,1.12,94,0.767,99,1.891,127,2.292,129,2.121,139,2.568,152,1.864,153,4.498,238,2.061,265,0.265,266,2.482,303,1.019,310,2.233,328,1.739,336,2.914,373,4.498,445,2.706,448,2.914,449,3.378,450,4.498,451,4.498,455,1.668,468,3.378,499,2.568,501,1.5,506,1.12,520,3.378,593,4.156,913,3.378,925,2.459,926,4.662,927,4.662,928,4.662,929,4.662,930,5.019,931,5.019,932,2.972,933,2.972,934,4.082,935,4.082,936,4.082,937,4.082,938,2.972,939,5.435,940,2.972,941,2.972,942,2.972,943,2.972,944,2.972,945,2.972,946,2.972,947,2.972,948,2.972,949,2.972,950,2.972,951,2.972]],["title/coverage.html",[952,3.45]],["body/coverage.html",[0,1.428,1,1.59,5,0.318,6,2.696,7,2.248,10,0.179,24,1.305,33,0.478,34,0.037,36,0.895,54,0.018,55,0.025,56,0.018,57,2.248,70,0.983,88,1.768,89,1.981,182,2.248,183,2.292,184,3.031,185,1.764,186,2.248,187,3.031,200,2.248,201,2.606,217,2.248,218,2.606,257,1.294,258,1.768,260,1.972,261,3.022,262,2.292,265,0.338,267,1.305,293,2.144,294,1.99,295,1.59,304,2.596,306,1.186,351,1.59,378,2.248,392,1.59,445,1.438,455,1.768,494,1.768,495,2.606,576,1.981,577,3.022,578,2.606,579,1.305,587,2.606,588,1.768,589,2.606,613,2.606,665,1.768,666,3.022,723,2.606,734,1.768,735,2.248,736,2.606,750,1.768,906,2.606,918,2.248,919,2.606,925,2.606,952,2.606,953,3.149,954,3.149,955,4.246,956,4.246,957,6.214,958,4.804,959,5.53,960,3.149,961,2.606,962,3.149,963,3.149,964,4.804,965,4.804,966,3.149,967,3.149,968,3.149,969,3.149,970,3.149,971,3.149,972,3.149,973,3.149,974,4.246,975,3.149,976,3.149,977,3.149]],["title/miscellaneous/enumerations.html",[978,1.063,979,3.047]],["body/miscellaneous/enumerations.html",[10,0.174,22,0.362,26,0.561,34,0.03,54,0.025,55,0.03,56,0.025,89,2.632,144,2.987,159,2.632,162,4.217,170,4.083,171,4.547,173,4.217,174,4.217,175,4.217,176,4.547,177,3.462,178,3.638,179,3.462,180,3.462,181,3.462,183,1.733,191,1.08,260,1.435,263,1.591,264,1.306,265,0.238,300,1.91,304,2.112,306,1.576,351,2.112,607,2.987,735,2.987,737,2.987,738,2.987,739,2.987,853,4.547,855,4.217,978,1.733,979,3.462,980,4.217,981,2.987,982,5.719,983,4.183,984,4.183,985,4.183]],["title/miscellaneous/functions.html",[724,2.629,978,1.063]],["body/miscellaneous/functions.html",[10,0.169,22,0.303,26,0.571,34,0.034,54,0.025,55,0.03,56,0.025,64,0.811,70,1.73,90,1.605,94,1.1,143,2.68,152,1.945,168,1.765,203,3.526,235,3.042,260,1.461,263,1.331,264,1.331,267,1.765,273,3.042,274,3.042,275,3.042,276,3.678,277,1.765,279,2.151,283,3.526,287,3.042,291,3.526,301,1.945,351,2.601,505,2.392,506,1.605,577,2.68,579,2.441,582,3.526,588,2.892,724,3.042,827,3.526,833,3.526,961,4.264,978,1.765,981,3.042,986,4.261,987,4.261,988,4.261,989,4.261,990,4.261,991,4.261]],["title/index.html",[26,0.344,992,2.566,993,2.566]],["body/index.html",[10,0.176,23,0.843,34,0.029,54,0.023,55,0.029,56,0.023,64,0.942,98,4.45,125,2.507,168,2.049,185,1.696,191,1.277,227,2.507,257,0.933,258,2.237,263,1.244,264,1.679,267,1.651,271,1.819,293,2.012,294,1.651,295,2.012,300,1.819,303,1.929,306,1.863,378,2.845,392,2.012,435,3.297,445,2.455,494,2.776,513,3.297,576,2.507,579,1.651,588,2.237,595,4.092,625,3.297,734,2.237,745,2.845,750,2.237,994,3.985,995,3.985,996,4.945,997,5.623,998,3.985,999,3.985,1000,3.985,1001,3.985,1002,3.985,1003,3.985,1004,3.985,1005,3.985,1006,3.985,1007,3.985,1008,3.985,1009,3.985,1010,3.985,1011,3.985,1012,3.985,1013,3.985,1014,3.985,1015,3.985,1016,3.985,1017,3.985,1018,3.985,1019,5.377,1020,3.985]],["title/modules.html",[1021,3.45]],["body/modules.html",[34,0.033,54,0.029,55,0.033,56,0.029,1021,4.071]],["title/overview.html",[1022,3.45]],["body/overview.html",[2,2.211,34,0.033,54,0.028,55,0.033,56,0.028,259,2.211,303,1.661,1022,4.006,1023,5.555,1024,4.841]],["title/miscellaneous/typealiases.html",[978,1.063,1025,3.682]],["body/miscellaneous/typealiases.html",[1,2.684,6,2.732,7,3.475,10,0.162,11,2.457,22,0.422,23,0.998,24,2.202,26,0.52,33,0.59,34,0.029,35,1.003,53,3.214,54,0.023,55,0.029,56,0.023,57,3.475,59,2.017,61,2.897,64,0.74,66,1.332,70,1.828,87,2.773,88,2.732,89,2.443,92,3.062,107,3.61,108,3.61,109,3.062,111,3.475,112,3.475,117,3.475,122,3.475,124,2.773,125,2.443,126,2.773,183,1.609,191,1.003,262,2.017,277,1.609,294,2.017,304,1.961,531,3.475,836,3.214,978,1.609,980,4.845,981,2.773,1026,3.884,1027,4.867,1028,3.884]],["title/miscellaneous/variables.html",[978,1.063,1029,3.047]],["body/miscellaneous/variables.html",[10,0.165,26,0.621,34,0.034,38,1.92,54,0.027,55,0.032,56,0.027,99,1.746,185,1.858,260,1.59,261,2.916,262,2.244,293,2.987,294,2.244,300,2.116,301,2.116,302,2.916,978,1.92,1029,3.836,1030,4.635]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.1",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["10,000ms",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["100",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1024,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["44/44",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1023,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["_mapstompstate(st",{"_index":857,"title":{},"body":{"injectables/StompRService.html":{}}}],["_repliesobservable",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":208,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":725,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["accessors",{"_index":755,"title":{},"body":{"injectables/StompRService.html":{}}}],["ack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/StompRService.html":{}}}],["acknowledgement",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{}}}],["acknowledges",{"_index":810,"title":{},"body":{"injectables/StompRService.html":{}}}],["activated",{"_index":990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activation",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":573,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":590,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["actually",{"_index":800,"title":{},"body":{"injectables/StompRService.html":{}}}],["added",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":728,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":188,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["additionally",{"_index":835,"title":{},"body":{"injectables/StompRService.html":{}}}],["advance",{"_index":281,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["alias",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":87,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":1026,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":645,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["allows",{"_index":633,"title":{},"body":{"classes/Stomp.html":{}}}],["already",{"_index":827,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["alternative",{"_index":616,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":632,"title":{},"body":{"classes/Stomp.html":{}}}],["always",{"_index":829,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular",{"_index":581,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["angular's",{"_index":289,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/core",{"_index":292,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular7.html",{"_index":275,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["another",{"_index":646,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["api",{"_index":996,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":290,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["appendmissingnullonincoming",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":514,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":934,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["associated",{"_index":921,"title":{},"body":{"classes/StompSubscription.html":{}}}],["assumes",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["asynchronously",{"_index":792,"title":{},"body":{"injectables/StompRService.html":{}}}],["attempt",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["attempted",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":660,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["automatically",{"_index":231,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["available",{"_index":727,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["beating",{"_index":877,"title":{},"body":{"injectables/StompRService.html":{}}}],["before",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behaviorsubject",{"_index":814,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.closed",{"_index":903,"title":{},"body":{"injectables/StompRService.html":{}}}],["belong",{"_index":1011,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["binarytype",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokers",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["builds",{"_index":1008,"title":{},"body":{"index.html":{}}}],["bye",{"_index":241,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{}}}],["call.html",{"_index":299,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callable",{"_index":624,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{}}}],["calling",{"_index":204,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":521,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["carry",{"_index":789,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":237,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":207,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["check",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":265,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":211,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":216,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":205,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":212,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":215,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":669,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":711,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":685,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":721,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":690,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@client#heartbeatincoming",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":713,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":695,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":722,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":696,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":716,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":697,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":717,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":698,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":718,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":700,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":715,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":703,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":714,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":704,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":719,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":705,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":720,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":707,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@client#reconnectdelay",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":712,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":923,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":924,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":813,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#watchforreceipt]{@link",{"_index":898,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#websocketfactory",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":603,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":623,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closed",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent",{"_index":1028,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["combination",{"_index":798,"title":{},"body":{"injectables/StompRService.html":{}}}],["combined",{"_index":288,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":209,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":638,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":613,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":656,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["complaint",{"_index":799,"title":{},"body":{"injectables/StompRService.html":{}}}],["completed",{"_index":801,"title":{},"body":{"injectables/StompRService.html":{}}}],["compliant",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":1017,"title":{},"body":{"index.html":{}}}],["config",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":872,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":884,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.headers",{"_index":890,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":879,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":881,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":883,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.ts",{"_index":262,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.ts:101",{"_index":699,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:102",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:106",{"_index":681,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:111",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:116",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:126",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:131",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:136",{"_index":692,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:140",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:141",{"_index":684,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:146",{"_index":686,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:147",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:151",{"_index":694,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:167",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":569,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:26",{"_index":682,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":574,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:31",{"_index":709,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:36",{"_index":710,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:41",{"_index":683,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":706,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:50",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:51",{"_index":689,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:56",{"_index":691,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:61",{"_index":708,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:66",{"_index":688,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:71",{"_index":680,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:73",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:76",{"_index":693,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:81",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:86",{"_index":687,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:88",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:91",{"_index":701,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:95",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:96",{"_index":702,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.url",{"_index":873,"title":{},"body":{"injectables/StompRService.html":{}}}],["configuration",{"_index":279,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":875,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["configured",{"_index":989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connect",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["connected",{"_index":607,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["connectiontimeout",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connectobservable",{"_index":756,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.log(new",{"_index":887,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.warn",{"_index":659,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":1027,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../injectable",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../rx",{"_index":981,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.ts",{"_index":980,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":260,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["consolidated/rx",{"_index":183,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":589,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":615,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":596,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":605,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":666,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":925,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":938,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":940,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":941,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":933,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":942,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":944,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":943,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":239,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":501,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":907,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(public",{"_index":948,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":502,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(versions",{"_index":932,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":729,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copied",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["correlation",{"_index":523,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":998,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":805,"title":{},"body":{"injectables/StompRService.html":{}}}],["corresponds",{"_index":667,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":1005,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":952,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":730,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":505,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":203,"title":{},"body":{"interfaces/ITransaction.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":606,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["current",{"_index":817,"title":{},"body":{"injectables/StompRService.html":{}}}],["data",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["date",{"_index":888,"title":{},"body":{"injectables/StompRService.html":{}}}],["deactivating",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declare",{"_index":640,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":937,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessagesobservable",{"_index":758,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscription",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":225,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["define",{"_index":283,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["defining",{"_index":987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependency",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["dependent",{"_index":224,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":300,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["designed",{"_index":786,"title":{},"body":{"injectables/StompRService.html":{}}}],["destination",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["details",{"_index":272,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["dev",{"_index":1003,"title":{},"body":{"index.html":{}}}],["development",{"_index":1004,"title":{},"body":{"index.html":{}}}],["disable",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnect",{"_index":751,"title":{},"body":{"injectables/StompRService.html":{}}}],["disconnectheaders",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnecting",{"_index":985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnection",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["docs",{"_index":997,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":664,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{}}}],["documents",{"_index":1015,"title":{},"body":{"index.html":{}}}],["dom",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":194,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["dropped",{"_index":738,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["drops",{"_index":776,"title":{},"body":{"injectables/StompRService.html":{}}}],["during",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":227,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{}}}],["effects",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":935,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":816,"title":{},"body":{"injectables/StompRService.html":{}}}],["enable",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["enqueued",{"_index":193,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["entry",{"_index":1019,"title":{},"body":{"index.html":{}}}],["enum",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":979,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":598,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":847,"title":{},"body":{"injectables/StompRService.html":{}}}],["errors",{"_index":848,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":760,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":746,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["established",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["etc",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["even",{"_index":775,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":836,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["exactly",{"_index":268,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["example",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":911,"title":{},"body":{"injectables/StompService.html":{}}}],["explicitly",{"_index":778,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factory",{"_index":287,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.ts",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["favor",{"_index":737,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":668,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["fields",{"_index":278,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":527,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fixed",{"_index":280,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["flag",{"_index":230,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["forcebinarywsframes",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#body",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frames",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["framework",{"_index":583,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["function",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":270,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["functions",{"_index":724,"title":{"miscellaneous/functions.html":{}},"body":{"classes/StompHeaders.html":{},"miscellaneous/functions.html":{}}}],["generated",{"_index":1016,"title":{},"body":{"index.html":{}}}],["generating",{"_index":522,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getclient",{"_index":851,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobservable",{"_index":821,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobservable",{"_index":838,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":845,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobservable",{"_index":842,"title":{},"body":{"injectables/StompRService.html":{}}}],["gets",{"_index":770,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobservable",{"_index":831,"title":{},"body":{"injectables/StompRService.html":{}}}],["getting",{"_index":992,"title":{"index.html":{}},"body":{}}],["guide",{"_index":277,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":273,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":296,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](/guide/rx",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["guides",{"_index":1012,"title":{},"body":{"index.html":{}}}],["hack",{"_index":644,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":247,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["handled",{"_index":840,"title":{},"body":{"injectables/StompRService.html":{}}}],["handles",{"_index":743,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshake",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.ts",{"_index":723,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":733,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heart",{"_index":876,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":620,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":662,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":210,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["identifier",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["ignore",{"_index":828,"title":{},"body":{"injectables/StompRService.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["immediately",{"_index":819,"title":{},"body":{"injectables/StompRService.html":{}}}],["impact",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":496,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["important",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["inactive",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":732,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicate",{"_index":1010,"title":{},"body":{"index.html":{}}}],["indicates",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["information",{"_index":1013,"title":{},"body":{"index.html":{}}}],["initandconnect",{"_index":752,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialization",{"_index":824,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialize",{"_index":915,"title":{},"body":{"injectables/StompService.html":{}}}],["inject",{"_index":284,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injectable",{"_index":257,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":258,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstomprpcconfig",{"_index":293,"title":{"injectables/InjectableRxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":259,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"overview.html":{}}}],["injected",{"_index":286,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injection",{"_index":582,"title":{},"body":{"injectables/RxStompRPCService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":302,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"overview.html":{}}}],["internal",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["interval",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoke",{"_index":804,"title":{},"body":{"injectables/StompRService.html":{}}}],["invoked",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["invoking",{"_index":236,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":88,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":182,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issue",{"_index":785,"title":{},"body":{"injectables/StompRService.html":{}}}],["issued",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":200,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":217,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["js.github.io/api",{"_index":663,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":654,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":655,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":235,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["large",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["later",{"_index":285,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leave",{"_index":781,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":731,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":1007,"title":{},"body":{"index.html":{}}}],["library",{"_index":745,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["line",{"_index":1002,"title":{},"body":{"index.html":{}}}],["line:variable",{"_index":643,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["listed",{"_index":741,"title":{},"body":{"injectables/StompRService.html":{}}}],["locally",{"_index":767,"title":{},"body":{"injectables/StompRService.html":{}}}],["located",{"_index":609,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["main",{"_index":1001,"title":{},"body":{"index.html":{}}}],["major",{"_index":592,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":510,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["manually",{"_index":914,"title":{},"body":{"injectables/StompService.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["map",{"_index":854,"title":{},"body":{"injectables/StompRService.html":{}}}],["maps",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["marks",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matched",{"_index":802,"title":{},"body":{"injectables/StompRService.html":{}}}],["matching",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxwebsocketchunksize",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":780,"title":{},"body":{"injectables/StompRService.html":{}}}],["mechanism",{"_index":291,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":196,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["messaging",{"_index":498,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["methods",{"_index":499,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":978,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":784,"title":{},"body":{"injectables/StompRService.html":{}}}],["mode",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modules",{"_index":1021,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":625,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":647,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["nack",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":506,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":766,"title":{},"body":{"injectables/StompRService.html":{}}}],["navigating",{"_index":994,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["needed",{"_index":631,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":794,"title":{},"body":{"injectables/StompRService.html":{}}}],["new",{"_index":455,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["ng2",{"_index":1020,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":597,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":519,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["npm",{"_index":999,"title":{},"body":{"index.html":{}}}],["null",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["number",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["object",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.create((rpcobserver",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":234,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{}}}],["occurs",{"_index":826,"title":{},"body":{"injectables/StompRService.html":{}}}],["once",{"_index":626,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":671,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":672,"title":{},"body":{"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":673,"title":{},"body":{"classes/StompConfig.html":{}}}],["one",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onmessage",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":674,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":675,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":676,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":677,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":678,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":679,"title":{},"body":{"classes/StompConfig.html":{}}}],["open",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["operation",{"_index":791,"title":{},"body":{"injectables/StompRService.html":{}}}],["optional",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":189,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":621,"title":{},"body":{"classes/Stomp.html":{}}}],["out",{"_index":790,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgoing",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":595,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":614,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":936,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":1022,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packets",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["param",{"_index":585,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{}}}],["parameter",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":516,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":187,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["passcode",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passing",{"_index":634,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["pipe",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":271,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["point",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["preferred",{"_index":1018,"title":{},"body":{"index.html":{}}}],["present",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":648,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedure",{"_index":298,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["promise",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":939,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":604,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":930,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":641,"title":{},"body":{"classes/Stomp.html":{}}}],["provider",{"_index":988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":833,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["publish",{"_index":186,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["publish(queuename",{"_index":764,"title":{},"body":{"injectables/StompRService.html":{}}}],["published",{"_index":197,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishing",{"_index":806,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparams",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["pubparams",{"_index":895,"title":{},"body":{"injectables/StompRService.html":{}}}],["queue",{"_index":570,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queued",{"_index":768,"title":{},"body":{"injectables/StompRService.html":{}}}],["queuename",{"_index":245,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["queues",{"_index":773,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service",{"_index":912,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.ts",{"_index":736,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:102",{"_index":846,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:107",{"_index":850,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:136",{"_index":763,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:147",{"_index":762,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:161",{"_index":765,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:195",{"_index":772,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:230",{"_index":788,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:237",{"_index":852,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:239",{"_index":761,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:40",{"_index":815,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:63",{"_index":822,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:80",{"_index":832,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:87",{"_index":839,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:94",{"_index":843,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":572,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["random",{"_index":797,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":808,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rawheadertype",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re)connection",{"_index":229,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["readme",{"_index":909,"title":{},"body":{"injectables/StompService.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["readystate",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["receipt",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":807,"title":{},"body":{"injectables/StompRService.html":{}}}],["receipts",{"_index":844,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobservable",{"_index":759,"title":{},"body":{"injectables/StompRService.html":{}}}],["receive",{"_index":107,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["recent",{"_index":834,"title":{},"body":{"injectables/StompRService.html":{}}}],["reconnect",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnectdelay",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":627,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":622,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnects",{"_index":777,"title":{},"body":{"injectables/StompRService.html":{}}}],["reestablished",{"_index":198,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["released",{"_index":1000,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remarks",{"_index":651,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":497,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":591,"title":{},"body":{"classes/Stomp.html":{}}}],["replaced",{"_index":670,"title":{},"body":{"classes/StompConfig.html":{}}}],["replies",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["reply",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":567,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":511,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["requesting",{"_index":793,"title":{},"body":{"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":599,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":602,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["response",{"_index":837,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscribe",{"_index":232,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["result",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":192,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":238,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["returns",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["rpc",{"_index":294,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rpc(params",{"_index":508,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.ts",{"_index":578,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":580,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.ts",{"_index":495,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:25",{"_index":504,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:50",{"_index":509,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:61",{"_index":518,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":185,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/operators",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#configure",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":190,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":199,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":219,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":255,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.publish({destination",{"_index":811,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":809,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.watch",{"_index":244,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp](@link",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":267,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompconfig#websocketfactory",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":874,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connectheaders",{"_index":889,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":885,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincoming",{"_index":878,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgoing",{"_index":880,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":882,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompversions",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":494,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":515,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":295,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpcservice",{"_index":576,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstompservice",{"_index":579,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory",{"_index":588,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstate",{"_index":853,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.closed",{"_index":864,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.closing",{"_index":862,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connecting",{"_index":859,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":861,"title":{},"body":{"injectables/StompRService.html":{}}}],["safely",{"_index":774,"title":{},"body":{"injectables/StompRService.html":{}}}],["same",{"_index":269,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{}}}],["samples",{"_index":910,"title":{},"body":{"injectables/StompService.html":{}}}],["scripts",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":213,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["send(data",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sent",{"_index":726,"title":{},"body":{"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequence",{"_index":796,"title":{},"body":{"injectables/StompRService.html":{}}}],["server",{"_index":608,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["serverheadersobservable",{"_index":757,"title":{},"body":{"injectables/StompRService.html":{}}}],["service",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":849,"title":{},"body":{"injectables/StompRService.html":{}}}],["setting",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":575,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":568,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":820,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":512,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["simplest",{"_index":991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skipcontentlengthheader",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["soon",{"_index":769,"title":{},"body":{"injectables/StompRService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["specification",{"_index":747,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specified",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specify",{"_index":619,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["st",{"_index":858,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["started",{"_index":993,"title":{"index.html":{}},"body":{}}],["state",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":593,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["status",{"_index":818,"title":{},"body":{"injectables/StompRService.html":{}}}],["step",{"_index":276,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stomp#client",{"_index":617,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":657,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":649,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":612,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":856,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.js",{"_index":744,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.over",{"_index":650,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":635,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.service",{"_index":584,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.ts",{"_index":587,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.ts",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":601,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":263,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stomp/rx",{"_index":191,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":184,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.js",{"_index":740,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":665,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":264,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompjs.stomp",{"_index":600,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/ng2",{"_index":274,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/remote",{"_index":297,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/src/app/compatibility/stomp",{"_index":735,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/app/compatibility/stomp.service.ts",{"_index":906,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/app/compatibility/stomp.service.ts:25",{"_index":908,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs/src/app/injectable",{"_index":261,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stompjs/src/app/rx",{"_index":577,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs@8.x.x",{"_index":739,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":503,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservice",{"_index":734,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stomprservice._mapstompstate(st",{"_index":867,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservice",{"_index":750,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompsocketstate",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate",{"_index":855,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.closed",{"_index":865,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connected",{"_index":830,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnecting",{"_index":863,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.trying",{"_index":860,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscription",{"_index":918,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["str",{"_index":886,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":500,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":517,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["streaming",{"_index":748,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":243,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":254,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":220,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subject",{"_index":841,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe",{"_index":753,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe((message",{"_index":246,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribe(queuename",{"_index":771,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribed",{"_index":226,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribeonlyonce",{"_index":221,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["subscription.ts",{"_index":919,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:12",{"_index":920,"title":{},"body":{"classes/StompSubscription.html":{}}}],["subscription.ts:17",{"_index":922,"title":{},"body":{"classes/StompSubscription.html":{}}}],["successful",{"_index":228,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":195,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":571,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":901,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":586,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish",{"_index":894,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish(pubparams",{"_index":896,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":899,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":926,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":931,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":520,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["target",{"_index":223,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":630,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":783,"title":{},"body":{"injectables/StompRService.html":{}}}],["terminate",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["test.destination",{"_index":812,"title":{},"body":{"injectables/StompRService.html":{}}}],["text",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["thin",{"_index":1009,"title":{},"body":{"index.html":{}}}],["this._repliesobservable",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompclient",{"_index":900,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.activate",{"_index":893,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.config",{"_index":916,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":891,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe",{"_index":866,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":904,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactivate",{"_index":892,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.initandconnect",{"_index":917,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverheaders",{"_index":868,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state",{"_index":902,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":905,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperrors",{"_index":871,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessage",{"_index":869,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipts",{"_index":870,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":949,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":950,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuename",{"_index":897,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["three",{"_index":1006,"title":{},"body":{"index.html":{}}}],["through",{"_index":995,"title":{},"body":{"index.html":{}}}],["time",{"_index":825,"title":{},"body":{"injectables/StompRService.html":{}}}],["todo",{"_index":206,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":202,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":201,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":629,"title":{},"body":{"classes/Stomp.html":{}}}],["trigger",{"_index":823,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["try",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["trying",{"_index":984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tslint:disable",{"_index":642,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":1014,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1025,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":658,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["types",{"_index":639,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["typescript",{"_index":256,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["typical",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":282,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":628,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":779,"title":{},"body":{"injectables/StompRService.html":{}}}],["unique",{"_index":795,"title":{},"body":{"injectables/StompRService.html":{}}}],["unless",{"_index":742,"title":{},"body":{"injectables/StompRService.html":{}}}],["unset",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":222,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":240,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":248,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompSubscription.html":{}}}],["unsubscribing",{"_index":233,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/event",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":301,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["useful",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":618,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["using",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["utf8",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":951,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":927,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":928,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":929,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["var",{"_index":610,"title":{},"body":{"classes/Stomp.html":{}}}],["variable",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1029,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":266,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["versions",{"_index":445,"title":{"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.0",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":652,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_0",{"_index":945,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":946,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":947,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["void",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["wait",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["waitforreceipt",{"_index":754,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":787,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":913,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watch",{"_index":218,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["watching",{"_index":803,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["websocket",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":636,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":594,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["wiring",{"_index":749,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":214,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":661,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["working",{"_index":782,"title":{},"body":{"injectables/StompRService.html":{}}}],["world",{"_index":242,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":513,"title":{},"body":{"classes/RxStompRPC.html":{},"index.html":{}}}],["ws",{"_index":637,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":611,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":653,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":507,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        body\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                                \n                                        isBinaryBody\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ack\n                                \n                                \n                                        nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                    \n                                \n                                \n                                    \n                                        ack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                    \n                                \n                                \n                                    \n                                        nack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { IMessage } from './i-message';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | null;\n  onmessage: ((this: IStompSocket, ev: IStompSocketMessageEvent) => any) | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | null;\n  terminate?: ((this: IStompSocket) => any) | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType: 'arraybuffer';\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                    IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        retryIfDisconnected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                            Optional\n                                        subHeaders\n                                \n                                \n                                            Optional\n                                        subscribeOnlyOnce\n                                \n                                \n                                            Optional\n                                        unsubHeaders\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   *\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   */\n  readonly subHeaders?: StompHeaders;\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRPCConfig.html":{"url":"injectables/InjectableRxStompRPCConfig.html","title":"injectable - InjectableRxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompRPCConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRPCConfig extends RxStompRPCConfig {}\n\n// Backward compatibility\n/**\n * Deprecated, use {@link InjectableRxStompRPCConfig} instead\n */\nexport const InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:167\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\nMaps to: Client#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:140\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectionTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:81\n                            \n                        \n\n                \n                    \n                        Will retry if Stomp connection is not established in specified milliseconds.\nDefault 10,000ms, set to 0 to wait for ever.\nMaps to: Client#connectionTimeout.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:50\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            discardWebsocketOnCommFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:131\n                            \n                        \n\n                \n                    \n                        Maps to: Client#discardWebsocketOnCommFailure.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:147\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:116\n                            \n                        \n\n                \n                    \n                        Maps to: Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                            \n                        \n\n                \n                    \n                        Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:126\n                            \n                        \n\n                \n                    \n                        Maps to: Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:111\n                            \n                        \n\n                \n                    \n                        Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: Client#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:73\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: Client#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 10,000ms, set to 0 to wait for ever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:25\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:50\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:61\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport { IMessage, publishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign(\n      {},\n      params.headers || {}\n    );\n    const { destination, body, binaryBody } = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || UUID.UUID();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ destination, body, binaryBody, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            Create an instance, typically called by Angular Dependency Injection framework.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { RxStompRPC } from '@stomp/rx-stomp';\nimport { RxStompService } from './rx-stomp.service';\nimport { InjectableRxStompRPCConfig } from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  /**\n   * Create an instance, typically called by Angular Dependency Injection framework.\n   *\n   * @param rxStomp\n   * @param stompRPCConfig\n   */\n  constructor(\n    rxStomp: RxStompService,\n    @Optional() stompRPCConfig?: InjectableRxStompRPCConfig\n  ) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions';\nimport { CompatClient } from './compat-client';\nimport { IStompSocket } from '../types';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nThere used to be a class with the same name in @stomp/ng2-stompjs, which has been replaced by\nRxStompConfig and InjectableRxStompConfig.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:71\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:106\n                            \n                        \n\n                \n                    \n                        See Client#beforeConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:26\n                            \n                        \n\n                \n                    \n                        See Client#brokerURL.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:81\n                            \n                        \n\n                \n                    \n                        See Client#connectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectionTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:41\n                            \n                        \n\n                \n                    \n                        See Client#connectionTimeout.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:141\n                            \n                        \n\n                \n                    \n                        See Client#debug.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            discardWebsocketOnCommFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:146\n                            \n                        \n\n                \n                    \n                        See Client#discardWebsocketOnCommFailure.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:86\n                            \n                        \n\n                \n                    \n                        See Client#disconnectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:66\n                            \n                        \n\n                \n                    \n                        See Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:51\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:56\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatOutgoing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:136\n                            \n                        \n\n                \n                    \n                        See Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:76\n                            \n                        \n\n                \n                    \n                        See Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onChangeState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:151\n                            \n                        \n\n                \n                    \n                        See Client#onChangeState.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:111\n                            \n                        \n\n                \n                    \n                        See Client#onConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDisconnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:116\n                            \n                        \n\n                \n                    \n                        See Client#onDisconnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onStompError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:121\n                            \n                        \n\n                \n                    \n                        See Client#onStompError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledFrame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:101\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledFrame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     messageCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:91\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledMessage.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledReceipt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:96\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledReceipt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     closeEventCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:126\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketClose.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     wsErrorCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:131\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:46\n                            \n                        \n\n                \n                    \n                        See Client#reconnectDelay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:61\n                            \n                        \n\n                \n                    \n                        See Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:31\n                            \n                        \n\n                \n                    \n                        See See Client#stompVersions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:36\n                            \n                        \n\n                \n                    \n                        See Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport {\n  ActivationState,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType,\n} from './types';\nimport { Versions } from './versions';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * There used to be a class with the same name in `@stomp/ng2-stompjs`, which has been replaced by\n * {@link RxStompConfig} and {@link InjectableRxStompConfig}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:239\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:161\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:195\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, messages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:230\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: Client#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:40\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:63\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:80\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:87\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:94\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:102\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:107\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:237\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { RxStomp, RxStompConfig, RxStompState } from '@stomp/rx-stomp';\n\nimport { publishParams, Client, Message, Frame } from '@stomp/stompjs';\n\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StompState } from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport { StompConfig } from './stomp.config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(\n      map(\n        (st: RxStompState): StompState => {\n          return StompRService._mapStompState(st);\n        }\n      )\n    );\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = {};\n\n    if (typeof config.url === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(\n    queueName: string | publishParams,\n    message?: string,\n    headers: StompHeaders = {}\n  ): void {\n    if (typeof queueName === 'string') {\n      super.publish({\n        destination: queueName as string,\n        body: message,\n        headers,\n      });\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, messages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(\n    queueName: string,\n    headers: StompHeaders = {}\n  ): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link Frame}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n   */\n  public waitForReceipt(\n    receiptId: string,\n    callback: (frame: Frame) => void\n  ): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:12\n                            \n                        \n\n                \n                    \n                        Id associated with this subscription.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:17\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:10\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:14\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:47\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:40\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_0,\n    Versions.V1_1,\n    Versions.V1_2,\n  ]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts\n            \n            injectable\n            StompRService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts\n            \n            injectable\n            StompService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n            \n            injectable\n            InjectableRxStompConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            injectable\n            InjectableRxStompRPCConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            variable\n            InjectableRxStompRpcConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n            \n            injectable\n            RxStompRPCService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n            \n            function\n            rxStompServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n            \n            injectable\n            RxStompService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (44/44)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            class\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/app/compatibility/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n                            Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RxStompService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to NPM released main line versions. Please see dev docs for development versions.\nThe API docs cover three libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs\n@stomp/ng2-stompjs - thin wrapper over @stomp/rx-stomp\n\nThe documentation for classes indicate which library each of the classes\nbelong. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using compatibility mode your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\nng2-stompjs\nInjectable versions of rx-stomp classes:\n\nRxStompService for RxStomp\nInjectableRxStompConfig for RxStompConfig\nRxStompRPCService for RxStompRPC\nInjectableRxStompRPCConfig for RxStompRPCConfig\nrxStompServiceFactory\n\nDeprecated classes:\n\nStompRService\nStompService\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a CloseEvent\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                        IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an Event\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                        IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InjectableRxStompRpcConfig   (consolidated/.../injectable-rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectableRxStompRpcConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : InjectableRxStompRPCConfig\n                        \n                    \n\n                \n                    \n                        Deprecated, use InjectableRxStompRPCConfig instead\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
