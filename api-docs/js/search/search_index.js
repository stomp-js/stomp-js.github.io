var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/IPublishParams.html",[0,1.43,1,1.809]],["body/interfaces/IPublishParams.html",[0,2.092,1,2.287,2,0.315,3,0.315,4,0.267,5,1.625,6,0.367,7,1.5,8,3.054,9,0.367,10,1.064,11,1.467,12,3.461,13,2.916,14,3.14,15,1.987,16,3.835,17,3.835,18,0.889,19,0.042,20,3.054,21,1.432,22,2.615,23,3.054,24,1.336,25,3.461,26,1.621,27,3.054,28,3.054,29,3.054,30,2.646,31,2.026,32,2.287,33,3.054,34,3.054,35,0.781,36,1.623,37,0.134,38,2.482,39,3.027,40,0.639,41,1.44,42,1.858,43,1.831,44,1.231,45,1.625,46,1.036,47,0.933,48,0.933,49,1.858,50,1.625,51,1.858,52,2.17,53,2.17,54,2.17,55,1.625,56,2.17,57,1.858,58,2.17,59,1.858,60,1.858,61,1.858,62,2.615,63,1.625,64,2.17,65,0.025,66,0.025]],["title/interfaces/IRawFrameType.html",[0,1.43,63,1.809]],["body/interfaces/IRawFrameType.html",[0,2.186,1,1.766,2,0.343,3,0.343,4,0.29,5,1.766,7,1.499,8,2.358,9,0.399,10,1.127,11,1.155,12,3.567,13,2.45,14,2.423,15,1.957,16,2.358,17,3.975,18,0.884,19,0.042,20,2.358,21,1.424,22,2.019,23,2.358,24,1.127,25,3.163,26,1.252,27,2.358,28,2.358,29,2.358,30,2.656,31,1.564,32,1.766,33,2.358,34,2.358,35,0.816,36,1.666,37,0.146,38,2.547,39,3.12,40,0.652,41,1.564,42,2.019,43,1.898,44,1.287,45,1.766,46,1.126,47,1.014,48,1.014,49,2.019,50,1.766,51,2.019,52,2.358,53,2.358,54,2.358,55,1.766,56,2.358,57,2.019,58,2.358,59,2.019,60,2.019,61,2.019,62,3.404,63,2.423,64,3.975,65,0.027,66,0.027]],["title/injectables/InjectableRxStompConfig.html",[67,0.533,68,2.068]],["body/injectables/InjectableRxStompConfig.html",[2,0.396,3,0.396,4,0.335,6,0.461,19,0.041,35,0.788,37,0.26,40,0.396,44,1.385,46,1.703,48,1.534,65,0.03,66,0.03,67,1.036,68,3.055,69,1.173,70,2.336,71,1.615,72,1.448,73,1.534,74,1.703,75,1.534,76,0.19,77,1.381,78,2.656,79,3.567,80,3.055,81,1.051,82,2.366,83,1.051,84,2.366,85,3.055,86,3.055,87,3.055,88,3.61,89,1.703,90,3.61,91,2.112,92,4.345,93,4.216,94,3.567,95,2.672,96,0.788,97,2.672,98,2.013,99,4.345,100,3.055,101,4.345,102,3.567,103,4.345,104,4.345,105,3.567,106,1.615,107,1.81,108,1.448]],["title/injectables/InjectableRxStompRpcConfig.html",[67,0.533,109,1.809]],["body/injectables/InjectableRxStompRpcConfig.html",[2,0.474,3,0.474,4,0.401,6,0.551,19,0.041,35,0.882,37,0.247,40,0.474,44,1.391,65,0.033,66,0.033,67,1.02,69,1.402,70,2.793,71,1.931,72,1.731,73,1.717,74,2.148,75,1.717,76,0.156,77,1.546,83,0.996,89,1.907,106,1.931,107,2.163,108,1.731,109,2.992,110,1.931,111,2.985,112,3.994,113,3.994,114,3.42,115,3.42]],["title/classes/Message.html",[36,0.935,76,0.116]],["body/classes/Message.html",[2,0.378,3,0.378,4,0.319,6,0.439,9,0.439,10,1.441,13,1.723,15,1.778,18,0.671,19,0.041,24,1.352,30,2.62,35,0.763,36,1.844,37,0.16,38,1.538,40,0.378,43,1.649,44,0.905,65,0.029,66,0.029,76,0.165,81,1.031,83,1.104,96,0.763,108,2.195,116,2.598,117,2.291,118,2.291,119,2.958,120,3.454,121,3.454,122,3.88,123,1.714,124,1.542,125,3.791,126,4.427,127,3.165,128,3.541,129,4.136,130,4.136,131,1.974,132,2.743,133,4.208,134,3.165,135,4.208,136,3.165,137,2.598,138,3.165,139,2.598,140,3.165,141,3.165,142,2.598,143,3.165,144,3.165]],["title/classes/RxStompConfig.html",[76,0.116,78,1.43]],["body/classes/RxStompConfig.html",[2,0.182,3,0.182,4,0.154,6,0.211,9,0.211,10,0.701,11,1.411,15,1.245,18,0.763,19,0.042,21,0.79,24,1.242,26,1.069,31,2.605,32,3.156,35,0.558,37,0.28,38,1.714,40,0.182,41,1.92,43,0.597,46,0.961,47,1.457,65,0.017,66,0.017,72,0.664,76,0.096,77,1.521,78,1.192,81,0.979,84,1.335,91,1.714,95,2.168,96,0.867,98,1.618,117,1.335,118,1.335,123,1.121,124,1.626,131,1.382,145,2.376,146,2.376,147,2.452,148,2.479,149,1.382,150,2.452,151,2.452,152,2.895,153,2.895,154,2.895,155,3.39,156,2.895,157,2.895,158,2.895,159,2.895,160,2.895,161,2.895,162,1.524,163,2.013,164,2.452,165,2.605,166,2.452,167,2.452,168,2.013,169,2.013,170,1.524,171,4.391,172,4.391,173,2.452,174,1.251,175,2.013,176,2.452,177,2.452,178,2.013,179,3.526,180,3.526,181,2.452,182,1.524,183,2.479,184,2.452,185,2.452,186,2.452,187,2.452,188,2.895,189,2.013,190,2.452,191,2.452,192,2.452,193,2.013,194,1.724,195,2.452,196,1.524,197,2.452,198,1.335,199,1.524,200,1.724,201,2.452,202,3.276,203,1.524,204,2.452,205,3.526,206,3.526,207,4.129,208,3.39,209,4.129,210,2.452,211,1.251,212,2.452,213,2.452,214,1.524,215,2.013,216,1.724,217,2.452,218,2.452,219,1.524,220,2.895,221,1.724,222,2.013,223,2.895,224,3.39,225,2.013,226,2.452,227,2.249,228,2.452,229,2.452,230,1.524,231,2.903,232,2.013,233,2.452,234,2.895,235,1.724,236,2.452,237,2.895,238,2.895,239,2.452,240,2.452,241,2.452,242,2.452,243,0.937,244,1.524,245,2.452,246,1.724,247,2.013,248,1.524,249,1.524]],["title/classes/RxStompRPC.html",[76,0.116,250,1.809]],["body/classes/RxStompRPC.html",[2,0.274,3,0.274,4,0.232,6,0.319,7,1.138,9,0.319,11,1.021,12,2.364,13,1.831,14,1.412,15,1.187,18,0.634,19,0.042,24,0.962,35,0.883,36,1.548,37,0.247,40,0.274,47,1.776,65,0.023,66,0.023,71,1.634,76,0.132,82,1.831,83,1.056,84,2.385,89,1.716,96,0.721,97,2.446,98,1.318,110,2.6,111,2.385,114,3.424,115,3.079,117,1.831,119,2.364,123,1.069,124,1.393,131,1.318,132,1.831,145,2.128,146,2.128,148,1.615,149,1.909,178,1.886,243,1.412,250,2.068,251,1.886,252,2.761,253,4.87,254,3.079,255,1.116,256,1.886,257,3.595,258,2.297,259,1.466,260,1.404,261,1.412,262,3.363,263,4.13,264,2.297,265,4.38,266,3.826,267,3.266,268,3.172,269,3.363,270,2.297,271,1.615,272,2.297,273,2.297,274,1.886,275,2.761,276,1.615,277,2.364,278,1.251,279,4.38,280,4.38,281,3.595,282,2.297,283,1.886,284,1.886,285,2.761,286,2.297,287,2.297,288,2.297,289,2.297,290,3.363,291,3.363,292,3.363,293,2.297,294,2.297,295,2.297,296,2.297,297,2.297,298,3.363,299,2.297,300,2.297,301,2.297,302,2.297,303,3.363,304,3.979,305,2.297,306,2.297,307,2.297,308,2.068,309,2.297,310,2.297,311,1.615,312,2.297,313,2.297,314,2.297,315,2.297,316,2.297]],["title/classes/RxStompRPCConfig.html",[76,0.116,111,1.602]],["body/classes/RxStompRPCConfig.html",[2,0.386,3,0.386,4,0.327,6,0.449,9,0.449,10,1.222,11,1.305,18,0.762,19,0.041,21,1.305,26,1.862,35,0.867,36,1.029,37,0.258,40,0.51,65,0.029,66,0.029,71,1.574,72,1.411,76,0.168,83,1.133,84,2.768,89,2.169,96,0.775,110,2.568,111,2.326,123,1.52,124,1.552,145,2.324,146,2.324,149,1.874,243,1.991,260,1.508,268,2.627,271,2.277,277,3.574,278,2.326,283,3.507,284,3.507,285,4.456,317,5.285,318,5.084,319,3.239,320,3.574,321,4.272,322,4.272,323,4.272,324,3.239,325,4.272]],["title/injectables/RxStompRPCService.html",[67,0.533,326,2.068]],["body/injectables/RxStompRPCService.html",[2,0.43,3,0.43,4,0.364,6,0.5,7,1.031,11,1.292,18,0.575,19,0.041,35,0.96,37,0.268,40,0.43,44,1.31,65,0.031,66,0.031,67,1.013,69,1.617,71,2.226,73,1.617,74,2.076,75,1.617,76,0.142,77,1.456,83,0.938,89,1.795,96,0.654,106,1.752,107,1.964,108,1.572,109,3.256,110,1.752,112,3.76,113,3.76,114,3.22,115,3.22,149,1.413,250,3.256,255,1.752,256,3.76,257,4.347,260,1.273,261,2.217,278,1.964,326,3.22,327,2.816,328,2.96,329,2.308,330,3.606,331,3.606,332,3.606]],["title/injectables/RxStompService.html",[67,0.533,329,1.282]],["body/injectables/RxStompService.html",[2,0.441,3,0.441,4,0.372,6,0.513,19,0.041,35,0.843,37,0.258,40,0.441,44,1.528,65,0.032,66,0.032,67,0.998,69,1.304,73,1.641,74,1.823,75,1.641,76,0.2,77,1.478,79,3.817,80,3.269,81,0.952,82,2.532,83,1.151,84,2.532,85,3.269,86,3.269,87,3.269,88,3.755,89,1.823,106,1.795,107,2.011,108,1.61,149,2.203,327,2.271,329,2.027,333,3.032,334,2.859]],["title/classes/Stomp.html",[37,0.149,76,0.116]],["body/classes/Stomp.html",[2,0.243,3,0.243,4,0.205,6,0.283,7,0.879,9,0.283,10,0.879,11,0.789,18,0.591,19,0.042,21,1.196,26,0.887,35,0.558,37,0.252,40,0.243,44,0.582,46,1.618,47,1.799,48,0.719,65,0.021,66,0.021,75,1.085,76,0.196,77,0.977,81,1.019,83,0.417,96,0.672,97,2.278,98,1.952,100,2.162,117,2.248,118,1.674,123,0.977,124,1.059,131,1.205,132,2.634,148,2.162,165,1.674,175,3.638,189,3.638,198,2.874,216,2.902,227,2.775,231,3.76,232,2.524,234,2.524,235,2.162,246,2.604,252,1.672,259,1.799,260,1.308,261,1.252,335,1.672,336,3.075,337,3.583,338,4.128,339,3.075,340,3.705,341,2.036,342,3.075,343,3.075,344,2.524,345,3.075,346,3.075,347,3.075,348,3.075,349,4.128,350,3.075,351,3.075,352,4.659,353,2.036,354,2.524,355,3.075,356,4.659,357,3.075,358,3.075,359,3.638,360,3.075,361,2.036,362,4.128,363,3.075,364,2.524,365,3.075,366,3.705,367,3.075,368,3.075,369,3.075,370,3.075,371,3.075,372,3.388,373,3.075,374,3.075,375,4.128,376,3.041,377,3.075,378,3.075,379,3.705,380,2.036,381,2.036,382,2.036,383,2.036,384,3.075,385,3.075,386,1.672,387,2.036,388,2.036,389,2.036,390,1.252,391,3.075,392,2.036,393,2.036,394,2.036,395,3.075,396,2.036,397,2.036,398,3.075,399,2.036,400,2.036]],["title/classes/StompConfig.html",[76,0.116,401,1.602]],["body/classes/StompConfig.html",[2,0.222,3,0.222,4,0.187,6,0.258,9,0.258,10,0.82,11,1.511,15,0.656,18,0.884,19,0.042,21,0.899,24,1.34,35,0.635,37,0.177,40,0.222,41,2.143,43,0.728,44,0.82,45,2.42,50,3.36,55,2.42,65,0.02,66,0.02,72,0.81,76,0.113,77,1.352,80,2.015,81,0.806,83,1.205,90,2.015,91,1.393,96,0.998,118,1.561,120,2.354,124,1.715,137,1.525,152,3.231,153,3.231,154,3.231,155,3.231,156,3.231,157,3.231,158,3.231,159,3.231,160,3.231,161,3.231,174,1.525,183,2.015,198,2.447,202,3.49,211,1.525,237,2.354,247,1.525,255,1.393,260,1.012,401,1.561,402,3.409,403,2.354,404,2.354,405,2.867,406,3.936,407,3.936,408,3.936,409,3.936,410,3.936,411,3.936,412,3.936,413,1.858,414,2.867,415,1.858,416,2.867,417,1.858,418,2.867,419,1.858,420,2.867,421,1.858,422,2.867,423,1.858,424,2.867,425,2.867,426,1.858,427,2.867,428,1.858,429,2.867,430,1.858,431,2.867,432,1.858,433,1.858,434,2.867,435,1.858,436,2.867,437,1.858,438,2.867,439,1.858,440,2.867,441,1.858,442,2.867,443,1.858,444,1.858,445,1.858,446,1.858,447,1.858,448,1.858,449,1.858,450,1.858,451,1.858,452,1.858,453,1.858,454,1.858,455,1.858,456,1.858,457,1.858,458,1.858]],["title/classes/StompHeaders.html",[24,0.841,76,0.116]],["body/classes/StompHeaders.html",[2,0.495,3,0.495,4,0.418,6,0.575,7,1.185,9,0.575,15,1.891,19,0.039,21,1.461,24,1.428,31,2.257,37,0.21,40,0.495,48,1.463,65,0.034,66,0.034,76,0.196,81,0.849,96,0.752,131,1.625,139,3.403,169,3.403,183,3.909,402,3.07,459,3.403,460,4.145,461,4.145,462,3.403,463,4.145,464,4.145,465,4.145,466,4.145,467,4.145,468,4.145]],["title/injectables/StompRService.html",[67,0.533,469,1.809]],["body/injectables/StompRService.html",[2,0.118,3,0.118,4,0.1,6,0.137,7,0.949,9,0.137,10,0.769,11,0.69,13,1.229,14,1.051,15,1.798,18,0.428,19,0.042,21,1.226,22,1.202,24,1.018,26,1.171,30,1.914,31,2.635,32,2.189,35,0.682,36,1.632,37,0.262,38,1.914,39,1.051,40,0.118,42,1.202,43,1.702,44,0.489,46,1.475,47,1.849,48,1.603,51,3.308,65,0.012,66,0.018,67,0.409,69,1.633,73,0.603,74,1.053,75,0.603,76,0.119,78,1.097,81,0.462,82,1.463,90,1.202,91,1.475,94,1.404,95,1.652,96,0.824,97,1.051,98,1.844,102,1.404,106,0.481,107,0.539,108,0.431,118,1.938,119,1.889,123,0.543,124,1.444,125,1.889,128,2.334,130,3.089,131,1.053,132,2.049,149,0.67,163,1.404,165,2.75,168,2.726,171,1.853,172,2.206,194,1.889,198,1.808,200,2.502,202,1.202,215,1.404,216,2.502,220,1.853,221,1.202,227,0.539,238,0.813,243,0.609,246,0.696,254,1.202,255,1.097,259,0.745,260,1.172,261,0.609,263,2.206,266,3.089,267,2.491,268,2.598,271,0.696,274,0.813,275,1.404,276,1.202,278,1.229,281,0.813,308,1.652,311,1.889,320,2.876,329,0.745,337,0.696,354,3.089,364,2.206,372,2.206,376,2.206,390,1.051,401,0.931,403,1.404,404,1.404,462,1.404,469,1.051,470,3.253,471,0.813,472,1.202,473,1.889,474,1.202,475,1.71,476,1.463,477,1.404,478,1.71,479,1.71,480,2.726,481,1.404,482,2.206,483,1.404,484,1.404,485,2.206,486,1.404,487,1.051,488,1.652,489,2.922,490,2.688,491,3.32,492,1.71,493,1.71,494,2.257,495,2.257,496,2.257,497,2.257,498,2.257,499,0.99,500,0.99,501,0.99,502,1.71,503,0.99,504,1.71,505,2.688,506,1.71,507,1.71,508,3.56,509,1.71,510,0.99,511,2.688,512,1.71,513,1.71,514,1.71,515,2.257,516,1.71,517,1.71,518,1.71,519,1.71,520,2.688,521,1.71,522,1.71,523,1.71,524,1.71,525,1.71,526,1.71,527,1.71,528,0.99,529,2.688,530,2.688,531,3.32,532,3.32,533,1.71,534,1.71,535,1.71,536,1.71,537,1.71,538,1.71,539,1.71,540,1.71,541,3.035,542,1.71,543,1.71,544,1.71,545,1.71,546,1.71,547,3.32,548,0.99,549,3.32,550,2.688,551,2.688,552,1.71,553,0.99,554,0.99,555,4.343,556,2.688,557,1.404,558,1.71,559,1.71,560,2.688,561,2.206,562,1.71,563,1.71,564,2.257,565,0.99,566,0.99,567,1.404,568,2.688,569,1.71,570,1.71,571,1.71,572,0.99,573,0.99,574,3.939,575,0.99,576,0.99,577,0.99,578,0.99,579,2.688,580,0.99,581,0.99,582,0.99,583,0.99,584,2.206,585,1.853,586,0.813,587,0.99,588,2.688,589,0.99,590,0.99,591,0.99,592,1.71,593,0.99,594,0.99,595,0.99,596,0.99,597,0.99,598,0.99,599,0.99,600,0.99,601,0.99,602,0.99,603,0.99,604,1.71,605,0.99,606,0.99,607,0.99,608,0.99,609,0.99,610,0.99,611,0.99,612,0.99,613,0.99,614,0.99,615,1.71,616,0.99,617,0.99,618,0.99,619,0.99,620,0.99,621,1.71,622,0.99,623,0.99,624,0.99,625,0.99,626,0.99,627,0.99,628,0.99,629,0.99,630,0.99,631,0.813,632,0.99,633,0.99,634,0.99,635,0.99]],["title/injectables/StompService.html",[67,0.533,488,1.809]],["body/injectables/StompService.html",[2,0.382,3,0.382,4,0.322,6,0.588,7,0.914,11,0.821,18,0.51,19,0.042,35,0.862,36,1.347,37,0.256,40,0.382,44,1.212,47,1.129,48,1.495,65,0.029,66,0.029,67,0.862,69,1.495,73,1.495,74,1.983,75,1.495,76,0.187,82,1.741,83,0.867,91,2.309,96,0.58,98,1.983,106,1.554,108,1.394,123,1.51,124,1.212,128,2.248,129,2.625,194,2.248,254,2.248,255,2.309,260,1.129,268,2.605,276,2.978,278,2.307,320,2.248,329,1.846,334,2.605,390,2.605,401,2.755,469,2.922,472,2.978,473,2.978,474,2.978,476,2.755,477,3.478,480,2.625,481,2.625,482,2.625,483,2.625,484,2.625,485,2.625,486,2.625,488,2.605,557,2.625,586,2.625,631,2.625,636,2.625,637,4.237,638,3.198,639,4.237,640,4.237,641,3.198,642,2.625,643,3.198,644,3.198]],["title/classes/StompSubscription.html",[76,0.116,645,2.068]],["body/classes/StompSubscription.html",[2,0.465,3,0.465,4,0.393,6,0.541,9,0.541,10,1.376,15,1.698,18,0.622,19,0.041,21,1.002,24,1.376,35,0.707,37,0.198,40,0.465,43,1.529,65,0.033,66,0.033,76,0.189,81,0.985,83,0.985,96,0.707,122,3.95,123,1.529,124,1.558,131,1.886,142,3.203,259,2.097,308,2.399,402,2.959,645,3.829,646,3.203,647,5.698,648,3.901,649,4.812,650,3.203,651,3.901]],["title/classes/Transaction.html",[76,0.116,652,2.068]],["body/classes/Transaction.html",[2,0.418,3,0.418,4,0.354,6,0.487,9,0.487,10,1.287,18,0.792,19,0.041,21,1.275,40,0.418,43,1.763,46,1.763,65,0.031,66,0.031,76,0.177,81,1.073,83,1.073,96,0.901,121,3.694,123,1.723,124,1.65,125,3.163,126,3.694,131,1.374,259,1.528,308,3.223,311,3.163,344,3.694,652,4.056,653,2.879,654,3.507,655,3.507,656,3.507,657,5.546,658,5.546,659,3.507,660,4.499,661,3.507,662,4.499,663,3.507,664,3.507,665,3.507]],["title/classes/Versions.html",[76,0.116,77,0.935]],["body/classes/Versions.html",[2,0.327,3,0.327,4,0.277,6,0.381,7,0.785,9,0.381,10,1.092,11,0.704,18,0.796,19,0.042,21,1.466,26,2.069,30,1.855,37,0.262,40,0.327,47,1.676,48,1.55,65,0.026,66,0.026,73,1.347,76,0.187,77,1.801,95,2.348,96,0.961,98,1.861,117,2.079,124,1.621,132,2.079,165,2.079,188,4.242,221,2.684,222,3.134,223,4.242,224,4.242,227,1.494,231,2.684,235,3.087,255,1.333,259,1.664,260,0.968,337,3.908,642,3.134,650,2.252,666,2.252,667,4.748,668,4.748,669,4.748,670,4.748,671,4.748,672,2.743,673,2.743,674,3.818,675,3.818,676,3.818,677,3.818,678,3.818,679,2.743,680,2.743,681,2.743,682,2.743,683,2.743,684,2.743,685,2.743,686,2.743,687,2.743,688,2.743,689,2.743,690,2.743,691,2.743]],["title/coverage.html",[692,3.288]],["body/coverage.html",[0,1.995,1,1.876,4,0.308,5,2.524,18,0.486,19,0.041,24,0.872,36,0.97,37,0.281,63,1.876,65,0.028,66,0.028,67,0.968,68,2.145,69,1.924,70,2.886,71,1.995,72,2.258,76,0.228,77,0.97,78,1.483,81,0.625,109,1.876,110,1.995,111,1.661,116,2.504,145,2.412,146,2.412,149,1.196,193,2.504,198,1.661,208,2.504,227,1.661,250,1.876,251,2.504,326,2.145,327,2.853,328,2.504,329,1.33,333,2.504,334,1.876,335,2.504,359,2.504,401,1.661,402,2.853,459,2.504,469,1.876,470,2.145,471,2.504,476,1.661,488,1.876,636,2.504,645,2.145,646,2.504,652,2.145,653,2.504,666,2.504,692,2.504,693,3.051,694,3.051,695,5.908,696,5.18,697,3.051,698,3.051,699,2.504,700,4.641,701,4.106,702,4.106,703,3.051,704,4.106,705,4.641,706,3.051,707,3.051,708,3.051,709,3.051,710,3.051,711,3.051,712,3.051,713,3.051,714,3.051,715,3.051,716,3.051,717,3.051]],["title/dependencies.html",[487,2.174,718,2.461]],["body/dependencies.html",[19,0.038,65,0.036,66,0.036,487,2.877,719,4.679,720,4.679]],["title/miscellaneous/enumerations.html",[721,1.196,722,2.903]],["body/miscellaneous/enumerations.html",[9,0.578,19,0.034,37,0.272,65,0.034,66,0.034,69,1.471,73,1.471,74,1.963,75,1.471,76,0.164,145,2.025,146,2.025,149,1.634,165,2.728,200,2.93,225,3.422,386,4.112,390,2.563,470,2.93,472,2.93,473,2.93,474,2.93,476,2.27,489,4.112,584,4.409,585,4.112,721,2.025,722,3.422,723,2.93,724,5.571,725,4.168,726,5.37,727,4.168]],["title/miscellaneous/functions.html",[81,0.724,721,1.196]],["body/miscellaneous/functions.html",[7,1.154,9,0.56,11,1.036,19,0.036,37,0.268,65,0.033,66,0.033,67,0.732,69,1.424,73,1.424,74,1.582,75,1.424,78,1.961,81,1.128,83,0.826,85,2.837,86,2.837,87,2.837,88,3.453,89,1.582,91,2.387,93,3.313,96,0.891,98,1.925,100,2.837,105,3.313,259,2.141,260,1.424,327,2.481,329,2.402,334,3.02,476,2.675,487,2.481,561,3.313,567,4.033,699,4.033,721,1.961,723,2.837,728,4.036,729,4.036,730,4.036]],["title/index.html",[9,0.408,731,2.415]],["body/index.html",[0,2.253,19,0.036,65,0.036,66,0.036,67,0.841,76,0.182,731,3.806,732,4.637,733,4.637,734,4.637]],["title/modules.html",[735,3.288]],["body/modules.html",[19,0.037,65,0.037,66,0.037,735,3.877]],["title/miscellaneous/typealiases.html",[721,1.196,736,3.536]],["body/miscellaneous/typealiases.html",[5,2.327,7,1.586,9,0.525,18,0.603,19,0.032,21,1.321,25,2.661,30,2.295,36,1.501,37,0.239,38,2.748,39,3.41,41,2.803,45,3.165,46,1.484,47,1.336,48,1.336,49,3.618,50,3.165,55,3.165,57,2.661,59,2.661,60,2.661,61,2.661,62,3.618,65,0.032,66,0.032,72,2.058,81,1.158,83,0.775,89,1.484,110,2.295,123,1.203,145,1.839,146,1.839,277,3.618,721,1.839,723,2.661,737,3.785,738,5.656]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":208,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["0/4",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":223,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":224,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1.6",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":188,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":733,"title":{},"body":{"index.html":{}}}],["18/18",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":734,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["21/24",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":732,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["_mapstompstate(st",{"_index":587,"title":{},"body":{"injectables/StompRService.html":{}}}],["_repliesobserv",{"_index":288,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuenam",{"_index":282,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueu",{"_index":286,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":657,"title":{},"body":{"classes/Transaction.html":{}}}],["accept",{"_index":461,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":121,"title":{},"body":{"classes/Message.html":{},"classes/Transaction.html":{}}}],["accessor",{"_index":493,"title":{},"body":{"injectables/StompRService.html":{}}}],["ack",{"_index":125,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{}}}],["acknowledg",{"_index":130,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{}}}],["act",{"_index":336,"title":{},"body":{"classes/Stomp.html":{}}}],["activ",{"_index":729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activemq",{"_index":323,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["actual",{"_index":532,"title":{},"body":{"injectables/StompRService.html":{}}}],["ad",{"_index":29,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["addit",{"_index":464,"title":{},"body":{"classes/StompHeaders.html":{}}}],["addition",{"_index":569,"title":{},"body":{"injectables/StompRService.html":{}}}],["advanc",{"_index":94,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompRService.html":{}}}],["alias",{"_index":737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":376,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["alreadi",{"_index":561,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["altern",{"_index":362,"title":{},"body":{"classes/Stomp.html":{}}}],["alway",{"_index":563,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular'",{"_index":103,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/cor",{"_index":106,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":276,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular7.html",{"_index":87,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["anoth",{"_index":385,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":296,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["app_initi",{"_index":104,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["array",{"_index":675,"title":{},"body":{"classes/Versions.html":{}}}],["asynchron",{"_index":485,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["attempt",{"_index":220,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["attribut",{"_index":151,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":515,"title":{},"body":{"injectables/StompRService.html":{}}}],["automat",{"_index":215,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["avail",{"_index":463,"title":{},"body":{"classes/StompHeaders.html":{}}}],["base",{"_index":538,"title":{},"body":{"injectables/StompRService.html":{}}}],["beat",{"_index":606,"title":{},"body":{"injectables/StompRService.html":{}}}],["befor",{"_index":164,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":152,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behaviorsubject",{"_index":547,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.clos",{"_index":633,"title":{},"body":{"injectables/StompRService.html":{}}}],["binari",{"_index":20,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["binarybodi",{"_index":12,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{}}}],["bodi",{"_index":13,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body]{@link",{"_index":140,"title":{},"body":{"classes/Message.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["both",{"_index":180,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":31,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":153,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["call",{"_index":131,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["call.html",{"_index":115,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callabl",{"_index":369,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":38,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":136,"title":{},"body":{"classes/Message.html":{}}}],["carri",{"_index":529,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":342,"title":{},"body":{"classes/Stomp.html":{}}}],["caveat",{"_index":656,"title":{},"body":{"classes/Transaction.html":{}}}],["chang",{"_index":166,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["check",{"_index":192,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":76,"title":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["cleanup",{"_index":315,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":198,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["client#abort",{"_index":660,"title":{},"body":{"classes/Transaction.html":{}}}],["client#abort]{@link",{"_index":665,"title":{},"body":{"classes/Transaction.html":{}}}],["client#ack",{"_index":133,"title":{},"body":{"classes/Message.html":{}}}],["client#ack]{@link",{"_index":143,"title":{},"body":{"classes/Message.html":{}}}],["client#beforeconnect",{"_index":414,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":453,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#begin",{"_index":654,"title":{},"body":{"classes/Transaction.html":{}}}],["client#brokerurl",{"_index":237,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":247,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":662,"title":{},"body":{"classes/Transaction.html":{}}}],["client#commit]{@link",{"_index":664,"title":{},"body":{"classes/Transaction.html":{}}}],["client#configur",{"_index":405,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":443,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connecthead",{"_index":416,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":449,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug",{"_index":418,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":458,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#disconnecthead",{"_index":420,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":450,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincom",{"_index":422,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":447,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgo",{"_index":424,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":448,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#nack",{"_index":135,"title":{},"body":{"classes/Message.html":{}}}],["client#nack]{@link",{"_index":144,"title":{},"body":{"classes/Message.html":{}}}],["client#onconnect",{"_index":425,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":454,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":427,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":455,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":429,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":456,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledfram",{"_index":431,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":452,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessag",{"_index":120,"title":{},"body":{"classes/Message.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":137,"title":{},"body":{"classes/Message.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":434,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":451,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclos",{"_index":436,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":457,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":8,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#publish]{@link",{"_index":58,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#reconnectdelay",{"_index":438,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":446,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#stompvers",{"_index":440,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":444,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#subscrib",{"_index":122,"title":{},"body":{"classes/Message.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":142,"title":{},"body":{"classes/Message.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscrib",{"_index":649,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":651,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#websocketfactori",{"_index":442,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":445,"title":{},"body":{"classes/StompConfig.html":{}}}],["client(url",{"_index":351,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":368,"title":{},"body":{"classes/Stomp.html":{}}}],["client.t",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closeev",{"_index":57,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":52,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["closeeventcallbacktyp",{"_index":55,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["combin",{"_index":102,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompRService.html":{}}}],["command",{"_index":64,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["commit",{"_index":658,"title":{},"body":{"classes/Transaction.html":{}}}],["compat",{"_index":380,"title":{},"body":{"classes/Stomp.html":{}}}],["compatcli",{"_index":359,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":398,"title":{},"body":{"classes/Stomp.html":{}}}],["complaint",{"_index":536,"title":{},"body":{"injectables/StompRService.html":{}}}],["complet",{"_index":537,"title":{},"body":{"injectables/StompRService.html":{}}}],["compodoc/compodoc",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":278,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":601,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":613,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.head",{"_index":619,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":608,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":610,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":612,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.t",{"_index":72,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:105",{"_index":162,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:18",{"_index":319,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:19",{"_index":174,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:22",{"_index":324,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:24",{"_index":439,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:29",{"_index":441,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:32",{"_index":219,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:34",{"_index":437,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":196,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:39",{"_index":421,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:44",{"_index":423,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:49",{"_index":415,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:54",{"_index":419,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:58",{"_index":230,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:59",{"_index":432,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:64",{"_index":433,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:65",{"_index":214,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:69",{"_index":430,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:72",{"_index":203,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:74",{"_index":413,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:79",{"_index":211,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:84",{"_index":426,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:88",{"_index":182,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:89",{"_index":428,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:94",{"_index":435,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:95",{"_index":199,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:99",{"_index":417,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.url",{"_index":604,"title":{},"body":{"injectables/StompRService.html":{}}}],["configur",{"_index":91,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["connect",{"_index":165,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{}}}],["connecthead",{"_index":154,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connectobserv",{"_index":494,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.log(new",{"_index":616,"title":{},"body":{"injectables/StompRService.html":{}}}],["consolidated/.../rx",{"_index":723,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.t",{"_index":738,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":69,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["consolidated/rx",{"_index":145,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.t",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.t",{"_index":335,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:20",{"_index":341,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:31",{"_index":353,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:70",{"_index":361,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/message.t",{"_index":116,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/message.ts:18",{"_index":127,"title":{},"body":{"classes/Message.html":{}}}],["consolidated/stompjs/src/message.ts:25",{"_index":134,"title":{},"body":{"classes/Message.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":402,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/transaction.t",{"_index":653,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/transaction.ts:10",{"_index":663,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/transaction.ts:15",{"_index":661,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/transaction.ts:20",{"_index":659,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/types.t",{"_index":5,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.t",{"_index":666,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:12",{"_index":680,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:16",{"_index":681,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:21",{"_index":673,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:29",{"_index":682,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":684,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:42",{"_index":683,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:8",{"_index":679,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":97,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":255,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":637,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":289,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(publ",{"_index":688,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":256,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(vers",{"_index":672,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":465,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":27,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["correlationid",{"_index":304,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":404,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["coverag",{"_index":692,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":466,"title":{},"body":{"classes/StompHeaders.html":{}}}],["creat",{"_index":259,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":550,"title":{},"body":{"injectables/StompRService.html":{}}}],["date",{"_index":617,"title":{},"body":{"injectables/StompRService.html":{}}}],["debug",{"_index":155,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntyp",{"_index":41,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["declar",{"_index":678,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":26,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["defaultmessagesobserv",{"_index":496,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscript",{"_index":303,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":316,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defin",{"_index":96,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["delay",{"_index":217,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["depend",{"_index":487,"title":{"dependencies.html":{}},"body":{"injectables/StompRService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["deprec",{"_index":390,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["descript",{"_index":6,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["design",{"_index":526,"title":{},"body":{"injectables/StompRService.html":{}}}],["destin",{"_index":14,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["detail",{"_index":84,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["disabl",{"_index":209,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["disconnect",{"_index":200,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["disconnecthead",{"_index":156,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["document",{"_index":193,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["documentation/rpc",{"_index":280,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["drop",{"_index":473,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["dure",{"_index":221,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":233,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":403,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["element",{"_index":676,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":549,"title":{},"body":{"injectables/StompRService.html":{}}}],["enabl",{"_index":197,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":22,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["enumer",{"_index":722,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":346,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":579,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":498,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":484,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["establish",{"_index":556,"title":{},"body":{"injectables/StompRService.html":{}}}],["even",{"_index":512,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":570,"title":{},"body":{"injectables/StompRService.html":{}}}],["evt",{"_index":56,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["exactli",{"_index":79,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["exampl",{"_index":123,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["explicitli",{"_index":514,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":40,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["extend",{"_index":108,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factori",{"_index":100,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.t",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["favor",{"_index":472,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["field",{"_index":90,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":272,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":273,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fix",{"_index":92,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["frame",{"_index":30,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame#bodi",{"_index":141,"title":{},"body":{"classes/Message.html":{}}}],["frame#head",{"_index":139,"title":{},"body":{"classes/Message.html":{},"classes/StompHeaders.html":{}}}],["framecallbacktyp",{"_index":50,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":81,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["get",{"_index":507,"title":{},"body":{"injectables/StompRService.html":{}}}],["getclient",{"_index":582,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobserv",{"_index":553,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobserv",{"_index":572,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":577,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobserv",{"_index":575,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobserv",{"_index":565,"title":{},"body":{"injectables/StompRService.html":{}}}],["guid",{"_index":89,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":85,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":112,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](../addit",{"_index":279,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["hack",{"_index":384,"title":{},"body":{"classes/Stomp.html":{}}}],["handl",{"_index":480,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshak",{"_index":222,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":15,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.t",{"_index":459,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:8",{"_index":468,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correl",{"_index":313,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['repli",{"_index":312,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":138,"title":{},"body":{"classes/Message.html":{}}}],["heart",{"_index":605,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":205,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincom",{"_index":157,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgo",{"_index":158,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":186,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":366,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":53,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["https://stomp",{"_index":172,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["id",{"_index":308,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["identifi",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":562,"title":{},"body":{"injectables/StompRService.html":{}}}],["immedi",{"_index":168,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["impact",{"_index":167,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implement",{"_index":252,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["import",{"_index":35,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["incom",{"_index":204,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["initandconnect",{"_index":490,"title":{},"body":{"injectables/StompRService.html":{}}}],["initi",{"_index":557,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["inject",{"_index":67,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":68,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"coverage.html":{}}}],["injectablerxstomprpcconfig",{"_index":109,"title":{"injectables/InjectableRxStompRpcConfig.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["instanc",{"_index":117,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":392,"title":{},"body":{"classes/Stomp.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"index.html":{}}}],["intern",{"_index":650,"title":{},"body":{"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["interv",{"_index":206,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invok",{"_index":163,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["ipublishparam",{"_index":1,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{}}}],["irawframetyp",{"_index":63,"title":{"interfaces/IRawFrameType.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{}}}],["issu",{"_index":524,"title":{},"body":{"injectables/StompRService.html":{}}}],["javascript",{"_index":246,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["js.github.io/stompjs/classes/client.html#beforeconnect",{"_index":173,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#brokerurl",{"_index":181,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#connecthead",{"_index":195,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#disconnecthead",{"_index":201,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatincom",{"_index":210,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatoutgo",{"_index":213,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#reconnectdelay",{"_index":218,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#stompvers",{"_index":229,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#watchforreceipt",{"_index":546,"title":{},"body":{"injectables/StompRService.html":{}}}],["js.github.io/stompjs/classes/client.html#websocketfactori",{"_index":242,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/frame.html",{"_index":540,"title":{},"body":{"injectables/StompRService.html":{}}}],["key",{"_index":183,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["klass",{"_index":396,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":397,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":294,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":93,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["later",{"_index":99,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leav",{"_index":518,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":28,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["lf",{"_index":467,"title":{},"body":{"classes/StompHeaders.html":{}}}],["librari",{"_index":482,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["line:vari",{"_index":383,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":44,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["list",{"_index":478,"title":{},"body":{"injectables/StompRService.html":{}}}],["local",{"_index":504,"title":{},"body":{"injectables/StompRService.html":{}}}],["locat",{"_index":355,"title":{},"body":{"classes/Stomp.html":{}}}],["login",{"_index":184,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["make",{"_index":265,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["mani",{"_index":460,"title":{},"body":{"classes/StompHeaders.html":{}}}],["manual",{"_index":129,"title":{},"body":{"classes/Message.html":{},"injectables/StompService.html":{}}}],["map",{"_index":171,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["mark",{"_index":190,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["match",{"_index":66,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mean",{"_index":517,"title":{},"body":{"injectables/StompRService.html":{}}}],["mechan",{"_index":105,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["messag",{"_index":36,"title":{"classes/Message.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correl",{"_index":307,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["messagecallbacktyp",{"_index":45,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messagecheckcallbacktyp",{"_index":49,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":132,"title":{},"body":{"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["millisecond",{"_index":207,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellan",{"_index":721,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":523,"title":{},"body":{"injectables/StompRService.html":{}}}],["modul",{"_index":735,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":370,"title":{},"body":{"classes/Stomp.html":{}}}],["mozwebsocket",{"_index":387,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":42,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["mssage",{"_index":522,"title":{},"body":{"injectables/StompRService.html":{}}}],["nack",{"_index":126,"title":{},"body":{"classes/Message.html":{},"classes/Transaction.html":{}}}],["name",{"_index":260,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":46,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":227,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":382,"title":{},"body":{"classes/Stomp.html":{}}}],["nodej",{"_index":345,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":343,"title":{},"body":{"classes/Stomp.html":{}}}],["note",{"_index":519,"title":{},"body":{"injectables/StompRService.html":{}}}],["null",{"_index":340,"title":{},"body":{"classes/Stomp.html":{}}}],["number",{"_index":202,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["object",{"_index":148,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["observ",{"_index":268,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.cr",{"_index":301,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasion",{"_index":101,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["occur",{"_index":560,"title":{},"body":{"injectables/StompRService.html":{}}}],["on",{"_index":178,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onc",{"_index":371,"title":{},"body":{"classes/Stomp.html":{}}}],["onconnect",{"_index":406,"title":{},"body":{"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":407,"title":{},"body":{"classes/StompConfig.html":{}}}],["onstomperror",{"_index":408,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledfram",{"_index":409,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledmessag",{"_index":410,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":411,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketclos",{"_index":412,"title":{},"body":{"classes/StompConfig.html":{}}}],["open",{"_index":727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oper",{"_index":531,"title":{},"body":{"injectables/StompRService.html":{}}}],["option",{"_index":11,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":367,"title":{},"body":{"classes/Stomp.html":{}}}],["out",{"_index":530,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgo",{"_index":212,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":339,"title":{},"body":{"classes/Stomp.html":{}}}],["over(w",{"_index":360,"title":{},"body":{"classes/Stomp.html":{}}}],["overrid",{"_index":677,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":731,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":718,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":267,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["paramet",{"_index":7,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["params.head",{"_index":297,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["parser",{"_index":59,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["part",{"_index":73,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["pass",{"_index":118,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passcod",{"_index":185,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pleas",{"_index":82,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["point",{"_index":23,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["possibl",{"_index":386,"title":{},"body":{"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":236,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["present",{"_index":191,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":388,"title":{},"body":{"classes/Stomp.html":{}}}],["privat",{"_index":281,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedur",{"_index":114,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["properti",{"_index":10,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":352,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolvers",{"_index":670,"title":{},"body":{"classes/Versions.html":{}}}],["provid",{"_index":567,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":124,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["publish",{"_index":491,"title":{},"body":{"injectables/StompRService.html":{}}}],["publish(queuenam",{"_index":502,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparam",{"_index":263,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["pubparam",{"_index":626,"title":{},"body":{"injectables/StompRService.html":{}}}],["queu",{"_index":505,"title":{},"body":{"injectables/StompRService.html":{}}}],["queue",{"_index":320,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":284,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuenam",{"_index":508,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.servic",{"_index":641,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":471,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:103",{"_index":581,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:132",{"_index":501,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:143",{"_index":500,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:157",{"_index":503,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:183",{"_index":510,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:215",{"_index":528,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:219",{"_index":583,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:221",{"_index":499,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:40",{"_index":548,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:63",{"_index":554,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:76",{"_index":566,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:83",{"_index":573,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:90",{"_index":576,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:98",{"_index":578,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":322,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["random",{"_index":535,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":542,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":475,"title":{},"body":{"injectables/StompRService.html":{}}}],["rawheadertyp",{"_index":62,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["re)connect",{"_index":559,"title":{},"body":{"injectables/StompRService.html":{}}}],["readm",{"_index":639,"title":{},"body":{"injectables/StompService.html":{}}}],["receipt",{"_index":51,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":541,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobserv",{"_index":497,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiv",{"_index":39,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["recent",{"_index":568,"title":{},"body":{"injectables/StompRService.html":{}}}],["reconnect",{"_index":216,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnectdelay",{"_index":159,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["remark",{"_index":393,"title":{},"body":{"classes/Stomp.html":{}}}],["remot",{"_index":253,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repli",{"_index":285,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuenam",{"_index":317,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["repres",{"_index":147,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["request",{"_index":266,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":347,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":350,"title":{},"body":{"classes/Stomp.html":{}}}],["respons",{"_index":571,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscrib",{"_index":513,"title":{},"body":{"injectables/StompRService.html":{}}}],["result",{"_index":65,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":47,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["rpc",{"_index":110,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(param",{"_index":262,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.t",{"_index":328,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":330,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.t",{"_index":251,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:23",{"_index":258,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:42",{"_index":264,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:50",{"_index":270,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserv",{"_index":302,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(messag",{"_index":310,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":71,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxj",{"_index":271,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/oper",{"_index":274,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":149,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rxstomp#configur",{"_index":150,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":244,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactiv",{"_index":249,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativ",{"_index":170,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":248,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp.publish({destin",{"_index":544,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":543,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig",{"_index":78,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompconfig#websocketfactori",{"_index":179,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":245,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":603,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connecthead",{"_index":618,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":614,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincom",{"_index":607,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgo",{"_index":609,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":611,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompvers",{"_index":226,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactori",{"_index":238,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":250,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstomprpcconfig",{"_index":111,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstomprpcservic",{"_index":326,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstompservic",{"_index":329,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactori",{"_index":334,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstat",{"_index":584,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.clos",{"_index":592,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connect",{"_index":589,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":591,"title":{},"body":{"injectables/StompRService.html":{}}}],["safe",{"_index":511,"title":{},"body":{"injectables/StompRService.html":{}}}],["same",{"_index":80,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{}}}],["sampl",{"_index":640,"title":{},"body":{"injectables/StompService.html":{}}}],["see",{"_index":83,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":311,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{}}}],["sent",{"_index":462,"title":{},"body":{"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequenc",{"_index":534,"title":{},"body":{"injectables/StompRService.html":{}}}],["server",{"_index":354,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["serverheadersobserv",{"_index":495,"title":{},"body":{"injectables/StompRService.html":{}}}],["servic",{"_index":476,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":32,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":580,"title":{},"body":{"injectables/StompRService.html":{}}}],["setup",{"_index":325,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueu",{"_index":318,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntyp",{"_index":277,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":552,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":232,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simplest",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":34,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["skipcontentlengthhead",{"_index":16,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["socket",{"_index":375,"title":{},"body":{"classes/Stomp.html":{}}}],["sockj",{"_index":234,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":241,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["soon",{"_index":506,"title":{},"body":{"injectables/StompRService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["specif",{"_index":194,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specifi",{"_index":365,"title":{},"body":{"classes/Stomp.html":{}}}],["st",{"_index":588,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":189,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["state",{"_index":489,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":337,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["statu",{"_index":551,"title":{},"body":{"injectables/StompRService.html":{}}}],["step",{"_index":88,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":37,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":363,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":399,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":389,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":358,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":586,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.j",{"_index":481,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.ov",{"_index":391,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(funct",{"_index":377,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.servic",{"_index":331,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.t",{"_index":333,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.t",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":349,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":74,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stomp/rx",{"_index":107,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{}}}],["stomp/src/rx",{"_index":146,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.j",{"_index":477,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":243,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["stompconfig",{"_index":401,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomphead",{"_index":24,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompj",{"_index":75,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stompjs.stomp",{"_index":348,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/2018/10/12/remot",{"_index":113,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/2018/11/04/ng2",{"_index":86,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/inject",{"_index":70,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"coverage.html":{}}}],["stompjs/src/rx",{"_index":327,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/stomp",{"_index":470,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/stomp.service.t",{"_index":636,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/stomp.service.ts:25",{"_index":638,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs@8.x.x",{"_index":474,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":257,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuenam",{"_index":290,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueu",{"_index":292,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservic",{"_index":469,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomprservice._mapstompstate(st",{"_index":596,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservic",{"_index":488,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompstat",{"_index":585,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.clos",{"_index":594,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connect",{"_index":564,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnect",{"_index":593,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.tri",{"_index":590,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscript",{"_index":645,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompvers",{"_index":160,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["str",{"_index":615,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":254,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stream(param",{"_index":269,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["string|publishparam",{"_index":623,"title":{},"body":{"injectables/StompRService.html":{}}}],["structur",{"_index":61,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":574,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscrib",{"_index":128,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscribe((messag",{"_index":309,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribe(queuenam",{"_index":509,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscript",{"_index":119,"title":{},"body":{"classes/Message.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["subscription.t",{"_index":646,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:15",{"_index":648,"title":{},"body":{"classes/StompSubscription.html":{}}}],["suitabl",{"_index":321,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":631,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":332,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish(pubparam",{"_index":627,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish({destin",{"_index":625,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":629,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":235,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["supportedvers",{"_index":671,"title":{},"body":{"classes/Versions.html":{}}}],["tabl",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":674,"title":{},"body":{"classes/Versions.html":{}}}],["tcp",{"_index":374,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":283,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporari",{"_index":521,"title":{},"body":{"injectables/StompRService.html":{}}}],["test.destin",{"_index":545,"title":{},"body":{"injectables/StompRService.html":{}}}],["this._repliesobserv",{"_index":298,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((messag",{"_index":306,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuenam",{"_index":291,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueu",{"_index":293,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuenam",{"_index":299,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompcli",{"_index":630,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.activ",{"_index":622,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.config",{"_index":643,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":620,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe(map((st",{"_index":595,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":634,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactiv",{"_index":621,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.initandconnect",{"_index":644,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":300,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destin",{"_index":314,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessag",{"_index":287,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverhead",{"_index":597,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stat",{"_index":632,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":635,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperror",{"_index":600,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":295,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessag",{"_index":598,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipt",{"_index":599,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":689,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map((x",{"_index":690,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuenam",{"_index":628,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":187,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["time",{"_index":558,"title":{},"body":{"injectables/StompRService.html":{}}}],["todo",{"_index":655,"title":{},"body":{"classes/Transaction.html":{}}}],["transact",{"_index":652,"title":{"classes/Transaction.html":{}},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["transport",{"_index":373,"title":{},"body":{"classes/Stomp.html":{}}}],["tri",{"_index":225,"title":{},"body":{"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["trigger",{"_index":555,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":33,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["tslint:dis",{"_index":381,"title":{},"body":{"classes/Stomp.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":736,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":624,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(config.url",{"_index":602,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(w",{"_index":400,"title":{},"body":{"classes/Stomp.html":{}}}],["typic",{"_index":95,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["uint8array",{"_index":17,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["underli",{"_index":372,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":516,"title":{},"body":{"injectables/StompRService.html":{}}}],["uniqu",{"_index":533,"title":{},"body":{"injectables/StompRService.html":{}}}],["unless",{"_index":479,"title":{},"body":{"injectables/StompRService.html":{}}}],["unsubscrib",{"_index":647,"title":{},"body":{"classes/StompSubscription.html":{}}}],["url",{"_index":175,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us",{"_index":98,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["us/docs/web/api/closeev",{"_index":54,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["usag",{"_index":240,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":364,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["uuid",{"_index":275,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":305,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replac",{"_index":691,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":667,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":668,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":669,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":169,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["valu",{"_index":48,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["var",{"_index":356,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":77,"title":{"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["versions(['1.0",{"_index":228,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions([versions.v1_0",{"_index":685,"title":{},"body":{"classes/Versions.html":{}}}],["versions.default.protocolvers",{"_index":394,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_1",{"_index":686,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":687,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":483,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["void",{"_index":43,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["waitforreceipt",{"_index":492,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":527,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":642,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watch",{"_index":539,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":525,"title":{},"body":{"injectables/StompRService.html":{}}}],["websocket",{"_index":231,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/w",{"_index":239,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/w",{"_index":378,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":338,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactori",{"_index":161,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["wire",{"_index":486,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":344,"title":{},"body":{"classes/Stomp.html":{},"classes/Transaction.html":{}}}],["work",{"_index":520,"title":{},"body":{"injectables/StompRService.html":{}}}],["ws",{"_index":379,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/w",{"_index":176,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":357,"title":{},"body":{"classes/Stomp.html":{}}}],["wsfn",{"_index":395,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/w",{"_index":177,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ye",{"_index":261,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":60,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Frame} from './frame';\nimport {Message} from './message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRawFrameType.html":{"url":"interfaces/IRawFrameType.html","title":"interface - IRawFrameType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRawFrameType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     RawHeaderType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RawHeaderType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Frame} from './frame';\nimport {Message} from './message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRpcConfig.html":{"url":"injectables/InjectableRxStompRpcConfig.html","title":"injectable - InjectableRxStompRpcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRpcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompRPCConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRpcConfig extends RxStompRPCConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended Frame, you can access headers\nand body as properties.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    Frame\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ack\n                            \n                            \n                                    Public\n                                nack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:18\n                            \n                        \n\n                \n                    \n                        When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nack:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:25\n                            \n                        \n\n                \n                    \n                        When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Frame} from './frame';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link Frame}, you can access [headers]{@link Frame#headers}\n * and [body]{@link Frame#body} as properties.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport class Message extends Frame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  public ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  public nack: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeConnect:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:105\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        brokerURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:19\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     debugFnType\n\n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disconnectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatIncoming:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatOutgoing:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnectDelay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:65\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stompVersions:     Versions\n\n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketFactory:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:58\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n */\n\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n   */\n  public stompVersions?: Versions;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n   */\n  public beforeConnect?: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:23\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:42\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:50\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport {Message, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueueName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:18\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setupReplyQueue:     setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:22\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRpcConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRpcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\n\nimport {RxStompRPC} from '@stomp/rx-stomp';\nimport {RxStompService} from './rx-stomp.service';\nimport {InjectableRxStompRpcConfig} from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(rxStomp: RxStompService, @Optional() stompRPCConfig?: InjectableRxStompRpcConfig) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WebSocketClass:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:20\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:31\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:70\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from '../versions';\nimport {CompatClient} from './compat-client';\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.default.protocolVersions(); }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   */\n  public static over(ws: any): CompatClient {\n    const wsFn = typeof(ws) === 'function' ? ws : () => ws;\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeConnect:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:74\n                            \n                        \n\n                \n                    \n                        See Client#beforeConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        brokerURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:19\n                            \n                        \n\n                \n                    \n                        See Client#brokerURL.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:49\n                            \n                        \n\n                \n                    \n                        See Client#connectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     debugFnType\n\n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:99\n                            \n                        \n\n                \n                    \n                        See Client#debug.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disconnectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:54\n                            \n                        \n\n                \n                    \n                        See Client#disconnectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatIncoming:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:39\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatOutgoing:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:44\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatOutgoing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onConnect:     frameCallbackType\n\n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        See Client#onConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDisconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onDisconnect:     frameCallbackType\n\n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:84\n                            \n                        \n\n                \n                    \n                        See Client#onDisconnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onStompError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onStompError:     frameCallbackType\n\n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:89\n                            \n                        \n\n                \n                    \n                        See Client#onStompError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledFrame\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onUnhandledFrame:     frameCallbackType\n\n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:69\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledFrame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onUnhandledMessage:     messageCallbackType\n\n                    \n                \n                    \n                        \n                            Type :     messageCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:59\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledMessage.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onUnhandledReceipt:     frameCallbackType\n\n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:64\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledReceipt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onWebSocketClose:     closeEventCallbackType\n\n                    \n                \n                    \n                        \n                            Type :     closeEventCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:94\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketClose.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnectDelay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:34\n                            \n                        \n\n                \n                    \n                        See Client#reconnectDelay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stompVersions:     Versions\n\n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:24\n                            \n                        \n\n                \n                    \n                        See See Client#stompVersions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketFactory:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:29\n                            \n                        \n\n                \n                    \n                        See Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\nimport {\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType\n} from './types';\nimport {Versions} from './versions';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as Frame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:221\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, mssages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual https://stomp-js.github.io/stompjs/classes/Frame.html\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:40\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:63\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:76\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:83\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:90\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:98\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:103\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:219\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {RxStomp, RxStompConfig, RxStompState} from '@stomp/rx-stomp';\n\nimport {publishParams, Client, Message, Frame} from '@stomp/stompjs';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {StompState} from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport {StompConfig} from './stomp.config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(map((st: RxStompState): StompState => {\n      return StompRService._mapStompState(st);\n    }));\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = { };\n\n    if (typeof(config.url) === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string|publishParams, message?: string, headers: StompHeaders = {}): void {\n    if (typeof queueName === 'string') {\n      super.publish({destination: queueName as string, body: message, headers});\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, mssages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link https://stomp-js.github.io/stompjs/classes/Frame.html}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsubscribe:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:15\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n */\nexport class StompSubscription {\n  /**\n   * @internal\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nTODO: Example and caveat\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                abort\n                            \n                            \n                                    Public\n                                commit\n                            \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            abort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        abort:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:20\n                            \n                        \n\n                \n                    \n                        Abort this transaction. See Client#abort for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commit:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:15\n                            \n                        \n\n                \n                    \n                        Commit this transaction. See Client#commit for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:10\n                            \n                        \n\n                \n                    \n                        You will need to access this to send, ack, or nack within this transaction.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Transaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  public id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  public commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  public abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:21\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_0:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:8\n                            \n                        \n\n                \n                    \n                        1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:12\n                            \n                        \n\n                \n                    \n                        1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:16\n                            \n                        \n\n                \n                    \n                        1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        versions:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:42\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:35\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {\n  }\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map((x) => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompRpcConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompRPCService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n            \n            \n                function\n            \n            \n                rxStompServiceFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompService\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            \n                class\n            \n            \n                RxStompConfig\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            \n                class\n            \n            \n                RxStompRPCConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            \n                class\n            \n            \n                RxStompRPC\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            \n                class\n            \n            \n                RxStomp\n            \n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            \n                class\n            \n            \n                Client\n            \n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            \n                class\n            \n            \n                CompatClient\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            \n                class\n            \n            \n                Stomp\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/message.ts\n            \n            \n                class\n            \n            \n                Message\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            \n                class\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            \n                class\n            \n            \n                StompHeaders\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            \n                class\n            \n            \n                StompSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/transaction.ts\n            \n            \n                class\n            \n            \n                Transaction\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            \n                interface\n            \n            \n                IPublishParams\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            \n                interface\n            \n            \n                IRawFrameType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            \n                class\n            \n            \n                Versions\n            \n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.6\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n                            Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCheckCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            RawHeaderType   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        closeEventCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a CloseEvent\nas parameter.\n\n                        \n                    \n                \n                    \n                        closeEventCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debugFnType\n                    \n                \n                    \n                        \n                            This callback will receive a string as parameter.\n\n                        \n                    \n                \n                    \n                        debugFnType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        frameCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Frame as parameter.\n\n                        \n                    \n                \n                    \n                        frameCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\n\n                        \n                    \n                \n                    \n                        messageCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCheckCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\nThe callback will need to return a boolean value.\n\n                        \n                    \n                \n                    \n                        messageCheckCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        RawHeaderType\n                    \n                \n                    \n                        \n                            The parser yield frames in this structure\n\n                        \n                    \n                \n                    \n                        RawHeaderType:     [string, string]\n\n                    \n                \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n        \n            \n                \n                    \n                        \n                        setupReplyQueueFnType\n                    \n                \n                    \n                        \n                            See the guide for example\n\n                        \n                    \n                \n                    \n                        setupReplyQueueFnType:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
