var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/IPublishParams.html",[0,1.43,1,1.809]],["body/interfaces/IPublishParams.html",[0,2.043,1,2.219,2,0.302,3,0.302,4,0.255,5,1.557,6,0.518,7,1.33,8,2.963,9,0.351,10,1.032,11,1.623,12,3.405,13,2.884,14,3.096,15,1.972,16,3.762,17,3.762,18,0.882,19,0.042,20,2.963,21,1.42,22,2.537,23,2.963,24,1.31,25,2.978,26,1.414,27,2.963,28,2.963,29,2.963,30,2.62,31,1.754,32,1.965,33,2.963,34,2.963,35,0.762,36,1.44,37,0.128,38,2.447,39,2.978,40,0.632,41,1.557,42,1.78,43,1.997,44,2.289,45,1.78,46,1.104,47,0.805,48,0.894,49,1.78,50,1.78,51,1.78,52,2.079,53,2.079,54,2.079,55,1.78,56,2.079,57,1.78,58,2.079,59,1.78,60,1.78,61,1.78,62,2.537,63,1.557,64,2.079,65,0.025,66,0.025]],["title/interfaces/IRawFrameType.html",[0,1.43,63,1.809]],["body/interfaces/IRawFrameType.html",[0,2.143,1,1.7,2,0.33,3,0.33,4,0.279,5,1.7,7,1.33,8,2.269,9,0.384,10,1.098,11,1.261,12,3.518,13,2.401,14,2.36,15,1.941,16,2.269,17,3.91,18,0.877,19,0.042,20,2.269,21,1.412,22,1.943,23,2.269,24,1.098,25,2.711,26,1.083,27,2.269,28,2.269,29,2.269,30,2.632,31,1.343,32,1.505,33,2.269,34,2.269,35,0.799,36,1.481,37,0.14,38,2.517,39,3.077,40,0.646,41,1.7,42,1.943,43,2.076,44,2.401,45,1.943,46,1.205,47,0.879,48,0.976,49,1.943,50,1.943,51,1.943,52,2.269,53,2.269,54,2.269,55,1.943,56,2.269,57,1.943,58,2.269,59,1.943,60,1.943,61,1.943,62,3.348,63,2.36,64,3.91,65,0.026,66,0.026]],["title/injectables/InjectableRxStompConfig.html",[67,0.469,68,2.068]],["body/injectables/InjectableRxStompConfig.html",[2,0.52,3,0.52,4,0.44,19,0.038,35,0.933,37,0.261,40,0.52,65,0.035,66,0.035,67,0.872,68,3.616,69,1.385,70,3.064,71,2.118,72,2.118,73,1.899,74,2.5,75,2.373,76,0.081,77,1.899]],["title/injectables/InjectableRxStompRpcConfig.html",[67,0.469,78,1.809]],["body/injectables/InjectableRxStompRpcConfig.html",[2,0.518,3,0.518,4,0.438,19,0.038,35,0.931,37,0.26,40,0.518,65,0.035,66,0.035,67,0.871,69,1.381,70,3.054,71,2.111,72,2.111,73,1.893,75,2.366,76,0.081,77,1.893,78,3.157,79,2.111,80,2.796]],["title/classes/Message.html",[36,0.841,76,0.055]],["body/classes/Message.html",[2,0.365,3,0.365,4,0.309,6,0.627,9,0.425,10,1.422,13,1.668,15,1.755,18,0.656,19,0.041,24,1.33,30,2.596,35,0.746,36,1.65,37,0.155,38,1.488,40,0.365,43,1.794,44,1.668,65,0.028,66,0.028,76,0.077,77,2.167,81,2.514,82,2,83,2.241,84,2.894,85,4.116,86,3.379,87,1.885,88,3.817,89,1.528,90,1.698,91,3.755,92,4.385,93,1.276,94,0.946,95,3.062,96,3.495,97,4.081,98,4.081,99,1.949,100,2.707,101,4.116,102,3.062,103,4.116,104,3.062,105,3.062,106,3.062,107,2.514,108,3.062,109,3.062,110,2.514,111,3.062,112,3.062]],["title/classes/RxStompConfig.html",[74,1.43,76,0.055]],["body/classes/RxStompConfig.html",[2,0.17,3,0.17,4,0.144,6,0.293,9,0.198,10,0.666,11,1.555,15,1.199,18,0.747,19,0.042,21,0.756,24,1.209,26,0.912,31,2.277,32,2.751,35,0.534,37,0.277,38,1.65,40,0.17,41,2.088,43,0.623,46,1.015,47,1.274,65,0.016,66,0.016,72,0.694,74,1.131,76,0.043,82,1.131,83,1.268,89,0.971,90,1.792,93,1.203,94,1.077,99,1.331,113,2.331,114,2.331,115,1.911,116,2.088,117,2.088,118,1.331,119,2.328,120,2.328,121,3.396,122,3.396,123,3.396,124,3.291,125,3.396,126,3.396,127,3.396,128,3.396,129,3.396,130,3.396,131,1.429,132,1.911,133,1.911,134,2.277,135,2.328,136,2.328,137,1.911,138,1.911,139,1.429,140,4.335,141,4.335,142,2.328,143,1.429,144,1.636,145,2.088,146,2.328,147,2.328,148,1.911,149,3.396,150,3.396,151,1.747,152,2.328,153,1.429,154,2.387,155,1.911,156,1.911,157,1.911,158,2.328,159,2.788,160,1.911,161,2.328,162,2.328,163,2.328,164,1.636,165,1.268,166,1.636,167,2.328,168,1.429,169,1.911,170,1.268,171,1.429,172,1.636,173,2.328,174,3.204,175,1.429,176,1.911,177,2.788,178,2.788,179,3.291,180,2.818,181,3.291,182,2.328,183,1.429,184,1.911,185,2.328,186,1.429,187,1.911,188,1.431,189,2.328,190,2.328,191,2.552,192,1.429,193,2.387,194,1.636,195,1.911,196,2.788,197,3.291,198,1.911,199,2.328,200,1.948,201,2.328,202,2.328,203,1.429,204,2.465,205,1.636,206,2.328,207,2.387,208,1.636,209,2.328,210,3.396,211,2.788,212,2.328,213,2.328,214,2.328,215,2.328,216,0.778,217,1.429,218,2.328,219,1.636,220,2.328,221,1.429,222,1.429]],["title/classes/RxStompRPC.html",[76,0.055,223,1.809]],["body/classes/RxStompRPC.html",[2,0.261,3,0.261,4,0.22,6,0.448,7,0.992,9,0.303,11,1.105,12,2.28,13,1.766,14,1.344,15,1.144,18,0.616,19,0.042,24,0.927,35,0.867,36,1.368,37,0.242,40,0.261,47,1.574,65,0.022,66,0.022,71,1.576,76,0.06,79,2.569,80,2.328,82,1.576,84,2.28,87,1.795,89,0.927,90,1.521,94,0.888,99,1.271,100,1.766,113,2.078,114,2.078,117,1.344,118,1.875,148,1.795,151,1.413,165,2.328,216,1.19,223,1.994,224,1.795,225,2.28,226,3.927,227,3.927,228,1.766,229,2.629,230,3.006,231,1.19,232,1.795,233,3.51,234,2.186,235,1.576,236,1.515,237,1.344,238,3.243,239,4.065,240,2.186,241,4.276,242,3.749,243,3.173,244,3.128,245,3.243,246,2.186,247,1.537,248,2.186,249,2.186,250,1.795,251,2.662,252,1.537,253,2.28,254,1.19,255,3.51,256,3.51,257,3.51,258,3.51,259,2.186,260,1.795,261,1.795,262,2.662,263,2.186,264,2.186,265,2.186,266,2.186,267,3.243,268,3.243,269,3.243,270,2.186,271,2.186,272,2.186,273,2.717,274,2.186,275,2.186,276,3.243,277,2.186,278,2.186,279,2.186,280,2.186,281,3.243,282,3.865,283,2.186,284,2.186,285,2.186,286,1.994,287,2.186,288,2.186,289,1.537,290,2.186,291,2.186,292,2.186,293,2.186,294,2.186]],["title/classes/RxStompRPCConfig.html",[76,0.055,80,1.602]],["body/classes/RxStompRPCConfig.html",[2,0.374,3,0.374,4,0.317,6,0.642,9,0.436,10,1.197,11,1.436,18,0.75,19,0.041,21,1.289,26,1.64,35,0.854,36,0.898,37,0.254,40,0.499,65,0.028,66,0.028,71,1.525,72,1.525,76,0.078,79,2.542,80,2.279,87,1.938,89,1.346,90,1.71,94,0.961,113,2.288,114,2.288,118,1.845,165,2.734,216,1.709,229,3.377,236,1.64,244,2.573,247,2.206,253,3.53,254,2.279,260,3.435,261,3.435,262,4.416,295,5.23,296,5.021,297,3.139,298,3.53,299,4.184,300,3.435,301,4.184,302,3.139,303,3.435]],["title/injectables/RxStompRPCService.html",[67,0.469,304,2.068]],["body/injectables/RxStompRPCService.html",[2,0.429,3,0.429,4,0.362,6,0.735,7,0.922,11,1.437,18,0.573,19,0.04,35,0.959,36,1.307,37,0.268,40,0.429,65,0.031,66,0.031,67,0.843,69,1.452,71,2.221,73,1.566,75,1.956,76,0.067,77,1.566,78,3.252,79,2.442,87,1.613,94,0.825,118,1.408,151,1.991,165,2.488,223,2.81,225,3.212,226,2.949,227,2.949,228,2.488,229,2.209,231,1.956,232,3.751,233,4.341,236,1.408,237,2.209,254,1.956,255,2.949,256,2.949,257,2.949,304,3.212,305,2.81,306,2.949,307,2.221,308,3.252,309,3.593,310,3.593,311,3.593]],["title/injectables/RxStompService.html",[67,0.469,308,1.809]],["body/injectables/RxStompService.html",[2,0.517,3,0.517,4,0.437,19,0.04,35,0.929,37,0.22,40,0.517,65,0.035,66,0.035,67,0.87,69,1.377,73,1.888,75,2.359,76,0.081,77,1.888,118,2.009,305,2.663,308,3.151,312,3.556]],["title/classes/Stomp.html",[37,0.149,76,0.055]],["body/classes/Stomp.html",[2,0.23,3,0.23,4,0.194,6,0.395,7,0.757,9,0.268,10,0.844,11,0.844,18,0.571,19,0.042,21,1.171,26,0.756,35,0.535,37,0.248,40,0.23,44,1.05,46,1.749,47,1.595,48,0.681,65,0.02,66,0.02,76,0.091,82,1.951,83,1.607,87,0.681,89,0.844,90,1.139,93,1.257,94,0.823,99,1.156,100,2.585,117,1.814,134,1.434,144,3.041,151,2.134,160,3.551,170,2.836,188,2.468,191,1.607,200,2.439,204,3.249,205,2.074,207,2.074,208,2.074,219,2.519,225,1.356,235,1.951,236,1.404,237,1.186,273,2.519,313,1.583,314,2.95,315,2.95,316,3.528,317,4.014,318,2.95,319,3.583,320,1.928,321,2.95,322,2.95,323,2.422,324,2.95,325,2.95,326,2.95,327,2.95,328,2.95,329,4.014,330,2.95,331,2.95,332,4.562,333,1.928,334,2.074,335,2.95,336,4.562,337,2.95,338,2.95,339,3.551,340,2.95,341,1.928,342,3.295,343,2.95,344,2.422,345,2.95,346,3.583,347,2.95,348,2.95,349,2.95,350,2.95,351,2.95,352,3.295,353,2.95,354,2.95,355,4.014,356,2.942,357,2.95,358,2.95,359,3.583,360,1.928,361,1.928,362,1.928,363,1.928,364,2.95,365,2.95,366,1.583,367,1.928,368,1.928,369,1.928,370,1.928,371,2.95,372,1.928,373,1.928,374,1.928,375,2.95,376,1.928,377,1.928,378,2.95,379,1.928,380,1.928]],["title/injectables/StompConfig.html",[67,0.469,381,1.602]],["body/injectables/StompConfig.html",[2,0.266,3,0.266,4,0.225,6,0.456,7,0.844,9,0.309,10,0.94,15,1.7,18,0.768,19,0.042,21,1.279,24,1.234,25,2.403,26,1.289,31,1.598,32,2.623,35,0.596,37,0.167,40,0.266,47,1.372,48,1.7,65,0.022,66,0.022,67,0.623,69,1.584,73,0.971,76,0.041,82,1.598,83,1.791,89,1.234,93,0.844,94,1.107,115,2.7,116,2.022,117,2.654,124,3.955,133,2.7,134,2.097,144,3.386,145,3.266,154,2.312,155,2.7,156,2.7,157,2.7,164,2.312,165,1.791,169,2.7,170,1.791,174,3.671,176,2.7,177,3.543,178,3.543,179,3.955,180,3.595,181,4.199,184,2.7,188,2.022,193,2.312,200,1.598,204,2.022,205,2.312,207,2.312,216,1.213,228,1.791,300,3.543,303,2.7,334,2.312,342,2.7,381,1.791,382,1.829,383,1.791,384,4.316,385,4.316,386,4.316,387,2.228,388,2.228,389,3.289,390,3.289,391,3.289,392,2.228,393,2.228,394,3.289,395,3.289,396,4.316,397,2.228,398,3.289,399,2.7,400,3.289,401,3.289,402,2.228,403,3.289,404,3.289,405,3.289,406,3.289,407,3.289]],["title/classes/StompHeaders.html",[24,0.841,76,0.055]],["body/classes/StompHeaders.html",[2,0.488,3,0.488,4,0.412,6,0.837,7,1.05,9,0.568,15,1.88,19,0.039,21,1.456,24,1.416,31,1.987,37,0.207,40,0.488,48,1.443,65,0.034,66,0.034,76,0.092,93,1.05,94,0.94,99,1.603,107,3.357,138,3.357,154,3.892,408,3.481,409,3.357,410,4.089,411,4.089,412,3.357,413,4.089,414,4.089,415,4.089,416,4.089,417,4.089,418,4.089]],["title/injectables/StompRService.html",[67,0.469,419,1.809]],["body/injectables/StompRService.html",[2,0.112,3,0.112,4,0.094,6,0.191,7,0.825,9,0.13,10,0.739,11,0.739,13,1.177,14,1.001,15,1.774,18,0.412,19,0.042,21,1.206,22,1.144,24,0.988,26,1.013,30,1.866,31,2.315,32,1.882,35,0.664,36,1.45,37,0.259,38,1.866,39,1.001,40,0.112,42,1.144,43,1.853,44,0.509,46,1.596,47,1.646,48,1.573,51,3.251,65,0.011,66,0.018,67,0.345,69,1.445,73,0.407,74,1.05,75,0.509,76,0.04,77,0.407,83,1.882,84,1.817,89,0.465,90,1.584,91,1.817,93,0.555,94,1.024,96,2.26,98,3.006,99,1.013,100,1.994,116,1.801,118,0.638,132,1.336,134,2.421,137,2.639,140,1.774,141,2.122,145,1.589,151,2.016,166,1.817,170,1.751,172,2.429,174,1.144,187,1.336,188,2.125,193,1.519,194,1.144,200,0.454,211,0.768,216,0.509,219,0.657,228,1.408,230,1.144,231,1.177,235,0.791,236,1.26,237,0.575,239,2.122,242,3.006,243,2.405,244,2.54,247,0.657,250,0.768,251,1.336,252,1.144,254,1.177,258,0.768,273,1.144,286,1.589,289,1.817,298,2.808,307,1.256,316,0.657,334,2.574,344,2.122,352,2.122,356,2.122,381,0.886,383,1.408,399,1.774,412,1.336,419,1.001,420,3.195,421,0.768,422,1.628,423,1.336,424,1.628,425,1.628,426,1.628,427,2.639,428,1.336,429,2.122,430,1.336,431,1.336,432,2.122,433,1.336,434,1.144,435,2.837,436,2.585,437,3.215,438,1.628,439,1.628,440,2.161,441,2.161,442,2.161,443,2.161,444,2.161,445,0.935,446,0.935,447,0.935,448,1.628,449,0.935,450,1.628,451,2.585,452,1.628,453,1.628,454,3.456,455,1.628,456,0.935,457,2.585,458,1.628,459,1.628,460,1.628,461,1.628,462,1.628,463,1.628,464,1.628,465,1.628,466,1.628,467,2.585,468,1.628,469,1.628,470,1.628,471,1.628,472,1.628,473,1.628,474,1.628,475,0.935,476,2.585,477,2.585,478,3.215,479,3.215,480,1.628,481,1.628,482,1.628,483,1.628,484,1.628,485,1.628,486,1.628,487,1.628,488,1.628,489,1.628,490,1.628,491,2.929,492,1.628,493,1.628,494,1.628,495,1.628,496,1.628,497,3.215,498,0.935,499,3.215,500,2.585,501,2.585,502,1.628,503,0.935,504,0.935,505,4.252,506,2.585,507,1.336,508,1.628,509,1.628,510,2.585,511,2.585,512,1.628,513,1.628,514,2.161,515,0.935,516,0.935,517,1.628,518,2.585,519,1.628,520,1.628,521,1.628,522,0.935,523,0.935,524,3.839,525,0.935,526,0.935,527,0.935,528,0.935,529,2.585,530,0.935,531,0.935,532,0.935,533,0.935,534,2.122,535,1.774,536,0.768,537,0.935,538,2.585,539,0.935,540,0.935,541,0.935,542,1.628,543,0.935,544,0.935,545,0.935,546,0.935,547,0.935,548,0.935,549,0.935,550,0.935,551,0.935,552,0.935,553,0.935,554,1.628,555,0.935,556,0.935,557,0.935,558,0.935,559,0.935,560,0.935,561,0.935,562,0.935,563,0.935,564,0.935,565,1.628,566,0.935,567,0.935,568,0.935,569,0.935,570,0.935,571,1.628,572,0.935,573,0.935,574,0.935,575,0.935,576,0.935,577,0.935,578,0.935,579,0.935,580,0.935,581,0.768,582,0.935,583,0.935,584,0.935,585,0.935]],["title/injectables/StompService.html",[67,0.469,383,1.602]],["body/injectables/StompService.html",[2,0.395,3,0.395,4,0.334,6,0.887,7,0.85,11,0.947,18,0.528,19,0.042,35,0.876,36,1.239,37,0.26,40,0.395,47,1.052,48,1.53,65,0.03,66,0.03,67,0.77,69,1.378,73,1.443,76,0.062,77,1.443,87,1.53,89,1.382,90,1.378,94,0.761,96,2.327,97,2.718,116,2.972,151,2.235,166,2.327,228,1.803,230,2.327,231,2.632,236,1.297,244,2.665,252,3.047,254,2.36,298,2.327,307,2.492,381,2.792,383,2.36,419,2.972,423,3.558,427,2.718,428,2.718,429,2.718,430,2.718,431,2.718,432,2.718,433,2.718,507,2.718,536,2.718,581,2.718,586,2.718,587,4.334,588,3.31,589,4.334,590,4.334,591,3.31,592,2.718,593,3.31,594,3.31]],["title/classes/StompSubscription.html",[76,0.055,595,2.068]],["body/classes/StompSubscription.html",[2,0.457,3,0.457,4,0.386,6,0.784,9,0.532,10,1.36,15,1.679,18,0.611,19,0.041,21,0.983,24,1.36,35,0.695,37,0.194,40,0.457,43,1.669,65,0.032,66,0.032,76,0.089,87,1.679,88,3.905,89,1.36,90,1.72,93,1.221,94,0.88,99,1.864,110,3.144,235,2.312,286,2.355,408,3.344,595,3.804,596,3.144,597,5.672,598,3.83,599,4.757,600,3.144,601,3.83]],["title/classes/Transaction.html",[76,0.055,602,2.068]],["body/classes/Transaction.html",[2,0.408,3,0.408,4,0.345,6,0.699,9,0.474,10,1.265,18,0.782,19,0.041,21,1.26,40,0.408,43,1.928,46,1.928,65,0.03,66,0.03,76,0.082,86,3.632,87,1.832,89,1.537,90,1.825,91,3.11,92,3.632,93,1.332,94,1.127,99,1.339,235,1.66,286,3.191,289,3.11,323,3.632,602,4.036,603,2.804,604,3.416,605,3.416,606,3.416,607,5.507,608,5.507,609,3.416,610,4.424,611,3.416,612,4.424,613,3.416,614,3.416,615,3.416]],["title/classes/Versions.html",[76,0.055,191,1.602]],["body/classes/Versions.html",[2,0.314,3,0.314,4,0.266,6,0.539,7,0.676,9,0.365,10,1.061,11,0.753,18,0.784,19,0.042,21,1.456,26,1.828,30,1.803,37,0.258,40,0.314,47,1.482,48,1.516,65,0.025,66,0.025,76,0.087,82,1.803,90,1.789,94,1.204,100,2.02,134,1.803,145,2.281,151,2.032,159,4.187,191,3.064,194,2.608,195,3.046,196,4.187,197,4.187,200,1.28,204,2.281,208,3.019,231,1.434,235,1.803,236,1.032,316,3.876,592,3.046,600,2.162,616,2.162,617,4.663,618,4.663,619,4.663,620,4.663,621,4.663,622,2.633,623,2.633,624,3.71,625,3.71,626,3.71,627,3.71,628,3.71,629,2.633,630,2.633,631,2.633,632,2.633,633,2.633,634,2.633,635,3.71,636,2.633,637,2.633,638,2.633,639,2.633,640,2.633,641,2.633,642,2.633]],["title/coverage.html",[643,3.288]],["body/coverage.html",[0,1.929,1,1.785,4,0.293,5,2.441,18,0.463,19,0.041,24,0.83,36,0.83,37,0.278,63,1.785,65,0.027,66,0.027,67,0.858,68,2.04,69,1.742,70,2.79,71,1.929,72,2.475,74,1.411,76,0.107,78,1.785,79,1.929,80,1.581,81,2.383,93,0.745,113,2.363,114,2.363,118,1.138,164,2.04,170,1.581,180,3.58,191,1.581,200,1.411,223,1.785,224,2.383,304,2.04,305,2.781,306,2.383,307,1.411,308,1.785,312,2.383,313,2.383,339,2.383,381,2.161,382,2.383,383,1.581,408,3.18,409,2.383,419,1.785,420,2.04,421,2.383,586,2.383,595,2.04,596,2.383,602,2.04,603,2.383,616,2.383,643,2.383,644,2.903,645,2.903,646,4.863,647,2.903,648,2.903,649,2.383,650,2.383,651,4.524,652,3.969,653,5.795,654,2.903,655,3.969,656,2.903,657,3.969,658,4.524,659,2.903,660,2.903,661,2.903,662,2.903,663,2.903,664,2.903,665,2.903,666,2.903,667,2.903,668,2.903,669,2.903,670,2.903,671,2.903]],["title/dependencies.html",[434,2.485,672,2.461]],["body/dependencies.html",[19,0.038,65,0.036,66,0.036,434,3.28,673,4.666,674,4.666]],["title/miscellaneous/enumerations.html",[675,1.196,676,2.903]],["body/miscellaneous/enumerations.html",[9,0.588,19,0.034,37,0.274,65,0.034,66,0.034,69,1.347,113,2.06,114,2.06,118,1.661,134,2.459,172,2.98,198,3.48,307,2.06,366,4.154,420,2.98,435,4.154,534,4.154,535,4.154,675,2.06,676,3.48,677,2.98,678,5.603,679,4.239,680,5.409,681,4.239]],["title/miscellaneous/functions.html",[93,0.908,675,1.196]],["body/miscellaneous/functions.html",[7,1.137,9,0.615,11,1.266,19,0.038,37,0.263,65,0.035,66,0.035,69,1.407,74,2.152,93,1.137,236,1.735,305,2.723,307,2.523,649,4.262,650,4.262,675,2.152,677,3.113,682,4.428]],["title/index.html",[9,0.408,683,2.415]],["body/index.html",[0,2.245,19,0.036,65,0.036,66,0.036,67,0.736,76,0.086,683,3.792,684,4.619,685,4.619,686,4.619]],["title/modules.html",[687,3.288]],["body/modules.html",[19,0.037,65,0.037,66,0.037,687,3.869]],["title/miscellaneous/typealiases.html",[675,1.196,688,3.536]],["body/miscellaneous/typealiases.html",[5,2.28,7,1.415,9,0.515,18,0.591,19,0.032,21,1.309,25,2.28,30,2.265,36,1.333,37,0.236,38,2.734,39,3.389,41,3.135,45,3.584,46,1.616,47,1.178,48,1.309,49,3.584,50,3.584,55,3.584,57,2.606,59,2.606,60,2.606,61,2.606,62,3.584,65,0.032,66,0.032,72,2.265,79,2.265,87,1.309,89,1.06,93,1.444,113,1.802,114,1.802,229,2.28,253,3.584,675,1.802,677,2.606,689,3.708,690,5.626]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":180,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["0/1",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":196,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":197,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1.6",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":159,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":685,"title":{},"body":{"index.html":{}}}],["18/18",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":686,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":395,"title":{},"body":{"injectables/StompConfig.html":{}}}],["20000",{"_index":394,"title":{},"body":{"injectables/StompConfig.html":{}}}],["21/24",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":401,"title":{},"body":{"injectables/StompConfig.html":{}}}],["50",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":400,"title":{},"body":{"injectables/StompConfig.html":{}}}],["6/6",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":684,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["_mapstompstate(st",{"_index":537,"title":{},"body":{"injectables/StompRService.html":{}}}],["_repliesobserv",{"_index":265,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuenam",{"_index":259,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueu",{"_index":263,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":607,"title":{},"body":{"classes/Transaction.html":{}}}],["accept",{"_index":411,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":86,"title":{},"body":{"classes/Message.html":{},"classes/Transaction.html":{}}}],["accessor",{"_index":439,"title":{},"body":{"injectables/StompRService.html":{}}}],["ack",{"_index":91,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{}}}],["acknowledg",{"_index":98,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{}}}],["act",{"_index":314,"title":{},"body":{"classes/Stomp.html":{}}}],["activemq",{"_index":301,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["actual",{"_index":479,"title":{},"body":{"injectables/StompRService.html":{}}}],["ad",{"_index":29,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["addit",{"_index":414,"title":{},"body":{"classes/StompHeaders.html":{}}}],["addition",{"_index":519,"title":{},"body":{"injectables/StompRService.html":{}}}],["advanc",{"_index":426,"title":{},"body":{"injectables/StompRService.html":{}}}],["alias",{"_index":689,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":356,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["alreadi",{"_index":511,"title":{},"body":{"injectables/StompRService.html":{}}}],["altern",{"_index":342,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["alway",{"_index":513,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular/cor",{"_index":73,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":252,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["anoth",{"_index":365,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":274,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":625,"title":{},"body":{"classes/Versions.html":{}}}],["asynchron",{"_index":432,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["attempt",{"_index":193,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["attribut",{"_index":120,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":399,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["automat",{"_index":187,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["avail",{"_index":413,"title":{},"body":{"classes/StompHeaders.html":{}}}],["base",{"_index":487,"title":{},"body":{"injectables/StompRService.html":{}}}],["beat",{"_index":556,"title":{},"body":{"injectables/StompRService.html":{}}}],["befor",{"_index":133,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["beforeconnect",{"_index":121,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["behaviorsubject",{"_index":497,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.clos",{"_index":583,"title":{},"body":{"injectables/StompRService.html":{}}}],["binari",{"_index":20,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["binarybodi",{"_index":12,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{}}}],["bodi",{"_index":13,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body]{@link",{"_index":108,"title":{},"body":{"classes/Message.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["both",{"_index":150,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":31,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":122,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["call",{"_index":99,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["call.html",{"_index":257,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callabl",{"_index":349,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":38,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":104,"title":{},"body":{"classes/Message.html":{}}}],["carri",{"_index":476,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":321,"title":{},"body":{"classes/Stomp.html":{}}}],["caveat",{"_index":606,"title":{},"body":{"classes/Transaction.html":{}}}],["chang",{"_index":135,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["check",{"_index":163,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":76,"title":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["cleanup",{"_index":293,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":170,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["client#abort",{"_index":610,"title":{},"body":{"classes/Transaction.html":{}}}],["client#abort]{@link",{"_index":615,"title":{},"body":{"classes/Transaction.html":{}}}],["client#ack",{"_index":101,"title":{},"body":{"classes/Message.html":{}}}],["client#ack]{@link",{"_index":111,"title":{},"body":{"classes/Message.html":{}}}],["client#begin",{"_index":604,"title":{},"body":{"classes/Transaction.html":{}}}],["client#brokerurl",{"_index":210,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":220,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#commit",{"_index":612,"title":{},"body":{"classes/Transaction.html":{}}}],["client#commit]{@link",{"_index":614,"title":{},"body":{"classes/Transaction.html":{}}}],["client#nack",{"_index":103,"title":{},"body":{"classes/Message.html":{}}}],["client#nack]{@link",{"_index":112,"title":{},"body":{"classes/Message.html":{}}}],["client#onunhandledmessag",{"_index":85,"title":{},"body":{"classes/Message.html":{}}}],["client#onunhandledmessage]{@link",{"_index":105,"title":{},"body":{"classes/Message.html":{}}}],["client#publish",{"_index":8,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#publish]{@link",{"_index":58,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#subscrib",{"_index":88,"title":{},"body":{"classes/Message.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":110,"title":{},"body":{"classes/Message.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscrib",{"_index":599,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":601,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client(url",{"_index":331,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":348,"title":{},"body":{"classes/Stomp.html":{}}}],["client.t",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closeev",{"_index":57,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":52,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["closeeventcallbacktyp",{"_index":55,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["combin",{"_index":484,"title":{},"body":{"injectables/StompRService.html":{}}}],["command",{"_index":64,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["commit",{"_index":608,"title":{},"body":{"classes/Transaction.html":{}}}],["compat",{"_index":360,"title":{},"body":{"classes/Stomp.html":{}}}],["compatcli",{"_index":339,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":378,"title":{},"body":{"classes/Stomp.html":{}}}],["complaint",{"_index":485,"title":{},"body":{"injectables/StompRService.html":{}}}],["complet",{"_index":486,"title":{},"body":{"injectables/StompRService.html":{}}}],["compodoc/compodoc",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":254,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":551,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":563,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.head",{"_index":569,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":558,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":560,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":562,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.t",{"_index":72,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:105",{"_index":131,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:18",{"_index":297,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:19",{"_index":143,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":302,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:32",{"_index":192,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:35",{"_index":168,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:58",{"_index":203,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:65",{"_index":186,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:72",{"_index":175,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:79",{"_index":183,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:88",{"_index":153,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:95",{"_index":171,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.url",{"_index":554,"title":{},"body":{"injectables/StompRService.html":{}}}],["configur",{"_index":116,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["connect",{"_index":134,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{}}}],["connecthead",{"_index":123,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["connectobserv",{"_index":440,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.log(new",{"_index":566,"title":{},"body":{"injectables/StompRService.html":{}}}],["consolidated/.../rx",{"_index":677,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":679,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.t",{"_index":690,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":69,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["consolidated/rx",{"_index":113,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.t",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.t",{"_index":313,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:20",{"_index":320,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:31",{"_index":333,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:70",{"_index":341,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/message.t",{"_index":81,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/message.ts:18",{"_index":95,"title":{},"body":{"classes/Message.html":{}}}],["consolidated/stompjs/src/message.ts:25",{"_index":102,"title":{},"body":{"classes/Message.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":408,"title":{},"body":{"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/transaction.t",{"_index":603,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/transaction.ts:10",{"_index":613,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/transaction.ts:15",{"_index":611,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/transaction.ts:20",{"_index":609,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/types.t",{"_index":5,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.t",{"_index":616,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:12",{"_index":630,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:16",{"_index":631,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:21",{"_index":623,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:29",{"_index":632,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":634,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:42",{"_index":633,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:8",{"_index":629,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":273,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":231,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":587,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":266,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(publ",{"_index":639,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":232,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(vers",{"_index":622,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":415,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":27,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["correlationid",{"_index":282,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":489,"title":{},"body":{"injectables/StompRService.html":{}}}],["coverag",{"_index":643,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":416,"title":{},"body":{"classes/StompHeaders.html":{}}}],["creat",{"_index":235,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["current",{"_index":500,"title":{},"body":{"injectables/StompRService.html":{}}}],["date",{"_index":567,"title":{},"body":{"injectables/StompRService.html":{}}}],["debug",{"_index":124,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["debugfntyp",{"_index":41,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["declar",{"_index":628,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":26,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["defaultmessagesobserv",{"_index":442,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscript",{"_index":281,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":294,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defin",{"_index":94,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["delay",{"_index":189,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["depend",{"_index":434,"title":{"dependencies.html":{}},"body":{"injectables/StompRService.html":{},"dependencies.html":{}}}],["deprec",{"_index":370,"title":{},"body":{"classes/Stomp.html":{}}}],["descript",{"_index":6,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["design",{"_index":473,"title":{},"body":{"injectables/StompRService.html":{}}}],["destin",{"_index":14,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["detail",{"_index":165,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{}}}],["disabl",{"_index":181,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["disconnect",{"_index":172,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["disconnecthead",{"_index":125,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["document",{"_index":164,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["documentation/rpc",{"_index":256,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["drop",{"_index":459,"title":{},"body":{"injectables/StompRService.html":{}}}],["dure",{"_index":194,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":206,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":481,"title":{},"body":{"injectables/StompRService.html":{}}}],["element",{"_index":626,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":499,"title":{},"body":{"injectables/StompRService.html":{}}}],["enabl",{"_index":169,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["end",{"_index":22,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["enumer",{"_index":676,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":325,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":529,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":444,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":431,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["establish",{"_index":506,"title":{},"body":{"injectables/StompRService.html":{}}}],["even",{"_index":458,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":520,"title":{},"body":{"injectables/StompRService.html":{}}}],["evt",{"_index":56,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["exampl",{"_index":89,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["explicitli",{"_index":462,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":40,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["extend",{"_index":77,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factori",{"_index":315,"title":{},"body":{"classes/Stomp.html":{}}}],["factory.t",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["field",{"_index":461,"title":{},"body":{"injectables/StompRService.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":248,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":249,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["frame",{"_index":30,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame#bodi",{"_index":109,"title":{},"body":{"classes/Message.html":{}}}],["frame#head",{"_index":107,"title":{},"body":{"classes/Message.html":{},"classes/StompHeaders.html":{}}}],["framecallbacktyp",{"_index":50,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":93,"title":{"miscellaneous/functions.html":{}},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["get",{"_index":453,"title":{},"body":{"injectables/StompRService.html":{}}}],["getclient",{"_index":532,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobserv",{"_index":503,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobserv",{"_index":522,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":527,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobserv",{"_index":525,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobserv",{"_index":515,"title":{},"body":{"injectables/StompRService.html":{}}}],["guid",{"_index":229,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"miscellaneous/typealiases.html":{}}}],["guide](../addit",{"_index":255,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["hack",{"_index":364,"title":{},"body":{"classes/Stomp.html":{}}}],["handl",{"_index":427,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshak",{"_index":195,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":15,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.t",{"_index":409,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:8",{"_index":418,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correl",{"_index":291,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['repli",{"_index":290,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":106,"title":{},"body":{"classes/Message.html":{}}}],["heart",{"_index":555,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":177,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["heartbeat_in",{"_index":384,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeat_out",{"_index":385,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeatincom",{"_index":126,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatoutgo",{"_index":127,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["host",{"_index":157,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["host:str",{"_index":389,"title":{},"body":{"injectables/StompConfig.html":{}}}],["html5",{"_index":346,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":53,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["https://stomp",{"_index":141,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["id",{"_index":286,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["identifi",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":512,"title":{},"body":{"injectables/StompRService.html":{}}}],["immedi",{"_index":137,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["impact",{"_index":136,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implement",{"_index":225,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{}}}],["import",{"_index":35,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["incom",{"_index":176,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["initandconnect",{"_index":436,"title":{},"body":{"injectables/StompRService.html":{}}}],["initi",{"_index":507,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["inject",{"_index":67,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":68,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"coverage.html":{}}}],["injectablerxstomprpcconfig",{"_index":78,"title":{"injectables/InjectableRxStompRpcConfig.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["instanc",{"_index":82,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["instead",{"_index":372,"title":{},"body":{"classes/Stomp.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"index.html":{}}}],["intern",{"_index":600,"title":{},"body":{"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["interv",{"_index":178,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["invok",{"_index":132,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["ipublishparam",{"_index":1,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{}}}],["irawframetyp",{"_index":63,"title":{"interfaces/IRawFrameType.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{}}}],["issu",{"_index":471,"title":{},"body":{"injectables/StompRService.html":{}}}],["javascript",{"_index":219,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["js.github.io/stompjs/classes/client.html#beforeconnect",{"_index":142,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#brokerurl",{"_index":152,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#connecthead",{"_index":167,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#disconnecthead",{"_index":173,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatincom",{"_index":182,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatoutgo",{"_index":185,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#reconnectdelay",{"_index":190,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#stompvers",{"_index":202,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#watchforreceipt",{"_index":496,"title":{},"body":{"injectables/StompRService.html":{}}}],["js.github.io/stompjs/classes/client.html#websocketfactori",{"_index":215,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/frame.html",{"_index":490,"title":{},"body":{"injectables/StompRService.html":{}}}],["key",{"_index":154,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["klass",{"_index":376,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":377,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":271,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["leav",{"_index":465,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":28,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["lf",{"_index":417,"title":{},"body":{"classes/StompHeaders.html":{}}}],["librari",{"_index":429,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["line:vari",{"_index":363,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":44,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["list",{"_index":424,"title":{},"body":{"injectables/StompRService.html":{}}}],["local",{"_index":450,"title":{},"body":{"injectables/StompRService.html":{}}}],["localhost",{"_index":406,"title":{},"body":{"injectables/StompConfig.html":{}}}],["locat",{"_index":335,"title":{},"body":{"classes/Stomp.html":{}}}],["login",{"_index":155,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["make",{"_index":241,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["mani",{"_index":410,"title":{},"body":{"classes/StompHeaders.html":{}}}],["manual",{"_index":97,"title":{},"body":{"classes/Message.html":{},"injectables/StompService.html":{}}}],["map",{"_index":140,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["mark",{"_index":161,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["match",{"_index":66,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mean",{"_index":464,"title":{},"body":{"injectables/StompRService.html":{}}}],["messag",{"_index":36,"title":{"classes/Message.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correl",{"_index":285,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["messagecallbacktyp",{"_index":45,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["messagecheckcallbacktyp",{"_index":49,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":100,"title":{},"body":{"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["millisecond",{"_index":179,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["miscellan",{"_index":675,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":470,"title":{},"body":{"injectables/StompRService.html":{}}}],["modul",{"_index":687,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":350,"title":{},"body":{"classes/Stomp.html":{}}}],["mozwebsocket",{"_index":367,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":42,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["mssage",{"_index":469,"title":{},"body":{"injectables/StompRService.html":{}}}],["nack",{"_index":92,"title":{},"body":{"classes/Message.html":{},"classes/Transaction.html":{}}}],["name",{"_index":236,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":46,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["neeed",{"_index":390,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":200,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":362,"title":{},"body":{"classes/Stomp.html":{}}}],["nodej",{"_index":324,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":322,"title":{},"body":{"classes/Stomp.html":{}}}],["note",{"_index":466,"title":{},"body":{"injectables/StompRService.html":{}}}],["null",{"_index":319,"title":{},"body":{"classes/Stomp.html":{}}}],["number",{"_index":174,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["object",{"_index":117,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["observ",{"_index":244,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.cr",{"_index":279,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occur",{"_index":510,"title":{},"body":{"injectables/StompRService.html":{}}}],["on",{"_index":148,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onc",{"_index":351,"title":{},"body":{"classes/Stomp.html":{}}}],["open",{"_index":681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oper",{"_index":478,"title":{},"body":{"injectables/StompRService.html":{}}}],["option",{"_index":11,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":347,"title":{},"body":{"classes/Stomp.html":{}}}],["out",{"_index":477,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgo",{"_index":184,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["over",{"_index":318,"title":{},"body":{"classes/Stomp.html":{}}}],["over(w",{"_index":340,"title":{},"body":{"classes/Stomp.html":{}}}],["overrid",{"_index":627,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":683,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":672,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":243,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["paramet",{"_index":7,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["params.head",{"_index":275,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["parser",{"_index":59,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["part",{"_index":635,"title":{},"body":{"classes/Versions.html":{}}}],["pass",{"_index":83,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passcod",{"_index":156,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["pleas",{"_index":228,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["point",{"_index":23,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["possibl",{"_index":366,"title":{},"body":{"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":209,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["present",{"_index":162,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":368,"title":{},"body":{"classes/Stomp.html":{}}}],["privat",{"_index":258,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedur",{"_index":227,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["properti",{"_index":10,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":332,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolvers",{"_index":620,"title":{},"body":{"classes/Versions.html":{}}}],["provid",{"_index":517,"title":{},"body":{"injectables/StompRService.html":{}}}],["public",{"_index":90,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["publish",{"_index":437,"title":{},"body":{"injectables/StompRService.html":{}}}],["publish(queuenam",{"_index":448,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparam",{"_index":239,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["pubparam",{"_index":576,"title":{},"body":{"injectables/StompRService.html":{}}}],["queu",{"_index":451,"title":{},"body":{"injectables/StompRService.html":{}}}],["queue",{"_index":298,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":261,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuenam",{"_index":454,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.servic",{"_index":591,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":421,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:127",{"_index":447,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:138",{"_index":446,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:152",{"_index":449,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:178",{"_index":456,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:210",{"_index":475,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:214",{"_index":533,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:216",{"_index":445,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:35",{"_index":498,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:58",{"_index":504,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:71",{"_index":516,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:78",{"_index":523,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:85",{"_index":526,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:93",{"_index":528,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:98",{"_index":531,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":300,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["random",{"_index":483,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":492,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":422,"title":{},"body":{"injectables/StompRService.html":{}}}],["rawheadertyp",{"_index":62,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["re)connect",{"_index":509,"title":{},"body":{"injectables/StompRService.html":{}}}],["readm",{"_index":589,"title":{},"body":{"injectables/StompService.html":{}}}],["receipt",{"_index":51,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":491,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobserv",{"_index":443,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiv",{"_index":39,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["recent",{"_index":518,"title":{},"body":{"injectables/StompRService.html":{}}}],["reconnect",{"_index":188,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["reconnect_delay",{"_index":386,"title":{},"body":{"injectables/StompConfig.html":{}}}],["reconnectdelay",{"_index":128,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["refer",{"_index":403,"title":{},"body":{"injectables/StompConfig.html":{}}}],["remark",{"_index":373,"title":{},"body":{"classes/Stomp.html":{}}}],["remot",{"_index":226,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["repli",{"_index":262,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuenam",{"_index":295,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["repres",{"_index":115,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["request",{"_index":242,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":327,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":330,"title":{},"body":{"classes/Stomp.html":{}}}],["respons",{"_index":521,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscrib",{"_index":460,"title":{},"body":{"injectables/StompRService.html":{}}}],["result",{"_index":65,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":47,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["rpc",{"_index":79,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(param",{"_index":238,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.t",{"_index":306,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:13",{"_index":309,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.t",{"_index":224,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:23",{"_index":234,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:42",{"_index":240,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:50",{"_index":246,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserv",{"_index":280,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(messag",{"_index":288,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["run",{"_index":405,"title":{},"body":{"injectables/StompConfig.html":{}}}],["rx",{"_index":71,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxj",{"_index":247,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/oper",{"_index":250,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":118,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rxstomp#configur",{"_index":119,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":217,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactiv",{"_index":222,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativ",{"_index":139,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":221,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp.publish({destin",{"_index":494,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":493,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig",{"_index":74,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompconfig#websocketfactori",{"_index":149,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":218,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":553,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connecthead",{"_index":568,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":564,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincom",{"_index":557,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgo",{"_index":559,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":561,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompvers",{"_index":199,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactori",{"_index":211,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":223,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstomprpcconfig",{"_index":80,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstomprpcservic",{"_index":304,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstompservic",{"_index":308,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{}}}],["rxstompservicefactori",{"_index":650,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":682,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstat",{"_index":534,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.clos",{"_index":542,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connect",{"_index":539,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":541,"title":{},"body":{"injectables/StompRService.html":{}}}],["safe",{"_index":457,"title":{},"body":{"injectables/StompRService.html":{}}}],["sampl",{"_index":590,"title":{},"body":{"injectables/StompService.html":{}}}],["second",{"_index":396,"title":{},"body":{"injectables/StompConfig.html":{}}}],["see",{"_index":87,"title":{},"body":{"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":289,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{}}}],["sent",{"_index":412,"title":{},"body":{"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequenc",{"_index":482,"title":{},"body":{"injectables/StompRService.html":{}}}],["server",{"_index":334,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["serverheadersobserv",{"_index":441,"title":{},"body":{"injectables/StompRService.html":{}}}],["servic",{"_index":307,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":32,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":530,"title":{},"body":{"injectables/StompRService.html":{}}}],["setup",{"_index":303,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["setupreplyqueu",{"_index":296,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntyp",{"_index":253,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":502,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":205,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["skip",{"_index":34,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["skipcontentlengthhead",{"_index":16,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["socket",{"_index":355,"title":{},"body":{"classes/Stomp.html":{}}}],["sockj",{"_index":207,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":214,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":407,"title":{},"body":{"injectables/StompConfig.html":{}}}],["soon",{"_index":452,"title":{},"body":{"injectables/StompRService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["specif",{"_index":166,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specifi",{"_index":345,"title":{},"body":{"classes/Stomp.html":{}}}],["st",{"_index":538,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":160,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["state",{"_index":435,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":316,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["statu",{"_index":501,"title":{},"body":{"injectables/StompRService.html":{}}}],["stomp",{"_index":37,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":343,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":379,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":369,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":338,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":536,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.j",{"_index":428,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.ov",{"_index":371,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(funct",{"_index":357,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.servic",{"_index":310,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.t",{"_index":312,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.t",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":329,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/rx",{"_index":75,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{}}}],["stomp/src/rx",{"_index":114,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.j",{"_index":423,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":216,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["stompconfig",{"_index":381,"title":{"injectables/StompConfig.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomphead",{"_index":24,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompj",{"_index":326,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs.stomp",{"_index":328,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/src/inject",{"_index":70,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"coverage.html":{}}}],["stompjs/src/rx",{"_index":305,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/stomp",{"_index":420,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/stomp.config.t",{"_index":382,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["stompjs/src/stomp.config.ts:24",{"_index":402,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:31",{"_index":388,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:38",{"_index":392,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:46",{"_index":393,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:54",{"_index":397,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:57",{"_index":387,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.service.t",{"_index":586,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/stomp.service.ts:20",{"_index":588,"title":{},"body":{"injectables/StompService.html":{}}}],["stomprpcconfig",{"_index":233,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuenam",{"_index":267,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueu",{"_index":269,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservic",{"_index":419,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomprservice._mapstompstate(st",{"_index":546,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservic",{"_index":383,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompstat",{"_index":535,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.clos",{"_index":544,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connect",{"_index":514,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnect",{"_index":543,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.tri",{"_index":540,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscript",{"_index":595,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompvers",{"_index":129,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["str",{"_index":565,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":230,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stream(param",{"_index":245,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["string|publishparam",{"_index":573,"title":{},"body":{"injectables/StompRService.html":{}}}],["structur",{"_index":61,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":524,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscrib",{"_index":96,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscribe((messag",{"_index":287,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribe(queuenam",{"_index":455,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscript",{"_index":84,"title":{},"body":{"classes/Message.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["subscription.t",{"_index":596,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:15",{"_index":598,"title":{},"body":{"classes/StompSubscription.html":{}}}],["suitabl",{"_index":299,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":581,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":311,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish(pubparam",{"_index":577,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish({destin",{"_index":575,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":579,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":208,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["supportedvers",{"_index":621,"title":{},"body":{"classes/Versions.html":{}}}],["tabl",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":624,"title":{},"body":{"classes/Versions.html":{}}}],["tcp",{"_index":354,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":260,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporari",{"_index":468,"title":{},"body":{"injectables/StompRService.html":{}}}],["test.destin",{"_index":495,"title":{},"body":{"injectables/StompRService.html":{}}}],["this._repliesobserv",{"_index":276,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((messag",{"_index":284,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuenam",{"_index":268,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueu",{"_index":270,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuenam",{"_index":277,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompcli",{"_index":580,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.activ",{"_index":572,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.config",{"_index":593,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":570,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe(map((st",{"_index":545,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":584,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactiv",{"_index":571,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.initandconnect",{"_index":594,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":278,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destin",{"_index":292,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessag",{"_index":264,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverhead",{"_index":547,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stat",{"_index":582,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":585,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperror",{"_index":550,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":272,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessag",{"_index":548,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipt",{"_index":549,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":640,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map((x",{"_index":641,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuenam",{"_index":578,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":158,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["time",{"_index":508,"title":{},"body":{"injectables/StompRService.html":{}}}],["todo",{"_index":605,"title":{},"body":{"classes/Transaction.html":{}}}],["transact",{"_index":602,"title":{"classes/Transaction.html":{}},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["transport",{"_index":353,"title":{},"body":{"classes/Stomp.html":{}}}],["tri",{"_index":198,"title":{},"body":{"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["trigger",{"_index":505,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":33,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["tslint:dis",{"_index":361,"title":{},"body":{"classes/Stomp.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":688,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":574,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(config.url",{"_index":552,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(w",{"_index":380,"title":{},"body":{"classes/Stomp.html":{}}}],["typic",{"_index":145,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["uint8array",{"_index":17,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["underli",{"_index":352,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":463,"title":{},"body":{"injectables/StompRService.html":{}}}],["uniqu",{"_index":480,"title":{},"body":{"injectables/StompRService.html":{}}}],["unless",{"_index":425,"title":{},"body":{"injectables/StompRService.html":{}}}],["unsubscrib",{"_index":597,"title":{},"body":{"classes/StompSubscription.html":{}}}],["url",{"_index":144,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["us",{"_index":151,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["us/docs/web/api/closeev",{"_index":54,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["usag",{"_index":213,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":344,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["uuid",{"_index":251,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":283,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replac",{"_index":642,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":617,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":618,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":619,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":138,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["valu",{"_index":48,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["var",{"_index":336,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":191,"title":{"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["versions(['1.0",{"_index":201,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions([versions.v1_0",{"_index":636,"title":{},"body":{"classes/Versions.html":{}}}],["versions.default.protocolvers",{"_index":374,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_1",{"_index":637,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":638,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":430,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["virtual",{"_index":391,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":43,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["wait",{"_index":398,"title":{},"body":{"injectables/StompConfig.html":{}}}],["waitforreceipt",{"_index":438,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":474,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":592,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watch",{"_index":488,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":472,"title":{},"body":{"injectables/StompRService.html":{}}}],["websocket",{"_index":204,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/w",{"_index":212,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/w",{"_index":358,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":317,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactori",{"_index":130,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["wire",{"_index":433,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":323,"title":{},"body":{"classes/Stomp.html":{},"classes/Transaction.html":{}}}],["work",{"_index":467,"title":{},"body":{"injectables/StompRService.html":{}}}],["ws",{"_index":359,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":404,"title":{},"body":{"injectables/StompConfig.html":{}}}],["ws://broker.329broker.com:15674/w",{"_index":146,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":337,"title":{},"body":{"classes/Stomp.html":{}}}],["wsfn",{"_index":375,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/w",{"_index":147,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ye",{"_index":237,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":60,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Frame} from './frame';\nimport {Message} from './message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRawFrameType.html":{"url":"interfaces/IRawFrameType.html","title":"interface - IRawFrameType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRawFrameType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     RawHeaderType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RawHeaderType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Frame} from './frame';\nimport {Message} from './message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompConfig} from '@stomp/rx-stomp';\n\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRpcConfig.html":{"url":"injectables/InjectableRxStompRpcConfig.html","title":"injectable - InjectableRxStompRpcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRpcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompRPCConfig} from '@stomp/rx-stomp';\n\n@Injectable()\nexport class InjectableRxStompRpcConfig extends RxStompRPCConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended Frame, you can access headers\nand body as properties.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    Frame\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ack\n                            \n                            \n                                    Public\n                                nack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:18\n                            \n                        \n\n                \n                    \n                        When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nack:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:25\n                            \n                        \n\n                \n                    \n                        When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Frame} from './frame';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link Frame}, you can access [headers]{@link Frame#headers}\n * and [body]{@link Frame#body} as properties.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport class Message extends Frame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  public ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  public nack: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeConnect:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:105\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        brokerURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:19\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     debugFnType\n\n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disconnectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatIncoming:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatOutgoing:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnectDelay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:65\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stompVersions:     Versions\n\n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketFactory:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:58\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n */\n\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n   */\n  public stompVersions?: Versions;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n   */\n  public beforeConnect?: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:23\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:42\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:50\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport {Message, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueueName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:18\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setupReplyQueue:     setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:22\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of RPC service using messaging.\nPlease see the guide for details.\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRpcConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRpcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\n\nimport {RxStompRPC} from '@stomp/rx-stomp';\nimport {RxStompService} from './rx-stomp.service';\nimport {InjectableRxStompRpcConfig} from './injectable-rx-stomp-rpc-config';\n\n/**\n * An implementation of RPC service using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(rxStomp: RxStompService, @Optional() stompRPCConfig?: InjectableRxStompRpcConfig) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n@Injectable()\nexport class RxStompService extends RxStomp { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WebSocketClass:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:20\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:31\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:70\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from '../versions';\nimport {CompatClient} from './compat-client';\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.default.protocolVersions(); }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   */\n  public static over(ws: any): CompatClient {\n    const wsFn = typeof(ws) === 'function' ? ws : () => ws;\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StompHeaders } from '@stomp/stompjs';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as Frame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:216\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:138\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:152\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:178\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, mssages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual https://stomp-js.github.io/stompjs/classes/Frame.html\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:35\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:58\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:71\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:78\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:85\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:93\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:98\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:214\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {RxStomp, RxStompConfig, RxStompState} from '@stomp/rx-stomp';\n\nimport {publishParams, Client, Message, Frame} from '@stomp/stompjs';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {StompState} from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport {StompConfig} from './stomp.config';\n\n/**\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(map((st: RxStompState): StompState => {\n      return StompRService._mapStompState(st);\n    }));\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = { };\n\n    if (typeof(config.url) === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string|publishParams, message?: string, headers: StompHeaders = {}): void {\n    if (typeof queueName === 'string') {\n      super.publish({destination: queueName as string, body: message, headers});\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, mssages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link https://stomp-js.github.io/stompjs/classes/Frame.html}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsubscribe:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:15\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n */\nexport class StompSubscription {\n  /**\n   * @internal\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nTODO: Example and caveat\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                abort\n                            \n                            \n                                    Public\n                                commit\n                            \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            abort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        abort:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:20\n                            \n                        \n\n                \n                    \n                        Abort this transaction. See Client#abort for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commit:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:15\n                            \n                        \n\n                \n                    \n                        Commit this transaction. See Client#commit for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:10\n                            \n                        \n\n                \n                    \n                        You will need to access this to send, ack, or nack within this transaction.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Transaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  public id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  public commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  public abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:21\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_0:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:8\n                            \n                        \n\n                \n                    \n                        1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:12\n                            \n                        \n\n                \n                    \n                        1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:16\n                            \n                        \n\n                \n                    \n                        1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        versions:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:42\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:35\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {\n  }\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map((x) => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompRpcConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompRPCService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n            \n            \n                function\n            \n            \n                rxStompServiceFactory\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            \n                class\n            \n            \n                RxStompConfig\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            \n                class\n            \n            \n                RxStompRPCConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            \n                class\n            \n            \n                RxStompRPC\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            \n                class\n            \n            \n                RxStomp\n            \n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            \n                class\n            \n            \n                Client\n            \n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            \n                class\n            \n            \n                CompatClient\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            \n                class\n            \n            \n                Stomp\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/message.ts\n            \n            \n                class\n            \n            \n                Message\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            \n                class\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            \n                class\n            \n            \n                StompHeaders\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            \n                class\n            \n            \n                StompSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/transaction.ts\n            \n            \n                class\n            \n            \n                Transaction\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            \n                interface\n            \n            \n                IPublishParams\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            \n                interface\n            \n            \n                IRawFrameType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            \n                class\n            \n            \n                Versions\n            \n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.6\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCheckCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            RawHeaderType   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        closeEventCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a CloseEvent\nas parameter.\n\n                        \n                    \n                \n                    \n                        closeEventCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debugFnType\n                    \n                \n                    \n                        \n                            This callback will receive a string as parameter.\n\n                        \n                    \n                \n                    \n                        debugFnType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        frameCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Frame as parameter.\n\n                        \n                    \n                \n                    \n                        frameCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\n\n                        \n                    \n                \n                    \n                        messageCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCheckCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\nThe callback will need to return a boolean value.\n\n                        \n                    \n                \n                    \n                        messageCheckCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        RawHeaderType\n                    \n                \n                    \n                        \n                            The parser yield frames in this structure\n\n                        \n                    \n                \n                    \n                        RawHeaderType:     [string, string]\n\n                    \n                \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n        \n            \n                \n                    \n                        \n                        setupReplyQueueFnType\n                    \n                \n                    \n                        \n                            See the guide for example\n\n                        \n                    \n                \n                    \n                        setupReplyQueueFnType:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
