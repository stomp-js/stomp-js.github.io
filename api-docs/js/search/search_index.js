var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/IPublishParams.html",[0,1.43,1,1.809]],["body/interfaces/IPublishParams.html",[0,2.08,1,2.271,2,0.312,3,0.312,4,0.264,5,1.609,6,0.363,7,1.343,8,3.032,9,0.363,10,1.056,11,1.632,12,3.447,13,2.909,14,3.129,15,1.984,16,3.817,17,3.817,18,0.888,19,0.042,20,3.032,21,1.429,22,2.596,23,3.032,24,1.33,25,3.015,26,1.447,27,3.032,28,3.032,29,3.032,30,2.64,31,1.795,32,2.011,33,3.032,34,3.032,35,0.776,36,1.618,37,0.133,38,2.473,39,3.015,40,0.637,41,1.609,42,1.839,43,2.026,44,1.224,45,1.839,46,1.025,47,0.832,48,0.832,49,1.839,50,1.839,51,1.839,52,2.148,53,2.148,54,2.148,55,1.839,56,2.148,57,1.839,58,2.148,59,1.839,60,1.839,61,1.839,62,2.596,63,1.609,64,2.148,65,0.025,66,0.025]],["title/interfaces/IRawFrameType.html",[0,1.43,63,1.809]],["body/interfaces/IRawFrameType.html",[0,2.176,1,1.75,2,0.34,3,0.34,4,0.287,5,1.75,7,1.342,8,2.336,9,0.395,10,1.12,11,1.28,12,3.555,13,2.438,14,2.408,15,1.953,16,2.336,17,3.959,18,0.882,19,0.042,20,2.336,21,1.421,22,2.001,23,2.336,24,1.12,25,2.753,26,1.115,27,2.336,28,2.336,29,2.336,30,2.651,31,1.383,32,1.55,33,2.336,34,2.336,35,0.812,36,1.661,37,0.144,38,2.54,39,3.109,40,0.651,41,1.75,42,2.001,43,2.102,44,1.28,45,2.001,46,1.115,47,0.905,48,0.905,49,2.001,50,2.001,51,2.001,52,2.336,53,2.336,54,2.336,55,2.001,56,2.336,57,2.001,58,2.336,59,2.001,60,2.001,61,2.001,62,3.39,63,2.408,64,3.959,65,0.027,66,0.027]],["title/injectables/InjectableRxStompConfig.html",[67,0.408,68,1.809]],["body/injectables/InjectableRxStompConfig.html",[2,0.394,3,0.394,4,0.333,6,0.458,19,0.041,35,0.784,37,0.26,40,0.394,44,1.38,46,1.695,48,1.375,65,0.029,66,0.029,67,0.792,68,2.659,69,1.049,70,2.32,71,1.604,72,1.604,73,1.375,74,1.527,75,1.375,76,0.142,77,1.527,78,2.651,79,3.551,80,3.551,81,1.048,82,2.102,83,1.177,84,2.102,85,3.041,86,3.041,87,3.041,88,3.6,89,1.695,90,4.204,91,2.102,92,4.325,93,4.204,94,3.551,95,2.355,96,0.784,97,2.659,98,2.007,99,4.325,100,3.041,101,4.325,102,3.551,103,4.325,104,4.325,105,3.551,106,1.438,107,1.797,108,1.438]],["title/injectables/InjectableRxStompRpcConfig.html",[67,0.408,109,1.809]],["body/injectables/InjectableRxStompRpcConfig.html",[2,0.472,3,0.472,4,0.399,6,0.549,19,0.041,35,0.88,37,0.246,40,0.472,44,1.388,65,0.033,66,0.033,67,0.78,69,1.258,70,2.781,71,1.923,72,1.923,73,1.543,74,1.932,75,1.543,76,0.117,77,1.713,83,1.115,89,1.902,106,1.724,107,2.154,108,1.724,109,2.984,110,1.923,111,2.981,112,3.984,113,3.984,114,3.412,115,3.412]],["title/classes/Message.html",[36,0.935,76,0.087]],["body/classes/Message.html",[2,0.375,3,0.375,4,0.317,6,0.436,9,0.436,10,1.436,13,1.71,15,1.772,18,0.667,19,0.041,24,1.346,30,2.615,35,0.759,36,1.842,37,0.159,38,1.526,40,0.375,43,1.824,44,0.898,65,0.028,66,0.028,76,0.123,81,1.028,83,1.236,96,0.759,108,2.189,116,2.578,117,2.034,118,2.279,119,2.942,120,4.186,121,3.436,122,3.865,123,1.539,124,1.71,125,3.782,126,4.417,127,3.14,128,3.53,129,4.123,130,4.123,131,1.968,132,2.735,133,4.186,134,3.14,135,4.186,136,3.14,137,3.14,138,3.14,139,2.578,140,3.14,141,3.14,142,2.578,143,3.14,144,3.14]],["title/classes/RxStompConfig.html",[76,0.087,78,1.43]],["body/classes/RxStompConfig.html",[2,0.179,3,0.179,4,0.151,6,0.208,9,0.208,10,0.692,11,1.568,15,1.233,18,0.759,19,0.042,21,0.782,24,1.234,26,0.949,31,2.313,32,2.784,35,0.552,37,0.279,38,1.698,40,0.179,41,2.149,43,0.654,46,0.949,47,1.303,65,0.016,66,0.016,72,0.729,76,0.071,77,1.68,78,1.177,81,0.974,84,1.177,91,1.698,95,1.903,96,0.863,98,1.607,117,1.177,118,1.319,123,0.999,124,1.803,131,1.37,145,2.121,146,2.365,147,1.988,148,2.149,149,1.37,150,2.421,151,2.421,152,3.495,153,3.495,154,3.495,155,3.366,156,3.495,157,3.495,158,3.495,159,3.495,160,3.495,161,3.495,162,1.5,163,1.988,164,1.988,165,2.313,166,2.421,167,2.421,168,1.988,169,1.988,170,1.5,171,4.378,172,4.378,173,2.421,174,1.5,175,1.702,176,2.421,177,2.421,178,1.988,179,3.495,180,3.495,181,2.421,182,1.5,183,2.457,184,1.988,185,1.988,186,1.988,187,2.421,188,2.869,189,1.988,190,2.421,191,2.421,192,2.421,193,1.702,194,1.702,195,2.421,196,1.5,197,1.988,198,1.319,199,1.5,200,1.702,201,2.421,202,3.259,203,1.5,204,1.988,205,2.869,206,2.869,207,3.366,208,2.882,209,3.366,210,2.421,211,1.5,212,1.988,213,2.421,214,1.5,215,1.988,216,1.489,217,2.421,218,2.421,219,1.5,220,2.457,221,1.702,222,1.988,223,2.869,224,3.366,225,1.988,226,2.421,227,1.993,228,2.421,229,2.421,230,1.5,231,2.521,232,1.702,233,2.421,234,2.457,235,1.702,236,2.421,237,3.495,238,2.869,239,2.421,240,2.421,241,2.421,242,2.421,243,0.817,244,1.5,245,2.421,246,1.702,247,2.421,248,1.5,249,1.5]],["title/classes/RxStompRPC.html",[76,0.087,250,1.809]],["body/classes/RxStompRPC.html",[2,0.271,3,0.271,4,0.229,6,0.315,7,1.014,9,0.315,11,1.13,12,2.344,13,1.815,14,1.396,15,1.177,18,0.63,19,0.042,24,0.953,35,0.879,36,1.541,37,0.246,40,0.271,47,1.593,65,0.023,66,0.023,71,1.62,76,0.098,82,1.62,83,1.181,84,2.116,89,1.707,96,0.716,97,2.43,98,1.307,110,2.592,111,2.371,114,3.409,115,3.061,117,1.62,119,2.344,123,0.953,124,1.541,131,1.307,132,1.815,145,1.898,146,2.116,148,1.396,149,1.901,178,1.863,243,1.236,250,2.05,251,1.863,252,2.737,253,4.849,254,3.061,255,1.236,256,1.863,257,3.575,258,2.27,259,1.453,260,1.549,261,1.396,262,3.334,263,4.115,264,2.27,265,4.354,266,3.808,267,3.244,268,3.161,269,3.334,270,2.27,271,1.596,272,2.27,273,2.27,274,1.863,275,2.737,276,1.596,277,2.344,278,1.236,279,4.354,280,4.354,281,3.575,282,2.27,283,1.863,284,1.863,285,2.737,286,2.27,287,2.27,288,2.27,289,2.27,290,3.334,291,3.334,292,3.334,293,2.27,294,2.27,295,2.27,296,2.27,297,2.27,298,3.334,299,2.27,300,2.27,301,2.27,302,2.27,303,3.334,304,3.951,305,2.27,306,2.27,307,2.27,308,2.05,309,2.27,310,2.27,311,1.596,312,2.27,313,2.27,314,2.27,315,2.27,316,2.27]],["title/classes/RxStompRPCConfig.html",[76,0.087,111,1.602]],["body/classes/RxStompRPCConfig.html",[2,0.383,3,0.383,4,0.324,6,0.446,9,0.446,10,1.216,11,1.449,18,0.759,19,0.041,21,1.301,26,1.666,35,0.864,36,1.022,37,0.257,40,0.507,65,0.029,66,0.029,71,1.562,72,1.562,76,0.125,83,1.269,84,2.463,89,2.165,96,0.771,110,2.562,111,2.315,123,1.362,124,1.722,145,2.076,146,2.315,149,1.867,243,1.75,260,1.666,268,2.614,271,2.26,277,3.563,278,2.315,283,3.49,284,3.49,285,4.446,317,5.272,318,5.069,319,3.214,320,3.563,321,4.251,322,3.49,323,4.251,324,3.214,325,3.49]],["title/injectables/RxStompRPCService.html",[67,0.408,326,2.068]],["body/injectables/RxStompRPCService.html",[2,0.428,3,0.428,4,0.362,6,0.498,7,0.92,11,1.436,18,0.572,19,0.041,35,0.958,37,0.268,40,0.428,44,1.305,65,0.031,66,0.031,67,0.774,69,1.451,71,2.218,73,1.451,74,1.865,75,1.451,76,0.106,77,1.611,83,1.048,89,1.789,96,0.65,106,1.562,107,1.952,108,1.562,109,3.249,110,1.742,112,3.746,113,3.746,114,3.208,115,3.208,149,1.405,250,3.249,255,1.952,256,3.746,257,4.338,260,1.405,261,2.205,278,1.952,326,3.208,327,2.806,328,2.943,329,2.303,330,3.585,331,3.585,332,3.585]],["title/injectables/RxStompService.html",[67,0.408,329,1.282]],["body/injectables/RxStompService.html",[2,0.438,3,0.438,4,0.37,6,0.51,19,0.041,35,0.84,37,0.257,40,0.438,44,1.525,65,0.032,66,0.032,67,0.763,69,1.168,73,1.473,74,1.636,75,1.473,76,0.15,77,1.636,79,3.805,80,3.805,81,0.949,82,2.252,83,1.29,84,2.252,85,3.258,86,3.258,87,3.258,88,3.748,89,1.816,106,1.601,107,2,108,1.601,149,2.2,327,2.259,329,2.02,333,3.016,334,2.85]],["title/classes/Stomp.html",[37,0.149,76,0.087]],["body/classes/Stomp.html",[2,0.24,3,0.24,4,0.203,6,0.279,7,0.782,9,0.279,10,0.871,11,0.871,18,0.586,19,0.042,21,1.19,26,0.788,35,0.552,37,0.251,40,0.24,44,0.575,46,1.607,47,1.614,48,0.639,65,0.021,66,0.021,75,0.968,76,0.146,77,1.075,81,1.015,83,0.462,96,0.666,97,2.26,98,1.944,100,2.14,117,1.992,118,1.658,123,0.871,124,1.168,131,1.193,132,2.622,148,1.872,165,1.48,175,3.097,189,3.617,198,2.865,216,2.521,227,2.468,231,3.279,232,2.14,234,2.14,235,2.14,246,2.584,252,1.65,259,1.787,260,1.44,261,1.236,335,1.65,336,3.044,337,3.57,338,4.1,339,3.044,340,3.675,341,2.01,342,3.044,343,3.044,344,2.499,345,3.044,346,3.044,347,3.044,348,3.044,349,4.1,350,3.044,351,3.044,352,4.636,353,2.01,354,2.14,355,3.044,356,4.636,357,3.044,358,3.044,359,3.617,360,3.044,361,2.01,362,3.366,363,3.044,364,2.499,365,3.044,366,3.675,367,3.044,368,3.044,369,3.044,370,3.044,371,3.044,372,3.366,373,3.044,374,3.044,375,4.1,376,3.017,377,3.044,378,3.044,379,3.675,380,2.01,381,2.01,382,2.01,383,2.01,384,3.044,385,3.044,386,1.65,387,2.01,388,2.01,389,2.01,390,1.094,391,3.044,392,2.01,393,2.01,394,2.01,395,3.044,396,2.01,397,2.01,398,3.044,399,2.01,400,2.01]],["title/injectables/StompConfig.html",[67,0.408,401,1.602]],["body/injectables/StompConfig.html",[2,0.265,3,0.265,4,0.224,6,0.308,7,0.843,9,0.308,10,0.939,15,1.699,18,0.767,19,0.042,21,1.278,24,1.233,25,2.4,26,1.286,31,1.595,32,2.621,35,0.595,37,0.166,40,0.265,44,0.636,47,1.37,48,1.53,65,0.022,66,0.022,67,0.542,68,2.018,69,1.582,73,1.043,74,1.521,75,1.043,76,0.115,81,0.672,82,1.595,84,1.595,91,1.595,95,2.89,96,0.873,106,0.969,117,1.595,118,1.787,123,1.233,147,2.695,148,2.65,155,3.951,164,2.695,165,2.095,175,3.383,183,2.307,184,2.695,185,2.695,186,2.695,193,2.307,197,2.695,198,1.787,202,3.668,204,2.695,205,3.539,206,3.539,207,3.951,208,3.593,209,4.195,212,2.695,216,2.018,220,2.307,227,1.595,231,2.018,232,2.307,234,2.307,243,1.21,322,3.539,325,2.695,354,2.307,362,2.695,390,1.787,401,1.787,402,1.824,403,2.018,404,2.018,405,2.018,406,1.787,407,4.31,408,4.31,409,4.31,410,2.222,411,2.222,412,3.282,413,3.282,414,3.282,415,2.222,416,2.222,417,3.282,418,3.282,419,4.31,420,2.222,421,3.282,422,2.695,423,3.282,424,3.282,425,2.222,426,3.282,427,3.282,428,3.282,429,3.282,430,3.282]],["title/classes/StompHeaders.html",[24,0.841,76,0.087]],["body/classes/StompHeaders.html",[2,0.493,3,0.493,4,0.417,6,0.573,7,1.061,9,0.573,15,1.888,19,0.039,21,1.46,24,1.425,31,2.008,37,0.209,40,0.493,48,1.313,65,0.034,66,0.034,76,0.147,81,0.846,96,0.749,131,1.619,139,3.392,169,3.392,183,3.905,431,3.503,432,3.392,433,4.132,434,4.132,435,3.392,436,4.132,437,4.132,438,4.132,439,4.132,440,4.132,441,4.132]],["title/injectables/StompRService.html",[67,0.408,442,1.809]],["body/injectables/StompRService.html",[2,0.116,3,0.116,4,0.098,6,0.135,7,0.844,9,0.135,10,0.759,11,0.759,13,1.212,14,1.035,15,1.79,18,0.423,19,0.042,21,1.22,22,1.183,24,1.008,26,1.04,30,1.899,31,2.34,32,1.92,35,0.677,36,1.625,37,0.261,38,1.899,39,1.035,40,0.116,42,1.183,43,1.88,44,0.481,46,1.462,47,1.659,48,1.435,51,3.29,65,0.011,66,0.018,67,0.309,69,1.463,73,0.535,74,0.937,75,0.535,76,0.088,78,1.082,81,0.456,82,1.29,90,1.382,91,1.458,94,1.382,95,1.445,96,0.819,97,1.035,98,1.834,102,1.382,106,0.424,107,0.529,108,0.424,118,1.92,119,1.866,123,0.481,124,1.598,125,1.866,128,2.31,130,3.063,131,1.04,132,2.032,149,0.66,163,1.382,165,2.444,168,2.698,171,1.828,172,2.179,194,1.866,198,1.79,200,2.479,202,1.183,215,1.382,216,2.168,220,1.565,221,1.183,227,0.472,238,0.798,243,0.529,246,0.683,254,1.183,255,1.212,259,0.734,260,1.288,261,0.598,263,2.179,266,3.063,267,2.463,268,2.579,271,0.683,274,0.798,275,1.382,276,1.183,278,1.212,281,0.798,308,1.632,311,1.866,320,2.854,329,0.734,337,0.683,354,2.623,364,2.179,372,2.179,376,2.179,390,0.917,401,0.917,403,1.035,404,1.632,405,1.035,406,1.445,422,1.828,435,1.382,442,1.035,443,3.235,444,0.798,445,1.683,446,1.445,447,1.382,448,1.683,449,1.683,450,2.698,451,1.382,452,2.179,453,1.382,454,1.382,455,2.179,456,1.382,457,1.035,458,2.895,459,2.655,460,3.287,461,1.683,462,1.683,463,2.226,464,2.226,465,2.226,466,2.226,467,2.226,468,0.972,469,0.972,470,0.972,471,1.683,472,0.972,473,1.683,474,2.655,475,1.683,476,1.683,477,3.527,478,1.683,479,0.972,480,2.655,481,1.683,482,1.683,483,1.683,484,1.683,485,1.683,486,1.683,487,1.683,488,2.655,489,1.683,490,1.683,491,1.683,492,1.683,493,1.683,494,1.683,495,1.683,496,0.972,497,2.655,498,2.655,499,3.287,500,3.287,501,1.683,502,1.683,503,1.683,504,1.683,505,1.683,506,1.683,507,1.683,508,1.683,509,1.683,510,1.683,511,3.001,512,1.683,513,1.683,514,1.683,515,1.683,516,1.683,517,3.287,518,0.972,519,3.287,520,2.655,521,2.655,522,1.683,523,0.972,524,0.972,525,4.314,526,2.655,527,1.382,528,1.683,529,1.683,530,2.655,531,2.179,532,1.683,533,1.683,534,2.226,535,0.972,536,0.972,537,1.382,538,2.655,539,1.683,540,1.683,541,1.683,542,0.972,543,0.972,544,3.907,545,0.972,546,0.972,547,0.972,548,0.972,549,2.655,550,0.972,551,0.972,552,0.972,553,0.972,554,2.179,555,1.828,556,0.798,557,0.972,558,2.655,559,0.972,560,0.972,561,0.972,562,1.683,563,0.972,564,0.972,565,0.972,566,0.972,567,0.972,568,0.972,569,0.972,570,0.972,571,0.972,572,0.972,573,0.972,574,1.683,575,0.972,576,0.972,577,0.972,578,0.972,579,0.972,580,0.972,581,0.972,582,0.972,583,0.972,584,0.972,585,1.683,586,0.972,587,0.972,588,0.972,589,0.972,590,0.972,591,1.683,592,0.972,593,0.972,594,0.972,595,0.972,596,0.972,597,0.972,598,0.972,599,0.972,600,0.972,601,0.798,602,0.972,603,0.972,604,0.972,605,0.972]],["title/injectables/StompService.html",[67,0.408,406,1.602]],["body/injectables/StompService.html",[2,0.379,3,0.379,4,0.32,6,0.585,7,0.815,11,0.907,18,0.506,19,0.042,35,0.858,36,1.34,37,0.256,40,0.379,44,1.205,47,1.009,48,1.34,65,0.029,66,0.029,67,0.657,69,1.34,73,1.34,74,1.78,75,1.34,76,0.14,82,1.542,83,0.968,91,2.3,96,0.575,98,1.977,106,1.383,108,1.383,123,1.354,124,1.34,128,2.231,129,2.605,194,2.231,254,2.231,255,2.577,260,1.244,268,2.592,276,2.963,278,2.295,320,2.231,329,1.837,334,2.592,390,2.295,401,2.746,403,2.592,404,2.592,405,2.592,406,2.295,442,2.91,446,2.746,447,3.46,450,2.605,451,2.605,452,2.605,453,2.605,454,2.605,455,2.605,456,2.605,527,2.605,556,2.605,601,2.605,606,2.605,607,4.215,608,3.173,609,4.215,610,4.215,611,3.173,612,2.605,613,3.173,614,3.173]],["title/classes/StompSubscription.html",[76,0.087,615,2.068]],["body/classes/StompSubscription.html",[2,0.463,3,0.463,4,0.392,6,0.539,9,0.539,10,1.372,15,1.694,18,0.619,19,0.041,21,0.997,24,1.372,35,0.704,37,0.197,40,0.463,43,1.693,65,0.033,66,0.033,76,0.141,81,0.982,83,1.102,96,0.704,122,3.939,123,1.372,124,1.729,131,1.881,142,3.189,259,2.091,308,2.388,431,3.373,615,3.823,616,3.189,617,5.692,618,3.884,619,4.799,620,3.189,621,3.884]],["title/classes/Transaction.html",[76,0.087,622,2.068]],["body/classes/Transaction.html",[2,0.416,3,0.416,4,0.351,6,0.484,9,0.484,10,1.281,18,0.79,19,0.041,21,1.272,40,0.416,43,1.953,46,1.756,65,0.031,66,0.031,76,0.132,81,1.07,83,1.201,96,0.898,121,3.679,123,1.547,124,1.832,125,3.15,126,3.679,131,1.366,259,1.519,308,3.215,311,3.15,344,3.679,622,4.051,623,2.861,624,3.485,625,3.485,626,3.485,627,5.537,628,5.537,629,3.485,630,4.481,631,3.485,632,4.481,633,3.485,634,3.485,635,3.485]],["title/classes/Versions.html",[76,0.087,77,1.038]],["body/classes/Versions.html",[2,0.324,3,0.324,4,0.274,6,0.377,7,0.697,9,0.377,10,1.084,11,0.777,18,0.793,19,0.042,21,1.464,26,1.853,30,1.843,37,0.261,40,0.324,47,1.503,48,1.388,65,0.026,66,0.026,73,1.205,76,0.139,77,1.997,95,2.065,96,0.959,98,1.853,117,1.843,124,1.798,132,2.065,165,1.843,188,4.229,221,2.665,222,3.113,223,4.229,224,4.229,227,1.32,231,2.331,235,3.071,255,1.479,259,1.652,260,1.065,337,3.901,612,3.113,620,2.23,636,2.23,637,4.727,638,4.727,639,4.727,640,4.727,641,4.727,642,2.716,643,2.716,644,3.792,645,3.792,646,3.792,647,3.792,648,3.792,649,2.716,650,2.716,651,2.716,652,2.716,653,2.716,654,2.716,655,2.716,656,2.716,657,2.716,658,2.716,659,2.716,660,2.716,661,2.716]],["title/coverage.html",[662,3.288]],["body/coverage.html",[0,1.947,1,1.809,4,0.297,5,2.463,18,0.469,19,0.041,24,0.841,36,0.935,37,0.279,63,1.809,65,0.027,66,0.027,67,0.75,68,1.809,69,1.747,70,2.816,71,1.947,72,2.486,76,0.17,77,1.038,78,1.43,81,0.82,109,1.809,110,1.947,111,1.602,116,2.415,145,2.23,146,2.376,149,1.153,193,2.068,198,1.602,208,2.816,227,1.43,250,1.809,251,2.415,326,2.068,327,2.801,328,2.415,329,1.282,333,2.415,334,1.809,335,2.415,359,2.415,401,2.181,402,2.415,406,1.602,431,3.202,432,2.415,442,1.809,443,2.068,444,2.415,446,1.602,606,2.415,615,2.068,616,2.415,622,2.068,623,2.415,636,2.415,662,2.415,663,2.942,664,2.942,665,5.904,666,5.116,667,2.942,668,2.942,669,2.415,670,4.555,671,4.006,672,2.942,673,4.006,674,2.415,675,2.415,676,2.942,677,2.942,678,4.006,679,4.555,680,2.942,681,2.942,682,2.942,683,2.942,684,2.942,685,2.942,686,2.942,687,2.942,688,2.942,689,2.942,690,2.942,691,2.942]],["title/dependencies.html",[457,2.174,692,2.461]],["body/dependencies.html",[19,0.038,65,0.036,66,0.036,457,2.875,693,4.676,694,4.676]],["title/miscellaneous/enumerations.html",[695,1.196,696,2.903]],["body/miscellaneous/enumerations.html",[9,0.577,19,0.034,37,0.272,65,0.034,66,0.034,69,1.321,73,1.321,74,1.765,75,1.321,76,0.122,145,1.811,146,2.019,149,1.628,165,2.43,200,2.921,225,3.411,386,4.104,390,2.262,403,2.555,404,2.555,405,2.555,443,2.921,446,2.262,458,4.104,554,4.403,555,4.104,695,2.019,696,3.411,697,2.921,698,5.566,699,4.155,700,5.363,701,4.155]],["title/miscellaneous/functions.html",[81,0.724,695,1.196]],["body/miscellaneous/functions.html",[7,1.016,9,0.549,11,1.131,19,0.036,37,0.266,65,0.033,66,0.033,67,0.549,69,1.258,73,1.258,74,1.396,75,1.258,78,1.923,81,1.12,83,0.909,85,2.781,86,2.781,87,2.781,88,3.412,89,1.551,91,2.359,93,3.248,96,0.88,98,1.902,100,2.781,105,3.248,145,1.724,259,2.115,260,1.551,327,2.433,329,2.385,334,2.984,446,2.643,457,2.433,531,3.248,537,3.984,669,3.984,674,3.248,675,4.31,695,1.923,697,2.781,702,3.956,703,3.956,704,3.956,705,3.956]],["title/index.html",[9,0.408,706,2.415]],["body/index.html",[0,2.251,19,0.036,65,0.036,66,0.036,67,0.643,76,0.137,706,3.803,707,4.633,708,4.633,709,4.633]],["title/modules.html",[710,3.288]],["body/modules.html",[19,0.037,65,0.037,66,0.037,710,3.875]],["title/miscellaneous/typealiases.html",[695,1.196,711,3.536]],["body/miscellaneous/typealiases.html",[5,2.316,7,1.422,9,0.523,18,0.6,19,0.032,21,1.318,25,2.316,30,2.288,36,1.496,37,0.239,38,2.745,39,3.405,41,3.158,45,3.61,46,1.476,47,1.197,48,1.197,49,3.61,50,3.61,55,3.61,57,2.648,59,2.648,60,2.648,61,2.648,62,3.61,65,0.032,66,0.032,72,2.288,81,1.156,83,0.865,89,1.476,110,2.288,123,1.077,145,1.641,146,1.83,277,3.61,695,1.83,697,2.648,712,3.766,713,5.649]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":208,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["0/1",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":223,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":224,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1.6",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":188,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":708,"title":{},"body":{"index.html":{}}}],["18/18",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":709,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":418,"title":{},"body":{"injectables/StompConfig.html":{}}}],["20000",{"_index":417,"title":{},"body":{"injectables/StompConfig.html":{}}}],["21/24",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":424,"title":{},"body":{"injectables/StompConfig.html":{}}}],["50",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":423,"title":{},"body":{"injectables/StompConfig.html":{}}}],["6/6",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":707,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["_mapstompstate(st",{"_index":557,"title":{},"body":{"injectables/StompRService.html":{}}}],["_repliesobserv",{"_index":288,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuenam",{"_index":282,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueu",{"_index":286,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abc",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abort",{"_index":627,"title":{},"body":{"classes/Transaction.html":{}}}],["accept",{"_index":434,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":121,"title":{},"body":{"classes/Message.html":{},"classes/Transaction.html":{}}}],["accessor",{"_index":462,"title":{},"body":{"injectables/StompRService.html":{}}}],["ack",{"_index":125,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{}}}],["acknowledg",{"_index":130,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{}}}],["act",{"_index":336,"title":{},"body":{"classes/Stomp.html":{}}}],["activ",{"_index":704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activemq",{"_index":323,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["actual",{"_index":500,"title":{},"body":{"injectables/StompRService.html":{}}}],["ad",{"_index":29,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["addit",{"_index":437,"title":{},"body":{"classes/StompHeaders.html":{}}}],["addition",{"_index":539,"title":{},"body":{"injectables/StompRService.html":{}}}],["advanc",{"_index":94,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompRService.html":{}}}],["alias",{"_index":712,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":376,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["alreadi",{"_index":531,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["altern",{"_index":362,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["alway",{"_index":533,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular'",{"_index":103,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/cor",{"_index":106,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":276,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular7.html",{"_index":87,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["anoth",{"_index":385,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":296,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["app_initi",{"_index":104,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["array",{"_index":645,"title":{},"body":{"classes/Versions.html":{}}}],["asynchron",{"_index":455,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["attempt",{"_index":220,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["attribut",{"_index":151,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":422,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["automat",{"_index":215,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["avail",{"_index":436,"title":{},"body":{"classes/StompHeaders.html":{}}}],["base",{"_index":507,"title":{},"body":{"injectables/StompRService.html":{}}}],["beat",{"_index":576,"title":{},"body":{"injectables/StompRService.html":{}}}],["befor",{"_index":164,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["beforeconnect",{"_index":152,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["behaviorsubject",{"_index":517,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.clos",{"_index":603,"title":{},"body":{"injectables/StompRService.html":{}}}],["binari",{"_index":20,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["binarybodi",{"_index":12,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{}}}],["bodi",{"_index":13,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body]{@link",{"_index":140,"title":{},"body":{"classes/Message.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["both",{"_index":180,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":31,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":153,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["call",{"_index":131,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["call.html",{"_index":115,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callabl",{"_index":369,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":38,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":136,"title":{},"body":{"classes/Message.html":{}}}],["carri",{"_index":497,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":342,"title":{},"body":{"classes/Stomp.html":{}}}],["caveat",{"_index":626,"title":{},"body":{"classes/Transaction.html":{}}}],["chang",{"_index":166,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["check",{"_index":192,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":76,"title":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["cleanup",{"_index":315,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":198,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["client#abort",{"_index":630,"title":{},"body":{"classes/Transaction.html":{}}}],["client#abort]{@link",{"_index":635,"title":{},"body":{"classes/Transaction.html":{}}}],["client#ack",{"_index":133,"title":{},"body":{"classes/Message.html":{}}}],["client#ack]{@link",{"_index":143,"title":{},"body":{"classes/Message.html":{}}}],["client#begin",{"_index":624,"title":{},"body":{"classes/Transaction.html":{}}}],["client#brokerurl",{"_index":237,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":247,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#commit",{"_index":632,"title":{},"body":{"classes/Transaction.html":{}}}],["client#commit]{@link",{"_index":634,"title":{},"body":{"classes/Transaction.html":{}}}],["client#nack",{"_index":135,"title":{},"body":{"classes/Message.html":{}}}],["client#nack]{@link",{"_index":144,"title":{},"body":{"classes/Message.html":{}}}],["client#onunhandledmessag",{"_index":120,"title":{},"body":{"classes/Message.html":{}}}],["client#onunhandledmessage]{@link",{"_index":137,"title":{},"body":{"classes/Message.html":{}}}],["client#publish",{"_index":8,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#publish]{@link",{"_index":58,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["client#subscrib",{"_index":122,"title":{},"body":{"classes/Message.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":142,"title":{},"body":{"classes/Message.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscrib",{"_index":619,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":621,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client(url",{"_index":351,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":368,"title":{},"body":{"classes/Stomp.html":{}}}],["client.t",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closeev",{"_index":57,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":52,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["closeeventcallbacktyp",{"_index":55,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["combin",{"_index":102,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompRService.html":{}}}],["command",{"_index":64,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["commit",{"_index":628,"title":{},"body":{"classes/Transaction.html":{}}}],["compat",{"_index":380,"title":{},"body":{"classes/Stomp.html":{}}}],["compatcli",{"_index":359,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":398,"title":{},"body":{"classes/Stomp.html":{}}}],["complaint",{"_index":505,"title":{},"body":{"injectables/StompRService.html":{}}}],["complet",{"_index":506,"title":{},"body":{"injectables/StompRService.html":{}}}],["compodoc/compodoc",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":278,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":571,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":583,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.head",{"_index":589,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":578,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":580,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":582,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.t",{"_index":72,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:105",{"_index":162,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:18",{"_index":319,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:19",{"_index":174,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":324,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:32",{"_index":219,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:35",{"_index":196,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:58",{"_index":230,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:65",{"_index":214,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:72",{"_index":203,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:79",{"_index":211,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:88",{"_index":182,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:95",{"_index":199,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.url",{"_index":574,"title":{},"body":{"injectables/StompRService.html":{}}}],["configur",{"_index":91,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["connect",{"_index":165,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{}}}],["connecthead",{"_index":154,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["connectobserv",{"_index":463,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.log(new",{"_index":586,"title":{},"body":{"injectables/StompRService.html":{}}}],["consolidated/.../abc.t",{"_index":702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["consolidated/.../rx",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.t",{"_index":713,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":69,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["consolidated/rx",{"_index":145,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.t",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.t",{"_index":335,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:20",{"_index":341,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:31",{"_index":353,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:70",{"_index":361,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/message.t",{"_index":116,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/message.ts:18",{"_index":127,"title":{},"body":{"classes/Message.html":{}}}],["consolidated/stompjs/src/message.ts:25",{"_index":134,"title":{},"body":{"classes/Message.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":431,"title":{},"body":{"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/transaction.t",{"_index":623,"title":{},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/transaction.ts:10",{"_index":633,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/transaction.ts:15",{"_index":631,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/transaction.ts:20",{"_index":629,"title":{},"body":{"classes/Transaction.html":{}}}],["consolidated/stompjs/src/types.t",{"_index":5,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.t",{"_index":636,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:12",{"_index":650,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:16",{"_index":651,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:21",{"_index":643,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:29",{"_index":652,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":654,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:42",{"_index":653,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:8",{"_index":649,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":97,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":255,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":607,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(priv",{"_index":289,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(publ",{"_index":658,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":256,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(vers",{"_index":642,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":438,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":27,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["correlationid",{"_index":304,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":509,"title":{},"body":{"injectables/StompRService.html":{}}}],["coverag",{"_index":662,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":439,"title":{},"body":{"classes/StompHeaders.html":{}}}],["creat",{"_index":259,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":520,"title":{},"body":{"injectables/StompRService.html":{}}}],["date",{"_index":587,"title":{},"body":{"injectables/StompRService.html":{}}}],["debug",{"_index":155,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["debugfntyp",{"_index":41,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["declar",{"_index":648,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":26,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["defaultmessagesobserv",{"_index":465,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscript",{"_index":303,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":316,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defin",{"_index":96,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["delay",{"_index":217,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["depend",{"_index":457,"title":{"dependencies.html":{}},"body":{"injectables/StompRService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["deprec",{"_index":390,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["descript",{"_index":6,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["design",{"_index":494,"title":{},"body":{"injectables/StompRService.html":{}}}],["destin",{"_index":14,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["detail",{"_index":84,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["disabl",{"_index":209,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["disconnect",{"_index":200,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["disconnecthead",{"_index":156,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["document",{"_index":193,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["documentation/rpc",{"_index":280,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["drop",{"_index":404,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["dure",{"_index":221,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":233,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":502,"title":{},"body":{"injectables/StompRService.html":{}}}],["element",{"_index":646,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":519,"title":{},"body":{"injectables/StompRService.html":{}}}],["enabl",{"_index":197,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["end",{"_index":22,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["enumer",{"_index":696,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":346,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":549,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":467,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":454,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["establish",{"_index":526,"title":{},"body":{"injectables/StompRService.html":{}}}],["even",{"_index":481,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":540,"title":{},"body":{"injectables/StompRService.html":{}}}],["evt",{"_index":56,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["exactli",{"_index":79,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["exampl",{"_index":123,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["explicitli",{"_index":483,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":40,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["extend",{"_index":108,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factori",{"_index":100,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.t",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["favor",{"_index":403,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["field",{"_index":90,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompRService.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":272,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":273,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fix",{"_index":92,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["frame",{"_index":30,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame#bodi",{"_index":141,"title":{},"body":{"classes/Message.html":{}}}],["frame#head",{"_index":139,"title":{},"body":{"classes/Message.html":{},"classes/StompHeaders.html":{}}}],["framecallbacktyp",{"_index":50,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":81,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["get",{"_index":476,"title":{},"body":{"injectables/StompRService.html":{}}}],["getclient",{"_index":552,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobserv",{"_index":523,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobserv",{"_index":542,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":547,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobserv",{"_index":545,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobserv",{"_index":535,"title":{},"body":{"injectables/StompRService.html":{}}}],["guid",{"_index":89,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":85,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":112,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](../addit",{"_index":279,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["hack",{"_index":384,"title":{},"body":{"classes/Stomp.html":{}}}],["handl",{"_index":450,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshak",{"_index":222,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":15,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.t",{"_index":432,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:8",{"_index":441,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correl",{"_index":313,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['repli",{"_index":312,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":138,"title":{},"body":{"classes/Message.html":{}}}],["heart",{"_index":575,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":205,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["heartbeat_in",{"_index":407,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeat_out",{"_index":408,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeatincom",{"_index":157,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatoutgo",{"_index":158,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["host",{"_index":186,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["host:str",{"_index":412,"title":{},"body":{"injectables/StompConfig.html":{}}}],["html5",{"_index":366,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":53,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["https://stomp",{"_index":172,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["id",{"_index":308,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["identifi",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":532,"title":{},"body":{"injectables/StompRService.html":{}}}],["immedi",{"_index":168,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["impact",{"_index":167,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implement",{"_index":252,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["import",{"_index":35,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["incom",{"_index":204,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["initandconnect",{"_index":459,"title":{},"body":{"injectables/StompRService.html":{}}}],["initi",{"_index":527,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["inject",{"_index":67,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":68,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["injectablerxstomprpcconfig",{"_index":109,"title":{"injectables/InjectableRxStompRpcConfig.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["instanc",{"_index":117,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["instead",{"_index":392,"title":{},"body":{"classes/Stomp.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{},"index.html":{}}}],["intern",{"_index":620,"title":{},"body":{"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["interv",{"_index":206,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["invok",{"_index":163,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["ipublishparam",{"_index":1,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{}}}],["irawframetyp",{"_index":63,"title":{"interfaces/IRawFrameType.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"coverage.html":{}}}],["issu",{"_index":492,"title":{},"body":{"injectables/StompRService.html":{}}}],["javascript",{"_index":246,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["js.github.io/stompjs/classes/client.html#beforeconnect",{"_index":173,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#brokerurl",{"_index":181,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#connecthead",{"_index":195,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#disconnecthead",{"_index":201,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatincom",{"_index":210,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatoutgo",{"_index":213,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#reconnectdelay",{"_index":218,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#stompvers",{"_index":229,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#watchforreceipt",{"_index":516,"title":{},"body":{"injectables/StompRService.html":{}}}],["js.github.io/stompjs/classes/client.html#websocketfactori",{"_index":242,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/frame.html",{"_index":510,"title":{},"body":{"injectables/StompRService.html":{}}}],["key",{"_index":183,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["klass",{"_index":396,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":397,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":294,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":93,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["later",{"_index":99,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leav",{"_index":486,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":28,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["lf",{"_index":440,"title":{},"body":{"classes/StompHeaders.html":{}}}],["librari",{"_index":452,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["line:vari",{"_index":383,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":44,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["list",{"_index":448,"title":{},"body":{"injectables/StompRService.html":{}}}],["local",{"_index":473,"title":{},"body":{"injectables/StompRService.html":{}}}],["localhost",{"_index":429,"title":{},"body":{"injectables/StompConfig.html":{}}}],["locat",{"_index":355,"title":{},"body":{"classes/Stomp.html":{}}}],["login",{"_index":184,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["make",{"_index":265,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["mani",{"_index":433,"title":{},"body":{"classes/StompHeaders.html":{}}}],["manual",{"_index":129,"title":{},"body":{"classes/Message.html":{},"injectables/StompService.html":{}}}],["map",{"_index":171,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["mark",{"_index":190,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["match",{"_index":66,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mean",{"_index":485,"title":{},"body":{"injectables/StompRService.html":{}}}],["mechan",{"_index":105,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["messag",{"_index":36,"title":{"classes/Message.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correl",{"_index":307,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["messagecallbacktyp",{"_index":45,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["messagecheckcallbacktyp",{"_index":49,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":132,"title":{},"body":{"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["millisecond",{"_index":207,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["miscellan",{"_index":695,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["miss",{"_index":491,"title":{},"body":{"injectables/StompRService.html":{}}}],["modul",{"_index":710,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":370,"title":{},"body":{"classes/Stomp.html":{}}}],["mozwebsocket",{"_index":387,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":42,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["mssage",{"_index":490,"title":{},"body":{"injectables/StompRService.html":{}}}],["nack",{"_index":126,"title":{},"body":{"classes/Message.html":{},"classes/Transaction.html":{}}}],["name",{"_index":260,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":46,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["neeed",{"_index":413,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":227,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":382,"title":{},"body":{"classes/Stomp.html":{}}}],["nodej",{"_index":345,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":343,"title":{},"body":{"classes/Stomp.html":{}}}],["note",{"_index":487,"title":{},"body":{"injectables/StompRService.html":{}}}],["null",{"_index":340,"title":{},"body":{"classes/Stomp.html":{}}}],["number",{"_index":202,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["object",{"_index":148,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["observ",{"_index":268,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.cr",{"_index":301,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasion",{"_index":101,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["occur",{"_index":530,"title":{},"body":{"injectables/StompRService.html":{}}}],["on",{"_index":178,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onc",{"_index":371,"title":{},"body":{"classes/Stomp.html":{}}}],["open",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oper",{"_index":499,"title":{},"body":{"injectables/StompRService.html":{}}}],["option",{"_index":11,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":367,"title":{},"body":{"classes/Stomp.html":{}}}],["out",{"_index":498,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgo",{"_index":212,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["over",{"_index":339,"title":{},"body":{"classes/Stomp.html":{}}}],["over(w",{"_index":360,"title":{},"body":{"classes/Stomp.html":{}}}],["overrid",{"_index":647,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":706,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":692,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":267,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["paramet",{"_index":7,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["params.head",{"_index":297,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["parser",{"_index":59,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["part",{"_index":73,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["pass",{"_index":118,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passcod",{"_index":185,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["pleas",{"_index":82,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["point",{"_index":23,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["possibl",{"_index":386,"title":{},"body":{"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":236,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["present",{"_index":191,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":388,"title":{},"body":{"classes/Stomp.html":{}}}],["privat",{"_index":281,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedur",{"_index":114,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["properti",{"_index":10,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":352,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolvers",{"_index":640,"title":{},"body":{"classes/Versions.html":{}}}],["provid",{"_index":537,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":124,"title":{},"body":{"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["publish",{"_index":460,"title":{},"body":{"injectables/StompRService.html":{}}}],["publish(queuenam",{"_index":471,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparam",{"_index":263,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["pubparam",{"_index":596,"title":{},"body":{"injectables/StompRService.html":{}}}],["queu",{"_index":474,"title":{},"body":{"injectables/StompRService.html":{}}}],["queue",{"_index":320,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":284,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuenam",{"_index":477,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.servic",{"_index":611,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":444,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:103",{"_index":551,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:132",{"_index":470,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:143",{"_index":469,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:157",{"_index":472,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:183",{"_index":479,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:215",{"_index":496,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:219",{"_index":553,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:221",{"_index":468,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:40",{"_index":518,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:63",{"_index":524,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:76",{"_index":536,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:83",{"_index":543,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:90",{"_index":546,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:98",{"_index":548,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":322,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["random",{"_index":504,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":512,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":445,"title":{},"body":{"injectables/StompRService.html":{}}}],["rawheadertyp",{"_index":62,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["re)connect",{"_index":529,"title":{},"body":{"injectables/StompRService.html":{}}}],["readm",{"_index":609,"title":{},"body":{"injectables/StompService.html":{}}}],["receipt",{"_index":51,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":511,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobserv",{"_index":466,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiv",{"_index":39,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["recent",{"_index":538,"title":{},"body":{"injectables/StompRService.html":{}}}],["reconnect",{"_index":216,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["reconnect_delay",{"_index":409,"title":{},"body":{"injectables/StompConfig.html":{}}}],["reconnectdelay",{"_index":159,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["refer",{"_index":426,"title":{},"body":{"injectables/StompConfig.html":{}}}],["remark",{"_index":393,"title":{},"body":{"classes/Stomp.html":{}}}],["remot",{"_index":253,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repli",{"_index":285,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuenam",{"_index":317,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["repres",{"_index":147,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["request",{"_index":266,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":347,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":350,"title":{},"body":{"classes/Stomp.html":{}}}],["respons",{"_index":541,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscrib",{"_index":482,"title":{},"body":{"injectables/StompRService.html":{}}}],["result",{"_index":65,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":47,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["rpc",{"_index":110,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(param",{"_index":262,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.t",{"_index":328,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":330,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.t",{"_index":251,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:23",{"_index":258,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:42",{"_index":264,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:50",{"_index":270,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserv",{"_index":302,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(messag",{"_index":310,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["run",{"_index":428,"title":{},"body":{"injectables/StompConfig.html":{}}}],["rx",{"_index":71,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxj",{"_index":271,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/oper",{"_index":274,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":149,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rxstomp#configur",{"_index":150,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":244,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactiv",{"_index":249,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativ",{"_index":170,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":248,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp.publish({destin",{"_index":514,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":513,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig",{"_index":78,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompconfig#websocketfactori",{"_index":179,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":245,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":573,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connecthead",{"_index":588,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":584,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincom",{"_index":577,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgo",{"_index":579,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":581,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompvers",{"_index":226,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactori",{"_index":238,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":250,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstomprpcconfig",{"_index":111,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstomprpcservic",{"_index":326,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rxstompservic",{"_index":329,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactori",{"_index":334,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstat",{"_index":554,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.clos",{"_index":562,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connect",{"_index":559,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":561,"title":{},"body":{"injectables/StompRService.html":{}}}],["safe",{"_index":480,"title":{},"body":{"injectables/StompRService.html":{}}}],["same",{"_index":80,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["sampl",{"_index":610,"title":{},"body":{"injectables/StompService.html":{}}}],["second",{"_index":419,"title":{},"body":{"injectables/StompConfig.html":{}}}],["see",{"_index":83,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":311,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/Transaction.html":{}}}],["sent",{"_index":435,"title":{},"body":{"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequenc",{"_index":503,"title":{},"body":{"injectables/StompRService.html":{}}}],["server",{"_index":354,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["serverheadersobserv",{"_index":464,"title":{},"body":{"injectables/StompRService.html":{}}}],["servic",{"_index":446,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":32,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":550,"title":{},"body":{"injectables/StompRService.html":{}}}],["setup",{"_index":325,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["setupreplyqueu",{"_index":318,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntyp",{"_index":277,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":522,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":232,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["simplest",{"_index":705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":34,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["skipcontentlengthhead",{"_index":16,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["socket",{"_index":375,"title":{},"body":{"classes/Stomp.html":{}}}],["sockj",{"_index":234,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":241,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":430,"title":{},"body":{"injectables/StompConfig.html":{}}}],["soon",{"_index":475,"title":{},"body":{"injectables/StompRService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{}}}],["specif",{"_index":194,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specifi",{"_index":365,"title":{},"body":{"classes/Stomp.html":{}}}],["st",{"_index":558,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":189,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["state",{"_index":458,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":337,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["statu",{"_index":521,"title":{},"body":{"injectables/StompRService.html":{}}}],["step",{"_index":88,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":37,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":363,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":399,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":389,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":358,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":556,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.j",{"_index":451,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.ov",{"_index":391,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(funct",{"_index":377,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.servic",{"_index":331,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.t",{"_index":333,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.t",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":349,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":74,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stomp/rx",{"_index":107,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{}}}],["stomp/src/abc.t",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stomp/src/rx",{"_index":146,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.j",{"_index":447,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":243,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{}}}],["stompconfig",{"_index":401,"title":{"injectables/StompConfig.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomphead",{"_index":24,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompj",{"_index":75,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["stompjs.stomp",{"_index":348,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/2018/10/12/remot",{"_index":113,"title":{},"body":{"injectables/InjectableRxStompRpcConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/2018/11/04/ng2",{"_index":86,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/inject",{"_index":70,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"coverage.html":{}}}],["stompjs/src/rx",{"_index":327,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs/src/stomp",{"_index":443,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/stomp.config.t",{"_index":402,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["stompjs/src/stomp.config.ts:29",{"_index":425,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:36",{"_index":411,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:43",{"_index":415,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:51",{"_index":416,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:59",{"_index":420,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:62",{"_index":410,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.service.t",{"_index":606,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/stomp.service.ts:25",{"_index":608,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs@8.x.x",{"_index":405,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":257,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuenam",{"_index":290,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueu",{"_index":292,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservic",{"_index":442,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomprservice._mapstompstate(st",{"_index":566,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservic",{"_index":406,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompstat",{"_index":555,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.clos",{"_index":564,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connect",{"_index":534,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnect",{"_index":563,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.tri",{"_index":560,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscript",{"_index":615,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompvers",{"_index":160,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["str",{"_index":585,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":254,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stream(param",{"_index":269,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["string|publishparam",{"_index":593,"title":{},"body":{"injectables/StompRService.html":{}}}],["structur",{"_index":61,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":544,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscrib",{"_index":128,"title":{},"body":{"classes/Message.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscribe((messag",{"_index":309,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribe(queuenam",{"_index":478,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscript",{"_index":119,"title":{},"body":{"classes/Message.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["subscription.t",{"_index":616,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:15",{"_index":618,"title":{},"body":{"classes/StompSubscription.html":{}}}],["suitabl",{"_index":321,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":601,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":332,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish(pubparam",{"_index":597,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish({destin",{"_index":595,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":599,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":235,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["supportedvers",{"_index":641,"title":{},"body":{"classes/Versions.html":{}}}],["tabl",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":644,"title":{},"body":{"classes/Versions.html":{}}}],["tcp",{"_index":374,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":283,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporari",{"_index":489,"title":{},"body":{"injectables/StompRService.html":{}}}],["test.destin",{"_index":515,"title":{},"body":{"injectables/StompRService.html":{}}}],["this._repliesobserv",{"_index":298,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((messag",{"_index":306,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuenam",{"_index":291,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueu",{"_index":293,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuenam",{"_index":299,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompcli",{"_index":600,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.activ",{"_index":592,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.config",{"_index":613,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":590,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe(map((st",{"_index":565,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":604,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactiv",{"_index":591,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.initandconnect",{"_index":614,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":300,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destin",{"_index":314,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessag",{"_index":287,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverhead",{"_index":567,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stat",{"_index":602,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":605,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperror",{"_index":570,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":295,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessag",{"_index":568,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipt",{"_index":569,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":659,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map((x",{"_index":660,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuenam",{"_index":598,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":187,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["time",{"_index":528,"title":{},"body":{"injectables/StompRService.html":{}}}],["todo",{"_index":625,"title":{},"body":{"classes/Transaction.html":{}}}],["transact",{"_index":622,"title":{"classes/Transaction.html":{}},"body":{"classes/Transaction.html":{},"coverage.html":{}}}],["transport",{"_index":373,"title":{},"body":{"classes/Stomp.html":{}}}],["tri",{"_index":225,"title":{},"body":{"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["trigger",{"_index":525,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":33,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["tslint:dis",{"_index":381,"title":{},"body":{"classes/Stomp.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":711,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":594,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(config.url",{"_index":572,"title":{},"body":{"injectables/StompRService.html":{}}}],["typeof(w",{"_index":400,"title":{},"body":{"classes/Stomp.html":{}}}],["typic",{"_index":95,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["uint8array",{"_index":17,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["underli",{"_index":372,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":484,"title":{},"body":{"injectables/StompRService.html":{}}}],["uniqu",{"_index":501,"title":{},"body":{"injectables/StompRService.html":{}}}],["unless",{"_index":449,"title":{},"body":{"injectables/StompRService.html":{}}}],["unsubscrib",{"_index":617,"title":{},"body":{"classes/StompSubscription.html":{}}}],["url",{"_index":175,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["us",{"_index":98,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["us/docs/web/api/closeev",{"_index":54,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{}}}],["usag",{"_index":240,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":364,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["uuid",{"_index":275,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":305,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replac",{"_index":661,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":637,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":638,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":639,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":169,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["valu",{"_index":48,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["var",{"_index":356,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":77,"title":{"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRpcConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["versions(['1.0",{"_index":228,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions([versions.v1_0",{"_index":655,"title":{},"body":{"classes/Versions.html":{}}}],["versions.default.protocolvers",{"_index":394,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_1",{"_index":656,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":657,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":453,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["virtual",{"_index":414,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":43,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"classes/Message.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Transaction.html":{}}}],["wait",{"_index":421,"title":{},"body":{"injectables/StompConfig.html":{}}}],["waitforreceipt",{"_index":461,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":495,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":612,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watch",{"_index":508,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":493,"title":{},"body":{"injectables/StompRService.html":{}}}],["websocket",{"_index":231,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/w",{"_index":239,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/w",{"_index":378,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":338,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactori",{"_index":161,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["wire",{"_index":456,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":344,"title":{},"body":{"classes/Stomp.html":{},"classes/Transaction.html":{}}}],["work",{"_index":488,"title":{},"body":{"injectables/StompRService.html":{}}}],["ws",{"_index":379,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":427,"title":{},"body":{"injectables/StompConfig.html":{}}}],["ws://broker.329broker.com:15674/w",{"_index":176,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":357,"title":{},"body":{"classes/Stomp.html":{}}}],["wsfn",{"_index":395,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/w",{"_index":177,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ye",{"_index":261,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":60,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRawFrameType.html":{},"miscellaneous/typealiases.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Frame} from './frame';\nimport {Message} from './message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRawFrameType.html":{"url":"interfaces/IRawFrameType.html","title":"interface - IRawFrameType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRawFrameType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     RawHeaderType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RawHeaderType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Frame} from './frame';\nimport {Message} from './message';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport interface IRawFrameType { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRpcConfig.html":{"url":"injectables/InjectableRxStompRpcConfig.html","title":"injectable - InjectableRxStompRpcConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRpcConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {RxStompRPCConfig} from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRpcConfig extends RxStompRPCConfig { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended Frame, you can access headers\nand body as properties.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    Frame\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ack\n                            \n                            \n                                    Public\n                                nack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ack:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:18\n                            \n                        \n\n                \n                    \n                        When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nack:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:25\n                            \n                        \n\n                \n                    \n                        When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Frame} from './frame';\nimport {StompHeaders} from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link Frame}, you can access [headers]{@link Frame#headers}\n * and [body]{@link Frame#body} as properties.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport class Message extends Frame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  public ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  public nack: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeConnect:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:105\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        brokerURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:19\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     debugFnType\n\n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disconnectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatIncoming:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatOutgoing:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnectDelay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:65\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stompVersions:     Versions\n\n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketFactory:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:58\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n */\n\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n   */\n  public stompVersions?: Versions;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n   */\n  public beforeConnect?: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:23\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:42\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:50\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport {Message, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueueName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:18\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setupReplyQueue:     setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:22\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRpcConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRpcConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable, Optional} from '@angular/core';\n\nimport {RxStompRPC} from '@stomp/rx-stomp';\nimport {RxStompService} from './rx-stomp.service';\nimport {InjectableRxStompRpcConfig} from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(rxStomp: RxStompService, @Optional() stompRPCConfig?: InjectableRxStompRpcConfig) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WebSocketClass:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:20\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:31\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:70\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from '../versions';\nimport {CompatClient} from './compat-client';\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.default.protocolVersions(); }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   */\n  public static over(ws: any): CompatClient {\n    const wsFn = typeof(ws) === 'function' ? ws : () => ws;\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of InjectableRxStompConfig.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nRepresents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:62\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:36\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:43\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:51\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:59\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:29\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link InjectableRxStompConfig}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as Frame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:221\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:143\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, mssages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:215\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual https://stomp-js.github.io/stompjs/classes/Frame.html\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:40\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:63\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:76\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:83\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:90\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:98\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:103\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/stomp-r.service.ts:219\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {RxStomp, RxStompConfig, RxStompState} from '@stomp/rx-stomp';\n\nimport {publishParams, Client, Message, Frame} from '@stomp/stompjs';\n\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {StompState} from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport {StompConfig} from './stomp.config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(map((st: RxStompState): StompState => {\n      return StompRService._mapStompState(st);\n    }));\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = { };\n\n    if (typeof(config.url) === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(queueName: string|publishParams, message?: string, headers: StompHeaders = {}): void {\n    if (typeof queueName === 'string') {\n      super.publish({destination: queueName as string, body: message, headers});\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, mssages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(queueName: string, headers: StompHeaders = {}): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link https://stomp-js.github.io/stompjs/classes/Frame.html}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#watchForReceipt\n   */\n  public waitForReceipt(receiptId: string, callback: (frame: Frame) => void): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        unsubscribe:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:15\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {StompHeaders} from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n */\nexport class StompSubscription {\n  /**\n   * @internal\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Transaction.html":{"url":"classes/Transaction.html","title":"class - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nTODO: Example and caveat\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                abort\n                            \n                            \n                                    Public\n                                commit\n                            \n                            \n                                    Public\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            abort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        abort:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:20\n                            \n                        \n\n                \n                    \n                        Abort this transaction. See Client#abort for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        commit:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:15\n                            \n                        \n\n                \n                    \n                        Commit this transaction. See Client#commit for an example.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/transaction.ts:10\n                            \n                        \n\n                \n                    \n                        You will need to access this to send, ack, or nack within this transaction.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Transaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  public id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  public commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  public abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:21\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_0:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:8\n                            \n                        \n\n                \n                    \n                        1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:12\n                            \n                        \n\n                \n                    \n                        1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:16\n                            \n                        \n\n                \n                    \n                        1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        versions:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:42\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:35\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {\n  }\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map((x) => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/injectable-rx-stomp-rpc-config.ts\n            \n            \n                injectable\n            \n            \n                InjectableRxStompRpcConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-rpc.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompRPCService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n            \n            \n                function\n            \n            \n                rxStompServiceFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/rx-stomp.service.ts\n            \n            \n                injectable\n            \n            \n                RxStompService\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/abc.ts\n            \n            \n                function\n            \n            \n                abc\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            \n                class\n            \n            \n                RxStompConfig\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            \n                class\n            \n            \n                RxStompRPCConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            \n                class\n            \n            \n                RxStompRPC\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            \n                class\n            \n            \n                RxStomp\n            \n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            \n                class\n            \n            \n                Client\n            \n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            \n                class\n            \n            \n                CompatClient\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            \n                class\n            \n            \n                Stomp\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/message.ts\n            \n            \n                class\n            \n            \n                Message\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            \n                class\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            \n                class\n            \n            \n                StompHeaders\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            \n                class\n            \n            \n                StompSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/transaction.ts\n            \n            \n                class\n            \n            \n                Transaction\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            \n                interface\n            \n            \n                IPublishParams\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            \n                interface\n            \n            \n                IRawFrameType\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            \n                class\n            \n            \n                Versions\n            \n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.6\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            abc   (consolidated/.../abc.ts)\n                        \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/abc.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            abc\n                            \n                            \n                        \n                    \n                \n                \n                    \nabc()\n                    \n                \n\n\n\n\n            \n        \n\n    consolidated/ng2-stompjs/src/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n                            Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCheckCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            RawHeaderType   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        closeEventCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a CloseEvent\nas parameter.\n\n                        \n                    \n                \n                    \n                        closeEventCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debugFnType\n                    \n                \n                    \n                        \n                            This callback will receive a string as parameter.\n\n                        \n                    \n                \n                    \n                        debugFnType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        frameCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Frame as parameter.\n\n                        \n                    \n                \n                    \n                        frameCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\n\n                        \n                    \n                \n                    \n                        messageCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCheckCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\nThe callback will need to return a boolean value.\n\n                        \n                    \n                \n                    \n                        messageCheckCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        RawHeaderType\n                    \n                \n                    \n                        \n                            The parser yield frames in this structure\n\n                        \n                    \n                \n                    \n                        RawHeaderType:     [string, string]\n\n                    \n                \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n        \n            \n                \n                    \n                        \n                        setupReplyQueueFnType\n                    \n                \n                    \n                        \n                            See the guide for example\n\n                        \n                    \n                \n                    \n                        setupReplyQueueFnType:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
