var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/Frame.html",[0,0.198,1,1.159]],["body/classes/Frame.html",[0,0.231,1,2.149,2,0.2,3,0.2,4,0.164,5,1.06,6,0.2,7,1.442,8,0.325,9,1.721,10,1.068,11,1.553,12,1.442,13,1.349,14,2.143,15,1.721,16,1.174,17,1.442,18,1.405,19,0.616,20,1.442,21,0.13,22,0.778,23,1.767,24,3.584,25,3.115,26,0.93,27,4.164,28,2.143,29,2.718,30,3.004,31,1.088,32,0.48,33,0.055,34,0.784,35,1.32,36,0.826,37,1.32,38,1.558,39,1.375,40,2.143,41,2.521,42,1.32,43,1.32,44,2.143,45,2.172,46,1.234,47,2.143,48,1.721,49,2.143,50,2.143,51,2.706,52,1.019,53,1.32,54,1.32,55,1.32,56,1.32,57,3.343,58,0.673,59,2.706,60,1.442,61,2.305,62,1.32,63,1.32,64,1.06,65,0.888,66,0.76,67,0.2,68,3.426,69,3.426,70,1.748,71,1.32,72,3.515,73,1.32,74,3.115,75,1.32,76,1.32,77,4.164,78,2.75,79,0.76,80,1.06,81,1.32,82,1.06,83,3.115,84,1.32,85,1.32,86,1.06,87,2.706,88,2.143,89,2.706,90,1.32,91,1.32,92,1.32,93,2.469,94,1.32,95,3.004,96,1.32,97,1.32,98,1.32,99,1.06,100,1.32,101,2.143,102,1.442,103,1.06,104,0.658,105,1.32,106,1.32,107,1.32,108,1.32,109,1.32,110,2.706,111,1.553,112,1.32,113,1.32,114,1.32,115,1.32,116,2.143,117,1.32,118,2.143,119,1.32,120,1.32,121,1.32,122,1.32,123,1.32,124,1.32,125,1.32,126,1.32,127,1.06,128,0.436,129,1.32,130,1.32,131,1.32,132,1.32,133,1.32,134,1.32,135,1.32,136,1.32,137,2.143,138,1.32,139,1.32,140,1.821,141,1.32,142,2.096,143,1.32,144,2.706,145,1.32,146,1.32,147,1.32,148,1.32,149,1.32,150,1.32,151,1.32,152,1.32,153,1.32,154,1.32,155,1.32,156,1.32,157,1.32,158,1.32,159,1.32,160,2.143,161,1.32,162,1.32,163,1.32,164,1.32,165,2.143,166,1.32,167,1.06,168,1.32,169,1.32,170,1.32,171,1.32,172,1.32,173,1.32,174,1.32,175,1.32,176,1.32,177,1.32,178,1.32,179,1.32,180,1.32,181,1.32,182,1.32,183,1.32,184,0.021,185,0.021]],["title/interfaces/Message.html",[19,0.767,186,0.485]],["body/interfaces/Message.html",[1,2.108,2,0.424,3,0.424,4,0.347,6,0.424,8,0.208,10,1.393,11,1.87,17,2.524,18,1.3,19,1.507,20,3.044,21,0.275,22,1.078,26,2.108,29,1.61,32,0.466,33,0.054,34,0.801,36,1.06,52,0.801,58,0.933,64,2.244,65,1.881,66,1.61,67,0.424,128,1.239,184,0.037,185,0.037,186,0.681,187,2.244,188,1.628,189,3.011,190,3.751,191,1.605,192,3.399,193,1.208,194,3.632,195,3.632,196,3.751,197,2.796,198,3.632,199,3.632,200,4.524,201,1.713,202,3.751,203,0.933,204,1.078,205,2.16,206,2.255,207,3.751,208,2.796,209,3.751,210,2.796,211,2.796,212,2.796,213,2.796,214,2.244,215,2.796,216,2.796]],["title/classes/RxStompConfig.html",[0,0.198,217,1.797]],["body/classes/RxStompConfig.html",[0,0.162,2,0.204,3,0.204,4,0.167,6,0.204,7,1.464,8,0.371,10,1.569,11,1.084,13,2.145,15,1.746,16,0.944,18,0.905,21,0.132,22,0.625,23,1.947,31,0.585,32,0.534,33,0.054,34,0.92,36,0.832,38,1.813,46,2.131,52,0.791,58,0.682,67,0.204,70,1.606,102,1.464,104,1.844,111,2.145,140,2.49,142,2.819,184,0.021,185,0.021,188,0.944,193,0.783,201,1.192,204,1.428,206,0.67,217,1.464,218,1.91,219,1.91,220,0.774,221,2.118,222,1.813,223,1.569,224,2.175,225,2.175,226,3.148,227,3.148,228,3.148,229,2.971,230,3.148,231,3.148,232,3.148,233,3.148,234,3.148,235,3.148,236,1.868,237,1.344,238,2.175,239,1.746,240,2.175,241,2.175,242,2.175,243,1.746,244,1.344,245,4.829,246,4.829,247,2.175,248,1.344,249,1.464,250,2.118,251,2.175,252,2.175,253,1.746,254,3.148,255,3.114,256,3.148,257,2.175,258,1.344,259,1.746,260,1.746,261,1.746,262,2.175,263,2.527,264,2.175,265,2.175,266,2.175,267,1.464,268,1.253,269,1.746,270,2.175,271,2.118,272,1.344,273,1.746,274,1.253,275,1.344,276,1.746,277,2.175,278,1.344,279,1.746,280,2.527,281,2.527,282,2.971,283,2.971,284,2.175,285,1.344,286,1.746,287,2.175,288,1.344,289,2.175,290,1.464,291,2.175,292,2.175,293,2.145,294,1.344,295,2.527,296,1.746,297,1.746,298,0.944,299,2.527,300,2.971,301,1.746,302,2.175,303,2.175,304,2.175,305,1.344,306,1.464,307,2.175,308,2.118,309,1.464,310,2.175,311,3.148,312,3.148,313,2.175,314,2.175,315,2.175,316,0.904,317,1.344,318,2.175,319,1.746,320,2.175,321,1.344,322,1.344]],["title/classes/RxStompRPC.html",[0,0.198,323,1.797]],["body/classes/RxStompRPC.html",[0,0.223,2,0.31,3,0.31,4,0.253,6,0.31,8,0.326,18,0.863,19,1.261,21,0.201,23,1.661,26,1.304,29,1.73,30,2.022,32,0.443,33,0.054,34,0.762,36,0.642,52,0.969,58,1.091,67,0.31,72,3.158,79,1.175,82,2.863,95,2.4,103,1.638,104,1.497,128,1.178,184,0.029,185,0.029,188,1.304,189,2.412,191,1.538,193,0.747,201,1.138,203,0.887,204,1.025,205,1.175,218,1.707,219,1.707,222,1.175,223,2.187,253,1.638,268,2.266,316,1.373,323,2.022,324,1.638,325,2.412,326,4.387,327,4.387,328,2.783,329,2.022,330,2.647,331,3.158,332,2.04,333,3.934,334,2.266,335,2.04,336,1.73,337,3.004,338,2.612,339,2.04,340,3.934,341,4.194,342,3.132,343,3.004,344,2.04,345,1.638,346,2.04,347,2.04,348,3.004,349,1.638,350,2.412,351,2.022,352,1.373,353,3.934,354,3.934,355,3.934,356,2.04,357,1.638,358,1.638,359,2.412,360,2.04,361,2.04,362,2.04,363,2.04,364,3.004,365,3.004,366,3.004,367,2.04,368,2.04,369,2.04,370,2.04,371,2.04,372,1.638,373,3.004,374,2.04,375,2.04,376,2.04,377,2.04,378,3.004,379,3.566,380,2.04,381,2.04,382,2.04,383,2.022,384,2.04,385,2.04,386,1.638,387,2.04,388,2.04,389,2.04,390,2.04,391,2.04]],["title/classes/RxStompRPCConfig.html",[0,0.198,334,1.538]],["body/classes/RxStompRPCConfig.html",[0,0.285,2,0.44,3,0.44,4,0.36,6,0.44,8,0.341,19,0.833,21,0.285,22,1.105,23,1.859,31,0.981,32,0.535,33,0.054,34,0.821,45,3.086,58,1.072,67,0.583,128,1.27,184,0.038,185,0.038,191,1.654,193,1.072,204,1.319,218,1.871,219,1.871,220,1.67,223,2.149,268,2.644,298,1.668,316,1.951,328,2.751,330,3.37,334,2.213,342,2.586,345,2.328,350,2.328,351,3.089,352,2.586,357,3.086,358,3.086,359,3.941,392,4.776,393,4.591,394,2.9,395,3.685,396,3.086,397,3.844,398,2.9,399,3.086]],["title/classes/Stomp.html",[0,0.198,8,0.198]],["body/classes/Stomp.html",[0,0.334,2,0.276,3,0.276,4,0.226,6,0.276,8,0.334,11,1.374,16,1.613,21,0.179,22,0.793,23,1.261,26,1.895,31,0.898,32,0.414,33,0.055,34,0.712,39,0.601,46,2.786,52,0.984,58,0.686,66,1.048,67,0.276,70,1.999,93,3.1,95,2.241,99,2.214,102,2.688,104,2.242,111,1.374,128,0.911,184,0.027,185,0.027,188,1.613,191,0.601,193,0.686,201,1.044,203,0.686,204,0.793,205,1.048,222,1.588,236,1.999,249,2.829,274,2.786,290,2.501,293,1.374,298,0.789,306,1.856,308,1.856,309,1.856,319,2.674,325,1.46,336,2.14,400,1.46,401,2.758,402,2.758,403,3.331,404,3.331,405,3.331,406,1.819,407,2.758,408,2.214,409,2.758,410,2.758,411,2.758,412,2.758,413,2.758,414,3.717,415,2.758,416,1.819,417,4.204,418,1.819,419,2.214,420,2.758,421,4.204,422,2.758,423,2.758,424,3.207,425,1.819,426,1.819,427,2.984,428,2.758,429,2.758,430,2.758,431,3.331,432,2.758,433,2.758,434,2.758,435,2.758,436,2.758,437,3.717,438,2.758,439,2.758,440,3.717,441,3.331,442,2.758,443,2.758,444,3.717,445,1.819,446,1.819,447,2.758,448,2.758,449,1.46,450,1.819,451,1.819,452,1.819,453,1.819,454,2.758,455,1.819,456,1.819,457,1.819,458,2.758,459,1.819,460,1.819,461,2.758,462,1.819,463,1.819]],["title/injectables/StompConfig.html",[464,1.159,465,1.538]],["body/injectables/StompConfig.html",[0,0.154,2,0.315,3,0.315,4,0.258,6,0.315,7,2.047,8,0.267,11,1.516,13,1.516,18,1.311,21,0.204,22,0.874,31,0.974,32,0.548,33,0.054,34,0.943,36,0.847,38,1.752,39,1.458,41,2.074,46,1.752,52,0.847,58,0.757,67,0.315,70,1.32,111,1.977,140,3.147,142,3.211,184,0.03,185,0.03,188,1.32,193,0.987,203,0.757,221,2.047,222,2.284,229,3.543,236,1.32,239,2.442,249,2.97,250,3.264,255,2.97,259,2.442,260,2.442,261,2.442,267,2.047,268,1.752,273,2.442,274,1.752,279,2.442,280,3.184,281,3.184,282,3.543,283,3.755,286,2.442,290,2.047,295,2.442,298,1.32,306,2.047,308,2.047,329,2.047,396,3.184,399,2.442,419,2.442,427,2.442,464,1.563,465,1.752,466,2.273,467,1.666,468,1.752,469,3.967,470,3.967,471,3.967,472,2.075,473,2.075,474,3.042,475,3.042,476,3.042,477,2.075,478,2.075,479,3.042,480,3.042,481,3.967,482,2.075,483,3.042,484,3.042,485,3.042,486,3.042,487,2.075,488,3.042,489,3.042,490,3.042,491,3.042,492,3.042,493,1.666]],["title/interfaces/StompHeaders.html",[36,0.57,186,0.485]],["body/interfaces/StompHeaders.html",[2,0.568,3,0.568,4,0.464,6,0.568,8,0.278,9,3.003,13,1.865,18,1.395,21,0.368,31,1.102,33,0.05,34,0.799,36,0.965,38,2.902,39,1.236,65,2.517,67,0.568,80,3.003,167,3.003,184,0.044,185,0.044,186,0.82,201,1.417,203,0.931,236,1.623,243,3.003,494,3.039,495,2.517,496,3.741,497,3.741,498,3.741,499,3.741,500,3.741,501,3.741]],["title/injectables/StompService.html",[464,1.159,468,1.538]],["body/injectables/StompService.html",[0,0.227,2,0.463,3,0.463,4,0.379,6,0.603,8,0.348,19,1.143,20,2.054,23,1.506,32,0.379,33,0.054,34,0.652,39,1.313,52,0.652,58,1.1,67,0.463,79,2.546,104,2.334,128,1.009,184,0.039,185,0.039,191,1.313,193,1.1,198,2.451,199,2.451,203,0.759,204,0.877,221,2.975,269,2.451,329,2.054,331,2.451,342,2.675,349,3.192,352,2.675,395,2.451,464,1.918,465,2.697,466,1.982,468,2.29,493,2.451,502,2.451,503,3.76,504,3.976,505,3.976,506,3.053,507,3.976,508,3.976,509,3.053,510,3.549,511,3.053,512,3.053,513,3.053,514,3.053,515,3.053,516,3.053,517,3.053,518,3.053,519,2.451,520,3.053,521,3.053,522,3.053,523,3.053]],["title/interfaces/StompSubscription.html",[186,0.485,524,1.797]],["body/interfaces/StompSubscription.html",[2,0.53,3,0.53,4,0.434,6,0.53,8,0.26,18,1.245,21,0.344,26,1.88,31,0.747,32,0.434,33,0.053,34,0.747,36,1.052,52,0.747,58,0.869,61,2.352,67,0.53,128,1.155,184,0.042,185,0.042,186,0.786,191,1.431,192,3.478,193,1.078,201,1.641,203,0.869,204,1.004,205,2.013,206,2.159,214,2.806,336,2.495,383,2.352,494,2.915,524,3.312,525,2.806,526,4.923,527,4.333,528,3.495,529,4.333,530,3.495]],["title/interfaces/Transaction.html",[186,0.485,531,1.797]],["body/interfaces/Transaction.html",[2,0.495,3,0.495,4,0.405,6,0.495,16,1.801,17,2.792,21,0.321,22,1.193,31,0.975,32,0.567,33,0.054,67,0.495,184,0.041,185,0.041,186,0.753,191,1.586,193,1.233,194,3.331,195,3.331,201,1.236,206,2.068,236,2.084,336,1.879,383,3.232,386,3.331,408,3.331,531,3.541,532,2.62,533,3.263,534,3.263,535,3.263,536,5.068,537,5.068,538,4.15,539,4.15,540,3.263,541,3.263]],["title/classes/Versions.html",[0,0.198,293,1.331]],["body/classes/Versions.html",[0,0.325,2,0.391,3,0.391,4,0.32,6,0.391,8,0.325,21,0.254,22,1.02,23,1.902,26,1.541,31,1.114,32,0.57,33,0.054,34,1.038,39,1.341,52,0.935,61,1.735,67,0.391,70,1.119,79,2.045,93,3.421,128,0.852,184,0.035,185,0.035,188,1.541,203,0.641,204,0.741,250,2.389,263,3.807,293,2.58,296,2.85,297,2.85,298,1.898,299,3.807,300,3.807,309,2.732,519,2.85,542,2.07,543,4.375,544,4.375,545,4.375,546,4.375,547,4.375,548,2.579,549,2.579,550,3.551,551,3.551,552,3.551,553,3.551,554,3.551,555,2.579,556,2.579,557,2.579,558,2.579,559,2.579,560,2.579,561,2.579,562,2.579,563,2.579,564,2.579,565,2.579,566,2.579]],["title/coverage.html",[567,2.919]],["body/coverage.html",[0,0.384,1,1.292,4,0.37,5,2.39,8,0.345,19,0.856,32,0.37,33,0.053,36,0.636,70,1.292,184,0.038,185,0.038,186,0.897,187,2.39,217,2.004,218,2.013,219,2.013,220,2.515,223,1.484,267,2.004,274,1.715,293,1.484,323,2.004,324,2.39,328,1.715,334,1.715,338,1.715,400,2.39,424,2.39,464,1.895,465,2.252,466,2.177,467,2.39,468,1.715,494,2.939,495,2.004,502,2.39,510,2.39,524,2.004,525,2.39,531,2.004,532,2.39,542,2.39,567,2.39,568,2.978,569,2.978,570,2.004,571,2.978,572,5.371,573,2.978,574,2.978,575,3.911,576,2.978,577,3.911,578,4.368,579,2.978,580,2.978,581,2.978,582,2.978,583,2.978,584,2.978,585,2.978,586,2.978,587,2.978,588,2.978,589,2.978,590,2.978,591,2.004,592,2.978,593,2.978,594,2.978,595,2.978,596,2.978]],["title/dependencies.html",[597,2.234,598,2.576]],["body/dependencies.html",[33,0.05,184,0.048,185,0.048,598,3.407,599,4.243,600,4.243]],["title/miscellaneous/enumerations.html",[601,1.286,602,2.576]],["body/miscellaneous/enumerations.html",[8,0.366,21,0.381,33,0.045,111,2.298,184,0.045,185,0.045,218,1.68,219,1.68,223,1.93,276,3.109,301,3.109,449,3.702,466,1.93,503,3.109,570,2.606,601,2.23,602,3.109,603,4.611,604,3.109,605,5.097,606,4.611,607,3.109,608,4.611,609,4.924,610,3.872]],["title/index.html",[21,0.263,611,2.144]],["body/index.html",[0,0.312,33,0.047,184,0.047,185,0.047,186,0.763,464,1.824,611,3.374,612,4.203,613,4.203,614,4.203]],["title/modules.html",[615,2.919]],["body/modules.html",[33,0.048,184,0.048,185,0.048,615,3.44]],["title/interfaces/publishParams.html",[186,0.485,338,1.538]],["body/interfaces/publishParams.html",[1,2.136,2,0.357,3,0.357,4,0.292,6,0.357,8,0.175,10,2.297,12,2.986,13,1.661,16,1.022,18,1.464,19,1.324,21,0.232,22,0.958,24,1.89,29,2.787,30,2.986,31,1.078,32,0.633,33,0.054,36,0.898,39,0.778,41,2.556,48,2.675,52,0.503,57,3.376,58,0.962,60,1.584,66,2.227,67,0.734,78,3.376,86,2.675,127,2.675,184,0.033,185,0.033,186,0.605,203,1.178,204,1.487,206,2.096,255,2.242,271,1.584,298,1.446,338,1.919,372,3.699,591,1.584,616,3.332,617,3.332,618,3.332,619,3.332,620,3.332,621,3.332,622,2.355,623,1.89,624,1.89,625,1.89,626,2.355,627,2.355,628,2.355,629,2.355,630,1.89,631,2.355,632,1.89,633,2.355,634,1.89,635,1.89,636,1.89,637,2.675]],["title/miscellaneous/typealiases.html",[601,1.286,638,3.209]],["body/miscellaneous/typealiases.html",[1,1.795,8,0.307,10,2.523,12,3.331,16,1.409,18,0.933,19,1.189,21,0.32,31,0.973,32,0.595,33,0.04,36,0.973,39,1.073,41,1.87,52,0.694,60,3.064,184,0.04,185,0.04,191,1.073,193,0.808,203,1.232,218,1.409,219,1.409,220,2.382,236,2.196,271,3.064,328,2.382,330,2.185,351,3.064,466,1.618,495,2.784,570,2.185,591,2.185,601,1.87,604,2.607,607,2.607,623,3.655,624,3.655,625,3.655,630,3.655,632,2.607,634,2.607,635,2.607,636,2.607,637,3.655,639,3.247,640,5.144,641,4.137,642,3.247]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":140,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["1.0",{"_index":299,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":300,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1.6",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":263,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":480,"title":{},"body":{"injectables/StompConfig.html":{}}}],["20000",{"_index":479,"title":{},"body":{"injectables/StompConfig.html":{}}}],["21/24",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":612,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":486,"title":{},"body":{"injectables/StompConfig.html":{}}}],["5/8",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":485,"title":{},"body":{"injectables/StompConfig.html":{}}}],["6",{"_index":614,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":148,"title":{},"body":{"classes/Frame.html":{}}}],["80",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":613,"title":{},"body":{"index.html":{}}}],["_binarybodi",{"_index":76,"title":{},"body":{"classes/Frame.html":{}}}],["_bodi",{"_index":73,"title":{},"body":{"classes/Frame.html":{}}}],["_repliesobserv",{"_index":362,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuenam",{"_index":356,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueu",{"_index":360,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":536,"title":{},"body":{"interfaces/Transaction.html":{}}}],["accept",{"_index":496,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["access",{"_index":17,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["accessor",{"_index":28,"title":{},"body":{"classes/Frame.html":{}}}],["ack",{"_index":194,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["ack(head",{"_index":196,"title":{},"body":{"interfaces/Message.html":{}}}],["acknowledg",{"_index":200,"title":{},"body":{"interfaces/Message.html":{}}}],["act",{"_index":401,"title":{},"body":{"classes/Stomp.html":{}}}],["activemq",{"_index":397,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["ad",{"_index":620,"title":{},"body":{"interfaces/publishParams.html":{}}}],["addit",{"_index":497,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["advanc",{"_index":14,"title":{},"body":{"classes/Frame.html":{}}}],["alias",{"_index":639,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":441,"title":{},"body":{"classes/Stomp.html":{}}}],["altern",{"_index":427,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["angular/cor",{"_index":493,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":349,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompService.html":{}}}],["anoth",{"_index":448,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":370,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":551,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuff",{"_index":51,"title":{},"body":{"classes/Frame.html":{}}}],["asynchron",{"_index":517,"title":{},"body":{"injectables/StompService.html":{}}}],["attempt",{"_index":295,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["attribut",{"_index":225,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":484,"title":{},"body":{"injectables/StompConfig.html":{}}}],["automat",{"_index":289,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["avail",{"_index":80,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{}}}],["befor",{"_index":239,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["beforeconnect",{"_index":226,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["binari",{"_index":48,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["binarybodi",{"_index":30,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompRPC.html":{},"interfaces/publishParams.html":{}}}],["binarybody.length",{"_index":144,"title":{},"body":{"classes/Frame.html":{}}}],["bodi",{"_index":29,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompRPC.html":{},"interfaces/publishParams.html":{}}}],["body]{@link",{"_index":212,"title":{},"body":{"interfaces/Message.html":{}}}],["bodylength",{"_index":141,"title":{},"body":{"classes/Frame.html":{}}}],["boolean",{"_index":41,"title":{},"body":{"classes/Frame.html":{},"injectables/StompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["both",{"_index":256,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":13,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/publishParams.html":{}}}],["brokerurl",{"_index":227,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["byte",{"_index":59,"title":{},"body":{"classes/Frame.html":{}}}],["byte.lf",{"_index":137,"title":{},"body":{"classes/Frame.html":{}}}],["byte.nul",{"_index":122,"title":{},"body":{"classes/Frame.html":{}}}],["c",{"_index":177,"title":{},"body":{"classes/Frame.html":{}}}],["call",{"_index":201,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{}}}],["call.html",{"_index":355,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["callabl",{"_index":434,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":10,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":210,"title":{},"body":{"interfaces/Message.html":{}}}],["case",{"_index":99,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{}}}],["caveat",{"_index":535,"title":{},"body":{"interfaces/Transaction.html":{}}}],["chang",{"_index":240,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["charact",{"_index":150,"title":{},"body":{"classes/Frame.html":{}}}],["check",{"_index":266,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":0,"title":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["cleanup",{"_index":390,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":274,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["client#abort",{"_index":538,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#abort]{@link",{"_index":541,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#ack",{"_index":202,"title":{},"body":{"interfaces/Message.html":{}}}],["client#ack]{@link",{"_index":215,"title":{},"body":{"interfaces/Message.html":{}}}],["client#begin",{"_index":533,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#brokerurl",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#commit",{"_index":539,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#commit]{@link",{"_index":540,"title":{},"body":{"interfaces/Transaction.html":{}}}],["client#nack",{"_index":209,"title":{},"body":{"interfaces/Message.html":{}}}],["client#nack]{@link",{"_index":216,"title":{},"body":{"interfaces/Message.html":{}}}],["client#onunhandledmessag",{"_index":190,"title":{},"body":{"interfaces/Message.html":{}}}],["client#onunhandledmessage]{@link",{"_index":211,"title":{},"body":{"interfaces/Message.html":{}}}],["client#publish",{"_index":616,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client#publish]{@link",{"_index":633,"title":{},"body":{"interfaces/publishParams.html":{}}}],["client#subscrib",{"_index":192,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":214,"title":{},"body":{"interfaces/Message.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscrib",{"_index":529,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":530,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client(url",{"_index":416,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":433,"title":{},"body":{"classes/Stomp.html":{}}}],["client.t",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closeev",{"_index":632,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":627,"title":{},"body":{"interfaces/publishParams.html":{}}}],["closeeventcallbacktyp",{"_index":630,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["cmdandhead",{"_index":118,"title":{},"body":{"classes/Frame.html":{}}}],["command",{"_index":24,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["commit",{"_index":537,"title":{},"body":{"interfaces/Transaction.html":{}}}],["compat",{"_index":445,"title":{},"body":{"classes/Stomp.html":{}}}],["compatcli",{"_index":424,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(ws_fn",{"_index":461,"title":{},"body":{"classes/Stomp.html":{}}}],["compodoc/compodoc",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["compos",{"_index":151,"title":{},"body":{"classes/Frame.html":{}}}],["comput",{"_index":145,"title":{},"body":{"classes/Frame.html":{}}}],["config",{"_index":352,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompService.html":{}}}],["config.t",{"_index":220,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:105",{"_index":237,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:18",{"_index":394,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:19",{"_index":248,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":398,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:32",{"_index":294,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:35",{"_index":272,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:58",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:65",{"_index":288,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:72",{"_index":278,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:79",{"_index":285,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:88",{"_index":258,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:95",{"_index":275,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["configur",{"_index":221,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["connect",{"_index":111,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["connecthead",{"_index":228,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["consolidated/.../rx",{"_index":604,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":607,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../types.t",{"_index":640,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":466,"title":{},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/rx",{"_index":218,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.t",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.t",{"_index":400,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:19",{"_index":406,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:30",{"_index":418,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:68",{"_index":426,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/frame.t",{"_index":5,"title":{},"body":{"classes/Frame.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/frame.ts:121",{"_index":43,"title":{},"body":{"classes/Frame.html":{}}}],["consolidated/stompjs/src/frame.ts:20",{"_index":35,"title":{},"body":{"classes/Frame.html":{}}}],["consolidated/stompjs/src/frame.ts:25",{"_index":37,"title":{},"body":{"classes/Frame.html":{}}}],["consolidated/stompjs/src/frame.ts:27",{"_index":42,"title":{},"body":{"classes/Frame.html":{}}}],["consolidated/stompjs/src/frame.ts:32",{"_index":54,"title":{},"body":{"classes/Frame.html":{}}}],["consolidated/stompjs/src/frame.ts:43",{"_index":56,"title":{},"body":{"classes/Frame.html":{}}}],["consolidated/stompjs/src/message.t",{"_index":187,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/message.ts:18",{"_index":197,"title":{},"body":{"interfaces/Message.html":{}}}],["consolidated/stompjs/src/message.ts:25",{"_index":208,"title":{},"body":{"interfaces/Message.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":494,"title":{},"body":{"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/transaction.t",{"_index":532,"title":{},"body":{"interfaces/Transaction.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.t",{"_index":591,"title":{},"body":{"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.t",{"_index":542,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:12",{"_index":556,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:16",{"_index":557,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:21",{"_index":549,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:29",{"_index":558,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:32",{"_index":560,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:36",{"_index":559,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:8",{"_index":555,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":95,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["constructor",{"_index":79,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompRPC.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":505,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(param",{"_index":81,"title":{},"body":{"classes/Frame.html":{}}}],["constructor(priv",{"_index":363,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(rxstomp",{"_index":332,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(vers",{"_index":548,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":498,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["content",{"_index":619,"title":{},"body":{"interfaces/publishParams.html":{}}}],["correlationid",{"_index":379,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["count",{"_index":149,"title":{},"body":{"classes/Frame.html":{}}}],["coverag",{"_index":567,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":499,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["creat",{"_index":336,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{}}}],["data",{"_index":92,"title":{},"body":{"classes/Frame.html":{}}}],["debug",{"_index":229,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["debugfntyp",{"_index":271,"title":{},"body":{"classes/RxStompConfig.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["declar",{"_index":554,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":298,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["defaultmessagessubscript",{"_index":378,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscrib",{"_index":391,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defin",{"_index":34,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["definit",{"_index":642,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["delay",{"_index":291,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["delet",{"_index":125,"title":{},"body":{"classes/Frame.html":{}}}],["depend",{"_index":598,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deprec",{"_index":453,"title":{},"body":{"classes/Stomp.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["deseri",{"_index":90,"title":{},"body":{"classes/Frame.html":{}}}],["destin",{"_index":372,"title":{},"body":{"classes/RxStompRPC.html":{},"interfaces/publishParams.html":{}}}],["detail",{"_index":268,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["disabl",{"_index":283,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["disconnect",{"_index":276,"title":{},"body":{"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["disconnecthead",{"_index":230,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["document",{"_index":267,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["documentation/rpc",{"_index":354,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["dure",{"_index":296,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["element",{"_index":552,"title":{},"body":{"classes/Versions.html":{}}}],["enabl",{"_index":273,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["end",{"_index":617,"title":{},"body":{"interfaces/publishParams.html":{}}}],["enumer",{"_index":602,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":410,"title":{},"body":{"classes/Stomp.html":{}}}],["es6",{"_index":516,"title":{},"body":{"injectables/StompService.html":{}}}],["escap",{"_index":171,"title":{},"body":{"classes/Frame.html":{}}}],["escapeheadervalu",{"_index":77,"title":{},"body":{"classes/Frame.html":{}}}],["evt",{"_index":631,"title":{},"body":{"interfaces/publishParams.html":{}}}],["exampl",{"_index":193,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["export",{"_index":67,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["extend",{"_index":20,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"injectables/StompService.html":{}}}],["factori",{"_index":402,"title":{},"body":{"classes/Stomp.html":{}}}],["fals",{"_index":87,"title":{},"body":{"classes/Frame.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"interfaces/publishParams.html":{}}}],["filter",{"_index":346,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":103,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompRPC.html":{}}}],["format",{"_index":44,"title":{},"body":{"classes/Frame.html":{}}}],["frame",{"_index":1,"title":{"classes/Frame.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["frame#bodi",{"_index":213,"title":{},"body":{"interfaces/Message.html":{}}}],["frame#head",{"_index":65,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"interfaces/StompHeaders.html":{}}}],["frame(param",{"_index":169,"title":{},"body":{"classes/Frame.html":{}}}],["frame.hdrvalueunescape(valu",{"_index":112,"title":{},"body":{"classes/Frame.html":{}}}],["frame.seri",{"_index":170,"title":{},"body":{"classes/Frame.html":{}}}],["frame.tounit8array(cmdandhead",{"_index":120,"title":{},"body":{"classes/Frame.html":{}}}],["framecallbacktyp",{"_index":625,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["fromrawframe(rawfram",{"_index":94,"title":{},"body":{"classes/Frame.html":{}}}],["function",{"_index":236,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["getbinarybodi",{"_index":55,"title":{},"body":{"classes/Frame.html":{}}}],["getbodi",{"_index":53,"title":{},"body":{"classes/Frame.html":{}}}],["guid",{"_index":330,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["guide](../addit",{"_index":353,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["hack",{"_index":447,"title":{},"body":{"classes/Stomp.html":{}}}],["handl",{"_index":512,"title":{},"body":{"injectables/StompService.html":{}}}],["handshak",{"_index":297,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["hdrvalueescape(str",{"_index":172,"title":{},"body":{"classes/Frame.html":{}}}],["hdrvalueunescape(str",{"_index":179,"title":{},"body":{"classes/Frame.html":{}}}],["header",{"_index":18,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["header.indexof",{"_index":107,"title":{},"body":{"classes/Frame.html":{}}}],["headers.t",{"_index":495,"title":{},"body":{"interfaces/StompHeaders.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["headers.ts:8",{"_index":501,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["headers['correl",{"_index":388,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['repli",{"_index":387,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers[key",{"_index":113,"title":{},"body":{"classes/Frame.html":{}}}],["headers]{@link",{"_index":64,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{}}}],["heartbeat",{"_index":280,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["heartbeat_in",{"_index":469,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeat_out",{"_index":470,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeatincom",{"_index":231,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatoutgo",{"_index":232,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["host",{"_index":261,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["host:str",{"_index":474,"title":{},"body":{"injectables/StompConfig.html":{}}}],["html5",{"_index":431,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":628,"title":{},"body":{"interfaces/publishParams.html":{}}}],["https://stomp",{"_index":246,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["i.",{"_index":49,"title":{},"body":{"classes/Frame.html":{}}}],["id",{"_index":383,"title":{},"body":{"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{}}}],["identifi",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":106,"title":{},"body":{"classes/Frame.html":{}}}],["if(this.isbinarybodi",{"_index":119,"title":{},"body":{"classes/Frame.html":{}}}],["immedi",{"_index":242,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["impact",{"_index":241,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implement",{"_index":325,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["import",{"_index":58,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/publishParams.html":{}}}],["incom",{"_index":279,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["initi",{"_index":520,"title":{},"body":{"injectables/StompService.html":{}}}],["inject",{"_index":464,"title":{"injectables/StompConfig.html":{},"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["instanc",{"_index":188,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["instead",{"_index":455,"title":{},"body":{"classes/Stomp.html":{}}}],["interfac",{"_index":186,"title":{"interfaces/Message.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{}},"body":{"interfaces/Message.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"coverage.html":{},"index.html":{},"interfaces/publishParams.html":{}}}],["intern",{"_index":61,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["interv",{"_index":281,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["invok",{"_index":238,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["isbinarybodi",{"_index":25,"title":{},"body":{"classes/Frame.html":{}}}],["isbodyempti",{"_index":138,"title":{},"body":{"classes/Frame.html":{}}}],["javascript",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["js.github.io/stompjs/classes/client.html#beforeconnect",{"_index":247,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#brokerurl",{"_index":257,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#connecthead",{"_index":270,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#disconnecthead",{"_index":277,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatincom",{"_index":284,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#heartbeatoutgo",{"_index":287,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#reconnectdelay",{"_index":292,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#stompvers",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["js.github.io/stompjs/classes/client.html#websocketfactori",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["key",{"_index":38,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{}}}],["klass",{"_index":459,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":460,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":368,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["length",{"_index":127,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["length:${this.bodylength",{"_index":135,"title":{},"body":{"classes/Frame.html":{}}}],["lf",{"_index":500,"title":{},"body":{"interfaces/StompHeaders.html":{}}}],["librari",{"_index":514,"title":{},"body":{"injectables/StompService.html":{}}}],["line",{"_index":124,"title":{},"body":{"classes/Frame.html":{}}}],["lines.join(byte.lf",{"_index":136,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`${name}:${frame.hdrvalueescape(`${valu",{"_index":131,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`${name}:${valu",{"_index":132,"title":{},"body":{"classes/Frame.html":{}}}],["lines.push(`cont",{"_index":134,"title":{},"body":{"classes/Frame.html":{}}}],["link",{"_index":66,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/Stomp.html":{},"interfaces/publishParams.html":{}}}],["liter",{"_index":641,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["localhost",{"_index":491,"title":{},"body":{"injectables/StompConfig.html":{}}}],["locat",{"_index":420,"title":{},"body":{"classes/Stomp.html":{}}}],["login",{"_index":259,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["make",{"_index":340,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["mani",{"_index":9,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{}}}],["manual",{"_index":199,"title":{},"body":{"interfaces/Message.html":{},"injectables/StompService.html":{}}}],["map",{"_index":245,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["mark",{"_index":264,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["marshall(param",{"_index":168,"title":{},"body":{"classes/Frame.html":{}}}],["match",{"_index":185,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["messag",{"_index":19,"title":{"interfaces/Message.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correl",{"_index":382,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["messagecallbacktyp",{"_index":623,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["messagecheckcallbacktyp",{"_index":624,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":26,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["millisecond",{"_index":282,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["miscellan",{"_index":601,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["modul",{"_index":615,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":435,"title":{},"body":{"classes/Stomp.html":{}}}],["mozwebsocket",{"_index":450,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":622,"title":{},"body":{"interfaces/publishParams.html":{}}}],["n\").replace(/:/g",{"_index":176,"title":{},"body":{"classes/Frame.html":{}}}],["n\").replace(/\\\\c/g",{"_index":182,"title":{},"body":{"classes/Frame.html":{}}}],["nack",{"_index":195,"title":{},"body":{"interfaces/Message.html":{},"interfaces/Transaction.html":{}}}],["nack(head",{"_index":207,"title":{},"body":{"interfaces/Message.html":{}}}],["name",{"_index":128,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["need",{"_index":16,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["neeed",{"_index":475,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":70,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["nodej",{"_index":409,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":407,"title":{},"body":{"classes/Stomp.html":{}}}],["null",{"_index":405,"title":{},"body":{"classes/Stomp.html":{}}}],["nulltermin",{"_index":158,"title":{},"body":{"classes/Frame.html":{}}}],["nullterminator.length",{"_index":162,"title":{},"body":{"classes/Frame.html":{}}}],["number",{"_index":142,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["object",{"_index":222,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["object).assign",{"_index":85,"title":{},"body":{"classes/Frame.html":{}}}],["object.keys(this.head",{"_index":129,"title":{},"body":{"classes/Frame.html":{}}}],["observ",{"_index":342,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompService.html":{}}}],["observable.cr",{"_index":376,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["on",{"_index":253,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onc",{"_index":436,"title":{},"body":{"classes/Stomp.html":{}}}],["open",{"_index":610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["option",{"_index":204,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["order",{"_index":432,"title":{},"body":{"classes/Stomp.html":{}}}],["outgo",{"_index":286,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["output",{"_index":47,"title":{},"body":{"classes/Frame.html":{}}}],["over",{"_index":404,"title":{},"body":{"classes/Stomp.html":{}}}],["over(w",{"_index":425,"title":{},"body":{"classes/Stomp.html":{}}}],["overrid",{"_index":553,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":611,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":597,"title":{"dependencies.html":{}},"body":{}}],["pair",{"_index":40,"title":{},"body":{"classes/Frame.html":{}}}],["param",{"_index":82,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompRPC.html":{}}}],["paramet",{"_index":203,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["params.head",{"_index":371,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["parser",{"_index":634,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["partial",{"_index":63,"title":{},"body":{"classes/Frame.html":{}}}],["pass",{"_index":11,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["passcod",{"_index":260,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["per",{"_index":101,"title":{},"body":{"classes/Frame.html":{}}}],["pleas",{"_index":329,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{}}}],["point",{"_index":618,"title":{},"body":{"interfaces/publishParams.html":{}}}],["possibl",{"_index":449,"title":{},"body":{"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["present",{"_index":265,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":451,"title":{},"body":{"classes/Stomp.html":{}}}],["privat",{"_index":72,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompRPC.html":{}}}],["procedur",{"_index":327,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["properti",{"_index":22,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["protocol",{"_index":417,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolvers",{"_index":546,"title":{},"body":{"classes/Versions.html":{}}}],["public",{"_index":23,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["publishparam",{"_index":338,"title":{"interfaces/publishParams.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{},"interfaces/publishParams.html":{}}}],["queue",{"_index":395,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":358,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["r\").replace(/\\\\n/g",{"_index":181,"title":{},"body":{"classes/Frame.html":{}}}],["r\").replace(/\\n/g",{"_index":175,"title":{},"body":{"classes/Frame.html":{}}}],["r.servic",{"_index":511,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.t",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":396,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["raw",{"_index":91,"title":{},"body":{"classes/Frame.html":{}}}],["rawframe.binarybodi",{"_index":114,"title":{},"body":{"classes/Frame.html":{}}}],["rawframe.command",{"_index":110,"title":{},"body":{"classes/Frame.html":{}}}],["rawframe.headers.revers",{"_index":105,"title":{},"body":{"classes/Frame.html":{}}}],["rawframetyp",{"_index":60,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["rawheadertyp",{"_index":637,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["readm",{"_index":507,"title":{},"body":{"injectables/StompService.html":{}}}],["receipt",{"_index":626,"title":{},"body":{"interfaces/publishParams.html":{}}}],["receiv",{"_index":12,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["reconnect",{"_index":290,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["reconnect_delay",{"_index":471,"title":{},"body":{"injectables/StompConfig.html":{}}}],["reconnectdelay",{"_index":233,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["refer",{"_index":488,"title":{},"body":{"injectables/StompConfig.html":{}}}],["remark",{"_index":456,"title":{},"body":{"classes/Stomp.html":{}}}],["remot",{"_index":326,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repeat",{"_index":100,"title":{},"body":{"classes/Frame.html":{}}}],["replace(/\\\\\\\\/g",{"_index":183,"title":{},"body":{"classes/Frame.html":{}}}],["replace(/\\r/g",{"_index":174,"title":{},"body":{"classes/Frame.html":{}}}],["repli",{"_index":359,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuenam",{"_index":392,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["repres",{"_index":7,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["request",{"_index":341,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["require('../../esm5",{"_index":412,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":415,"title":{},"body":{"classes/Stomp.html":{}}}],["result",{"_index":184,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":52,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["rpc",{"_index":328,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(param",{"_index":337,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.t",{"_index":324,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:23",{"_index":335,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:42",{"_index":339,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:50",{"_index":344,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserv",{"_index":377,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(messag",{"_index":385,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["run",{"_index":490,"title":{},"body":{"injectables/StompConfig.html":{}}}],["rx",{"_index":350,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["rxj",{"_index":345,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["rxjs/oper",{"_index":347,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomp",{"_index":223,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["rxstomp#configur",{"_index":224,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactiv",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativ",{"_index":244,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":217,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#websocketfactori",{"_index":254,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompvers",{"_index":302,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactori",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":323,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rxstomprpcconfig",{"_index":334,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstompstat",{"_index":603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["s",{"_index":153,"title":{},"body":{"classes/Frame.html":{}}}],["sampl",{"_index":508,"title":{},"body":{"injectables/StompService.html":{}}}],["second",{"_index":481,"title":{},"body":{"injectables/StompConfig.html":{}}}],["see",{"_index":191,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":386,"title":{},"body":{"classes/RxStompRPC.html":{},"interfaces/Transaction.html":{}}}],["sent",{"_index":167,"title":{},"body":{"classes/Frame.html":{},"interfaces/StompHeaders.html":{}}}],["serial",{"_index":27,"title":{},"body":{"classes/Frame.html":{}}}],["serializecmdandhead",{"_index":123,"title":{},"body":{"classes/Frame.html":{}}}],["server",{"_index":419,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["servic",{"_index":503,"title":{},"body":{"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["set",{"_index":255,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"interfaces/publishParams.html":{}}}],["setup",{"_index":399,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["setupreplyqueu",{"_index":393,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntyp",{"_index":351,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["similar",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["size",{"_index":146,"title":{},"body":{"classes/Frame.html":{}}}],["sizeofutf8(",{"_index":152,"title":{},"body":{"classes/Frame.html":{}}}],["skip",{"_index":621,"title":{},"body":{"interfaces/publishParams.html":{}}}],["skipcontentlengthhead",{"_index":78,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["socket",{"_index":440,"title":{},"body":{"classes/Stomp.html":{}}}],["sockj",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":492,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{}}}],["specif",{"_index":269,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompService.html":{}}}],["specifi",{"_index":430,"title":{},"body":{"classes/Stomp.html":{}}}],["standard",{"_index":102,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["state",{"_index":608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.t",{"_index":605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statement",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":93,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["stomp",{"_index":8,"title":{"classes/Stomp.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":428,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":462,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":452,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":423,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":509,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.j",{"_index":513,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.ov",{"_index":454,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(funct",{"_index":442,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.t",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":414,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/src/rx",{"_index":219,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.j",{"_index":504,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompj",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stompconfig",{"_index":465,"title":{"injectables/StompConfig.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomphead",{"_index":36,"title":{"interfaces/StompHeaders.html":{}},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["stompj",{"_index":411,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs.stomp",{"_index":413,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/src/stomp",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stompjs/src/stomp.config.t",{"_index":467,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["stompjs/src/stomp.config.ts:24",{"_index":487,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:31",{"_index":473,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:38",{"_index":477,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:46",{"_index":478,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:54",{"_index":482,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.config.ts:57",{"_index":472,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/stomp.service.t",{"_index":502,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/stomp.service.ts:20",{"_index":506,"title":{},"body":{"injectables/StompService.html":{}}}],["stomprpcconfig",{"_index":333,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuenam",{"_index":364,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueu",{"_index":366,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservic",{"_index":510,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompservic",{"_index":468,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompstat",{"_index":606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompsubscript",{"_index":524,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompvers",{"_index":234,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["str",{"_index":97,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/\\\\/g",{"_index":173,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/\\\\r/g",{"_index":180,"title":{},"body":{"classes/Frame.html":{}}}],["str.replace(/^\\s+|\\s+$/g",{"_index":98,"title":{},"body":{"classes/Frame.html":{}}}],["stream",{"_index":331,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompService.html":{}}}],["stream(param",{"_index":343,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":31,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["string|arraybuff",{"_index":117,"title":{},"body":{"classes/Frame.html":{}}}],["structur",{"_index":636,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["subscrib",{"_index":198,"title":{},"body":{"interfaces/Message.html":{},"injectables/StompService.html":{}}}],["subscribe((messag",{"_index":384,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscript",{"_index":189,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompRPC.html":{}}}],["subscription.t",{"_index":525,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:15",{"_index":528,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["suitabl",{"_index":45,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":521,"title":{},"body":{"injectables/StompService.html":{}}}],["support",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["supportedvers",{"_index":547,"title":{},"body":{"classes/Versions.html":{}}}],["tabl",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":550,"title":{},"body":{"classes/Versions.html":{}}}],["tcp",{"_index":439,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":357,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["textdecoder().decode(this._binarybodi",{"_index":71,"title":{},"body":{"classes/Frame.html":{}}}],["textencoder().encode(cmdandhead",{"_index":157,"title":{},"body":{"classes/Frame.html":{}}}],["textencoder().encode(s).length",{"_index":154,"title":{},"body":{"classes/Frame.html":{}}}],["textencoder().encode(this._bodi",{"_index":75,"title":{},"body":{"classes/Frame.html":{}}}],["this._binarybodi",{"_index":74,"title":{},"body":{"classes/Frame.html":{}}}],["this._binarybody).buff",{"_index":121,"title":{},"body":{"classes/Frame.html":{}}}],["this._bodi",{"_index":68,"title":{},"body":{"classes/Frame.html":{}}}],["this._repliesobserv",{"_index":373,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable.pipe(filter((messag",{"_index":381,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuenam",{"_index":365,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueu",{"_index":367,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue(this._replyqueuenam",{"_index":374,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.binarybodi",{"_index":143,"title":{},"body":{"classes/Frame.html":{}}}],["this.bodylength",{"_index":139,"title":{},"body":{"classes/Frame.html":{}}}],["this.command",{"_index":83,"title":{},"body":{"classes/Frame.html":{}}}],["this.config",{"_index":522,"title":{},"body":{"injectables/StompService.html":{}}}],["this.escapeheadervalu",{"_index":88,"title":{},"body":{"classes/Frame.html":{}}}],["this.head",{"_index":84,"title":{},"body":{"classes/Frame.html":{}}}],["this.headers['cont",{"_index":126,"title":{},"body":{"classes/Frame.html":{}}}],["this.headers[nam",{"_index":130,"title":{},"body":{"classes/Frame.html":{}}}],["this.initandconnect",{"_index":523,"title":{},"body":{"injectables/StompService.html":{}}}],["this.isbinarybodi",{"_index":69,"title":{},"body":{"classes/Frame.html":{}}}],["this.isbodyempti",{"_index":133,"title":{},"body":{"classes/Frame.html":{}}}],["this.rxstomp",{"_index":375,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish({destin",{"_index":389,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessag",{"_index":361,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serializecmdandhead",{"_index":116,"title":{},"body":{"classes/Frame.html":{}}}],["this.skipcontentlengthhead",{"_index":89,"title":{},"body":{"classes/Frame.html":{}}}],["this.stream(params).pipe(first",{"_index":369,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":564,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":565,"title":{},"body":{"classes/Versions.html":{}}}],["though",{"_index":262,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["todo",{"_index":534,"title":{},"body":{"interfaces/Transaction.html":{}}}],["tostr",{"_index":115,"title":{},"body":{"classes/Frame.html":{}}}],["tounit8array(cmdandhead",{"_index":155,"title":{},"body":{"classes/Frame.html":{}}}],["transact",{"_index":531,"title":{"interfaces/Transaction.html":{}},"body":{"interfaces/Transaction.html":{},"coverage.html":{}}}],["transport",{"_index":438,"title":{},"body":{"classes/Stomp.html":{}}}],["tri",{"_index":301,"title":{},"body":{"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["trim",{"_index":96,"title":{},"body":{"classes/Frame.html":{}}}],["trim(header[0",{"_index":108,"title":{},"body":{"classes/Frame.html":{}}}],["trim(header[1",{"_index":109,"title":{},"body":{"classes/Frame.html":{}}}],["true",{"_index":86,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/Frame.html":{},"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"classes/Versions.html":{},"coverage.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":638,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof(w",{"_index":463,"title":{},"body":{"classes/Stomp.html":{}}}],["typic",{"_index":250,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["uint8array",{"_index":57,"title":{},"body":{"classes/Frame.html":{},"interfaces/publishParams.html":{}}}],["uint8array([0",{"_index":159,"title":{},"body":{"classes/Frame.html":{}}}],["uint8array(uint8cmdandheaders.length",{"_index":161,"title":{},"body":{"classes/Frame.html":{}}}],["uint8cmdandhead",{"_index":156,"title":{},"body":{"classes/Frame.html":{}}}],["uint8cmdandheaders.length",{"_index":165,"title":{},"body":{"classes/Frame.html":{}}}],["uint8fram",{"_index":160,"title":{},"body":{"classes/Frame.html":{}}}],["uint8frame.set(binarybodi",{"_index":164,"title":{},"body":{"classes/Frame.html":{}}}],["uint8frame.set(nulltermin",{"_index":166,"title":{},"body":{"classes/Frame.html":{}}}],["uint8frame.set(uint8cmdandhead",{"_index":163,"title":{},"body":{"classes/Frame.html":{}}}],["underli",{"_index":437,"title":{},"body":{"classes/Stomp.html":{}}}],["unescap",{"_index":178,"title":{},"body":{"classes/Frame.html":{}}}],["unit8array",{"_index":50,"title":{},"body":{"classes/Frame.html":{}}}],["unmarshallresult",{"_index":62,"title":{},"body":{"classes/Frame.html":{}}}],["unsubscrib",{"_index":526,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["unsubscribe(head",{"_index":527,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["url",{"_index":249,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["us",{"_index":104,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["us/docs/web/api/closeev",{"_index":629,"title":{},"body":{"interfaces/publishParams.html":{}}}],["usag",{"_index":15,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{}}}],["user",{"_index":429,"title":{},"body":{"classes/Stomp.html":{}}}],["utf",{"_index":147,"title":{},"body":{"classes/Frame.html":{}}}],["uuid",{"_index":348,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["uuid.uuid",{"_index":380,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replac",{"_index":566,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":543,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":544,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":545,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":243,"title":{},"body":{"classes/RxStompConfig.html":{},"interfaces/StompHeaders.html":{}}}],["valu",{"_index":39,"title":{},"body":{"classes/Frame.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"interfaces/StompHeaders.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}],["var",{"_index":421,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":293,"title":{"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["versions(['1.0",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions([versions.v1_0",{"_index":561,"title":{},"body":{"classes/Versions.html":{}}}],["versions.default.protocolvers",{"_index":457,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_1",{"_index":562,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":563,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":515,"title":{},"body":{"injectables/StompService.html":{}}}],["virtual",{"_index":476,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":206,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompConfig.html":{},"interfaces/StompSubscription.html":{},"interfaces/Transaction.html":{},"interfaces/publishParams.html":{}}}],["wait",{"_index":483,"title":{},"body":{"injectables/StompConfig.html":{}}}],["want",{"_index":519,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["websocket",{"_index":46,"title":{},"body":{"classes/Frame.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/w",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/w",{"_index":443,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":403,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass:ani",{"_index":446,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactori",{"_index":235,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["wire",{"_index":518,"title":{},"body":{"injectables/StompService.html":{}}}],["within",{"_index":408,"title":{},"body":{"classes/Stomp.html":{},"interfaces/Transaction.html":{}}}],["ws",{"_index":444,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://127.0.0.1:15674/w",{"_index":489,"title":{},"body":{"injectables/StompConfig.html":{}}}],["ws://broker.329broker.com:15674/w",{"_index":251,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":422,"title":{},"body":{"classes/Stomp.html":{}}}],["ws_fn",{"_index":458,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/w",{"_index":252,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ye",{"_index":205,"title":{},"body":{"interfaces/Message.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["yield",{"_index":635,"title":{},"body":{"interfaces/publishParams.html":{},"miscellaneous/typealiases.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Frame.html":{"url":"classes/Frame.html","title":"class - Frame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Frame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/frame.ts\n        \n\n            \n                Description\n            \n            \n                Frame class represents a STOMP frame. Many of the callbacks pass the Frame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nMessage is an extended Frame.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                command\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                isBinaryBody\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    body\n                                \n                                \n                                    binaryBody\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            command\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        command:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame.ts:20\n                            \n                        \n\n                \n                    \n                        STOMP Command\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame.ts:25\n                            \n                        \n\n                \n                    \n                        Headers, key value pairs.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isBinaryBody\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isBinaryBody:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        serialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/frame.ts:121\n                            \n                        \n\n\n                \n                    \n                            serialize this Frame in a format suitable to be passed to WebSocket.\nIf the body is string the output will be string.\nIf the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n\n\n                            \n                                Returns :     string | ArrayBuffer\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n\n                \n                    \n                        getbody()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/frame.ts:32\n                                \n                            \n                    \n                        \n                                body of the frame\n\n\n                                \n                                    Returns :     string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        binaryBody\n                    \n                \n\n                \n                    \n                        getbinaryBody()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/stompjs/src/frame.ts:43\n                                \n                            \n                    \n                        \n                                body as Uint8Array\n\n\n                                \n                                    Returns :     Uint8Array\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\nimport {Byte} from \"./byte\";\nimport {RawFrameType} from \"./types\";\n\n/**\n * @internal\n */\ntype unmarshallResults = { frames: Frame[]; partial: string };\n\n/**\n * Frame class represents a STOMP frame. Many of the callbacks pass the Frame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link Frame#headers}.\n *\n * {@link Message} is an extended Frame.\n */\nexport class Frame {\n  /**\n   * STOMP Command\n   */\n  public command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  public headers: StompHeaders;\n\n  public isBinaryBody: boolean;\n\n  /**\n   * body of the frame\n   */\n  get body(): string {\n    if (!this._body && this.isBinaryBody) {\n      this._body = new TextDecoder().decode(this._binaryBody);\n    }\n    return this._body;\n  }\n  private _body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  get binaryBody(): Uint8Array {\n    if (!this._binaryBody && !this.isBinaryBody) {\n      this._binaryBody = new TextEncoder().encode(this._body);\n    }\n    return this._binaryBody;\n  }\n  private _binaryBody: Uint8Array;\n\n  private escapeHeaderValues: boolean;\n  private skipContentLengthHeader: boolean;\n\n  /**\n   * Frame constructor. `command`, `headers` and `body` are available as properties.\n   *\n   * @internal\n   */\n  constructor(params: {\n    command: string, headers?: StompHeaders, body?: string, binaryBody?: Uint8Array,\n    escapeHeaderValues?: boolean, skipContentLengthHeader?: boolean\n  }) {\n    let {command, headers, body, binaryBody, escapeHeaderValues, skipContentLengthHeader} = params;\n    this.command = command;\n    this.headers = (Object).assign({}, headers || {});\n\n    if (binaryBody) {\n      this._binaryBody = binaryBody;\n      this.isBinaryBody = true;\n    } else {\n      this._body = body || '';\n      this.isBinaryBody = false;\n    }\n    this.escapeHeaderValues = escapeHeaderValues || false;\n    this.skipContentLengthHeader = skipContentLengthHeader || false;\n  }\n\n  /**\n   * deserialize a STOMP Frame from raw data.\n   *\n   * @internal\n   */\n  public static fromRawFrame(rawFrame: RawFrameType, escapeHeaderValues: boolean): Frame {\n    const headers: StompHeaders = {};\n    const trim = (str: string): string => str.replace(/^\\s+|\\s+$/g, '');\n\n    // In case of repeated headers, as per standards, first value need to be used\n    for (let header of rawFrame.headers.reverse()) {\n      const idx = header.indexOf(':');\n\n      const key = trim(header[0]);\n      let value = trim(header[1]);\n\n      if (escapeHeaderValues && (rawFrame.command !== 'CONNECT') && (rawFrame.command !== 'CONNECTED')) {\n        value = Frame.hdrValueUnEscape(value);\n      }\n\n      headers[key] = value;\n    }\n\n    return new Frame({\n      command: rawFrame.command,\n      headers: headers,\n      binaryBody: rawFrame.binaryBody,\n      escapeHeaderValues: escapeHeaderValues\n    });\n  }\n\n  /**\n   * @internal\n   */\n  public toString(): string {\n    return this.serializeCmdAndHeaders();\n  }\n\n  /**\n   * serialize this Frame in a format suitable to be passed to WebSocket.\n   * If the body is string the output will be string.\n   * If the body is binary (i.e. of type Unit8Array) it will be serialized to ArrayBuffer.\n   */\n  public serialize(): string|ArrayBuffer {\n    const cmdAndHeaders = this.serializeCmdAndHeaders();\n\n    if(this.isBinaryBody) {\n      return Frame.toUnit8Array(cmdAndHeaders, this._binaryBody).buffer;\n    } else {\n      return cmdAndHeaders + this._body + Byte.NULL;\n    }\n  }\n\n  private serializeCmdAndHeaders(): string {\n    const lines = [this.command];\n    if (this.skipContentLengthHeader) {\n      delete this.headers['content-length'];\n    }\n\n    for (let name of Object.keys(this.headers || {})) {\n      const value = this.headers[name];\n      if (this.escapeHeaderValues && (this.command !== 'CONNECT') && (this.command !== 'CONNECTED')) {\n        lines.push(`${name}:${Frame.hdrValueEscape(`${value}`)}`);\n      } else {\n        lines.push(`${name}:${value}`);\n      }\n    }\n    if (this.isBinaryBody || (!this.isBodyEmpty() && !this.skipContentLengthHeader)) {\n      lines.push(`content-length:${this.bodyLength()}`);\n    }\n    return lines.join(Byte.LF) + Byte.LF + Byte.LF;\n  }\n\n  private isBodyEmpty(): boolean {\n    return this.bodyLength() === 0;\n  }\n\n  private bodyLength(): number {\n    const binaryBody = this.binaryBody;\n    return binaryBody ? binaryBody.length : 0;\n  }\n\n  /**\n   * Compute the size of a UTF-8 string by counting its number of bytes\n   * (and not the number of characters composing the string)\n   */\n  private static sizeOfUTF8(s: string): number {\n    return s ? new TextEncoder().encode(s).length : 0;\n  }\n\n  private static toUnit8Array(cmdAndHeaders: string, binaryBody: Uint8Array): Uint8Array {\n    const uint8CmdAndHeaders = new TextEncoder().encode(cmdAndHeaders);\n    const nullTerminator = new Uint8Array([0]);\n    const uint8Frame = new Uint8Array(uint8CmdAndHeaders.length + binaryBody.length + nullTerminator.length);\n\n    uint8Frame.set(uint8CmdAndHeaders);\n    uint8Frame.set(binaryBody, uint8CmdAndHeaders.length);\n    uint8Frame.set(nullTerminator, uint8CmdAndHeaders.length + binaryBody.length);\n\n    return uint8Frame;\n  }\n  /**\n   * Serialize a STOMP frame as per STOMP standards, suitable to be sent to the STOMP broker.\n   *\n   * @internal\n   */\n  public static marshall(params: {\n    command: string, headers?: StompHeaders, body?: string, binaryBody?: Uint8Array,\n    escapeHeaderValues?: boolean, skipContentLengthHeader?: boolean\n  }) {\n    const frame = new Frame(params);\n    return frame.serialize();\n  }\n\n  /**\n   *  Escape header values\n   */\n  private static hdrValueEscape(str: string): string {\n    return str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\r/g, \"\\\\r\").replace(/\\n/g, \"\\\\n\").replace(/:/g, \"\\\\c\");\n  }\n\n  /**\n   * UnEscape header values\n   */\n  private static hdrValueUnEscape(str: string): string {\n    return str.replace(/\\\\r/g, \"\\r\").replace(/\\\\n/g, \"\\n\").replace(/\\\\c/g, \":\").replace(/\\\\\\\\/g, \"\\\\\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended Frame, you can access headers\nand body as properties.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    Frame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ack\n                                \n                                \n                                    nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ack\n                            \n                            \n                        \n                    \n                \n                \n                    \nack(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:18\n                            \n                        \n\n\n                \n                    \n                            When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nack\n                            \n                            \n                        \n                    \n                \n                \n                    \nnack(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/message.ts:25\n                            \n                        \n\n\n                \n                    \n                            When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Frame} from \"./frame\";\nimport {StompHeaders} from \"./stomp-headers\";\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link Frame}, you can access [headers]{@link Frame#headers}\n * and [body]{@link Frame#body} as properties.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface Message extends Frame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack(headers?: StompHeaders): void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack(headers?: StompHeaders): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeConnect:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:105\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        brokerURL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:19\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        connectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     debugFnType\n\n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disconnectHeaders:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatIncoming:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:72\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeatOutgoing:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:79\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnectDelay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:65\n                            \n                        \n\n                \n                    \n                        automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stompVersions:     Versions\n\n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:32\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        webSocketFactory:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:58\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {debugFnType, StompHeaders, Versions} from '@stomp/stompjs';\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n */\n\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#brokerURL\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#stompVersions\n   */\n  public stompVersions?: Versions;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#webSocketFactory\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   *  automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#reconnectDelay\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatIncoming\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#heartbeatOutgoing\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#connectHeaders\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#disconnectHeaders\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * Maps to: https://stomp-js.github.io/stompjs/classes/Client.html#beforeConnect\n   */\n  public beforeConnect?: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:23\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:42\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request. See the guide for example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:50\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport {Message, publishParams, StompHeaders} from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  }\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](../additional-documentation/rpc---remote-procedure-call.html) for details.\n   */\n  constructor(private rxStomp: RxStomp, private stompRPCConfig?: RxStompRPCConfig) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html) for example.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](../additional-documentation/rpc---remote-procedure-call.html).\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign({}, params.headers || {});\n    const {destination, body, binaryBody} = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(this._replyQueueName, this.rxStomp);\n    }\n\n    return Observable.create(\n      (rpcObserver: Observer) => {\n        let defaultMessagesSubscription: Subscription;\n\n        const correlationId = UUID.UUID();\n\n        defaultMessagesSubscription = this._repliesObservable.pipe(filter((message: Message) => {\n          return message.headers['correlation-id'] === correlationId;\n        })).subscribe((message: Message) => {\n          rpcObserver.next(message);\n        });\n\n        // send an RPC request\n        headers['reply-to'] = this._replyQueueName;\n        headers['correlation-id'] = correlationId;\n\n        this.rxStomp.publish({destination, body, binaryBody, headers});\n\n        return () => { // Cleanup\n          defaultMessagesSubscription.unsubscribe();\n        };\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replyQueueName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:18\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setupReplyQueue:     setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:22\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n */\nexport type setupReplyQueueFnType = (replyQueueName: string, rxStomp: RxStomp) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WebSocketClass:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:19\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:30\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:68\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once. While reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Versions} from \"../versions\";\nimport {CompatClient} from \"./compat-client\";\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   */\n  public static WebSocketClass:any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   */\n  public static client (url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) { protocols = Versions.default.protocolVersions(); }\n    const ws_fn= function() {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(ws_fn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once. While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   */\n  public static over (ws: any): CompatClient {\n    const ws_fn = typeof(ws) === \"function\" ? ws : () => ws;\n\n    return new CompatClient(ws_fn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        debug:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:57\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     StompHeaders\n\n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:31\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_in:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:38\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        heartbeat_out:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:46\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reconnect_delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:54\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | \n\n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/stomp.config.ts:24\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport { Injectable } from '@angular/core';\n/**\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompHeaders.html":{"url":"interfaces/StompHeaders.html","title":"interface - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as Frame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface StompHeaders { [key: string]: string }\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Angular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/stomp.service.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    unsubscribe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe(headers?: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:15\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe. See Client#unsubscribe for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {StompHeaders} from \"./stomp-headers\";\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n */\nexport interface StompSubscription {\n  /**\n   * @internal\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe(headers?: StompHeaders): void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transaction.html":{"url":"interfaces/Transaction.html","title":"interface - Transaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Transaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:21\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_0:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:8\n                            \n                        \n\n                \n                    \n                        1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_1:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:12\n                            \n                        \n\n                \n                    \n                        1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        V1_2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:16\n                            \n                        \n\n                \n                    \n                        1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        versions:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * 1.0\n   */\n  static V1_0= '1.0';\n  /**\n   * 1.1\n   */\n  static V1_1= '1.1';\n  /**\n   * 1.2\n   */\n  static V1_2= '1.2';\n\n  /**\n   * @internal\n   */\n  static default = new Versions([Versions.V1_0, Versions.V1_1, Versions.V1_2]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor (public versions: string[]) {\n  }\n\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp-r.service.ts\n            \n            \n                injectable\n            \n            \n                StompRService\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.config.ts\n            \n            \n                injectable\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/stomp.service.ts\n            \n            \n                injectable\n            \n            \n                StompService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            \n                class\n            \n            \n                RxStompConfig\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            \n                class\n            \n            \n                RxStompRPCConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            \n                class\n            \n            \n                RxStompRPC\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            \n                class\n            \n            \n                RxStomp\n            \n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            \n                class\n            \n            \n                Client\n            \n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            \n                class\n            \n            \n                CompatClient\n            \n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            \n                class\n            \n            \n                Stomp\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/frame.ts\n            \n            \n                class\n            \n            \n                Frame\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/message.ts\n            \n            \n                interface\n            \n            \n                Message\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            \n                interface\n            \n            \n                StompConfig\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            \n                interface\n            \n            \n                StompHeaders\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            \n                interface\n            \n            \n                StompSubscription\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/transaction.ts\n            \n            \n                interface\n            \n            \n                Transaction\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            \n                interface\n            \n            \n                publishParams\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            \n                class\n            \n            \n                Versions\n            \n            \n                62 %\n                (5/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.6\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Possible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/publishParams.html":{"url":"interfaces/publishParams.html","title":"interface - publishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  publishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Message} from \"./message\";\nimport {Frame} from \"./frame\";\nimport {StompHeaders} from \"./stomp-headers\";\n\n/**\n * This callback will receive a `string` as parameter.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n */\nexport type messageCallbackType = (message: Message) => void;\n\n/**\n * This callback will receive a {@link Message} as parameter.\n * The callback will need to return a boolean value.\n */\nexport type messageCheckCallbackType = (frame: Frame) => boolean;\n\n/**\n * This callback will receive a {@link Frame} as parameter.\n */\nexport type frameCallbackType = (receipt: Frame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent} as parameter.\n */\nexport type closeEventCallbackType = (evt: CloseEvent) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}\n */\nexport interface publishParams {\n  /**\n   * destination end point\n   */\n  destination: string,\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders,\n  /**\n   * body (optional)\n   */\n  body?: string,\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array,\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean\n}\n\n/**\n * The parser yield frames in this structure\n */\nexport type RawHeaderType = [string, string];\nexport type RawFrameType = { command: string; headers: RawHeaderType[]; binaryBody: Uint8Array; };\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            messageCheckCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            RawFrameType   (consolidated/.../types.ts)\n                        \n                        \n                            RawHeaderType   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            StompHeaders   (consolidated/.../stomp-headers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        closeEventCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a CloseEvent as parameter.\n\n                        \n                    \n                \n                    \n                        closeEventCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debugFnType\n                    \n                \n                    \n                        \n                            This callback will receive a string as parameter.\n\n                        \n                    \n                \n                    \n                        debugFnType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        frameCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Frame as parameter.\n\n                        \n                    \n                \n                    \n                        frameCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\n\n                        \n                    \n                \n                    \n                        messageCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        messageCheckCallbackType\n                    \n                \n                    \n                        \n                            This callback will receive a Message as parameter.\nThe callback will need to return a boolean value.\n\n                        \n                    \n                \n                    \n                        messageCheckCallbackType:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        RawFrameType\n                    \n                \n                \n                    \n                        RawFrameType:     literal type\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        RawHeaderType\n                    \n                \n                    \n                        \n                            The parser yield frames in this structure\n\n                        \n                    \n                \n                    \n                        RawHeaderType:     [string, string]\n\n                    \n                \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n        \n            \n                \n                    \n                        \n                        setupReplyQueueFnType\n                    \n                \n                    \n                        \n                            See the guide for example\n\n                        \n                    \n                \n                    \n                        setupReplyQueueFnType:     function\n\n                    \n                \n            \n        \n\n    consolidated/ng2-stompjs/src/stomp-headers.ts\n    \n        \n            \n                \n                    \n                        \n                        StompHeaders\n                    \n                \n                    \n                        \n                            Type definition for Headers \n\n                        \n                    \n                \n                    \n                        StompHeaders:     literal type\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
