var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.523,1,1.155]],["body/interfaces/IFrame.html",[0,0.58,1,2.203,2,1.28,3,0.398,4,0.398,5,0.343,6,1.908,7,2.426,8,0.516,9,3.189,10,0.175,11,2.45,12,3.697,13,3.697,14,3.697,15,3.697,16,1.395,17,4.467,18,3.189,19,2.255,20,2.507,21,1.368,22,0.317,23,0.678,24,1.395,25,3.697,26,0.193,27,0.762,28,2.676,29,2.669,30,3.555,31,5.3,32,3.091,33,0.484,34,0.037,35,0.997,36,1.121,37,3.697,38,1.851,39,4.467,40,1.712,41,2.507,42,2.81,43,4.467,44,4.467,45,1.851,46,3.697,47,0.58,48,2.812,49,2.812,50,1.395,51,0.523,52,2.255,53,2.812,54,0.02,55,0.026,56,0.02]],["title/interfaces/IMessage.html",[0,0.523,24,0.957]],["body/interfaces/IMessage.html",[0,0.587,1,1.891,2,1.296,3,0.403,4,0.403,5,0.347,6,1.931,8,0.522,10,0.105,11,1.425,20,2.527,21,1.246,22,0.356,23,0.762,24,1.663,25,3.726,26,0.196,27,0.908,29,1.57,33,0.43,34,0.037,36,1.062,45,1.866,47,0.768,48,2.846,50,1.406,51,0.527,54,0.02,55,0.026,56,0.02,57,2.455,58,2.273,59,2.271,60,2.527,61,1.296,62,3.726,63,4.502,64,1.327,65,3.583,66,1.611,67,2.273,68,4.693,69,4.693,70,1.663,71,5.325,72,5.325,73,4.407,74,2.206,75,3.802,76,4.502,77,4.502,78,3.439,79,3.439,80,3.439,81,3.439,82,3.439,83,2.846,84,3.439,85,1.866,86,3.439,87,1.931]],["title/interfaces/IPublishParams.html",[0,0.523,88,1.27]],["body/interfaces/IPublishParams.html",[0,0.769,1,1.541,2,0.883,3,0.275,4,0.275,5,0.237,8,0.356,10,0.071,11,1.695,16,1.077,21,1.247,22,0.386,23,0.826,24,1.277,26,0.133,27,0.588,28,2.426,29,2.434,30,1.475,32,2.531,33,0.486,34,0.038,35,0.993,36,0.954,40,1.403,41,2.296,47,0.697,50,1.408,51,0.671,52,1.184,54,0.014,55,0.02,56,0.014,59,1.299,61,1.811,85,2.153,87,1.935,88,1.868,89,1.184,90,1.183,91,2.169,92,2.065,93,2.169,94,1.223,95,2.537,96,2.837,97,2.169,98,2.169,99,0.807,100,2.169,101,2.169,102,2.837,103,2.169,104,1.299,105,1.935,106,2.461,107,1.991,108,1.991,109,1.184,110,1.475,111,1.475,112,1.475,113,1.475,114,1.673,115,2.461,116,1.673,117,1.475,118,2.461,119,2.461,120,1.673,121,1.673,122,1.475,123,1.673,124,1.316,125,1.184,126,1.316,127,0.804,128,2.461,129,2.169,130,2.461,131,1.673,132,1.475,133,1.184,134,1.673,135,1.935,136,3.219,137,3.431,138,2.372,139,1.673,140,3.219,141,2.697,142,1.673,143,1.673,144,1.673,145,1.673,146,1.183,147,1.475,148,1.935,149,1.673,150,1.673,151,1.316,152,1.673,153,1.935,154,1.867,155,1.673,156,2.169,157,1.673,158,1.07,159,1.673,160,1.475,161,1.673,162,0.883,163,1.673,164,1.935,165,1.475,166,2.461,167,1.475,168,1.475,169,1.475,170,1.475,171,1.475,172,1.475,173,1.475,174,1.475,175,1.475]],["title/interfaces/IRxStompPublishParams.html",[0,0.523,176,1.928]],["body/interfaces/IRxStompPublishParams.html",[0,0.684,2,1.512,3,0.47,4,0.47,5,0.406,8,0.609,10,0.164,16,1.551,22,0.353,23,0.609,26,0.229,27,0.847,33,0.344,34,0.037,40,1.85,47,0.684,51,0.47,54,0.024,55,0.029,56,0.024,59,1.872,67,2.508,88,2.235,94,1.051,99,1.163,104,1.872,105,3.164,154,2.574,176,3.125,177,1.663,178,2.866,179,1.377,180,2.866,181,2.866,182,4.111,183,3.547,184,4.968,185,1.411,186,4.665,187,4.968,188,4.968,189,4.111,190,4.111,191,4.968,192,4.968,193,4.014]],["title/interfaces/IStompSocket.html",[0,0.523,138,1.399]],["body/interfaces/IStompSocket.html",[0,0.752,1,1.5,2,0.844,3,0.262,4,0.262,5,0.226,10,0.068,11,1.381,16,0.699,21,1.032,22,0.373,23,0.798,24,1.243,26,0.127,27,0.568,28,1.683,29,1.818,30,1.408,32,1.871,33,0.491,34,0.038,35,0.986,36,0.705,40,0.768,41,2.235,47,0.679,50,1.377,51,0.665,52,1.13,54,0.013,55,0.02,56,0.013,59,1.256,61,1.776,85,2.227,87,1.257,88,1.649,89,1.13,90,1.143,91,1.408,92,1.683,93,1.408,94,1.045,95,1.683,96,1.408,97,1.408,98,1.408,99,0.524,100,1.408,101,1.408,102,2.096,103,1.408,104,0.844,105,1.257,106,1.598,107,1.953,108,1.953,109,1.13,110,1.408,111,1.408,112,1.408,113,1.408,114,1.598,115,2.379,116,1.598,117,1.408,118,2.379,119,2.379,120,1.598,121,1.598,122,1.408,123,1.598,124,1.257,125,1.13,126,1.257,127,0.768,128,2.379,129,2.096,130,2.379,131,1.598,132,1.408,133,1.13,134,1.598,135,1.871,136,3.755,137,3.837,138,2.402,139,3.148,140,3.148,141,3.244,142,3.148,143,3.148,144,3.148,145,3.148,146,1.695,147,2.096,148,2.475,149,2.379,150,2.379,151,1.871,152,3.148,153,2.235,154,2.257,155,2.379,156,2.504,157,3.148,158,1.818,159,2.379,160,2.774,161,2.379,162,1.256,163,2.379,164,1.871,165,1.408,166,2.379,167,1.408,168,1.408,169,1.408,170,1.408,171,1.408,172,1.408,173,1.408,174,1.408,175,1.408,194,1.683,195,2.096,196,0.86,197,2.239,198,2.239,199,0.844]],["title/interfaces/IStompSocketMessageEvent.html",[0,0.523,135,1.72]],["body/interfaces/IStompSocketMessageEvent.html",[0,0.796,1,1.606,2,0.949,3,0.295,4,0.295,5,0.254,10,0.077,11,1.505,16,0.787,21,1.092,22,0.386,23,0.825,24,1.331,26,0.143,27,0.62,28,1.834,29,1.946,30,1.584,32,2.039,33,0.466,34,0.038,35,0.99,36,0.768,40,0.864,41,2.039,47,0.727,50,1.457,51,0.68,52,1.272,54,0.015,55,0.021,56,0.015,59,1.369,61,1.864,85,2.201,87,1.414,88,1.766,89,1.272,90,0.864,91,1.584,92,1.834,93,1.584,94,1.046,95,1.834,96,1.584,97,1.584,98,1.584,99,0.589,100,1.584,101,1.584,102,2.285,103,1.584,104,0.949,105,1.414,106,1.798,107,2.049,108,2.049,109,1.272,110,1.584,111,1.584,112,1.584,113,1.584,114,1.798,115,2.594,116,1.798,117,1.584,118,2.594,119,2.594,120,1.798,121,1.798,122,1.584,123,1.798,124,1.414,125,1.272,126,1.414,127,0.864,128,2.594,129,2.285,130,2.594,131,1.798,132,1.584,133,1.272,134,1.798,135,2.392,136,3.792,137,3.792,138,2.425,139,1.798,140,3.331,141,2.776,142,1.798,143,1.798,144,1.798,145,1.798,146,1.246,147,1.584,148,2.039,149,1.798,150,1.798,151,1.414,152,1.798,153,2.039,154,1.946,155,1.798,156,2.285,157,1.798,158,1.15,159,1.798,160,1.584,161,1.798,162,0.949,163,1.798,164,2.039,165,1.584,166,2.594,167,1.584,168,1.584,169,1.584,170,1.584,171,1.584,172,1.584,173,1.584,174,1.584,175,1.584]],["title/interfaces/ITransaction.html",[0,0.523,200,2.188]],["body/interfaces/ITransaction.html",[0,0.674,2,1.488,3,0.463,4,0.463,5,0.399,6,2.217,8,0.6,19,2.484,20,2.761,22,0.28,23,0.6,26,0.225,27,0.839,33,0.459,34,0.037,35,0.913,51,0.463,54,0.023,55,0.029,56,0.023,64,1.312,66,1.639,68,4.07,69,4.07,70,1.751,85,2.038,195,3.094,200,3.512,201,3.269,202,5.963,203,3.269,204,3.269,205,3.95,206,3.95,207,3.95,208,5.88,209,5.88,210,3.147,211,4.919,212,4.919,213,4.07,214,3.95,215,3.95]],["title/interfaces/IWatchParams.html",[0,0.523,216,1.928]],["body/interfaces/IWatchParams.html",[0,0.511,2,1.129,3,0.351,4,0.351,5,0.303,8,0.455,10,0.125,16,1.573,21,1.365,22,0.291,23,0.455,26,0.171,27,0.7,33,0.432,34,0.038,35,0.798,36,1.202,40,1.606,45,2.087,47,0.511,51,0.351,52,2.543,54,0.018,55,0.024,56,0.018,59,1.546,60,2.304,61,1.546,94,1.202,95,2.869,99,0.96,104,1.546,177,1.241,178,2.138,181,2.138,183,2.93,185,1.166,189,3.396,216,2.582,217,2.138,218,5.036,219,5.036,220,5.036,221,5.449,222,5.036,223,4.104,224,2.93,225,4.104,226,3.396,227,4.104,228,2.582,229,3.396,230,4.104,231,3.396,232,2.93,233,4.104,234,4.104,235,2.087,236,4.104,237,2.543,238,5.449,239,4.104,240,4.104,241,4.104,242,4.104,243,4.104,244,3.396,245,4.104,246,3.595,247,2.582,248,2.304,249,2.93,250,4.104,251,2.582,252,4.104,253,4.104]],["title/injectables/InjectableRxStompConfig.html",[254,0.871,255,1.72]],["body/injectables/InjectableRxStompConfig.html",[3,0.228,4,0.228,5,0.197,8,0.295,10,0.163,16,1.524,18,1.389,19,1.846,20,1.092,21,0.855,22,0.213,26,0.111,27,0.511,33,0.491,34,0.037,35,0.332,36,0.634,38,1.242,40,1.521,42,1.224,47,0.511,50,1.141,51,0.228,54,0.011,55,0.018,56,0.011,61,1.547,64,1.096,66,0.852,67,1.513,70,1.524,74,0.806,94,1.289,99,0.701,104,1.898,107,0.806,108,0.806,109,0.983,127,1.254,133,1.513,154,1.875,158,2.024,162,1.547,179,0.668,185,0.553,196,1.478,228,1.224,231,2.48,232,2.931,235,1.701,237,1.513,251,1.224,254,1.167,255,1.682,256,0.983,257,0.733,258,1.224,259,0.889,260,1.129,261,1.129,262,0.369,263,1.669,264,2.71,265,2.48,266,2.48,267,2.48,268,1.513,269,1.875,270,2.14,271,2.14,272,2.14,273,2.931,274,1.242,275,4.106,276,2.052,277,2.997,278,2.997,279,2.299,280,2.48,281,2.997,282,2.997,283,2.997,284,2.14,285,2.997,286,2.997,287,2.997,288,2.48,289,2.091,290,2.48,291,2.48,292,2.14,293,2.14,294,2.48,295,1.682,296,2.48,297,2.48,298,2.48,299,2.14,300,2.14,301,2.48,302,2.48,303,2.14,304,2.48,305,2.48,306,2.48,307,3.602,308,1.946,309,1.61,310,1.946,311,1.389,312,2.48,313,1.129,314,1.61,315,1.61,316,2.299,317,2.14,318,1.61,319,1.61,320,1.389,321,1.61,322,2.14,323,1.224,324,1.389,325,1.61,326,1.61,327,1.61,328,1.61,329,1.61,330,1.61,331,1.092,332,1.61,333,1.389,334,1.61,335,1.61,336,4.022,337,1.61,338,1.946,339,1.224,340,1.61,341,1.61,342,1.389,343,2.48,344,2.14,345,2.609,346,1.946,347,1.61,348,2.14,349,1.224,350,1.224,351,1.61,352,1.61,353,2.14,354,1.389,355,1.61,356,1.61,357,1.389,358,0.983,359,1.389,360,1.61,361,1.946,362,1.61,363,1.389,364,1.61,365,2.931,366,1.61,367,2.305,368,1.389,369,1.61,370,1.946,371,2.14,372,0.983,373,1.389,374,1.946,375,1.61,376,1.946,377,1.61,378,1.61,379,1.946,380,1.61,381,1.946,382,1.389,383,2.14,384,2.14,385,2.609,386,1.61,387,1.946,388,2.14,389,1.61,390,1.946,391,1.61,392,1.389,393,1.61,394,1.61,395,1.61,396,1.61,397,1.61,398,1.61,399,1.389,400,1.682,401,1.389,402,1.61,403,1.61,404,1.389,405,1.61,406,1.946,407,1.61,408,1.946,409,1.61,410,1.61,411,1.946,412,1.224,413,1.61,414,1.389,415,1.389,416,1.61,417,1.61,418,1.61,419,1.61,420,2.48,421,1.389,422,1.61,423,1.61,424,1.389,425,1.875,426,1.946,427,1.389,428,1.224,429,1.389,430,2.14,431,2.609,432,1.61,433,1.885,434,1.61,435,1.61,436,1.669,437,1.61,438,1.61,439,1.946,440,1.242,441,1.224,442,1.389,443,1.885,444,1.092,445,1.61,446,1.61,447,1.389,448,1.389,449,0.889,450,2.48,451,1.61,452,1.224,453,1.61,454,1.389,455,1.092]],["title/injectables/InjectableRxStompRPCConfig.html",[254,0.871,456,1.547]],["body/injectables/InjectableRxStompRPCConfig.html",[3,0.437,4,0.437,5,0.377,8,0.566,10,0.144,22,0.337,26,0.212,27,0.809,33,0.406,34,0.037,35,0.636,47,0.809,50,1.629,51,0.555,54,0.022,55,0.028,56,0.022,64,1.285,67,2.395,94,1.161,99,0.873,124,2.093,125,1.883,179,1.279,185,1.059,196,1.224,199,1.405,237,1.883,254,1.56,256,1.883,257,1.405,258,2.346,259,1.703,260,2.069,261,1.787,262,0.377,263,2.166,269,2.166,274,2.275,289,1.883,307,2.984,449,1.703,455,2.093,456,2.862,457,1.545,458,2.973,459,3.925,460,3.925,461,3.386,462,3.386,463,3.925,464,3.925,465,3.729,466,3.386,467,3.925,468,2.662,469,2.662,470,2.662,471,3.086,472,2.346,473,3.086,474,2.346,475,3.729,476,2.662,477,1.883,478,2.093]],["title/classes/RxStompConfig.html",[262,0.31,264,1.399]],["body/classes/RxStompConfig.html",[3,0.164,4,0.164,5,0.142,8,0.213,9,1.648,10,0.18,16,1.615,18,1.648,19,1.166,20,1.296,21,0.949,22,0.164,23,0.213,26,0.08,27,0.394,33,0.46,34,0.038,35,0.394,36,0.797,40,1.638,42,1.452,45,0.957,47,0.394,51,0.164,54,0.008,55,0.014,56,0.008,58,1.166,61,1.687,64,0.798,66,0.969,70,1.398,74,0.957,85,0.581,94,1.251,99,0.798,104,2,107,0.957,108,0.957,109,1.485,127,1.39,133,1.721,154,2.044,158,2.18,177,2.245,179,0.481,185,0.656,196,1.385,228,1.452,235,1.855,251,1.452,259,0.641,262,0.142,263,1.054,264,1.054,269,1.557,276,1.914,279,1.452,289,2.086,290,2.434,291,2.434,292,2.1,293,2.1,294,2.434,295,1.651,296,2.434,297,2.434,298,2.434,299,2.1,300,2.1,301,2.434,302,2.434,303,2.1,304,2.434,305,2.434,306,2.434,309,1.91,311,1.648,312,2.821,313,1.687,314,1.91,315,1.91,316,2.55,317,2.434,318,1.161,319,1.91,320,1.001,321,1.91,322,2.434,323,1.452,324,1.648,325,1.91,326,1.91,327,1.91,328,1.91,329,1.91,330,1.91,331,1.296,332,1.91,333,1.648,334,1.91,335,1.91,336,4.148,337,1.91,339,1.452,340,1.91,341,1.91,342,1.648,343,2.821,344,2.434,345,2.894,347,1.91,348,2.434,349,1.452,350,1.452,351,1.91,352,1.91,353,2.434,354,1.648,355,1.91,356,1.91,357,1.648,358,1.166,359,1.648,360,1.91,362,1.91,363,1.648,364,1.91,365,3.196,366,1.91,367,2.513,368,1.648,369,1.91,371,2.434,372,1.485,373,1.648,375,1.91,377,1.91,378,1.91,380,1.91,382,1.648,383,2.434,384,2.434,385,2.894,386,1.91,388,2.434,389,1.91,391,1.91,392,1.648,393,1.91,394,1.91,395,1.91,396,1.91,397,1.91,398,1.91,399,1.648,400,1.914,401,1.648,402,1.91,403,1.91,404,1.648,405,1.91,407,1.91,409,1.91,410,1.91,412,1.452,413,1.91,414,1.648,415,1.648,416,1.91,417,1.91,418,1.91,419,1.91,420,2.821,421,1.648,422,1.91,423,1.91,424,1.648,425,2.118,427,1.648,428,1.452,429,1.648,430,2.434,431,2.894,432,1.91,433,2.145,434,1.91,435,1.91,436,1.851,437,1.91,438,1.91,440,1.413,441,1.452,442,1.648,443,2.145,444,1.914,445,1.91,446,1.91,447,1.648,448,1.648,449,1.054,450,2.821,451,1.91,452,1.452,453,1.91,454,1.648,479,0.529,480,2.736,481,2.309,482,2.309,483,1.648,484,1.403,485,1.403,486,1.403,487,1.403,488,1.403,489,1.403,490,1.403,491,1.403,492,1.403,493,1.403,494,1.403,495,1.403,496,1.403,497,1.403,498,1.403,499,1.403,500,1.403,501,1.403,502,2.309,503,2.434,504,1.403,505,1.403,506,1.161,507,1.403,508,1.403,509,2.309,510,1.403,511,1.403,512,1.403,513,1.403,514,1.403,515,1.403,516,1.403,517,1.161,518,1.403,519,1.403,520,1.403,521,1.403,522,1.403]],["title/classes/RxStompRPC.html",[262,0.31,523,1.72]],["body/classes/RxStompRPC.html",[3,0.286,4,0.286,5,0.247,8,0.371,10,0.164,21,1.077,22,0.252,23,0.371,24,1.308,26,0.139,28,1.795,29,1.623,33,0.359,34,0.038,36,0.752,45,1.473,47,0.87,51,0.286,54,0.014,55,0.021,56,0.014,58,1.795,59,0.921,60,1.996,64,1.262,66,1.01,74,1.906,90,1.437,92,2.658,94,0.886,95,1.795,127,1.219,146,1.219,162,1.34,177,1.906,179,1.219,185,1.01,194,1.795,195,1.538,196,1.082,199,1.579,210,2.955,235,2.025,237,2.116,244,2.023,247,1.538,248,2.863,249,2.538,260,1.733,262,0.247,268,1.795,269,2.101,274,1.906,289,1.749,313,1.922,342,1.745,444,1.372,457,2.314,458,2.323,461,3.641,462,3.284,466,1.745,468,1.745,469,1.745,470,1.745,474,2.237,478,1.996,479,0.921,480,2.323,523,1.996,524,2.023,525,2.942,526,3.555,527,3.555,528,3.284,529,2.538,530,2.023,531,3.807,532,2.445,533,2.237,534,1.538,535,2.942,536,2.445,537,3.807,538,3.49,539,2.942,540,2.538,541,2.942,542,2.942,543,3.467,544,2.942,545,2.445,546,2.538,547,2.538,548,2.942,549,2.942,550,3.807,551,2.942,552,2.942,553,2.445,554,2.445,555,2.445,556,2.942,557,2.445,558,1.745,559,4.6,560,4.6,561,4.888,562,2.445,563,2.445,564,2.445,565,2.445,566,3.555,567,4.19,568,3.555,569,3.555,570,2.445,571,2.445,572,2.445,573,2.445,574,2.445,575,4.19,576,2.445,577,2.445,578,3.555,579,4.19,580,3.555,581,2.445,582,2.445,583,2.445,584,2.445,585,2.445,586,2.445,587,2.445,588,2.445,589,2.445]],["title/classes/RxStompRPCConfig.html",[262,0.31,458,1.547]],["body/classes/RxStompRPCConfig.html",[3,0.42,4,0.42,5,0.362,8,0.545,10,0.171,22,0.255,23,0.545,24,1.12,26,0.204,27,0.789,33,0.439,34,0.037,35,0.874,47,0.874,51,0.542,54,0.021,55,0.027,56,0.021,64,1.366,66,1.455,94,1.145,99,1.083,177,2.122,179,1.231,185,1.019,196,1.195,199,1.744,247,2.257,248,2.598,259,1.638,262,0.362,269,2.471,274,2.418,289,1.967,313,1.93,457,2.321,458,2.337,463,4.478,464,4.239,466,3.864,467,4.478,468,3.304,469,3.304,470,3.304,471,3.829,472,2.911,473,3.829,474,3.222,476,3.304,479,1.352,480,2.586,558,3.304,590,3.588,591,3.588]],["title/injectables/RxStompRPCService.html",[254,0.871,592,1.928]],["body/injectables/RxStompRPCService.html",[3,0.395,4,0.395,5,0.341,8,0.512,10,0.161,21,0.79,22,0.316,26,0.192,33,0.426,34,0.037,45,1.399,47,0.901,50,1.389,51,0.395,54,0.02,55,0.026,56,0.02,64,1.237,66,0.959,67,2.245,74,1.399,90,1.706,92,2.669,94,1.162,127,1.158,146,1.525,179,1.525,185,0.959,194,2.245,196,1.284,199,1.874,210,2.496,248,2.496,249,2.41,254,1.561,256,1.704,257,1.676,260,1.992,261,1.676,262,0.341,263,2.031,274,2.19,289,1.813,307,2.798,313,1.676,455,1.895,456,2.669,457,2.276,459,3.68,460,3.68,461,3.175,462,3.175,478,1.895,523,3.228,528,3.551,529,3.175,530,2.793,531,4.375,534,2.123,535,2.793,537,3.68,538,3.175,539,2.793,540,2.41,541,2.793,542,2.793,543,3.68,544,2.793,546,2.41,547,2.41,548,2.793,549,2.793,550,3.68,551,2.793,558,2.41,592,2.798,593,2.798,594,2.793,595,2.669,596,3.375,597,3.375,598,3.375,599,3.375,600,3.375]],["title/injectables/RxStompService.html",[254,0.871,595,1.547]],["body/injectables/RxStompService.html",[1,1.317,3,0.171,4,0.171,5,0.148,8,0.362,10,0.17,11,1.885,13,1.209,14,1.209,15,3.609,16,1.673,19,1.528,21,1.16,22,0.17,24,0.456,26,0.083,27,0.407,28,1.205,29,1.991,32,1.34,33,0.468,34,0.036,35,0.826,36,0.739,38,1.448,40,0.501,41,1.699,42,0.919,45,0.605,47,0.407,50,1.091,51,0.171,52,2.705,54,0.009,55,0.014,56,0.009,59,1.557,60,0.82,61,1.317,62,1.209,64,1.102,65,1.043,66,0.678,67,1.205,70,1.203,73,2.505,74,1.254,75,2.75,85,1.713,88,0.605,90,1.56,91,0.919,93,0.919,94,0.874,95,1.528,96,1.502,97,0.919,99,0.559,100,2.743,101,2.423,102,2.862,103,1.904,104,1.14,105,1.34,107,0.605,108,1.254,110,1.904,113,2.743,127,1.038,132,2.423,133,1.205,141,0.82,146,1.615,148,0.82,151,0.82,153,0.82,154,2.149,158,0.667,160,0.919,162,0.551,176,1.904,180,2.161,182,1.209,183,1.043,185,0.415,186,1.209,190,3.42,194,1.205,195,1.904,196,1.398,199,1.557,210,1.34,216,2.423,217,2.951,224,2.495,226,1.209,228,1.502,229,1.209,235,0.605,237,0.738,246,1.043,247,0.919,248,2.162,251,1.502,254,0.993,256,0.738,257,0.551,260,0.9,261,0.9,262,0.306,263,1.382,264,1.382,265,1.976,266,1.976,267,1.976,268,1.945,269,1.382,270,1.704,271,1.704,272,1.704,273,2.495,274,0.989,276,1.34,279,1.502,289,2.029,292,1.043,293,1.043,295,0.82,299,1.043,300,1.043,303,1.043,307,3.406,313,2.167,320,1.704,322,1.043,323,0.919,324,3.113,333,1.043,336,3.539,344,1.043,349,0.919,350,0.919,357,1.704,358,1.528,359,2.161,363,1.704,367,0.82,392,1.704,400,1.699,401,1.043,412,0.919,414,1.704,421,1.043,424,2.495,427,1.043,428,0.919,433,1.904,436,0.667,442,1.043,447,1.043,448,1.043,449,1.382,455,0.82,472,0.919,483,1.043,517,1.209,528,2.161,534,0.919,538,2.161,546,1.043,552,3.187,556,1.209,593,0.919,595,1.205,601,1.209,602,1.502,603,3.674,604,2.387,605,2.387,606,2.387,607,2.387,608,2.387,609,2.387,610,2.387,611,3.026,612,2.387,613,3.026,614,2.387,615,1.461,616,1.461,617,1.461,618,1.461,619,1.461,620,1.461,621,1.209,622,3.026,623,2.387,624,1.976,625,1.461,626,1.461,627,1.461,628,1.461,629,1.461,630,1.461,631,1.461,632,1.461,633,1.461,634,1.209,635,2.387,636,1.209,637,1.461,638,1.461,639,1.461,640,1.461,641,1.461,642,1.461,643,3.026,644,1.461,645,1.461,646,1.043,647,1.461,648,1.461,649,2.505,650,1.461,651,1.461,652,1.461,653,1.461,654,1.461,655,1.461,656,1.209,657,1.209,658,1.461,659,1.461,660,1.209,661,1.461,662,1.461,663,1.209,664,1.461,665,1.461,666,1.461,667,1.461,668,2.387,669,1.461,670,2.892,671,1.209,672,2.387,673,1.461,674,3.494,675,1.461,676,1.461,677,1.461,678,2.387,679,1.461,680,1.461,681,1.209,682,2.387,683,1.461,684,3.494,685,3.494,686,2.387,687,1.461,688,1.461,689,3.026,690,2.387,691,1.461,692,1.461,693,1.209,694,2.387,695,1.461,696,1.461,697,1.461,698,2.387,699,1.461,700,2.387,701,1.461,702,3.852,703,2.495,704,2.387,705,2.387,706,1.461,707,1.461,708,1.461,709,1.461,710,1.461,711,1.461,712,1.976,713,1.461,714,1.209,715,1.461,716,2.387,717,1.461,718,1.461,719,1.461,720,2.387,721,1.461,722,1.461,723,1.461,724,1.461,725,1.461,726,1.461,727,1.461,728,2.387,729,1.461,730,1.461,731,1.461,732,1.461,733,1.461,734,1.461,735,1.461,736,3.494,737,1.461,738,1.976,739,1.461,740,3.026,741,1.461,742,1.461,743,1.461,744,1.461,745,1.461,746,2.387,747,2.387,748,1.461,749,1.461,750,1.461,751,1.461,752,1.461,753,3.026,754,1.461,755,1.461,756,1.461,757,1.461,758,1.461,759,3.852,760,1.461,761,1.461,762,1.976,763,1.461,764,1.461,765,2.387,766,1.461,767,1.461,768,2.387,769,2.387,770,1.461,771,1.209,772,1.461,773,1.209,774,1.461,775,1.461,776,3.852,777,1.461,778,1.461,779,3.494,780,1.461,781,1.461,782,2.387,783,1.461,784,1.461,785,1.461,786,1.461,787,1.461,788,1.461,789,1.461,790,1.461,791,1.461,792,1.461,793,1.461,794,1.461,795,1.461,796,1.461,797,1.461,798,1.461,799,1.461,800,1.461,801,1.209,802,1.461]],["title/classes/Stomp.html",[10,0.093,262,0.31]],["body/classes/Stomp.html",[3,0.239,4,0.239,5,0.206,8,0.31,10,0.156,19,1.57,22,0.221,23,0.472,26,0.116,27,0.53,33,0.323,34,0.038,35,0.894,38,0.846,47,0.642,50,1.415,51,0.239,54,0.012,55,0.018,56,0.012,58,2.126,64,0.728,66,0.883,70,1.597,74,0.846,75,3.234,90,1.066,94,0.658,99,0.478,107,0.846,126,2.871,127,0.7,138,1.719,141,2.114,146,1.066,148,2.363,151,1.745,162,1.927,164,1.146,194,1.57,196,0.972,199,1.419,204,1.69,213,2.573,235,2.056,237,1.901,261,1.172,262,0.501,263,2.335,268,2.646,284,2.688,289,1.292,323,1.956,339,3.002,345,2.22,354,3.234,372,2.95,399,3.741,400,1.146,412,1.956,425,1.42,433,3.002,436,2.44,440,2.31,441,1.956,443,1.956,444,1.745,449,2.069,454,3.005,477,2.646,478,1.146,479,0.769,503,1.69,506,2.573,525,1.69,533,1.956,534,1.284,603,2.22,624,2.573,646,1.458,649,3.484,657,1.69,663,2.573,693,3.95,703,2.22,714,1.69,738,1.69,771,2.573,803,1.458,804,3.109,805,5.115,806,5.115,807,4.336,808,3.765,809,2.573,810,2.042,811,3.109,812,3.109,813,3.109,814,3.109,815,4.21,816,3.109,817,3.109,818,4.962,819,2.042,820,3.109,821,3.109,822,3.109,823,3.109,824,3.749,825,3.109,826,2.042,827,3.109,828,3.109,829,3.109,830,3.765,831,3.109,832,3.109,833,3.109,834,2.573,835,3.109,836,3.109,837,3.109,838,3.109,839,3.109,840,2.573,841,3.109,842,3.109,843,3.109,844,4.21,845,2.042,846,2.042,847,2.042,848,2.042,849,2.042,850,3.109,851,3.109,852,2.042,853,2.042,854,2.042,855,3.765,856,2.042,857,2.042,858,4.21,859,2.042,860,2.042,861,3.109,862,2.042,863,2.042,864,2.042,865,2.042,866,2.042,867,2.042]],["title/injectables/StompConfig.html",[254,0.871,868,2.188]],["body/injectables/StompConfig.html",[3,0.313,4,0.313,5,0.27,8,0.405,9,2.705,10,0.115,16,1.183,21,1.184,22,0.269,23,0.405,26,0.152,27,0.646,33,0.45,34,0.038,35,0.896,36,0.931,38,2.177,40,1.299,45,1.57,47,0.646,50,0.834,51,0.313,54,0.016,55,0.022,56,0.016,58,1.913,66,1.361,70,1.183,99,0.887,104,1.98,108,1.57,146,1.299,158,2.399,196,1.357,235,1.57,254,1.076,255,2.126,256,1.348,257,2.036,260,1.805,261,1.427,262,0.445,268,1.913,269,1.73,276,2.126,279,2.383,295,2.471,311,2.705,316,3.014,339,3.182,348,2.705,349,2.383,350,2.383,358,1.913,365,3.752,367,3.1,368,2.705,371,2.705,372,1.913,373,2.705,382,2.705,383,3.42,384,3.42,385,3.752,388,2.705,400,2.126,436,1.73,440,1.57,441,2.383,443,2.383,444,2.689,452,3.474,455,1.499,472,3.014,476,2.705,477,1.913,634,3.135,636,3.135,646,2.705,656,3.135,703,2.705,840,3.135,868,2.705,869,2.21,870,3.135,871,3.135,872,3.135,873,2.705,874,4.403,875,4.403,876,4.403,877,2.67,878,2.67,879,3.788,880,3.788,881,3.788,882,3.788,883,2.67,884,3.788,885,2.67,886,3.788,887,4.791,888,2.67,889,3.788,890,3.788,891,3.788,892,2.67,893,3.788,894,3.788,895,3.788]],["title/classes/StompHeaders.html",[36,0.648,262,0.31]],["body/classes/StompHeaders.html",[3,0.517,4,0.517,5,0.446,8,0.67,10,0.134,12,3.652,16,1.378,21,1.316,22,0.313,23,0.67,34,0.035,35,0.993,36,1.113,37,4.818,38,1.829,49,3.652,51,0.517,54,0.026,55,0.031,56,0.026,90,1.514,196,1.139,262,0.446,317,3.151,404,3.151,479,1.663,483,3.151,670,3.652,896,3.757,897,3.652,898,3.151,899,4.413,900,4.413,901,4.413,902,4.413,903,4.413,904,4.413,905,4.413,906,4.413]],["title/classes/StompSubscription.html",[262,0.31,907,2.188]],["body/classes/StompSubscription.html",[3,0.473,4,0.473,5,0.408,8,0.613,10,0.123,21,1.167,22,0.354,23,0.757,26,0.23,27,0.85,33,0.427,34,0.037,35,0.85,36,1.055,47,0.689,51,0.473,54,0.024,55,0.029,56,0.024,60,2.799,64,1.167,65,3.56,66,1.417,70,1.261,74,2.066,83,3.342,85,1.673,196,1.287,210,3.258,246,4.143,262,0.408,289,2.028,479,1.522,533,3.137,896,3.862,907,4.033,908,3.342,909,4.038,910,4.986,911,4.038,912,4.986,913,4.038]],["title/classes/Versions.html",[262,0.31,425,1.399]],["body/classes/Versions.html",[3,0.359,4,0.359,5,0.31,8,0.465,10,0.167,11,1.727,22,0.336,23,0.465,26,0.174,27,0.711,33,0.456,34,0.037,35,0.988,38,1.963,46,3.449,51,0.359,54,0.018,55,0.024,56,0.018,58,2.105,90,1.051,94,0.648,99,1.19,127,1.744,129,1.928,146,1.43,147,3.451,194,2.105,196,1.449,199,1.155,235,1.727,262,0.479,263,2.505,289,2.043,316,2.622,353,3.917,425,2.72,428,2.622,429,2.976,430,3.917,431,3.917,436,1.399,440,1.727,452,2.622,479,1.155,529,2.188,547,2.976,660,4.54,681,3.449,807,4.846,914,2.536,915,4.737,916,4.737,917,4.737,918,4.737,919,5.084,920,5.084,921,3.064,922,3.064,923,4.168,924,4.168,925,4.168,926,4.168,927,3.064,928,3.064,929,3.064,930,3.064,931,3.064,932,3.064,933,3.064,934,3.064,935,3.064,936,3.064,937,3.064,938,3.064,939,3.064]],["title/coverage.html",[940,3.45]],["body/coverage.html",[0,0.973,1,1.149,5,0.308,6,2.653,7,2.178,10,0.178,24,0.953,33,0.261,34,0.037,36,0.645,54,0.018,55,0.024,56,0.018,57,2.178,70,1.298,88,1.264,89,2.386,135,1.712,138,1.393,176,1.919,177,2.27,178,2.967,179,1.741,180,2.178,181,2.967,200,2.178,201,2.524,216,1.919,217,2.178,254,1.593,255,1.712,257,2.18,258,2.973,259,2.502,262,0.597,264,1.393,313,1.149,331,1.712,358,1.54,367,2.848,372,1.54,425,1.393,436,1.393,440,1.722,456,2.098,457,1.958,458,1.54,480,2.562,523,1.712,524,2.524,592,1.919,593,2.973,594,2.524,595,1.54,601,2.524,602,1.919,803,2.967,824,2.524,868,2.967,869,2.524,873,2.178,896,3.374,897,2.524,907,2.178,908,2.524,914,2.524,940,2.524,941,3.05,942,3.05,943,2.524,944,3.05,945,2.524,946,3.05,947,3.05,948,6.148,949,3.05,950,3.05,951,3.05,952,3.05,953,4.155,954,5.074,955,4.726,956,4.726,957,3.05,958,3.05,959,2.524,960,4.155,961,3.05,962,3.05,963,3.05,964,3.05,965,4.726,966,3.05,967,3.05,968,2.524,969,2.524,970,2.524,971,4.726,972,3.439,973,3.05,974,3.05,975,3.05,976,3.05,977,4.155,978,3.05,979,3.05,980,3.05,981,3.05,982,3.05,983,3.05,984,3.05,985,3.05]],["title/miscellaneous/enumerations.html",[986,1.063,987,3.047]],["body/miscellaneous/enumerations.html",[10,0.175,22,0.365,26,0.241,34,0.03,54,0.025,55,0.03,56,0.025,89,2.139,138,1.934,153,2.377,156,3.23,164,3.224,165,3.475,167,3.23,168,3.23,169,3.23,170,3.475,171,2.664,172,3.23,173,2.664,174,2.664,175,2.664,177,1.755,185,1.203,257,1.596,260,1.934,261,1.596,262,0.428,313,1.596,331,2.377,477,2.139,480,2.139,603,3.024,621,3.505,870,3.505,871,3.505,872,3.505,943,3.505,986,1.755,987,3.505,988,4.248,989,5.524,990,3.024,991,5.743,992,5.134,993,4.235,994,4.235]],["title/miscellaneous/functions.html",[898,2.629,986,1.063]],["body/miscellaneous/functions.html",[10,0.167,22,0.297,26,0.238,34,0.034,54,0.025,55,0.03,56,0.025,64,0.979,70,1.716,90,1.747,94,1.078,146,1.434,162,1.576,199,1.92,203,3.461,232,2.986,257,1.576,260,1.576,261,1.576,264,1.91,270,2.986,271,2.986,272,2.986,273,3.637,274,1.733,276,2.348,280,3.461,284,2.986,288,3.461,295,2.86,331,2.86,440,1.733,449,1.91,533,2.631,593,2.631,595,2.96,602,3.205,762,3.461,773,3.461,898,2.986,959,4.216,968,3.461,969,4.216,970,4.216,986,1.733,990,2.986,995,4.182,996,4.182,997,4.182,998,4.182,999,4.182,1000,4.182,1001,4.182,1002,4.182,1003,4.182,1004,4.182]],["title/index.html",[26,0.146,1005,2.566,1006,2.566]],["body/index.html",[10,0.177,23,0.76,34,0.029,54,0.024,55,0.029,56,0.024,64,1.171,98,3.412,125,2.051,162,1.886,179,1.717,185,1.422,224,2.901,254,1.154,255,2.281,260,1.531,261,2.044,264,1.855,268,2.051,313,1.886,358,2.051,372,2.051,415,2.901,425,2.477,456,2.051,457,1.683,458,2.051,477,2.051,479,2.133,523,2.809,540,2.901,592,2.556,595,2.051,602,2.556,671,3.362,712,3.362,809,4.142,834,3.362,873,2.901,945,3.362,1007,4.063,1008,4.063,1009,5.424,1010,5.661,1011,4.063,1012,4.063,1013,4.063,1014,4.063,1015,4.063,1016,4.063,1017,4.063,1018,4.063,1019,4.063,1020,4.063,1021,4.063,1022,4.063,1023,4.063,1024,4.063,1025,4.063,1026,4.063,1027,4.063,1028,5.424,1029,4.063]],["title/modules.html",[1030,3.45]],["body/modules.html",[34,0.033,54,0.029,55,0.033,56,0.029,1030,4.076]],["title/overview.html",[1031,3.45]],["body/overview.html",[2,1.829,34,0.033,54,0.029,55,0.033,56,0.029,256,2.451,479,1.829,1031,4.017,1032,4.854,1033,4.854,1034,4.854]],["title/miscellaneous/typealiases.html",[986,1.063,1035,3.682]],["body/miscellaneous/typealiases.html",[1,2.018,6,2.761,7,3.512,10,0.163,11,2.038,22,0.423,23,0.892,24,1.673,26,0.225,33,0.338,34,0.029,35,0.674,53,3.269,54,0.023,55,0.029,56,0.023,57,3.512,59,1.853,61,2.173,64,0.924,66,1.122,70,1.836,87,2.217,88,2.038,89,1.995,92,2.484,107,2.389,108,2.389,109,2.484,111,3.094,112,3.094,117,3.094,122,3.094,124,2.217,125,1.995,126,2.217,177,1.637,185,1.122,259,2.246,274,1.637,457,2.038,474,3.094,480,1.995,801,3.269,986,1.637,988,4.865,990,2.82,1036,3.95,1037,4.919,1038,3.95]],["title/miscellaneous/variables.html",[986,1.063,1039,3.047]],["body/miscellaneous/variables.html",[10,0.162,26,0.256,33,0.502,34,0.035,38,1.862,54,0.026,55,0.031,56,0.026,99,1.051,179,1.824,257,1.693,258,2.826,259,2.429,440,2.427,449,2.052,456,2.957,457,2.204,477,2.269,478,2.522,803,3.208,972,3.718,986,1.862,1039,3.718,1040,4.493,1041,4.493,1042,4.493,1043,5.319]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":367,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{}}}],["0.1.1",{"_index":319,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":334,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["0/1",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":430,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":431,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":353,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["10,000ms",{"_index":366,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["100",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1033,"title":{},"body":{"overview.html":{}}}],["17/18",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":886,"title":{},"body":{"injectables/StompConfig.html":{}}}],["200",{"_index":637,"title":{},"body":{"injectables/RxStompService.html":{}}}],["20000",{"_index":636,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["23/25",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["40/42",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["44/44",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":891,"title":{},"body":{"injectables/StompConfig.html":{}}}],["5000",{"_index":890,"title":{},"body":{"injectables/StompConfig.html":{}}}],["6/6",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1032,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1034,"title":{},"body":{"overview.html":{}}}],["80",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":688,"title":{},"body":{"injectables/RxStompService.html":{}}}],["92",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["_repliesobservable",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":208,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":899,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["ack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["acknowledgement",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{}}}],["acknowledges",{"_index":756,"title":{},"body":{"injectables/RxStompService.html":{}}}],["activate",{"_index":611,"title":{},"body":{"injectables/RxStompService.html":{}}}],["activated",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activation",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":473,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":804,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":392,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["actually",{"_index":746,"title":{},"body":{"injectables/RxStompService.html":{}}}],["add",{"_index":631,"title":{},"body":{"injectables/RxStompService.html":{}}}],["added",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["addition",{"_index":901,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":182,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{}}}],["advance",{"_index":278,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["alias",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":87,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":1036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":738,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["allows",{"_index":663,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["already",{"_index":762,"title":{},"body":{"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["alternate",{"_index":726,"title":{},"body":{"injectables/RxStompService.html":{}}}],["alternative",{"_index":827,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":840,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["always",{"_index":672,"title":{},"body":{"injectables/RxStompService.html":{}}}],["angular's",{"_index":286,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/core",{"_index":455,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["angular2",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["angular7.html",{"_index":272,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["another",{"_index":851,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["anything",{"_index":784,"title":{},"body":{"injectables/RxStompService.html":{}}}],["api",{"_index":1009,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":287,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["appendmissingnullonincoming",{"_index":290,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["application/octet",{"_index":699,"title":{},"body":{"injectables/RxStompService.html":{}}}],["appropriate",{"_index":648,"title":{},"body":{"injectables/RxStompService.html":{}}}],["around",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["array",{"_index":923,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["associated",{"_index":910,"title":{},"body":{"classes/StompSubscription.html":{}}}],["assumes",{"_index":402,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["async",{"_index":320,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":518,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":332,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["asynchronously",{"_index":737,"title":{},"body":{"injectables/RxStompService.html":{}}}],["attempt",{"_index":427,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["attempted",{"_index":432,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["attempting",{"_index":889,"title":{},"body":{"injectables/StompConfig.html":{}}}],["attempts",{"_index":625,"title":{},"body":{"injectables/RxStompService.html":{}}}],["attributes",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["augmentwebsocket",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["augmentwebsocket(websocket",{"_index":996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auto",{"_index":646,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["automatically",{"_index":228,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["available",{"_index":900,"title":{},"body":{"classes/StompHeaders.html":{}}}],["backward",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["before",{"_index":311,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["beforeconnect",{"_index":291,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["behavior",{"_index":682,"title":{},"body":{"injectables/RxStompService.html":{}}}],["behaviorsubject",{"_index":765,"title":{},"body":{"injectables/RxStompService.html":{}}}],["belong",{"_index":1020,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{}}}],["binarydata",{"_index":694,"title":{},"body":{"injectables/RxStompService.html":{}}}],["binarytype",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["both",{"_index":344,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["box",{"_index":669,"title":{},"body":{"injectables/RxStompService.html":{}}}],["breaks",{"_index":617,"title":{},"body":{"injectables/RxStompService.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["brokers",{"_index":424,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["brokerurl",{"_index":292,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["builds",{"_index":1018,"title":{},"body":{"index.html":{}}}],["bye",{"_index":239,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{}}}],["call.html",{"_index":462,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callable",{"_index":833,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/RxStompService.html":{}}}],["called",{"_index":324,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["calling",{"_index":204,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["carry",{"_index":735,"title":{},"body":{"injectables/RxStompService.html":{}}}],["case",{"_index":323,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":234,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":401,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["caveat",{"_index":207,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":312,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":357,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["class",{"_index":262,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":588,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":372,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":211,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":215,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#activate",{"_index":626,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#appendmissingnullonincoming",{"_index":309,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":511,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#beforeconnect",{"_index":337,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":522,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#begin",{"_index":205,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":345,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["client#brokerurl]{@link",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["client#commit",{"_index":212,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":214,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":641,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#connectheaders",{"_index":360,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":514,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#connectiontimeout",{"_index":369,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":507,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#deactivate",{"_index":652,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":375,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":513,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#disconnectheaders",{"_index":378,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":515,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":380,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":510,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#heartbeatincoming]{@client#heartbeatincoming",{"_index":386,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":389,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":508,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#lograwcommunication",{"_index":405,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":505,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":407,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":512,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#nack",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onstomperror",{"_index":780,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#onunhandledframe",{"_index":786,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onunhandledreceipt",{"_index":797,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#onwebsocketerror",{"_index":802,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#publish",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["client#publish]{@link",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["client#reconnectdelay]{@client#reconnectdelay",{"_index":410,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#splitlargeframes",{"_index":420,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":509,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#stompversions",{"_index":438,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["client#stompversions]{@link",{"_index":504,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#subscribe",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":912,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":913,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":757,"title":{},"body":{"injectables/RxStompService.html":{}}}],["client#websocketfactory",{"_index":454,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["client#websocketfactory]{@link",{"_index":506,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["client(url",{"_index":817,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":832,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["closed",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent",{"_index":1038,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["closeeventcallbacktype",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["closing",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":717,"title":{},"body":{"injectables/RxStompService.html":{}}}],["combination",{"_index":744,"title":{},"body":{"injectables/RxStompService.html":{}}}],["combined",{"_index":285,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["commit",{"_index":209,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":394,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["compat",{"_index":845,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":824,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":861,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["complaint",{"_index":745,"title":{},"body":{"injectables/RxStompService.html":{}}}],["completed",{"_index":747,"title":{},"body":{"injectables/RxStompService.html":{}}}],["compliant",{"_index":414,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["compodoc",{"_index":1026,"title":{},"body":{"index.html":{}}}],["config",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["config.ts",{"_index":259,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.ts:102",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:111",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:116",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:121",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:126",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:131",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:140",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:147",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:167",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":590,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:27",{"_index":591,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:35",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:47",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:50",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:73",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:81",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:88",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:95",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["configuration",{"_index":276,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":612,"title":{},"body":{"injectables/RxStompService.html":{}}}],["configure(rxstompconfig",{"_index":627,"title":{},"body":{"injectables/RxStompService.html":{}}}],["configured",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connect",{"_index":316,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["connected",{"_index":603,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":293,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["connecting",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["connectionstate",{"_index":604,"title":{},"body":{"injectables/RxStompService.html":{}}}],["connectiontimeout",{"_index":294,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["console.log(new",{"_index":638,"title":{},"body":{"injectables/RxStompService.html":{}}}],["console.warn",{"_index":864,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../augment",{"_index":995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["consolidated/.../client.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../i",{"_index":1037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../injectable",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../rx",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../stomp.ts",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../types.ts",{"_index":988,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":257,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["consolidated/rx",{"_index":177,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/augment",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":803,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:100",{"_index":826,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:38",{"_index":810,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:54",{"_index":819,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":896,"title":{},"body":{"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/types.ts:123",{"_index":197,"title":{},"body":{"interfaces/IStompSocket.html":{}}}],["consolidated/stompjs/src/types.ts:127",{"_index":198,"title":{},"body":{"interfaces/IStompSocket.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":914,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":927,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":928,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":929,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":922,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":930,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":932,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":931,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":237,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["constructor",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Versions.html":{}}}],["constructor(public",{"_index":936,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(versions",{"_index":921,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":902,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["correlation",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["correlationid",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":1011,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":751,"title":{},"body":{"injectables/RxStompService.html":{}}}],["cover",{"_index":1015,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":940,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covert",{"_index":664,"title":{},"body":{"injectables/RxStompService.html":{}}}],["cr",{"_index":903,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":203,"title":{},"body":{"interfaces/ITransaction.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":820,"title":{},"body":{"classes/Stomp.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":328,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["current",{"_index":768,"title":{},"body":{"injectables/RxStompService.html":{}}}],["data",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["date",{"_index":639,"title":{},"body":{"injectables/RxStompService.html":{}}}],["deactivate",{"_index":613,"title":{},"body":{"injectables/RxStompService.html":{}}}],["deactivating",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":295,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/functions.html":{}}}],["debugfntype",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":373,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["declare",{"_index":846,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":926,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessagessubscription",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":589,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":222,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["define",{"_index":280,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":196,"title":{},"body":{"interfaces/IStompSocket.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["defining",{"_index":998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":409,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["dependency",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deprecated",{"_index":477,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["designed",{"_index":713,"title":{},"body":{"injectables/RxStompService.html":{}}}],["destination",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{}}}],["destinations",{"_index":659,"title":{},"body":{"injectables/RxStompService.html":{}}}],["details",{"_index":269,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["development",{"_index":1012,"title":{},"body":{"index.html":{}}}],["different",{"_index":724,"title":{},"body":{"injectables/RxStompService.html":{}}}],["disable",{"_index":385,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["disabled",{"_index":884,"title":{},"body":{"injectables/StompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":296,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["disconnect",{"_index":622,"title":{},"body":{"injectables/RxStompService.html":{}}}],["disconnectheaders",{"_index":297,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["disconnecting",{"_index":994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnection",{"_index":377,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["docs",{"_index":1010,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":867,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":358,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["documents",{"_index":1024,"title":{},"body":{"index.html":{}}}],["down",{"_index":188,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["dropped",{"_index":871,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["drops",{"_index":707,"title":{},"body":{"injectables/RxStompService.html":{}}}],["during",{"_index":428,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":442,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["each",{"_index":224,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"index.html":{}}}],["earlier",{"_index":715,"title":{},"body":{"injectables/RxStompService.html":{}}}],["effects",{"_index":398,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["elements",{"_index":924,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":767,"title":{},"body":{"injectables/RxStompService.html":{}}}],["enable",{"_index":371,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["end",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["endpoint",{"_index":792,"title":{},"body":{"injectables/RxStompService.html":{}}}],["enqueued",{"_index":187,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["entry",{"_index":1028,"title":{},"body":{"index.html":{}}}],["enum",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["enumerations",{"_index":987,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":812,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":674,"title":{},"body":{"injectables/RxStompService.html":{}}}],["errors",{"_index":800,"title":{},"body":{"injectables/RxStompService.html":{}}}],["established",{"_index":363,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["etc",{"_index":330,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["ev",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["even",{"_index":706,"title":{},"body":{"injectables/RxStompService.html":{}}}],["event",{"_index":801,"title":{},"body":{"injectables/RxStompService.html":{},"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["evt",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["exact",{"_index":778,"title":{},"body":{"injectables/RxStompService.html":{}}}],["exactly",{"_index":265,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["example",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["existing",{"_index":632,"title":{},"body":{"injectables/RxStompService.html":{}}}],["export",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{}}}],["factory",{"_index":284,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["false",{"_index":643,"title":{},"body":{"injectables/RxStompService.html":{}}}],["favor",{"_index":870,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":327,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["fields",{"_index":275,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":583,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fixed",{"_index":277,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["flag",{"_index":227,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["following",{"_index":721,"title":{},"body":{"injectables/RxStompService.html":{}}}],["forcebinarywsframes",{"_index":298,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#body",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frames",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["function",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompSubscription.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":267,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["functions",{"_index":898,"title":{"miscellaneous/functions.html":{}},"body":{"classes/StompHeaders.html":{},"miscellaneous/functions.html":{}}}],["generatebinarydata",{"_index":695,"title":{},"body":{"injectables/RxStompService.html":{}}}],["generated",{"_index":1025,"title":{},"body":{"index.html":{}}}],["generating",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["gets",{"_index":680,"title":{},"body":{"injectables/RxStompService.html":{}}}],["getting",{"_index":1005,"title":{"index.html":{}},"body":{}}],["good",{"_index":696,"title":{},"body":{"injectables/RxStompService.html":{}}}],["guest",{"_index":635,"title":{},"body":{"injectables/RxStompService.html":{}}}],["guide",{"_index":274,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":270,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":459,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](/guide/rx",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["guides",{"_index":1021,"title":{},"body":{"index.html":{}}}],["hack",{"_index":850,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":245,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handshake",{"_index":429,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{}}}],["headers.ts",{"_index":897,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":906,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":586,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":383,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["heartbeat_in",{"_index":874,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeat_out",{"_index":875,"title":{},"body":{"injectables/StompConfig.html":{}}}],["heartbeatincoming",{"_index":299,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["heartbeatoutgoing",{"_index":300,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["hello",{"_index":689,"title":{},"body":{"injectables/RxStompService.html":{}}}],["here",{"_index":716,"title":{},"body":{"injectables/RxStompService.html":{}}}],["host",{"_index":351,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["host:string",{"_index":879,"title":{},"body":{"injectables/StompConfig.html":{}}}],["hosts",{"_index":882,"title":{},"body":{"injectables/StompConfig.html":{}}}],["html5",{"_index":830,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["https://stomp",{"_index":865,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":321,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["id",{"_index":210,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/StompSubscription.html":{}}}],["identifier",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["ignore",{"_index":763,"title":{},"body":{"injectables/RxStompService.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":315,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["immediately",{"_index":684,"title":{},"body":{"injectables/RxStompService.html":{}}}],["impact",{"_index":314,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["implementation",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompSubscription.html":{}}}],["important",{"_index":347,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["inactive",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":382,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":905,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicate",{"_index":671,"title":{},"body":{"injectables/RxStompService.html":{},"index.html":{}}}],["indicates",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/Versions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["information",{"_index":1022,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":307,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{}}}],["initiate",{"_index":616,"title":{},"body":{"injectables/RxStompService.html":{}}}],["inject",{"_index":281,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injectable",{"_index":254,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":255,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstomprpcconfig",{"_index":456,"title":{"injectables/InjectableRxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":256,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"overview.html":{}}}],["injected",{"_index":283,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injection",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["instead",{"_index":478,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"overview.html":{}}}],["internal",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/Versions.html":{}}}],["internally",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["interval",{"_index":384,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["invoke",{"_index":750,"title":{},"body":{"injectables/RxStompService.html":{}}}],["invoked",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["invoking",{"_index":233,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":88,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["irxstomppublishparams",{"_index":176,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issue",{"_index":711,"title":{},"body":{"injectables/RxStompService.html":{}}}],["issued",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":138,"title":{"interfaces/IStompSocket.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/Stomp.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":135,"title":{"interfaces/IStompSocketMessageEvent.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"coverage.html":{}}}],["itransaction",{"_index":200,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":216,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"coverage.html":{}}}],["iwatchparams#subscribeonlyonce",{"_index":709,"title":{},"body":{"injectables/RxStompService.html":{}}}],["java",{"_index":422,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["javascript",{"_index":433,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":866,"title":{},"body":{"classes/Stomp.html":{}}}],["json",{"_index":666,"title":{},"body":{"injectables/RxStompService.html":{}}}],["keep",{"_index":620,"title":{},"body":{"injectables/RxStompService.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":348,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["klass",{"_index":859,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":860,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":232,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["large",{"_index":417,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["later",{"_index":282,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["length",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["lf",{"_index":904,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":1017,"title":{},"body":{"index.html":{}}}],["library",{"_index":712,"title":{},"body":{"injectables/RxStompService.html":{},"index.html":{}}}],["line:variable",{"_index":849,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["literal",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localhost",{"_index":894,"title":{},"body":{"injectables/StompConfig.html":{}}}],["locally",{"_index":677,"title":{},"body":{"injectables/RxStompService.html":{}}}],["located",{"_index":821,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":391,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["login",{"_index":349,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["lograwcommunication",{"_index":301,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["logs",{"_index":396,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["loop",{"_index":647,"title":{},"body":{"injectables/RxStompService.html":{}}}],["major",{"_index":806,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["mandatory",{"_index":690,"title":{},"body":{"injectables/RxStompService.html":{}}}],["manual",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["maps",{"_index":336,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["marks",{"_index":355,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["matched",{"_index":748,"title":{},"body":{"injectables/RxStompService.html":{}}}],["matching",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxwebsocketchunksize",{"_index":302,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["meaning",{"_index":722,"title":{},"body":{"injectables/RxStompService.html":{}}}],["mechanism",{"_index":288,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":584,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":190,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{}}}],["messaging",{"_index":527,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["methods",{"_index":194,"title":{},"body":{"interfaces/IStompSocket.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":365,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["miscellaneous",{"_index":986,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":710,"title":{},"body":{"injectables/RxStompService.html":{}}}],["missing",{"_index":676,"title":{},"body":{"injectables/RxStompService.html":{}}}],["mode",{"_index":415,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"index.html":{}}}],["modules",{"_index":1030,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":834,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":852,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["multiple",{"_index":629,"title":{},"body":{"injectables/RxStompService.html":{}}}],["nack",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":199,"title":{},"body":{"interfaces/IStompSocket.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":655,"title":{},"body":{"injectables/RxStompService.html":{}}}],["naming",{"_index":658,"title":{},"body":{"injectables/RxStompService.html":{}}}],["navigating",{"_index":1007,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["needed",{"_index":839,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":740,"title":{},"body":{"injectables/RxStompService.html":{}}}],["neeed",{"_index":880,"title":{},"body":{"injectables/StompConfig.html":{}}}],["new",{"_index":436,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":399,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["ng2",{"_index":1029,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":811,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":412,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["normally",{"_index":783,"title":{},"body":{"injectables/RxStompService.html":{}}}],["note",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{}}}],["notify",{"_index":795,"title":{},"body":{"injectables/RxStompService.html":{}}}],["npm",{"_index":1013,"title":{},"body":{"index.html":{}}}],["null",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["number",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["object",{"_index":444,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["objects",{"_index":779,"title":{},"body":{"injectables/RxStompService.html":{}}}],["observable",{"_index":248,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{}}}],["observable.create((rpcobserver",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{}}}],["occasionally",{"_index":231,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{}}}],["occurs",{"_index":761,"title":{},"body":{"injectables/RxStompService.html":{}}}],["octet(s",{"_index":675,"title":{},"body":{"injectables/RxStompService.html":{}}}],["once",{"_index":835,"title":{},"body":{"classes/Stomp.html":{}}}],["onclose",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["one",{"_index":342,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["onmessage",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["onopen",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["open",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["operation",{"_index":736,"title":{},"body":{"injectables/RxStompService.html":{}}}],["optional",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":183,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{}}}],["opts",{"_index":728,"title":{},"body":{"injectables/RxStompService.html":{}}}],["order",{"_index":831,"title":{},"body":{"classes/Stomp.html":{}}}],["otherwise",{"_index":644,"title":{},"body":{"injectables/RxStompService.html":{}}}],["out",{"_index":668,"title":{},"body":{"injectables/RxStompService.html":{}}}],["outgoing",{"_index":388,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["over",{"_index":809,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":825,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":925,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":1031,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packets",{"_index":419,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["parameter",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["params.headers",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":181,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":397,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["parser",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/RxStompService.html":{}}}],["passcode",{"_index":350,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["passing",{"_index":841,"title":{},"body":{"classes/Stomp.html":{}}}],["payload",{"_index":665,"title":{},"body":{"injectables/RxStompService.html":{}}}],["per",{"_index":618,"title":{},"body":{"injectables/RxStompService.html":{}}}],["pipe",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":268,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"index.html":{}}}],["point",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"index.html":{}}}],["possible",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["practice",{"_index":697,"title":{},"body":{"injectables/RxStompService.html":{}}}],["prefer",{"_index":447,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["preferred",{"_index":1027,"title":{},"body":{"index.html":{}}}],["present",{"_index":356,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["prior",{"_index":853,"title":{},"body":{"classes/Stomp.html":{}}}],["priority",{"_index":687,"title":{},"body":{"injectables/RxStompService.html":{}}}],["private",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["procedure",{"_index":461,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["processing",{"_index":791,"title":{},"body":{"injectables/RxStompService.html":{}}}],["promise",{"_index":322,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":520,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":660,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Versions.html":{}}}],["protocols",{"_index":818,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":919,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":847,"title":{},"body":{"classes/Stomp.html":{}}}],["provider",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":773,"title":{},"body":{"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":289,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["publish",{"_index":180,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{},"coverage.html":{}}}],["publish(parameters",{"_index":653,"title":{},"body":{"injectables/RxStompService.html":{}}}],["published",{"_index":191,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishing",{"_index":752,"title":{},"body":{"injectables/RxStompService.html":{}}}],["publishparams",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":467,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/rpc",{"_index":469,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/test",{"_index":686,"title":{},"body":{"injectables/RxStompService.html":{}}}],["queued",{"_index":678,"title":{},"body":{"injectables/RxStompService.html":{}}}],["queuename",{"_index":243,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["queues",{"_index":704,"title":{},"body":{"injectables/RxStompService.html":{}}}],["r.service.ts",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":472,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["raise",{"_index":683,"title":{},"body":{"injectables/RxStompService.html":{}}}],["random",{"_index":743,"title":{},"body":{"injectables/RxStompService.html":{}}}],["randomtext",{"_index":754,"title":{},"body":{"injectables/RxStompService.html":{}}}],["raw",{"_index":393,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["re)connection",{"_index":226,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{}}}],["reactivate",{"_index":650,"title":{},"body":{"injectables/RxStompService.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{}}}],["reads",{"_index":718,"title":{},"body":{"injectables/RxStompService.html":{}}}],["readystate",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["receipt",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["receiptid",{"_index":753,"title":{},"body":{"injectables/RxStompService.html":{}}}],["receive",{"_index":107,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/RxStompService.html":{}}}],["receiving",{"_index":788,"title":{},"body":{"injectables/RxStompService.html":{}}}],["recent",{"_index":774,"title":{},"body":{"injectables/RxStompService.html":{}}}],["reconnect",{"_index":400,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["reconnect_delay",{"_index":876,"title":{},"body":{"injectables/StompConfig.html":{}}}],["reconnectdelay",{"_index":303,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["reconnecting",{"_index":836,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":624,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["reconnects",{"_index":708,"title":{},"body":{"injectables/RxStompService.html":{}}}],["reestablished",{"_index":192,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["refer",{"_index":656,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["released",{"_index":1014,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":326,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["remarks",{"_index":856,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":805,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":470,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["reply",{"_index":466,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":463,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["report",{"_index":673,"title":{},"body":{"injectables/RxStompService.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["request",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{}}}],["requested",{"_index":794,"title":{},"body":{"injectables/RxStompService.html":{}}}],["requesting",{"_index":739,"title":{},"body":{"injectables/RxStompService.html":{}}}],["require('../../esm5",{"_index":813,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":816,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":325,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["resubscribe",{"_index":229,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{}}}],["result",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":362,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":186,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{}}}],["return",{"_index":235,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["returned",{"_index":775,"title":{},"body":{"injectables/RxStompService.html":{}}}],["returns",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["rpc",{"_index":457,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rpc(params",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["rpc.service.ts",{"_index":594,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":596,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.ts",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:25",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:50",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:61",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":585,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["running",{"_index":893,"title":{},"body":{"injectables/StompConfig.html":{}}}],["rx",{"_index":179,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":247,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["rxjs/operators",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomp",{"_index":313,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#activate",{"_index":651,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp#configure",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":517,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["rxstomp#decativate",{"_index":318,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":516,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":184,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":193,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":218,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watchforreceipt",{"_index":796,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp.activate",{"_index":640,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp.configure",{"_index":633,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp.publish({\"/queue/test",{"_index":692,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp.publish({destination",{"_index":685,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp.watch",{"_index":242,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.watchforreceipt(receiptid",{"_index":755,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:106",{"_index":781,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:118",{"_index":793,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:131",{"_index":777,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:141",{"_index":798,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:254",{"_index":628,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:278",{"_index":615,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:325",{"_index":645,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:338",{"_index":642,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:398",{"_index":654,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:451",{"_index":701,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:458",{"_index":730,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:462",{"_index":732,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:53",{"_index":766,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:580",{"_index":734,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:61",{"_index":758,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:76",{"_index":772,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:93",{"_index":787,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp](@link",{"_index":335,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":264,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompconfig#reconnectdelay",{"_index":619,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstompconfig#websocketfactory",{"_index":343,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":435,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":450,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstompconfig:102",{"_index":387,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:111",{"_index":411,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:116",{"_index":379,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:121",{"_index":308,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:126",{"_index":406,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:131",{"_index":374,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:140",{"_index":346,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:147",{"_index":376,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:167",{"_index":310,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:22",{"_index":338,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:35",{"_index":426,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:47",{"_index":390,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:50",{"_index":370,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:73",{"_index":439,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:81",{"_index":361,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:88",{"_index":408,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:95",{"_index":381,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstomprpc",{"_index":523,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["rxstomprpc#stream]{@link",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc:50",{"_index":597,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rxstomprpc:61",{"_index":598,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rxstomprpcconfig",{"_index":458,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpcconfig:23",{"_index":465,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{}}}],["rxstomprpcconfig:27",{"_index":475,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{}}}],["rxstomprpcservice",{"_index":592,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstompservice",{"_index":595,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory",{"_index":602,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstate",{"_index":989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["safely",{"_index":705,"title":{},"body":{"injectables/RxStompService.html":{}}}],["same",{"_index":266,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["scripts",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["seconds",{"_index":887,"title":{},"body":{"injectables/StompConfig.html":{}}}],["see",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":195,"title":{},"body":{"interfaces/IStompSocket.html":{},"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{}}}],["send(data",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["sent",{"_index":670,"title":{},"body":{"injectables/RxStompService.html":{},"classes/StompHeaders.html":{}}}],["sequence",{"_index":742,"title":{},"body":{"injectables/RxStompService.html":{}}}],["server",{"_index":703,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["serverheaders",{"_index":605,"title":{},"body":{"injectables/RxStompService.html":{}}}],["service",{"_index":331,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["setting",{"_index":448,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["setup",{"_index":476,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompConfig.html":{}}}],["setupreplyqueue",{"_index":464,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":474,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":770,"title":{},"body":{"injectables/RxStompService.html":{}}}],["similar",{"_index":441,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["simple",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["simplest",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":691,"title":{},"body":{"injectables/RxStompService.html":{}}}],["skipcontentlengthheader",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["skipped",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["socket",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":443,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":453,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["sockjs('http://127.0.0.1:15674/stomp",{"_index":895,"title":{},"body":{"injectables/StompConfig.html":{}}}],["sometimes",{"_index":667,"title":{},"body":{"injectables/RxStompService.html":{}}}],["soon",{"_index":679,"title":{},"body":{"injectables/RxStompService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":359,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["specified",{"_index":364,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["specifies",{"_index":661,"title":{},"body":{"injectables/RxStompService.html":{}}}],["specify",{"_index":829,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":304,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["splitting",{"_index":416,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["spring",{"_index":423,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["standard",{"_index":354,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":413,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["started",{"_index":1006,"title":{"index.html":{}},"body":{}}],["state",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":807,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["status",{"_index":769,"title":{},"body":{"injectables/RxStompService.html":{}}}],["step",{"_index":273,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stomp#client",{"_index":828,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":862,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":854,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":823,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over",{"_index":855,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":842,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.service",{"_index":599,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.ts",{"_index":601,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.ts",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":815,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":260,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stomp/rx",{"_index":185,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":178,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":868,"title":{"injectables/StompConfig.html":{}},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["stomperrors",{"_index":606,"title":{},"body":{"injectables/RxStompService.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":261,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompjs.stomp",{"_index":814,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/2018/10/12/remote",{"_index":460,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/2018/11/04/ng2",{"_index":271,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/remote",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stompjs/src/app/compatibility/stomp",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/app/compatibility/stomp.config.ts",{"_index":869,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{}}}],["stompjs/src/app/compatibility/stomp.config.ts:29",{"_index":892,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/app/compatibility/stomp.config.ts:36",{"_index":878,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/app/compatibility/stomp.config.ts:43",{"_index":883,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/app/compatibility/stomp.config.ts:51",{"_index":885,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/app/compatibility/stomp.config.ts:59",{"_index":888,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/app/compatibility/stomp.config.ts:62",{"_index":877,"title":{},"body":{"injectables/StompConfig.html":{}}}],["stompjs/src/app/compatibility/stomp.service.ts",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["stompjs/src/app/injectable",{"_index":258,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stompjs/src/app/rx",{"_index":593,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs@8.x.x",{"_index":872,"title":{},"body":{"injectables/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservice",{"_index":945,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["stompservice",{"_index":873,"title":{},"body":{"injectables/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["stompsocketstate",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate",{"_index":992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate.open",{"_index":764,"title":{},"body":{"injectables/RxStompService.html":{}}}],["stompsubscription",{"_index":907,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":305,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["stop",{"_index":623,"title":{},"body":{"injectables/RxStompService.html":{}}}],["strange",{"_index":719,"title":{},"body":{"injectables/RxStompService.html":{}}}],["stray",{"_index":790,"title":{},"body":{"injectables/RxStompService.html":{}}}],["stream",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{}}}],["stream(params",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":404,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["sub",{"_index":241,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":219,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subject",{"_index":776,"title":{},"body":{"injectables/RxStompService.html":{}}}],["subscribe",{"_index":702,"title":{},"body":{"injectables/RxStompService.html":{}}}],["subscribe((message",{"_index":244,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribed",{"_index":223,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribeonlyonce",{"_index":220,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/StompSubscription.html":{}}}],["subscription.ts",{"_index":908,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:12",{"_index":909,"title":{},"body":{"classes/StompSubscription.html":{}}}],["subscription.ts:17",{"_index":911,"title":{},"body":{"classes/StompSubscription.html":{}}}],["successful",{"_index":225,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":189,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suggests",{"_index":662,"title":{},"body":{"injectables/RxStompService.html":{}}}],["suitable",{"_index":471,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["super(rxstomp",{"_index":600,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["support",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":915,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":920,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":445,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["switch",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["syntax",{"_index":727,"title":{},"body":{"injectables/RxStompService.html":{}}}],["t",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["table",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Versions.html":{}}}],["tcp",{"_index":838,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":468,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":789,"title":{},"body":{"injectables/RxStompService.html":{}}}],["terminate",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["text",{"_index":418,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["thin",{"_index":1019,"title":{},"body":{"index.html":{}}}],["things",{"_index":725,"title":{},"body":{"injectables/RxStompService.html":{}}}],["this._repliesobservable",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":587,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.stream(params).pipe(first",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":937,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":938,"title":{},"body":{"classes/Versions.html":{}}}],["though",{"_index":352,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["three",{"_index":1016,"title":{},"body":{"index.html":{}}}],["through",{"_index":1008,"title":{},"body":{"index.html":{}}}],["time",{"_index":760,"title":{},"body":{"injectables/RxStompService.html":{}}}],["times",{"_index":630,"title":{},"body":{"injectables/RxStompService.html":{}}}],["todo",{"_index":206,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":329,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["topic/special",{"_index":698,"title":{},"body":{"injectables/RxStompService.html":{}}}],["transaction",{"_index":202,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":201,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["transport",{"_index":837,"title":{},"body":{"classes/Stomp.html":{}}}],["trigger",{"_index":759,"title":{},"body":{"injectables/RxStompService.html":{}}}],["true",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["try",{"_index":434,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["trying",{"_index":621,"title":{},"body":{"injectables/RxStompService.html":{},"miscellaneous/enumerations.html":{}}}],["tslint:disable",{"_index":848,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":1023,"title":{},"body":{"index.html":{}}}],["two",{"_index":720,"title":{},"body":{"injectables/RxStompService.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1035,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":863,"title":{},"body":{"classes/Stomp.html":{}}}],["types",{"_index":657,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["typescript",{"_index":236,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["typical",{"_index":452,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":279,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["underlying",{"_index":649,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["unhandled",{"_index":782,"title":{},"body":{"injectables/RxStompService.html":{}}}],["unhandledframe",{"_index":607,"title":{},"body":{"injectables/RxStompService.html":{}}}],["unhandledmessage",{"_index":608,"title":{},"body":{"injectables/RxStompService.html":{}}}],["unhandledreceipts",{"_index":609,"title":{},"body":{"injectables/RxStompService.html":{}}}],["unique",{"_index":741,"title":{},"body":{"injectables/RxStompService.html":{}}}],["unless",{"_index":785,"title":{},"body":{"injectables/RxStompService.html":{}}}],["unset",{"_index":395,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":221,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":238,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":246,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"classes/StompSubscription.html":{}}}],["unsubscribing",{"_index":230,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":339,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{}}}],["us/docs/web/api/closeevent",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["us/docs/web/api/event",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":521,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":519,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":449,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["useful",{"_index":421,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["user",{"_index":771,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["using",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["utf8",{"_index":403,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["uuid",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{}}}],["uuid.uuid",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":939,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":916,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":917,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":918,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":317,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{}}}],["var",{"_index":693,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["variable",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1039,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":731,"title":{},"body":{"injectables/RxStompService.html":{}}}],["version",{"_index":263,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["versions",{"_index":425,"title":{"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.0",{"_index":437,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":857,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_0",{"_index":933,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":934,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":935,"title":{},"body":{"classes/Versions.html":{}}}],["very",{"_index":723,"title":{},"body":{"injectables/RxStompService.html":{}}}],["via",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["virtual",{"_index":881,"title":{},"body":{"injectables/StompConfig.html":{}}}],["void",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompSubscription.html":{}}}],["wait",{"_index":368,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompConfig.html":{}}}],["want",{"_index":681,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Versions.html":{}}}],["watch",{"_index":217,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"coverage.html":{}}}],["watch(destination",{"_index":729,"title":{},"body":{"injectables/RxStompService.html":{}}}],["watch(opts",{"_index":700,"title":{},"body":{"injectables/RxStompService.html":{}}}],["watchforreceipt",{"_index":614,"title":{},"body":{"injectables/RxStompService.html":{}}}],["watchforreceipt(receiptid",{"_index":733,"title":{},"body":{"injectables/RxStompService.html":{}}}],["watching",{"_index":749,"title":{},"body":{"injectables/RxStompService.html":{}}}],["way",{"_index":333,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["web",{"_index":799,"title":{},"body":{"injectables/RxStompService.html":{}}}],["websocket",{"_index":440,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":451,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":843,"title":{},"body":{"classes/Stomp.html":{}}}],["websocket.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["websocketclass",{"_index":808,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketerrors",{"_index":610,"title":{},"body":{"injectables/RxStompService.html":{}}}],["websocketfactory",{"_index":306,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["websockets",{"_index":446,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["well",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["within",{"_index":213,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":714,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["world",{"_index":240,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"index.html":{}}}],["ws",{"_index":844,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://127.0.0.1:15674/ws",{"_index":634,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompConfig.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":340,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":822,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":858,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":341,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["yes",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["yield",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IStompSocket.html":{},"interfaces/IStompSocketMessageEvent.html":{},"injectables/RxStompService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        body\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                                \n                                        isBinaryBody\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ack\n                                \n                                \n                                        nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { IMessage } from './i-message';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array;\n}\n\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | null;\n  onmessage: ((this: IStompSocket, ev: IStompSocketMessageEvent) => any) | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | null;\n  terminate?: ((this: IStompSocket) => any) | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType: 'arraybuffer';\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n *\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        retryIfDisconnected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStompSocket.html":{"url":"interfaces/IStompSocket.html","title":"interface - IStompSocket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IStompSocket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryType\n                                \n                                \n                                        onclose\n                                \n                                \n                                        onerror\n                                \n                                \n                                        onmessage\n                                \n                                \n                                        onopen\n                                \n                                \n                                        readyState\n                                \n                                \n                                            Optional\n                                        terminate\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    close\n                                \n                                \n                                    send\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/types.ts:123\n                \n            \n\n\n            \n                \n                    Closes the connection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            send\n                        \n                        \n                    \n                \n            \n            \n                \nsend(data: string | ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/types.ts:127\n                \n            \n\n\n            \n                \n                    Transmits data using the connection. data can be a string or an ArrayBuffer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryType\n                                    \n                                \n                                \n                                    \n                                        binaryType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Returns a string that indicates how binary data from the socket is exposed to scripts:\nWe support only 'arraybuffer'.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onclose\n                                    \n                                \n                                \n                                    \n                                        onclose:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onerror\n                                    \n                                \n                                \n                                    \n                                        onerror:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onmessage\n                                    \n                                \n                                \n                                    \n                                        onmessage:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onopen\n                                    \n                                \n                                \n                                    \n                                        onopen:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readyState\n                                    \n                                \n                                \n                                    \n                                        readyState:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Returns the state of the socket connection. It can have the values of StompSocketState.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        terminate\n                                    \n                                \n                                \n                                    \n                                        terminate:      | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { IMessage } from './i-message';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array;\n}\n\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | null;\n  onmessage: ((this: IStompSocket, ev: IStompSocketMessageEvent) => any) | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | null;\n  terminate?: ((this: IStompSocket) => any) | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType: 'arraybuffer';\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n *\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStompSocketMessageEvent.html":{"url":"interfaces/IStompSocketMessageEvent.html","title":"interface - IStompSocketMessageEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IStompSocketMessageEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     string | ArrayBuffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | ArrayBuffer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { IMessage } from './i-message';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array;\n}\n\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | null;\n  onmessage: ((this: IStompSocket, ev: IStompSocketMessageEvent) => any) | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | null;\n  terminate?: ((this: IStompSocket) => any) | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType: 'arraybuffer';\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n *\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                            Optional\n                                        subHeaders\n                                \n                                \n                                            Optional\n                                        subscribeOnlyOnce\n                                \n                                \n                                            Optional\n                                        unsubHeaders\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                    \n                                \n                                \n                                    \n                                        subHeaders:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n```typescript\n\nconst unsubHeadersCallback = () => {\nreturn {bye: 'world'};\n};\nconst sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n.subscribe((message) => {\n// handle message\n});\n// Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n// unsubHeadersCallback will be invoked to get the headers.\nsub.unsubscribe();\n```\n\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   */\n  readonly subHeaders?: StompHeaders;\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n            \n                Extends\n            \n            \n                        RxStompConfig\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:121\n\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:167\n\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\nMaps to: Client#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:22\n\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StompHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:140\n\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectionTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:81\n\n                            \n                        \n\n                \n                    \n                        Will retry if Stomp connection is not established in specified milliseconds.\nDefault 10,000ms, set to 0 to wait for ever.\nMaps to: Client#connectionTimeout.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         debugFnType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:50\n\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            discardWebsocketOnCommFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:131\n\n                            \n                        \n\n                \n                    \n                        Maps to: Client#discardWebsocketOnCommFailure.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StompHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:147\n\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:116\n\n                            \n                        \n\n                \n                    \n                        Maps to: Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:95\n\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:102\n\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:47\n\n                            \n                        \n\n                \n                    \n                        Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:126\n\n                            \n                        \n\n                \n                    \n                        Maps to: Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:88\n\n                            \n                        \n\n                \n                    \n                        Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:111\n\n                            \n                        \n\n                \n                    \n                        Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Versions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:35\n\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n```javascript\n\n// Try only versions 1.0 and 1.1\nrxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n\n\nMaps to: Client#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompConfig:73\n\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n```javascript\n\n// use a WebSocket\nrxStompConfig.webSocketFactory= function () {\nreturn new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n};\n\n// Typical usage with SockJS\nrxStompConfig.webSocketFactory= function () {\nreturn new SockJS(\"http://broker.329broker.com/stomp\");\n};\n\n\nMaps to: Client#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRPCConfig.html":{"url":"injectables/InjectableRxStompRPCConfig.html","title":"injectable - InjectableRxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n            \n                Extends\n            \n            \n                        RxStompRPCConfig\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompRPCConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompRPCConfig:23\n\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         setupReplyQueueFnType\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStompRPCConfig\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStompRPCConfig:27\n\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompRPCConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRPCConfig extends RxStompRPCConfig {}\n\n// Backward compatibility\n/**\n * Deprecated, use {@link InjectableRxStompRPCConfig} instead\n */\nexport const InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:167\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\nMaps to: Client#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:140\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectionTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:81\n                            \n                        \n\n                \n                    \n                        Will retry if Stomp connection is not established in specified milliseconds.\nDefault 10,000ms, set to 0 to wait for ever.\nMaps to: Client#connectionTimeout.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:50\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            discardWebsocketOnCommFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:131\n                            \n                        \n\n                \n                    \n                        Maps to: Client#discardWebsocketOnCommFailure.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:147\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:116\n                            \n                        \n\n                \n                    \n                        Maps to: Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                            \n                        \n\n                \n                    \n                        Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:126\n                            \n                        \n\n                \n                    \n                        Maps to: Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:111\n                            \n                        \n\n                \n                    \n                        Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n```javascript\n\n// Try only versions 1.0 and 1.1\nrxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n\n\nMaps to: Client#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:73\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n```javascript\n\n// use a WebSocket\nrxStompConfig.webSocketFactory= function () {\nreturn new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n};\n\n// Typical usage with SockJS\nrxStompConfig.webSocketFactory= function () {\nreturn new SockJS(\"http://broker.329broker.com/stomp\");\n};\n\n\nMaps to: Client#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 10,000ms, set to 0 to wait for ever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:25\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            rpc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: publishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:50\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                publishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stream\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: publishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:61\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                publishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport { IMessage, publishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign(\n      {},\n      params.headers || {}\n    );\n    const { destination, body, binaryBody } = params;\n\n    if (!this._repliesObservable) {\n      this._repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || UUID.UUID();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ destination, body, binaryBody, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html\n\n            \n\n            \n                Extends\n            \n            \n                        RxStompRPC\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        InjectableRxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            rpc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: publishParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStompRPC\n\n                \n            \n            \n                \n                        Defined in         RxStompRPC:50\n\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                publishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stream\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: publishParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStompRPC\n\n                \n            \n            \n                \n                        Defined in         RxStompRPC:61\n\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                publishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { RxStompRPC } from '@stomp/rx-stomp';\nimport { RxStompService } from './rx-stomp.service';\nimport { InjectableRxStompRPCConfig } from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/2018/10/12/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  constructor(\n    rxStomp: RxStompService,\n    @Optional() stompRPCConfig?: InjectableRxStompRPCConfig\n  ) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n            \n                Extends\n            \n            \n                        RxStomp\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                connected$\n                            \n                            \n                                    Public\n                                    Readonly\n                                connectionState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                serverHeaders$\n                            \n                            \n                                    Public\n                                    Readonly\n                                stompErrors$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledFrame$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledMessage$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledReceipts$\n                            \n                            \n                                    Public\n                                    Readonly\n                                webSocketErrors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activate\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                connected\n                            \n                            \n                                    Public\n                                    Async\n                                deactivate\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                watch\n                            \n                            \n                                    Public\n                                watch\n                            \n                            \n                                    Public\n                                watch\n                            \n                            \n                                    Public\n                                watchForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activate()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:278\n\n                \n            \n\n\n            \n                \n                    Initiate the connection with the broker.\nIf the connection breaks, as per RxStompConfig#reconnectDelay,\nit will keep trying to reconnect.\nCall RxStomp#deactivate to disconnect and stop reconnection attempts.\nMaps to: Client#activate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(rxStompConfig: RxStompConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:254\n\n                \n            \n\n\n            \n                \n                    Set configuration. This method may be called multiple times.\nEach call will add to the existing configuration.\nExample:\n```javascript\n\nconst rxStomp = new RxStomp();\nrxStomp.configure({\nbrokerURL: 'ws://127.0.0.1:15674/ws',\nconnectHeaders: {\nlogin: 'guest',\npasscode: 'guest'\n},\nheartbeatIncoming: 0,\nheartbeatOutgoing: 20000,\nreconnectDelay: 200,\ndebug: (msg: string): void => {\nconsole.log(new Date(), msg);\n}\n});\nrxStomp.activate();\n\n\nMaps to: Client#configure\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rxStompConfig\n                                    \n                                                RxStompConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            connected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connected()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:338\n\n                \n            \n\n\n            \n                \n                    It will return true if STOMP broker is connected and false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:325\n\n                \n            \n\n\n            \n                \n                    Disconnect if connected and stop auto reconnect loop.\nAppropriate callbacks will be invoked if underlying STOMP connection was connected.\nTo reactivate you can call RxStomp#activate.\nMaps to: Client#deactivate\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(parameters: IRxStompPublishParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:398\n\n                \n            \n\n\n            \n                \n                    Send a message to a named destination. Refer to your STOMP broker documentation for types\nand naming of destinations.\nSTOMP protocol specifies and suggests some headers and also allows broker specific headers.\nbody must be String.\nYou will need to covert the payload to string in case it is not string (e.g. JSON).\nTo send a binary message body use binaryBody parameter. It should be a\nUint8Array.\nSometimes brokers may not support binary frames out of the box.\nPlease check your broker documentation.\ncontent-length header is automatically added to the STOMP Frame sent to the broker.\nSet skipContentLengthHeader to indicate that content-length header should not be added.\nFor binary messages content-length header is always added.\nCaution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\nand content-length header is missing.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\nIf you do not want that behavior,\nplease set retryIfDisconnected to false\nin the parameters.\nWhen false, this function will raise an error if message could not be sent immediately.\nMaps to: Client#publish\nSee: IRxStompPublishParams and IPublishParams\n```javascript\n\nrxStomp.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n\n// Only destination is mandatory parameter\nrxStomp.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n\n// Skip content-length header in the frame to the broker\nrxStomp.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n\nvar binaryData = generateBinaryData(); // This need to be of type Uint8Array\n// setting content-type header is not mandatory, however a good practice\nrxStomp.publish({destination: '/topic/special', binaryBody: binaryData,\nheaders: {'content-type': 'application/octet-stream'}});\n```\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameters\n                                    \n                                                IRxStompPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            watch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watch(opts: IWatchParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:451\n\n                \n            \n\n\n            \n                \n                    It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, by default, it will resubscribe automatically.\nSee IWatchParams#subscribeOnlyOnce also.\nNote that messages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\nThis method in the underlying library is called subscribe.\nIn earlier version it was called subscribe here as well.\nHowever subscribe is also used by RxJS and code reads strange with two subscribe calls\nfollowing each other and both meaning very different things.\nThis method has two alternate syntax, use IWatchParams if you need to pass additional options.\nMaps to: Client#subscribe\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                IWatchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            watch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watch(destination: string, headers?: StompHeaders)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:458\n\n                \n            \n\n\n            \n                \n                    See the other variant for details.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    destination\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    headers\n                                    \n                                                StompHeaders\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        subscription headers\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            watch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watch(opts: string | IWatchParams, headers: StompHeaders)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:462\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                string | IWatchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    headers\n                                    \n                                                StompHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            watchForReceipt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    watchForReceipt(receiptId: string, callback: (frame: IFrame) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:580\n\n                \n            \n\n\n            \n                \n                    STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n```javascript\n\n// Publishing with acknowledgement\nlet receiptId = randomText();\n\nrxStomp.watchForReceipt(receiptId, function() {\n// Will be called after server acknowledges\n});\nrxStomp.publish({destination: '/topic/special', headers: {receipt: receiptId}, body: msg});\n\n\nMaps to: Client#watchForReceipt\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    receiptId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            connected$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:61\n\n                            \n                        \n\n                \n                    \n                        Will trigger when connection is established.\nIt will trigger every time a (re)connection occurs.\nIf it is already connected it will trigger immediately.\nYou can safely ignore the value, as it will always be StompState.OPEN\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            connectionState$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:53\n\n                            \n                        \n\n                \n                    \n                        Connection State\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            serverHeaders$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:76\n\n                            \n                        \n\n                \n                    \n                        Provides headers from most recent connection to the server as returned by the CONNECTED frame.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will trigger for each reconnection.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            stompErrors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:131\n\n                            \n                        \n\n                \n                    \n                        It will stream all ERROR frames received from the STOMP Broker.\nA compliant STOMP Broker will close the connection after this type of frame.\nPlease check broker specific documentation for exact behavior.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onStompError\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            unhandledFrame$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:106\n\n                            \n                        \n\n                \n                    \n                        This function will be called for any unhandled frame.\nNormally you should receive anything here unless it is non compliant STOMP broker\nor an error.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onUnhandledFrame\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            unhandledMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:93\n\n                            \n                        \n\n                \n                    \n                        This function will be called for any unhandled messages.\nIt is useful for receiving messages sent to RabbitMQ temporary queues.\nIt can also get invoked with stray messages while the server is processing\na request to unsubscribe from an endpoint.\nThis Observer will yield the received\nIMessage\nobjects.\nMaps to: Client#onUnhandledMessage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            unhandledReceipts$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:118\n\n                            \n                        \n\n                \n                    \n                        STOMP brokers can be requested to notify when an operation is actually completed.\nPrefer using RxStomp#watchForReceipt.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onUnhandledReceipt\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            webSocketErrors$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RxStomp\n\n                                \n                            \n                        \n                            \n                                    Defined in         RxStomp:141\n\n                            \n                        \n\n                \n                    \n                        It will stream all web socket errors.\nThis Observer will yield the received\nEvent.\nMaps to: Client#onWebSocketError\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:38\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n```javascript\n\nStompJs = require('../../esm5/');\nStomp = StompJs.Stomp;\nStomp.WebSocketClass = require('websocket').w3cwebsocket;\n\n\nDeprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            client\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:54\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n```javascript\n\nvar url = \"ws://localhost:61614/stomp\";\nvar client = Stomp.client(url);\n\n\nDeprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            over\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:100\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n```javascript\n\nvar client = Stomp.over(function(){\nreturn new WebSocket('ws://localhost:15674/ws')\n});\n\n\nDeprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions';\nimport { CompatClient } from './compat-client';\nimport { IStompSocket } from '../types';\n\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompConfig.html":{"url":"injectables/StompConfig.html","title":"injectable - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of InjectableRxStompConfig.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nRepresents a configuration object for the\nSTOMPService to connect to.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                headers\n                            \n                            \n                                heartbeat_in\n                            \n                            \n                                heartbeat_out\n                            \n                            \n                                reconnect_delay\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts:62\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts:36\n                            \n                        \n\n                \n                    \n                        Headers\nTypical keys: login: string, passcode: string.\nhost:string will neeed to be passed for virtual hosts in RabbitMQ\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts:43\n                            \n                        \n\n                \n                    \n                        How often to incoming heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 0 - disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartbeat_out\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts:51\n                            \n                        \n\n                \n                    \n                        How often to outgoing heartbeat?\nInterval in milliseconds, set to 0 to disable\nTypical value 20000 - every 20 seconds\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reconnect_delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts:59\n                            \n                        \n\n                \n                    \n                        Wait in milliseconds before attempting auto reconnect\nSet to 0 to disable\nTypical value 5000 (5 seconds)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | \n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts:29\n                            \n                        \n\n                \n                    \n                        Server URL to connect to. Please refer to your STOMP broker documentation for details.\nExample: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\nAlternatively this parameter can be a function that returns an object similar to WebSocket\n(typically SockJS instance).\nExample:\n() => {\n   return new SockJS('http://127.0.0.1:15674/stomp');\n}\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link InjectableRxStompConfig}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Represents a configuration object for the\n * STOMPService to connect to.\n */\n@Injectable()\nexport class StompConfig {\n  /**\n   * Server URL to connect to. Please refer to your STOMP broker documentation for details.\n   *\n   * Example: ws://127.0.0.1:15674/ws (for a RabbitMQ default setup running on localhost)\n   *\n   * Alternatively this parameter can be a function that returns an object similar to WebSocket\n   * (typically SockJS instance).\n   *\n   * Example:\n   *\n   * () => {\n   *   return new SockJS('http://127.0.0.1:15674/stomp');\n   * }\n   */\n  url: string | (() => any);\n\n  /**\n   * Headers\n   * Typical keys: login: string, passcode: string.\n   * host:string will neeed to be passed for virtual hosts in RabbitMQ\n   */\n  headers: StompHeaders;\n\n  /** How often to incoming heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 0 - disabled\n   */\n  heartbeat_in: number;\n\n  /**\n   * How often to outgoing heartbeat?\n   * Interval in milliseconds, set to 0 to disable\n   *\n   * Typical value 20000 - every 20 seconds\n   */\n  heartbeat_out: number;\n\n  /**\n   * Wait in milliseconds before attempting auto reconnect\n   * Set to 0 to disable\n   *\n   * Typical value 5000 (5 seconds)\n   */\n  reconnect_delay: number;\n\n  /** Enable client debugging? */\n  debug: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:12\n                            \n                        \n\n                \n                    \n                        Id associated with this subscription.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:17\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:10\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:14\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            protocolVersions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            supportedVersions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_0,\n    Versions.V1_1,\n    Versions.V1_2,\n  ]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts\n            \n            injectable\n            StompRService\n            \n                92 %\n                (23/25)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp.config.ts\n            \n            injectable\n            StompConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts\n            \n            injectable\n            StompService\n            \n                95 %\n                (40/42)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n            \n            injectable\n            InjectableRxStompConfig\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            injectable\n            InjectableRxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            variable\n            InjectableRxStompRpcConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n            \n            injectable\n            RxStompRPCService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n            \n            function\n            rxStompServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n            \n            injectable\n            RxStompService\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/augment-websocket.ts\n            \n            function\n            augmentWebsocket\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            variable\n            WebSocket\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (44/44)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            variable\n            WebSocket\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            class\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IStompSocket\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IStompSocketMessageEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/app/compatibility/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            augmentWebsocket   (consolidated/.../augment-websocket.ts)\n                        \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/augment-websocket.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            augmentWebsocket\n                        \n                        \n                    \n                \n            \n            \n                \naugmentWebsocket(webSocket, debug)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    webSocket\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    debug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            rxStompServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nrxStompServiceFactory(rxStompConfig)\n                \n            \n\n\n\n\n            \n                \n                    Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/2018/11/04/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rxStompConfig\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RxStompService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover three libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs\n@stomp/ng2-stompjs - thin wrapper over @stomp/rx-stomp\n\nThe documentation for classes indicate which library each of the classes\nbelong. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using compatibility mode your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\nng2-stompjs\nInjectable versions of rx-stomp classes:\n\nRxStompService for RxStomp\nInjectableRxStompConfig for RxStompConfig\nRxStompRPCService for RxStompRPC\nInjectableRxStompRPCConfig for RxStompRPCConfig\nrxStompServiceFactory\n\nDeprecated classes:\n\nStompRService\nStompService\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a CloseEvent\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an Event\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InjectableRxStompRpcConfig   (consolidated/.../injectable-rx-stomp-rpc-config.ts)\n                        \n                        \n                            WebSocket   (consolidated/.../client.ts)\n                        \n                        \n                            WebSocket   (consolidated/.../stomp.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectableRxStompRpcConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : InjectableRxStompRPCConfig\n                        \n                    \n\n                \n                    \n                        Deprecated, use InjectableRxStompRPCConfig instead\n\n                    \n                \n\n            \n        \n\n    consolidated/stompjs/src/client.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WebSocket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    consolidated/stompjs/src/compatibility/stomp.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            WebSocket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
