var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.409,1,1.16]],["body/interfaces/IFrame.html",[0,0.481,1,2.24,2,1.213,3,0.481,4,0.481,5,0.405,6,1.743,7,2.294,8,0.481,9,3.48,10,0.43,11,2.552,12,3.48,13,4.282,14,2.953,15,3.48,16,1.561,17,4.282,18,2.559,19,2.244,20,2.953,21,1.964,22,0.619,23,0.521,24,1.561,25,3.48,26,0.333,27,0.724,28,4.064,29,3.763,30,4.304,31,4.999,32,4.205,33,0.644,34,0.047,35,1.219,36,1.269,37,2.953,38,2.244,39,4.282,40,1.726,41,2.953,42,3.48,43,4.282,44,4.282,45,2.559,46,3.48,47,0.743,48,1.743,49,2.704,50,2.294,51,1.757,52,0.619,53,2.559,54,2.704,55,0.034,56,0.034]],["title/interfaces/IMessage.html",[0,0.409,24,1.031]],["body/interfaces/IMessage.html",[0,0.485,1,2.129,2,1.224,3,0.485,4,0.485,5,0.408,6,1.759,8,0.485,10,0.268,20,2.97,21,1.734,22,0.687,23,0.578,24,1.829,25,3.501,26,0.336,27,0.848,29,2.315,33,0.61,34,0.047,36,1.207,45,2.573,47,0.962,48,1.759,49,2.728,50,2.315,51,1.768,52,0.623,55,0.035,56,0.035,57,2.315,58,1.768,59,2.043,60,1.768,61,1.759,62,3.501,63,1.935,64,3.865,65,1.935,66,3.501,67,4.315,68,4.315,69,1.12,70,5.016,71,5.016,72,5.016,73,2.629,74,4.078,75,4.306,76,4.306,77,2.728,78,3.356,79,2.728,80,3.356,81,3.356,82,2.728,83,3.356,84,1.768,85,3.356,86,2.315]],["title/interfaces/IPublishParams.html",[0,0.409,87,1.308]],["body/interfaces/IPublishParams.html",[0,0.658,1,1.503,2,0.75,3,0.297,4,0.297,5,0.25,8,0.297,10,0.164,11,1.695,16,1.117,21,1.718,22,0.728,23,0.613,24,1.335,26,0.206,27,0.518,28,3.527,29,3.34,30,1.672,32,3.298,33,0.648,34,0.048,35,1.205,36,1.155,40,1.766,41,2.525,47,0.906,48,1.078,51,1.666,52,0.78,53,1.229,55,0.025,56,0.025,59,0.75,61,2.47,77,1.672,84,2.032,86,2.113,87,1.878,88,1.229,89,1.052,90,3.064,91,2.976,92,2.49,93,1.517,94,2.106,95,4.058,96,2.49,97,2.49,98,0.992,99,3.064,100,3.064,101,2.126,102,3.064,103,1.258,104,1.831,105,3.064,106,2.056,107,1.117,108,1.418,109,2.274,110,3.527,111,1.606,112,1.672,113,2.113,114,3.138,115,1.672,116,1.418,117,2.525,118,2.056,119,3.064,120,2.056,121,2.113,122,3.064,123,3.064,124,2.056,125,2.056,126,2.113,127,2.056,128,1.672,129,1.418,130,1.229,131,0.844,132,3.064,133,2.992,134,3.064,135,2.056,136,2.056,137,1.078,138,2.056,139,3.831,140,2.056,141,4.058,142,3.662,143,2.056,144,1.078,145,2.056,146,2.056,147,2.056,148,2.056,149,2.113,150,1.418,151,2.056,152,4.058,153,2.992,154,2.056,155,2.056,156,2.056,157,2.056,158,1.606,159,1.418,160,2.49,161,2.056,162,2.056,163,1.418,164,2.056,165,2.113,166,2.188,167,1.672,168,2.49,169,2.056,170,2.593,171,2.056,172,1.672,173,2.056,174,0.844,175,2.056,176,2.056,177,2.056,178,2.056,179,2.798,180,1.672,181,4.058,182,1.672,183,1.672,184,1.672,185,1.672,186,1.672,187,1.418,188,0.844,189,1.672,190,1.672,191,0.952,192,1.418,193,1.229,194,1.672,195,1.229,196,1.672,197,1.672,198,1.078,199,1.418,200,1.229,201,1.418,202,1.418,203,1.606,204,2.113,205,2.113,206,2.056,207,1.418,208,1.418,209,1.418,210,1.418,211,1.418,212,2.056,213,1.418,214,1.418,215,1.418,216,1.418,217,1.418,218,1.418,219,1.418,220,1.418,221,1.672,222,1.672,223,1.672,224,1.672,225,1.672,226,1.672,227,1.672,228,1.672,229,1.672,230,1.672]],["title/interfaces/IRxStompPublishParams.html",[0,0.409,231,1.949]],["body/interfaces/IRxStompPublishParams.html",[0,0.499,2,1.258,3,0.499,4,0.499,5,0.42,8,0.499,10,0.417,22,0.633,23,0.42,26,0.345,27,0.74,33,0.42,34,0.047,40,1.756,47,0.77,52,0.499,55,0.035,56,0.035,59,1.598,66,3.562,87,2.229,89,1.259,93,1.259,98,1.419,103,1.799,104,3.028,166,2.619,188,1.799,191,2.028,193,2.619,231,3.022,232,1.258,233,2.379,234,1.597,235,4.415,236,2.379,237,4.382,238,3.494,239,4.382,240,4.382,241,3.562,242,2.345,243,4.382,244,3.562,245,2.619,246,1.598,247,2.028,248,5.067,249,4.382,250,5.067,251,4.382,252,2.619,253,2.619,254,2.619,255,4.382,256,3.562,257,2.656,258,4.382,259,4.382,260,4.382,261,4.382,262,4.382,263,3.022,264,3.562,265,3.562,266,4.382,267,3.449]],["title/interfaces/ITransaction.html",[0,0.409,268,1.949]],["body/interfaces/ITransaction.html",[0,0.55,2,1.388,3,0.55,4,0.55,5,0.463,6,1.995,8,0.55,19,2.442,20,3.213,22,0.55,23,0.463,26,0.381,27,0.787,33,0.613,34,0.047,35,1.125,52,0.55,55,0.038,56,0.038,63,1.913,65,1.913,67,3.787,68,3.787,69,1.172,84,1.912,268,3.213,269,3.094,270,5.548,271,3.094,272,3.094,273,3.806,274,5.478,275,5.478,276,2.429,277,4.659,278,4.659,279,3.213,280,3.213,281,3.806,282,3.806]],["title/interfaces/IWatchParams.html",[0,0.409,283,1.949]],["body/interfaces/IWatchParams.html",[0,0.341,2,0.861,3,0.341,4,0.341,5,0.287,8,0.341,10,0.27,11,2.006,14,2.338,16,1.236,21,1.972,22,0.49,23,0.287,26,0.236,27,0.573,33,0.527,34,0.048,35,0.886,36,1.302,40,1.446,47,0.527,52,0.341,53,2.59,55,0.027,56,0.027,59,1.58,60,1.961,61,1.776,65,1.58,69,1.067,89,0.974,93,1.446,94,2.463,98,1.098,101,1.776,103,1.391,104,2.026,167,2.755,191,1.569,232,0.861,233,1.628,236,1.628,238,2.338,245,2.026,247,1.569,253,2.026,271,3.523,279,2.989,283,2.338,284,1.919,285,3.39,286,3.523,287,3.523,288,3.883,289,2.755,290,2.755,291,2.338,292,3.883,293,2.989,294,4.777,295,4.334,296,4.777,297,3.39,298,3.39,299,3.39,300,2.026,301,2.338,302,2.026,303,3.39,304,3.39,305,2.989,306,3.39,307,3.39,308,3.883,309,3.883,310,2.59,311,3.39,312,1.236,313,3.39,314,2.33,315,4.334,316,3.39,317,3.39,318,3.39,319,4.334,320,2.989,321,4.334,322,4.334,323,4.334,324,3.39,325,2.755,326,1.776,327,3.39,328,2.755,329,3.39,330,2.755,331,3.39,332,2.755,333,2.338,334,3.39,335,2.026,336,3.39,337,3.39,338,3.39,339,2.338,340,3.39,341,3.39,342,3.39,343,3.39,344,3.39,345,4.334,346,3.39,347,2.338,348,3.39,349,3.39,350,3.39,351,3.39,352,2.361,353,2.338]],["title/classes/RxStompConfig.html",[354,0.283,355,1.949]],["body/classes/RxStompConfig.html",[1,0.803,3,0.169,4,0.169,5,0.142,8,0.169,9,1.591,10,0.423,11,1.366,16,1.69,21,1.296,22,0.283,23,0.142,26,0.117,27,0.331,33,0.615,34,0.048,35,0.734,36,0.834,40,1.549,41,2.036,45,1.169,47,0.437,52,0.169,55,0.016,56,0.016,58,1.212,60,1.212,61,2.226,65,1.443,69,0.734,73,1.026,84,0.48,93,1.583,94,0.906,98,0.956,103,1.833,107,1.5,109,1.026,111,1.323,112,2.4,131,1.212,137,2.559,144,2.559,150,1.35,153,2.036,166,2.366,170,2.77,172,1.591,174,0.803,188,0.803,191,2.067,192,1.35,193,1.169,195,1.508,199,1.35,200,1.169,201,2.451,203,1.323,204,2.451,207,2.266,208,1.741,209,1.741,210,1.741,211,2.266,213,1.741,214,1.741,215,2.036,216,1.741,217,1.741,218,1.741,219,1.741,220,1.741,232,1.856,234,0.541,241,1.591,242,0.541,245,1.169,246,1.296,247,0.906,252,1.169,253,1.169,257,1.026,263,1.35,264,1.591,265,1.591,276,1.645,280,2.036,287,1.591,290,2.4,291,1.35,302,1.169,308,2.4,309,1.591,310,1.764,312,1.076,326,1.026,330,1.591,332,2.4,333,1.35,335,1.169,353,1.741,354,0.117,355,1.35,356,0.336,357,2.356,358,0.613,359,2.036,360,2.4,361,1.957,362,1.957,363,1.35,364,2.32,365,2.052,366,2.052,367,2.052,368,2.524,369,2.671,370,2.4,371,2.4,372,2.4,373,2.052,374,1.843,375,1.169,376,1.957,377,1.957,378,3.959,379,1.957,380,1.957,381,1.957,382,5.443,383,1.591,384,1.169,385,1.957,386,1.957,387,1.957,388,2.4,389,1.957,390,1.957,391,1.957,392,1.957,393,1.764,394,2.052,395,1.591,396,1.957,397,1.35,398,1.591,399,1.169,400,2.952,401,1.957,402,1.957,403,2.952,404,1.35,405,2.4,406,1.957,407,2.451,408,1.169,409,1.591,410,1.957,411,1.35,412,1.957,413,1.957,414,1.957,415,1.957,416,1.169,417,1.957,418,1.957,419,1.591,420,0.95,421,1.957,422,4.248,423,3.555,424,1.957,425,1.591,426,3.218,427,1.957,428,1.591,429,2.952,430,1.957,431,1.169,432,4.114,433,1.591,434,1.169,435,1.957,436,1.957,437,1.35,438,1.957,439,1.169,440,1.169,441,1.957,442,1.591,443,1.957,444,1.957,445,1.957,446,1.591,447,1.169,448,1.957,449,1.957,450,1.957,451,1.591,452,1.957,453,1.957,454,1.957,455,1.957,456,2.952,457,1.957,458,1.957,459,1.591,460,1.169,461,1.957,462,1.591,463,0.95,464,1.957,465,1.591,466,1.169,467,3.555,468,1.591,469,1.169,470,1.591,471,1.169,472,1.957,473,1.957,474,2.952,475,1.591,476,1.169,477,1.957,478,1.957,479,1.957,480,2.952,481,1.957,482,1.957,483,1.591,484,1.169,485,2.952,486,1.957,487,1.957,488,1.957,489,1.957,490,1.957,491,1.957,492,1.957,493,1.591,494,1.957,495,1.957,496,1.591,497,1.957,498,1.957,499,1.591,500,1.591,501,0.95,502,2.952,503,4.248,504,1.957,505,1.957,506,1.957,507,1.957,508,1.591,509,0.95,510,1.957,511,1.957,512,1.957,513,1.957,514,1.591,515,1.169,516,1.957,517,2.952,518,1.35,519,1.591,520,1.591,521,1.169,522,1.591,523,1.957,524,1.957,525,1.957,526,1.957,527,1.957,528,1.957,529,1.957,530,1.591,531,1.169,532,1.591,533,1.957,534,1.957,535,1.591,536,1.957,537,1.957,538,2.952,539,1.591,540,1.957,541,1.957,542,1.957,543,1.957,544,1.957,545,1.957,546,1.957,547,1.957,548,1.591,549,0.95,550,1.591,551,1.591,552,2.4,553,2.671,554,1.957,555,1.957,556,1.645,557,1.957,558,1.169,559,1.591,560,0.95,561,1.026,562,1.026,563,2.4,564,1.957,565,1.591,566,1.547,567,1.957,568,2.952,569,1.957,570,1.169,571,1.35,572,0.806,573,1.169,574,1.957,575,1.741,576,0.95,577,0.95,578,0.95,579,1.169,580,0.806,581,0.95,582,0.95,583,1.169,584,1.169,585,0.95,586,1.169,587,1.169,588,1.169,589,1.169,590,0.95,591,0.95,592,0.95,593,0.95,594,0.95,595,0.95,596,0.95,597,0.95,598,1.169,599,1.169,600,0.95,601,0.95,602,0.95,603,0.95,604,1.169,605,1.169,606,0.95]],["title/classes/RxStompRPC.html",[354,0.283,607,1.308]],["body/classes/RxStompRPC.html",[3,0.214,4,0.214,5,0.18,8,0.343,10,0.375,14,1.638,16,1.359,18,1.419,21,1.241,22,0.343,23,0.18,24,1.085,26,0.148,33,0.362,34,0.048,36,0.603,40,0.54,47,0.832,51,1.84,52,0.214,55,0.019,56,0.036,58,0.975,59,1.359,60,1.929,63,1.359,69,0.53,73,1.559,87,1.935,89,0.854,93,1.07,94,1.842,96,2.767,98,1.103,101,2.411,103,1.784,104,1.419,109,1.245,116,2.744,131,1.84,137,1.245,158,1.953,174,1.633,188,1.397,232,1.241,234,1.099,244,1.931,245,1.778,246,1.635,247,1.099,252,1.419,253,1.419,254,1.778,256,2.767,257,2.463,263,1.021,276,2.309,279,2.051,286,1.931,289,1.203,292,3.03,293,1.638,300,2.86,302,1.419,305,1.021,312,1.584,314,1.377,326,1.245,333,2.57,335,1.419,354,0.238,356,0.425,357,1.576,363,1.021,364,1.633,374,1.085,393,2.034,395,1.931,434,3.068,440,1.419,522,1.931,556,1.099,561,0.776,566,2.508,572,1.021,607,2.251,608,1.203,609,2.375,610,2.767,611,2.615,612,2.375,613,1.419,614,2.375,615,2.375,616,2.375,617,2.375,618,3.727,619,2.375,620,3.826,621,2.375,622,3.03,623,2.375,624,2.375,625,2.375,626,3.616,627,3.172,628,2.375,629,3.404,630,3.404,631,3.404,632,4.6,633,3.477,634,2.767,635,3.979,636,3.404,637,2.375,638,2.767,639,2.975,640,3.404,641,4.18,642,2.767,643,2.57,644,2.418,645,2.418,646,3.541,647,2.375,648,2.051,649,1.931,650,1.931,651,1.638,652,1.638,653,1.638,654,1.638,655,2.767,656,2.57,657,2.378,658,2.57,659,2.744,660,2.57,661,3.03,662,1.931,663,1.931,664,1.931,665,1.931,666,1.931,667,1.419,668,1.419,669,1.48,670,3.727,671,1.48,672,2.375,673,2.051,674,2.975,675,2.975,676,1.725,677,2.375,678,2.348,679,1.203,680,1.931,681,2.975,682,2.375,683,1.48,684,3.404,685,2.375,686,2.375,687,3.404,688,1.638,689,2.375,690,3.404,691,2.375,692,2.975,693,2.375,694,1.48,695,2.375,696,2.051,697,3.404,698,2.975,699,2.375,700,2.375,701,2.375,702,1.638,703,2.375,704,2.375,705,2.375,706,2.375,707,2.375,708,2.418,709,2.375,710,2.051,711,2.348,712,2.975,713,2.375,714,2.375,715,2.375,716,2.375,717,2.975,718,1.021,719,1.48,720,1.638,721,1.48,722,1.931,723,1.203,724,1.48,725,3.398,726,1.48,727,1.021,728,1.48,729,1.48,730,1.48,731,1.021,732,1.48,733,1.48,734,1.48,735,1.638,736,1.48,737,1.48,738,1.48,739,1.48,740,1.48,741,1.48,742,1.638,743,1.48,744,2.375,745,2.375,746,2.975,747,2.375,748,2.375,749,2.375,750,1.48,751,1.48,752,1.48,753,1.48,754,2.975,755,2.375,756,1.48,757,1.48,758,1.48,759,1.48,760,2.375,761,2.975,762,1.48,763,1.48,764,1.48,765,1.48,766,1.48,767,1.48,768,1.48,769,1.48,770,1.48,771,1.48]],["title/classes/RxStompRPCConfig.html",[354,0.283,657,1.689]],["body/classes/RxStompRPCConfig.html",[3,0.312,4,0.312,5,0.263,8,0.312,10,0.301,15,2.582,16,1.791,18,1.898,19,1.132,23,0.263,24,1.515,26,0.216,27,0.537,33,0.506,34,0.047,35,0.842,42,2.582,47,0.842,51,1.304,52,0.459,55,0.026,56,0.026,58,1.547,59,1.158,60,1.818,63,1.158,65,0.787,69,0.842,89,0.62,93,1.193,94,2.393,98,1.22,101,1.975,103,1.547,131,1.547,137,1.132,163,2.191,174,0.886,188,1.547,232,1.374,234,0.999,246,1.791,254,1.29,257,2.509,276,1.744,288,2.582,300,3.157,301,3.054,302,1.898,305,2.191,312,1.791,314,0.999,320,1.489,325,2.582,326,1.132,335,1.898,339,2.599,347,2.191,353,1.489,354,0.216,356,0.62,357,1.744,358,1.132,359,2.191,364,1.901,374,1.158,393,1.29,397,1.489,404,1.489,411,1.489,434,3.208,437,1.489,440,2.252,518,2.191,539,2.582,561,1.132,562,1.132,566,1.665,572,1.489,607,2.05,610,2.582,611,2.627,620,3.886,622,2.582,626,1.489,627,2.599,633,2.599,638,2.582,643,3.388,644,2.582,645,2.582,646,3.643,648,2.599,649,2.582,650,2.582,651,3.302,652,1.489,653,3.054,654,2.866,655,2.582,656,2.866,657,1.898,658,1.489,659,2.191,660,1.489,661,2.582,662,2.582,663,2.582,664,2.582,665,2.582,666,2.582,673,1.489,676,1.47,678,1.489,680,2.582,688,2.866,696,2.599,702,1.489,711,1.489,718,1.489,720,2.866,727,2.599,731,1.489,742,1.489,772,3.6,773,3.6,774,3.176,775,3.176,776,2.159,777,3.176,778,3.176,779,3.176,780,3.176,781,3.063,782,3.6,783,3.176,784,3.176,785,3.176,786,3.176,787,3.176,788,3.378,789,3.176,790,3.063,791,3.176,792,2.159,793,3.176,794,3.176,795,3.176,796,2.582,797,3.176,798,3.176,799,3.176,800,3.176,801,3.176,802,3.176,803,3.176,804,3.176,805,1.755,806,1.755,807,1.755,808,1.755,809,1.755,810,1.755,811,1.755,812,1.755,813,1.755,814,1.755,815,1.755,816,1.755,817,1.755,818,1.755]],["title/classes/Stomp.html",[10,0.225,354,0.283]],["body/classes/Stomp.html",[3,0.305,4,0.305,5,0.257,8,0.305,10,0.389,19,1.638,22,0.452,23,0.38,26,0.211,27,0.528,33,0.453,34,0.048,35,1.113,38,1.107,47,0.831,51,1.801,52,0.305,55,0.025,56,0.025,58,1.688,63,1.14,65,1.14,69,1.09,73,1.107,74,3.567,89,0.898,93,0.898,98,0.684,107,0.77,108,1.457,109,1.107,130,2.917,131,0.867,133,1.457,144,2.757,149,2.566,150,3.169,153,2.566,158,1.638,160,3.342,163,2.155,174,2.004,179,1.457,191,1.447,242,2.522,272,1.717,280,2.155,312,1.733,314,1.722,328,2.541,347,2.155,354,0.476,356,0.607,360,2.541,364,1.527,374,1.356,407,2.155,425,2.541,451,1.717,493,4.052,518,1.457,519,1.717,532,2.541,556,2.347,561,1.95,562,1.638,563,2.541,565,3.567,566,2.3,571,2.835,575,1.457,580,2.155,613,1.868,634,2.541,667,1.868,676,1.722,679,1.717,710,2.835,735,2.155,796,1.717,819,1.717,820,3.126,821,4.754,822,4.881,823,4.881,824,3.366,825,4.052,826,4.052,827,3.72,828,2.112,829,3.126,830,3.126,831,2.155,832,3.126,833,3.126,834,4.111,835,2.112,836,3.126,837,4.754,838,2.112,839,3.126,840,3.126,841,3.735,842,3.126,843,2.112,844,3.567,845,3.126,846,2.112,847,3.126,848,3.126,849,3.126,850,3.72,851,3.126,852,3.126,853,3.126,854,3.126,855,2.541,856,3.126,857,3.126,858,3.126,859,3.126,860,3.126,861,3.126,862,3.126,863,3.126,864,3.126,865,4.111,866,2.112,867,1.717,868,1.457,869,2.112,870,2.112,871,3.72,872,2.112,873,2.112,874,2.112,875,2.112,876,3.126,877,2.112,878,3.126,879,2.112,880,2.112,881,2.112,882,3.72,883,2.112,884,2.112,885,4.111,886,2.112,887,2.112,888,3.126,889,2.112,890,1.717,891,2.112,892,2.112,893,2.112,894,2.112,895,2.112]],["title/classes/StompConfig.html",[354,0.283,896,1.949]],["body/classes/StompConfig.html",[3,0.245,4,0.245,5,0.206,8,0.245,10,0.259,22,0.382,23,0.321,26,0.17,27,0.446,33,0.677,34,0.048,35,0.59,36,1.01,37,1.822,40,1.745,45,1.579,47,0.82,48,0.887,51,1.084,52,0.245,55,0.021,56,0.021,62,2.148,63,2.106,69,0.726,79,1.377,84,1.084,93,1.659,107,1.184,108,1.168,111,1.702,113,2.24,114,3.363,117,2.744,121,2.24,126,2.24,165,1.168,170,3.037,187,1.822,195,1.941,203,1.702,207,2.24,208,2.24,209,2.24,210,2.24,211,2.24,213,2.24,214,2.24,215,2.24,216,2.24,217,2.24,218,2.24,219,2.24,220,2.24,221,2.641,222,2.641,223,2.641,224,2.641,225,2.641,226,2.641,227,2.641,228,2.641,229,2.641,230,2.641,238,1.822,242,2.167,310,1.579,354,0.17,356,0.486,358,0.887,359,1.822,364,2.402,365,2.641,366,2.641,367,2.641,369,2.641,370,2.641,371,2.641,372,2.641,373,2.641,374,2.029,383,2.148,394,1.377,398,2.148,407,1.822,419,2.148,420,1.377,428,2.148,433,2.148,446,2.148,459,2.148,462,2.148,463,1.377,465,2.148,468,2.148,470,2.148,475,2.148,483,2.148,500,2.148,501,1.377,508,2.148,509,1.377,514,2.148,520,2.148,530,2.148,548,2.148,549,1.377,559,2.148,560,1.377,571,1.822,575,1.168,576,1.377,577,1.377,578,1.377,580,1.168,581,1.377,582,1.377,585,1.377,590,1.377,591,1.377,592,1.377,593,1.377,594,1.377,595,1.377,596,1.377,597,1.377,600,1.377,601,1.377,602,1.377,603,1.377,606,1.377,668,1.579,676,1.223,867,1.377,868,1.168,896,1.822,897,3.332,898,2.642,899,2.642,900,2.642,901,3.248,902,1.693,903,1.693,904,1.693,905,1.693,906,1.693,907,1.693,908,1.693,909,1.693,910,1.693,911,1.693,912,1.693,913,1.693,914,2.642,915,1.693,916,2.642,917,1.693,918,2.642,919,1.693,920,2.642,921,1.693,922,2.642,923,1.693,924,2.642,925,1.693,926,2.642,927,1.693,928,2.642,929,1.693,930,2.642,931,1.693,932,2.642,933,1.693,934,1.693,935,1.693,936,1.693,937,1.693,938,1.693,939,1.693,940,1.693,941,1.693,942,1.693,943,1.693,944,1.693,945,1.693,946,1.693,947,1.693,948,1.693]],["title/classes/StompHeaders.html",[36,0.718,354,0.283]],["body/classes/StompHeaders.html",[3,0.601,4,0.601,5,0.506,8,0.601,10,0.332,12,3.38,16,1.516,21,1.907,22,0.601,23,0.506,34,0.044,35,1.207,36,1.248,37,3.728,38,2.179,50,2.868,52,0.601,55,0.04,56,0.04,69,0.929,89,1.194,252,2.485,354,0.416,356,1.194,363,2.868,374,1.516,388,3.38,496,3.38,499,3.38,897,2.937,949,3.38,950,4.158,951,4.158,952,4.158,953,4.158,954,4.158,955,4.158,956,4.158]],["title/interfaces/StompSubscription.html",[0,0.409,957,1.949]],["body/interfaces/StompSubscription.html",[0,0.565,2,1.426,3,0.565,4,0.565,5,0.476,8,0.565,10,0.312,21,1.426,22,0.685,23,0.576,26,0.392,27,0.801,33,0.576,34,0.047,35,1.138,36,1.203,47,0.874,48,2.05,52,0.565,55,0.038,56,0.038,60,1.945,63,1.728,64,3.851,65,1.728,69,1.058,73,2.483,82,3.18,84,1.606,276,2.552,293,3.803,562,2.483,897,2.338,957,3.653,958,3.18,959,4.738,960,4.738,961,3.912]],["title/classes/Ticker.html",[198,1.481,354,0.283]],["body/classes/Ticker.html",[3,0.445,4,0.445,5,0.375,26,0.308,33,0.555,34,0.048,40,1.123,47,0.688,52,0.445,53,2.9,55,0.033,56,0.033,59,1.123,69,0.688,84,2.284,89,1.17,93,1.17,111,2.544,139,2.504,158,2.134,170,3.16,198,2.134,200,2.433,202,2.808,203,1.614,205,3.146,312,1.123,314,1.426,354,0.308,356,0.885,364,2.128,374,1.663,556,1.885,667,2.433,668,2.433,676,1.885,708,3.945,725,4.494,841,2.504,868,2.124,890,2.504,962,2.504,963,4.072,964,3.08,965,4.562,966,4.562,967,3.08,968,4.072,969,4.072,970,4.853,971,3.08,972,3.08,973,3.08,974,3.08,975,4.853,976,4.072,977,3.08,978,3.08,979,4.072,980,3.08,981,3.08,982,3.08,983,3.08,984,3.08,985,3.08,986,3.08,987,3.08,988,3.08,989,3.08,990,3.08,991,3.08,992,3.08,993,4.072,994,3.08,995,4.072,996,4.853,997,3.08,998,3.08,999,3.08,1000,3.08,1001,3.08,1002,3.08,1003,3.08,1004,4.853,1005,3.08,1006,3.08,1007,4.072,1008,3.08,1009,4.072,1010,4.072,1011,4.072,1012,3.08]],["title/classes/Versions.html",[107,1.031,354,0.283]],["body/classes/Versions.html",[3,0.439,4,0.439,5,0.37,8,0.439,10,0.412,11,1.868,22,0.655,23,0.37,26,0.304,27,0.682,33,0.611,34,0.047,35,1.177,38,2.375,46,3.924,52,0.439,55,0.032,56,0.032,58,1.656,89,0.873,93,0.873,98,1.563,107,2.025,131,1.981,133,2.095,144,2.115,158,2.115,159,3.562,291,2.783,312,1.471,354,0.454,356,0.873,364,2.28,374,1.922,405,3.28,550,3.28,551,4.199,552,4.199,553,4.199,556,1.406,667,2.411,668,1.816,676,1.406,722,3.28,788,3.28,824,3.562,826,4.448,1013,2.47,1014,4.531,1015,4.531,1016,4.531,1017,4.531,1018,4.827,1019,4.827,1020,3.038,1021,3.038,1022,4.035,1023,4.035,1024,4.035,1025,4.035,1026,3.038,1027,5.165,1028,3.038,1029,3.038,1030,3.038,1031,3.038,1032,3.038,1033,3.28,1034,3.038,1035,3.038,1036,3.038,1037,3.038,1038,3.038,1039,3.038,1040,3.038]],["title/coverage.html",[1041,3.125]],["body/coverage.html",[0,0.789,1,1.449,5,0.43,6,2.551,7,2.435,10,0.42,24,1.287,33,0.43,34,0.047,36,0.896,55,0.036,56,0.036,57,2.435,87,1.634,88,2.11,107,1.287,198,1.85,231,2.435,232,1.961,233,3.067,234,1.634,235,2.87,236,3.067,242,1.634,246,1.287,268,2.435,269,2.87,283,2.435,284,2.87,354,0.565,355,2.435,357,2.365,358,2.551,416,2.11,426,2.87,556,1.634,607,1.634,608,2.87,611,1.85,657,2.11,819,2.87,844,2.87,896,2.435,897,2.909,949,2.87,957,2.435,958,2.87,962,2.87,1013,2.87,1041,2.87,1042,3.531,1043,3.531,1044,5.738,1045,3.531,1046,3.531,1047,3.531,1048,4.868,1049,4.868,1050,3.531,1051,3.531,1052,3.531,1053,3.531,1054,3.531,1055,3.531,1056,3.531,1057,3.531,1058,4.447,1059,3.531,1060,3.531,1061,3.531,1062,3.531,1063,3.531,1064,3.531,1065,3.531]],["title/miscellaneous/enumerations.html",[1066,1.414,1067,2.76]],["body/miscellaneous/enumerations.html",[10,0.416,18,2.236,22,0.541,26,0.375,34,0.045,38,2.417,55,0.037,56,0.037,88,2.236,92,3.042,130,2.236,144,1.961,149,2.581,165,3.18,166,2.756,168,3.749,179,3.598,180,4.063,182,3.749,183,3.749,184,3.749,185,3.749,186,3.042,187,3.18,188,1.536,189,3.042,190,3.042,191,1.732,192,2.581,193,2.236,194,3.042,195,2.756,196,3.042,197,3.042,198,1.961,199,2.581,200,2.236,201,2.581,202,2.581,203,2.417,204,3.18,205,3.18,232,1.365,246,1.365,247,1.732,357,1.732,409,3.042,613,2.236,710,2.581,735,3.598,1033,3.042,1066,2.236,1067,3.042,1068,4.241,1069,4.611,1070,3.042,1071,4.611,1072,4.611,1073,3.742,1074,3.742,1075,3.742,1076,3.742,1077,3.742,1078,3.742,1079,3.742,1080,5.217,1081,3.742,1082,3.742,1083,3.742,1084,3.742,1085,3.742,1086,3.742]],["title/index.html",[26,0.237,1087,2.367,1088,2.367]],["body/index.html",[10,0.413,23,0.589,34,0.039,55,0.039,56,0.039,63,1.765,97,4.207,107,1.765,129,2.795,159,2.795,174,1.987,234,1.876,242,1.876,246,1.478,247,1.876,310,2.422,356,1.39,416,2.422,442,3.295,535,3.295,607,1.876,611,2.124,613,2.422,642,3.295,718,2.795,723,3.295,825,3.295,831,2.795,855,3.295,1089,4.053,1090,5.175,1091,5.36,1092,4.053,1093,4.053,1094,4.053,1095,4.053,1096,4.053,1097,4.053,1098,4.053,1099,4.053,1100,4.053,1101,4.053,1102,4.053,1103,4.053,1104,4.053,1105,4.053,1106,4.053,1107,4.053,1108,5.175]],["title/modules.html",[1109,3.125]],["body/modules.html",[34,0.042,55,0.042,56,0.042,1109,3.702]],["title/overview.html",[1110,3.125]],["body/overview.html",[2,1.647,34,0.042,55,0.042,56,0.042,356,1.298,1110,3.672,1111,4.518,1112,4.518]],["title/properties.html",[27,0.574,1113,2.367]],["body/properties.html",[8,0.638,27,0.745,34,0.046,55,0.041,56,0.041,416,2.636,824,3.042,831,3.042,1114,4.411,1115,4.411,1116,4.411,1117,4.411,1118,4.411,1119,4.411,1120,4.411,1121,4.411]],["title/miscellaneous/typealiases.html",[1066,1.414,1122,3.396]],["body/miscellaneous/typealiases.html",[1,1.872,6,2.134,7,2.808,10,0.325,11,1.885,16,1.485,19,1.614,22,0.764,23,0.643,24,1.77,26,0.308,33,0.495,34,0.044,35,0.688,54,2.504,55,0.033,56,0.033,57,2.808,58,1.264,59,1.485,60,1.264,61,2.772,65,1.123,69,1.181,86,2.124,87,1.885,88,1.841,89,1.17,91,3.31,94,2.112,98,0.998,101,1.614,103,1.264,109,2.645,110,4.103,111,2.134,113,2.808,114,2.808,115,2.504,116,2.124,117,2.808,121,2.808,126,2.808,128,2.504,129,2.124,130,1.841,131,1.264,137,1.614,174,1.264,188,1.264,232,1.123,246,1.663,254,1.841,257,2.391,276,1.426,300,3.016,301,2.124,312,1.77,314,1.426,320,2.124,326,1.614,339,2.124,357,1.426,358,2.134,393,1.841,397,2.124,404,2.124,411,2.124,434,3.16,437,2.124,440,1.841,561,1.614,562,1.614,566,2.134,607,2.112,611,2.544,620,3.481,626,2.124,627,2.124,633,2.124,643,3.347,646,3.481,648,2.124,651,2.124,652,2.124,653,2.124,654,2.808,656,2.124,658,2.124,659,2.808,660,2.124,673,2.124,678,2.124,688,2.808,696,2.124,702,2.124,711,2.124,720,3.146,727,2.124,731,2.124,742,2.124,772,2.504,773,2.504,781,2.504,782,2.504,790,2.504,805,2.504,806,2.504,807,2.504,808,2.504,809,2.504,810,2.504,811,2.504,812,2.504,813,2.504,814,2.504,815,2.504,816,2.504,817,2.504,818,2.504,1066,1.841,1068,4.299,1070,2.504,1123,3.08,1124,4.072,1125,3.08,1126,3.08,1127,3.08,1128,3.08]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1114,"title":{},"body":{"properties.html":{}}}],["0.3.5",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0/4",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":553,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.0']);maps",{"_index":558,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.1",{"_index":552,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":551,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1111,"title":{},"body":{"overview.html":{}}}],["19/20",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["2.0",{"_index":1118,"title":{},"body":{"properties.html":{}}}],["2/2",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["33/33",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["47/47",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["50/50",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1112,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["87",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["_customreplyqueue",{"_index":741,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_debug",{"_index":966,"title":{},"body":{"classes/Ticker.html":{}}}],["_dummysubscription",{"_index":743,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_interval",{"_index":968,"title":{},"body":{"classes/Ticker.html":{}}}],["_repliesobservable",{"_index":734,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":698,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":729,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_strategy",{"_index":965,"title":{},"body":{"classes/Ticker.html":{}}}],["_timer",{"_index":981,"title":{},"body":{"classes/Ticker.html":{}}}],["_worker",{"_index":980,"title":{},"body":{"classes/Ticker.html":{}}}],["_workerscript",{"_index":974,"title":{},"body":{"classes/Ticker.html":{}}}],["abort",{"_index":274,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["aborted",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["above",{"_index":700,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["accept",{"_index":950,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["accidental",{"_index":739,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["ack",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["acknowledgement",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["activation",{"_index":186,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activation/deactivation",{"_index":1076,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":187,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":188,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["activemq",{"_index":778,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":820,"title":{},"body":{"classes/Stomp.html":{}}}],["added",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":952,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":237,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["adequate",{"_index":794,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["advertised",{"_index":621,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["alias",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":1123,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alive",{"_index":673,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["allow",{"_index":877,"title":{},"body":{"classes/Stomp.html":{}}}],["allows",{"_index":861,"title":{},"body":{"classes/Stomp.html":{}}}],["alternative",{"_index":847,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":860,"title":{},"body":{"classes/Stomp.html":{}}}],["another",{"_index":878,"title":{},"body":{"classes/Stomp.html":{}}}],["apache",{"_index":1117,"title":{},"body":{"properties.html":{}}}],["api",{"_index":1090,"title":{},"body":{"index.html":{}}}],["appendmissingnullonincoming",{"_index":219,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["appends",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["application",{"_index":791,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["applied",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["apply",{"_index":797,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["array",{"_index":1022,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["arraybufferlike",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["arraybufferview",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["arrive",{"_index":810,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["arriving",{"_index":731,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["associated",{"_index":959,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["assumes",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attached",{"_index":695,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["attempt",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempted",{"_index":264,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["attempting",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempts",{"_index":517,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":1119,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":316,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["auto",{"_index":518,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{}}}],["automatic",{"_index":330,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["automatically",{"_index":253,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["available",{"_index":951,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["back",{"_index":625,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["backward",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":241,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompRPCConfig.html":{}}}],["bearer",{"_index":317,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["before",{"_index":309,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behavior",{"_index":244,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["belongs",{"_index":1101,"title":{},"body":{"index.html":{}}}],["between",{"_index":516,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarytype",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["blob",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["blob([this._workerscript",{"_index":998,"title":{},"body":{"classes/Ticker.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{}}}],["both",{"_index":290,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["break",{"_index":1080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompHeaders.html":{},"miscellaneous/typealiases.html":{}}}],["brokers",{"_index":539,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["brokerurl",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["browser/network",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["builds",{"_index":1099,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":511,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["call",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["call.html",{"_index":666,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["callable",{"_index":854,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["calling",{"_index":272,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{}}}],["capped",{"_index":529,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["case",{"_index":735,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["caused",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caution",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["certain",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["change",{"_index":306,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["chunk",{"_index":512,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["chunked",{"_index":541,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":354,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["classes",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["cleanup",{"_index":769,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["clearinterval(this._timer",{"_index":1012,"title":{},"body":{"classes/Ticker.html":{}}}],["client",{"_index":242,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":277,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":282,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":597,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":606,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":273,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":575,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":278,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":281,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":900,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":938,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":602,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":581,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":578,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":601,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":603,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":596,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":591,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":593,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatstrategy",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatstrategy]{@link",{"_index":594,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeattolerancemultiplier",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeattolerancemultiplier]{@link",{"_index":592,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":577,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxreconnectdelay",{"_index":508,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxreconnectdelay]{@link",{"_index":585,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":514,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":600,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":914,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":948,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":916,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":941,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":918,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":942,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onheartbeatlost",{"_index":920,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onheartbeatlost]{@link",{"_index":947,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onheartbeatreceived",{"_index":922,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onheartbeatreceived]{@link",{"_index":946,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":924,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":943,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":926,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":940,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":928,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":939,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":930,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":944,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":932,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":945,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":520,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":582,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnecttimemode",{"_index":530,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnecttimemode]{@link",{"_index":590,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":548,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":595,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":559,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":576,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":960,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":961,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#websocketfactory",{"_index":571,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":580,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client's",{"_index":1075,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["client(url",{"_index":836,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":853,"title":{},"body":{"classes/Stomp.html":{}}}],["client.js",{"_index":867,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client.ts",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["closed",{"_index":185,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent]://developer.mozilla.org/en",{"_index":1125,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":184,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["cold",{"_index":702,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":275,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["common",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["commonly",{"_index":542,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["communication",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":866,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":844,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":888,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["complete",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["completes",{"_index":631,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["compliant",{"_index":534,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":1106,"title":{},"body":{"index.html":{}}}],["config.js",{"_index":721,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["config.ts",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:102",{"_index":905,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:105",{"_index":515,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:107",{"_index":908,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:112",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:117",{"_index":927,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":521,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:122",{"_index":925,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:127",{"_index":903,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:128",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:132",{"_index":915,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:136",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:137",{"_index":917,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:142",{"_index":923,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:143",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:147",{"_index":929,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:150",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:152",{"_index":931,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:157",{"_index":921,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:159",{"_index":531,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:162",{"_index":919,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:166",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:171",{"_index":906,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:174",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:176",{"_index":907,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:181",{"_index":509,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:189",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:197",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:204",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:217",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:228",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:27",{"_index":904,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:29",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:32",{"_index":936,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:37",{"_index":937,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:42",{"_index":549,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":933,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:52",{"_index":913,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:54",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:57",{"_index":934,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:62",{"_index":909,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:64",{"_index":776,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:67",{"_index":912,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:68",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:72",{"_index":910,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:77",{"_index":911,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:82",{"_index":935,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:83",{"_index":792,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:87",{"_index":560,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:92",{"_index":902,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:97",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["configuration",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{}}}],["connect",{"_index":1033,"title":{},"body":{"classes/Versions.html":{},"miscellaneous/enumerations.html":{}}}],["connected",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["connectheaders",{"_index":209,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":182,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["connectiontimeout",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["considerations",{"_index":675,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["console.log('attempting",{"_index":1079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log('connected",{"_index":1082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log('disconnected",{"_index":1086,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log('disconnecting",{"_index":1084,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log(new",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["console.warn",{"_index":891,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":1124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../rx",{"_index":1070,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../types.ts",{"_index":1068,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/rx",{"_index":232,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":819,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":846,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":828,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":838,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":897,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/ticker.ts",{"_index":962,"title":{},"body":{"classes/Ticker.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/ticker.ts:12",{"_index":967,"title":{},"body":{"classes/Ticker.html":{}}}],["consolidated/stompjs/src/ticker.ts:20",{"_index":971,"title":{},"body":{"classes/Ticker.html":{}}}],["consolidated/stompjs/src/ticker.ts:30",{"_index":973,"title":{},"body":{"classes/Ticker.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":88,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":1013,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":1026,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":1028,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":1029,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":1021,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":1030,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":1032,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":1031,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":314,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"miscellaneous/typealiases.html":{}}}],["constant",{"_index":507,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["construct",{"_index":672,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor",{"_index":668,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["constructor(_interval",{"_index":964,"title":{},"body":{"classes/Ticker.html":{}}}],["constructor(public",{"_index":1037,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":669,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(versions",{"_index":1020,"title":{},"body":{"classes/Versions.html":{}}}],["consumers",{"_index":674,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["contain",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["content",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["continue",{"_index":812,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["contract",{"_index":802,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["control",{"_index":286,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["copied",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copy",{"_index":753,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlateerrors",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["correlation",{"_index":627,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["correlationid",{"_index":761,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":1092,"title":{},"body":{"index.html":{}}}],["corresponds",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["cover",{"_index":1096,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1041,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":953,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":562,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["created",{"_index":271,"title":{},"body":{"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{}}}],["creates",{"_index":839,"title":{},"body":{"classes/Stomp.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["current",{"_index":344,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["custom",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["customization",{"_index":774,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["customize",{"_index":655,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["data",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["date",{"_index":445,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["date.now",{"_index":976,"title":{},"body":{"classes/Ticker.html":{}}}],["deactivating",{"_index":189,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":207,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"miscellaneous/typealiases.html":{}}}],["declare",{"_index":869,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":1025,"title":{},"body":{"classes/Versions.html":{}}}],["dedicated",{"_index":654,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["deepak",{"_index":1120,"title":{},"body":{"properties.html":{}}}],["default",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["defaultmessagessubscription",{"_index":760,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":771,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":305,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["defensively",{"_index":752,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defined",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["delay",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["delays",{"_index":455,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["delete",{"_index":1009,"title":{},"body":{"classes/Ticker.html":{}}}],["delivering",{"_index":726,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["delivers",{"_index":817,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["dependency",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["deprecated",{"_index":821,"title":{},"body":{"classes/Stomp.html":{}}}],["described",{"_index":699,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["destination",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["determine",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["development",{"_index":1093,"title":{},"body":{"index.html":{}}}],["diagnostics",{"_index":801,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["different",{"_index":783,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["disable",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discard",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":220,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnected",{"_index":249,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["disconnectheaders",{"_index":210,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnection",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["disposeinterval",{"_index":1011,"title":{},"body":{"classes/Ticker.html":{}}}],["disposeworker",{"_index":1007,"title":{},"body":{"classes/Ticker.html":{}}}],["docs",{"_index":1091,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":895,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["documents",{"_index":1105,"title":{},"body":{"index.html":{}}}],["doesn’t",{"_index":795,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["dom",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["don’t",{"_index":806,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["doubles",{"_index":528,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["downstream",{"_index":814,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["dummy",{"_index":737,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["durable",{"_index":785,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["during",{"_index":291,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":302,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["each",{"_index":310,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"index.html":{}}}],["effect",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["effective",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elapsedtime",{"_index":970,"title":{},"body":{"classes/Ticker.html":{}}}],["elements",{"_index":1024,"title":{},"body":{"classes/Versions.html":{}}}],["emits",{"_index":688,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["emitting",{"_index":691,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["emptycallbacktype",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["enable",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["enabled",{"_index":513,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["endpoint",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ensure",{"_index":742,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["ensures",{"_index":816,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["entry",{"_index":1108,"title":{},"body":{"index.html":{}}}],["enum",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":1067,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":830,"title":{},"body":{"classes/Stomp.html":{}}}],["environments",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["equal",{"_index":526,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["error",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["event",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["event]://developer.mozilla.org/en",{"_index":1127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["events",{"_index":714,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["evt",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["exact",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["exactly",{"_index":630,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["example",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":662,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["exchanged",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["expect",{"_index":629,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["expected",{"_index":716,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["experimental",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["explicit",{"_index":653,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["explicitly",{"_index":337,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["exponential",{"_index":197,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["exposes",{"_index":564,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["extend",{"_index":240,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["factory",{"_index":561,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["fail",{"_index":266,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["failure",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["failures",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["false",{"_index":263,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["family",{"_index":1115,"title":{},"body":{"properties.html":{}}}],["fetch",{"_index":351,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["field",{"_index":898,"title":{},"body":{"classes/StompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":696,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["filter((message",{"_index":763,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filtered",{"_index":705,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":632,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fixed",{"_index":525,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["fixed/linear",{"_index":506,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["following",{"_index":1097,"title":{},"body":{"index.html":{}}}],["force",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["forcebinarywsframes",{"_index":217,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["forwarded",{"_index":706,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["forwarding",{"_index":770,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.js",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frames",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["front",{"_index":340,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["function",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":709,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["generated",{"_index":642,"title":{},"body":{"classes/RxStompRPC.html":{},"index.html":{}}}],["getting",{"_index":1087,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":318,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["guide",{"_index":661,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["guide/rx",{"_index":663,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["guides",{"_index":1102,"title":{},"body":{"index.html":{}}}],["hack",{"_index":876,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":323,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handling",{"_index":775,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["handshake",{"_index":550,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{}}}],["headers.js",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["headers.ts",{"_index":949,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":956,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":697,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":767,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":201,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["heartbeatgraceperiods",{"_index":212,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["heartbeatincoming",{"_index":211,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":213,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeats",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatstrategy",{"_index":214,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeattolerancemultiplier",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["helper",{"_index":612,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["here",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["hook",{"_index":793,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["hooks",{"_index":680,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["host",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["hot",{"_index":659,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["html5",{"_index":850,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":893,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":811,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":276,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#body",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["iframe#headers",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/StompHeaders.html":{}}}],["ignored",{"_index":505,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediately",{"_index":265,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["implement",{"_index":808,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":796,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{}}}],["implements",{"_index":614,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{}}}],["inactive",{"_index":190,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["include",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["incoming",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["increasing",{"_index":504,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["indefinitely",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":955,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["information",{"_index":1103,"title":{},"body":{"index.html":{}}}],["initialized",{"_index":733,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"overview.html":{}}}],["internal",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":660,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["interval",{"_index":204,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["invoked",{"_index":308,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["ipublishparams",{"_index":87,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":231,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["isolate",{"_index":789,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["istompsocket",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["istompthandlerconfig",{"_index":206,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":268,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":283,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":543,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":871,"title":{},"body":{"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":894,"title":{},"body":{"classes/Stomp.html":{}}}],["keep",{"_index":658,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["keeps",{"_index":736,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["kept",{"_index":258,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":886,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":887,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":750,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":338,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["kumar",{"_index":1121,"title":{},"body":{"properties.html":{}}}],["large",{"_index":537,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["later",{"_index":349,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["latest",{"_index":313,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["lazily",{"_index":732,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["length",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["level",{"_index":773,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["lf",{"_index":954,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":1098,"title":{},"body":{"index.html":{}}}],["library",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["license",{"_index":1116,"title":{},"body":{"properties.html":{}}}],["lifecycle",{"_index":1072,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lifetime",{"_index":336,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["line:variable",{"_index":874,"title":{},"body":{"classes/Stomp.html":{}}}],["linear",{"_index":196,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["link",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["locally",{"_index":251,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["located",{"_index":840,"title":{},"body":{"classes/Stomp.html":{}}}],["logged",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["logger",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["logging",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":218,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["looks",{"_index":299,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["major",{"_index":823,"title":{},"body":{"classes/Stomp.html":{}}}],["manual",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["mapping",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["maps",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["match",{"_index":807,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["matched",{"_index":624,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["matches",{"_index":690,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["matching",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["maximum",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["maxreconnectdelay",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["maxreconnectdelay]{@link",{"_index":588,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["maxwebsocketchunksize",{"_index":216,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["memory",{"_index":259,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Ticker.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":764,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.js",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":257,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{}}}],["methods",{"_index":667,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":1066,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["mode",{"_index":535,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modes",{"_index":194,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["modules",{"_index":1109,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":855,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":879,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["multiple",{"_index":635,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["multiplier",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["nack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":676,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["named",{"_index":779,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["native",{"_index":567,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["navigating",{"_index":1089,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":348,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["needed",{"_index":859,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["never",{"_index":546,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["new",{"_index":556,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["ninja",{"_index":772,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["nodejs",{"_index":829,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":532,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["notes",{"_index":254,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["npm",{"_index":1094,"title":{},"body":{"index.html":{}}}],["null",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["number",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{}}}],["object",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["observability",{"_index":701,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observable",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["observable.create((rpcobserver",{"_index":759,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":717,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["obtain",{"_index":343,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["once",{"_index":328,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{}}}],["onchangestate",{"_index":901,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":221,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":222,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["one",{"_index":333,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onheartbeatlost",{"_index":230,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onheartbeatreceived",{"_index":229,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onmessage",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":223,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":228,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":226,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":227,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":224,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":225,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["open",{"_index":183,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["operators",{"_index":798,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["optional",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["options",{"_index":238,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":852,"title":{},"body":{"classes/Stomp.html":{}}}],["ordering",{"_index":255,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["otherwise",{"_index":640,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["outgoing",{"_index":200,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["over",{"_index":613,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["over(ws",{"_index":845,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":722,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["overview",{"_index":1110,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1113,"title":{"properties.html":{}},"body":{}}],["page",{"_index":261,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["param",{"_index":744,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["parameter",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["params",{"_index":692,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":639,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":236,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["partials",{"_index":715,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["passcode",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["passing",{"_index":862,"title":{},"body":{"classes/Stomp.html":{}}}],["pattern",{"_index":617,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["per",{"_index":790,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["perform",{"_index":684,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["persisted",{"_index":260,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ping",{"_index":202,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["pings",{"_index":995,"title":{},"body":{"classes/Ticker.html":{}}}],["pipe",{"_index":762,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":825,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["point",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["pre",{"_index":786,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["precedence",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prefer",{"_index":335,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["preferred",{"_index":1107,"title":{},"body":{"index.html":{}}}],["prefix/name",{"_index":784,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["preserved",{"_index":256,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["prevent",{"_index":738,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["primitives",{"_index":1100,"title":{},"body":{"index.html":{}}}],["prior",{"_index":880,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":725,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Ticker.html":{}}}],["procedure",{"_index":610,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["proceeds",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["progress",{"_index":636,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["promise",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["protocol",{"_index":1027,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":837,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":1018,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":870,"title":{},"body":{"classes/Stomp.html":{}}}],["provide",{"_index":638,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["provided",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"miscellaneous/typealiases.html":{}}}],["provisioned",{"_index":787,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["public",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["publish",{"_index":235,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["published",{"_index":619,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["publishing",{"_index":677,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["publishparams",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["purpose",{"_index":805,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":300,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["queue/destination",{"_index":809,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["queue/orders",{"_index":303,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["queue/rpc",{"_index":645,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queued",{"_index":250,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["queuename",{"_index":321,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["queues",{"_index":780,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["rabbitmq",{"_index":777,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["raw",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re",{"_index":287,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["re)connection",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["re)subscription",{"_index":311,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["read",{"_index":647,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/Ticker.html":{}}}],["readystate",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["reason",{"_index":346,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["receive",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompRPCConfig.html":{}}}],["receives",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["receiving",{"_index":678,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["reconnect",{"_index":519,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reconnectdelay",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnectdelay]{@link",{"_index":586,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["reconnecting",{"_index":856,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":191,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["reconnectiontimemode",{"_index":195,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["reconnectiontimemode.exponential",{"_index":527,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["reconnectiontimemode.linear",{"_index":524,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["reconnects",{"_index":288,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPCConfig.html":{}}}],["reconnecttimemode",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecttimemode]{@link",{"_index":583,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["reduce",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["refer",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["reflect",{"_index":1073,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["released",{"_index":1095,"title":{},"body":{"index.html":{}}}],["reloads",{"_index":262,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["remain",{"_index":803,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["remains",{"_index":711,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["remarks",{"_index":883,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":609,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":822,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":646,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["repliesobservable",{"_index":755,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":758,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":620,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["replyqueuename",{"_index":643,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":626,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["request/reply",{"_index":616,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["requests",{"_index":618,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["require",{"_index":540,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["require('../../esm5",{"_index":832,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":872,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket;deprecated",{"_index":835,"title":{},"body":{"classes/Stomp.html":{}}}],["requirements",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["requires",{"_index":782,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["requiring",{"_index":813,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["resilient",{"_index":804,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["resolves",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["respect",{"_index":703,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["responds",{"_index":713,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["responses",{"_index":623,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["resubscription",{"_index":325,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPCConfig.html":{}}}],["resubscriptions",{"_index":331,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["results",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retry",{"_index":800,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["retryifdisconnected",{"_index":248,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":312,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["returned",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["returns",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["right",{"_index":341,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["route",{"_index":781,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["routes",{"_index":650,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["rpc",{"_index":611,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(params",{"_index":682,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts",{"_index":608,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:107",{"_index":683,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:134",{"_index":694,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:67",{"_index":671,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":766,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["runinterval",{"_index":1003,"title":{},"body":{"classes/Ticker.html":{}}}],["runinterval(tick",{"_index":1002,"title":{},"body":{"classes/Ticker.html":{}}}],["runs",{"_index":324,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["runworker",{"_index":994,"title":{},"body":{"classes/Ticker.html":{}}}],["runworker(tick",{"_index":992,"title":{},"body":{"classes/Ticker.html":{}}}],["rx",{"_index":234,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":718,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"index.html":{}}}],["rxstomp",{"_index":246,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rxstomp#configure",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":573,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate]{@link",{"_index":604,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":239,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":267,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":285,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":352,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.connectionstate$.subscribe((state",{"_index":1077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxstomp.unhandledmessage",{"_index":648,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["rxstomp.watch",{"_index":320,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["rxstomp]{@link",{"_index":605,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":355,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#maxreconnectdelay",{"_index":589,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#reconnectdelay",{"_index":587,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#reconnecttimemode",{"_index":584,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#splitlargeframes",{"_index":599,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":574,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.debug",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":555,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":568,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":607,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rxstomprpcconfig",{"_index":657,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstomprpcconfig.replyqueuename",{"_index":724,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig.setupreplyqueue",{"_index":728,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstompstate",{"_index":1069,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxstompstate.closed",{"_index":1085,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxstompstate.closing",{"_index":1083,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxstompstate.connecting",{"_index":1078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxstompstate.open",{"_index":1081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["same",{"_index":899,"title":{},"body":{"classes/StompConfig.html":{}}}],["scheduling",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["scripts",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{}}}],["self.postmessage(date.now",{"_index":978,"title":{},"body":{"classes/Ticker.html":{}}}],["send",{"_index":279,"title":{},"body":{"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["send(data",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sends",{"_index":686,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["sent",{"_index":252,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{}}}],["server",{"_index":634,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["session",{"_index":818,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["set",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["setinterval",{"_index":1005,"title":{},"body":{"classes/Ticker.html":{}}}],["setinterval(function",{"_index":977,"title":{},"body":{"classes/Ticker.html":{}}}],["setup",{"_index":681,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["setupreplyqueue",{"_index":656,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["setupreplyqueuefntype",{"_index":720,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["setups",{"_index":545,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["share",{"_index":799,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["shared",{"_index":712,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["shoulduseworker",{"_index":989,"title":{},"body":{"classes/Ticker.html":{}}}],["side",{"_index":243,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["similar",{"_index":851,"title":{},"body":{"classes/Stomp.html":{}}}],["simple",{"_index":615,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["single",{"_index":687,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["size",{"_index":510,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["skipcontentlengthheader",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":563,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs('https://broker.domain.com/stomp",{"_index":579,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["sockjs('https://broker.domain.com/stomp');maps",{"_index":570,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["spacing",{"_index":523,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specific",{"_index":245,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["specify",{"_index":849,"title":{},"body":{"classes/Stomp.html":{}}}],["split",{"_index":547,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["splitlargeframes",{"_index":215,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitlargeframes]{@link",{"_index":598,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["splitting",{"_index":536,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":544,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["standard",{"_index":565,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":533,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["start",{"_index":963,"title":{},"body":{"classes/Ticker.html":{}}}],["start(tick",{"_index":969,"title":{},"body":{"classes/Ticker.html":{}}}],["started",{"_index":1088,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":975,"title":{},"body":{"classes/Ticker.html":{}}}],["state",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":1071,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":826,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["status",{"_index":1074,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":848,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":889,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":881,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":875,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url);deprecated",{"_index":843,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.js",{"_index":572,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp.over",{"_index":882,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":863,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.ts",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":834,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":664,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp/rx",{"_index":247,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["stomp/src/i",{"_index":233,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":896,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":831,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"properties.html":{}}}],["stompjs.stomp",{"_index":833,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/remote",{"_index":665,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomprpcconfig",{"_index":670,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":745,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":747,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stompsocketstate",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompsubscription",{"_index":957,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":208,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["stop",{"_index":708,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Ticker.html":{}}}],["strategies",{"_index":199,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["strategy",{"_index":522,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["strategy/ticker",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["stream",{"_index":633,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["stream(params",{"_index":693,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["streams",{"_index":334,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":319,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":350,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":294,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":315,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribe",{"_index":292,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribe((message",{"_index":765,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribe(message",{"_index":322,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribed",{"_index":326,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["subscribeonlyonce",{"_index":295,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscriber",{"_index":707,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["subscribers",{"_index":815,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["subscribing",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["subscription.ts",{"_index":958,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscriptions",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["successful",{"_index":327,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":649,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["summary",{"_index":628,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["supplied",{"_index":289,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["supply",{"_index":307,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["support",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":1014,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":1019,"title":{},"body":{"classes/Versions.html":{}}}],["suppress",{"_index":329,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["switch",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["target",{"_index":297,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":858,"title":{},"body":{"classes/Stomp.html":{}}}],["teardown",{"_index":740,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["temp",{"_index":644,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":651,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["terminate",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["text",{"_index":538,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["text/javascript",{"_index":999,"title":{},"body":{"classes/Ticker.html":{}}}],["this._customreplyqueue",{"_index":748,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._debug('outgoing",{"_index":1010,"title":{},"body":{"classes/Ticker.html":{}}}],["this._debug('using",{"_index":993,"title":{},"body":{"classes/Ticker.html":{}}}],["this._dummysubscription",{"_index":757,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._interval",{"_index":979,"title":{},"body":{"classes/Ticker.html":{}}}],["this._repliesobservable",{"_index":754,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":746,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":749,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._strategy",{"_index":990,"title":{},"body":{"classes/Ticker.html":{}}}],["this._timer",{"_index":1004,"title":{},"body":{"classes/Ticker.html":{}}}],["this._worker",{"_index":996,"title":{},"body":{"classes/Ticker.html":{}}}],["this._worker.onmessage",{"_index":1000,"title":{},"body":{"classes/Ticker.html":{}}}],["this._worker.terminate",{"_index":1008,"title":{},"body":{"classes/Ticker.html":{}}}],["this.disposeinterval",{"_index":988,"title":{},"body":{"classes/Ticker.html":{}}}],["this.disposeworker",{"_index":987,"title":{},"body":{"classes/Ticker.html":{}}}],["this.runinterval(tick",{"_index":986,"title":{},"body":{"classes/Ticker.html":{}}}],["this.runworker(tick",{"_index":985,"title":{},"body":{"classes/Ticker.html":{}}}],["this.rxstomp",{"_index":756,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":768,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":730,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.shoulduseworker",{"_index":984,"title":{},"body":{"classes/Ticker.html":{}}}],["this.stop",{"_index":983,"title":{},"body":{"classes/Ticker.html":{}}}],["this.stream(params).pipe(first",{"_index":751,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":1038,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":1039,"title":{},"body":{"classes/Versions.html":{}}}],["through",{"_index":723,"title":{},"body":{"classes/RxStompRPC.html":{},"index.html":{}}}],["tick",{"_index":972,"title":{},"body":{"classes/Ticker.html":{}}}],["tick(date.now",{"_index":1006,"title":{},"body":{"classes/Ticker.html":{}}}],["tick(message.data",{"_index":1001,"title":{},"body":{"classes/Ticker.html":{}}}],["ticker",{"_index":198,"title":{"classes/Ticker.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tickerstrategy",{"_index":203,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["tickerstrategy.interval",{"_index":982,"title":{},"body":{"classes/Ticker.html":{}}}],["tickerstrategy.worker",{"_index":991,"title":{},"body":{"classes/Ticker.html":{}}}],["time",{"_index":193,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["timeout",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tolerance",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["topic",{"_index":301,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["topic/updates",{"_index":304,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["trailing",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":270,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":269,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":857,"title":{},"body":{"classes/Stomp.html":{}}}],["true",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["truncated",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["try",{"_index":554,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tslint:disable",{"_index":873,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":1104,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1122,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":890,"title":{},"body":{"classes/Stomp.html":{},"classes/Ticker.html":{}}}],["types.js",{"_index":868,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{}}}],["typescript",{"_index":353,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["typical",{"_index":1023,"title":{},"body":{"classes/Versions.html":{}}}],["typically",{"_index":298,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["unary",{"_index":685,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["undefined",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{}}}],["underlying",{"_index":710,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["unset",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":296,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":345,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":293,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["unsubscribing",{"_index":342,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["up",{"_index":339,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["update",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["updates",{"_index":637,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["upon",{"_index":704,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["url",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["url.createobjecturl",{"_index":997,"title":{},"body":{"classes/Ticker.html":{}}}],["us/docs/web/api/closeevent",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/closeeventhttps",{"_index":1126,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/event",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/eventhttps",{"_index":1128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{}}}],["use",{"_index":566,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["used",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["useful",{"_index":332,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["user",{"_index":347,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{}}}],["uses",{"_index":727,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["using",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["utf",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":641,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":1040,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":1015,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":1016,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":1017,"title":{},"body":{"classes/Versions.html":{}}}],["v4",{"_index":719,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["valid",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["var",{"_index":841,"title":{},"body":{"classes/Stomp.html":{},"classes/Ticker.html":{}}}],["version",{"_index":824,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{},"properties.html":{}}}],["versions",{"_index":107,"title":{"classes/Versions.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.1",{"_index":557,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":884,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.js",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["versions.v1_0",{"_index":1036,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":1035,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":1034,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":622,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["void",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{}}}],["wait",{"_index":192,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["waiting",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["want",{"_index":788,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"classes/Versions.html":{}}}],["watch",{"_index":284,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["websocket",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":864,"title":{},"body":{"classes/Stomp.html":{}}}],["websocket('wss://broker.domain.com:15674/ws",{"_index":569,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocketclass",{"_index":827,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["well",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["whose",{"_index":689,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["within",{"_index":280,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["without",{"_index":652,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["work",{"_index":892,"title":{},"body":{"classes/Stomp.html":{}}}],["workaround",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["worker",{"_index":205,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["ws",{"_index":865,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.domain.com:15674/ws",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":842,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":885,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.domain.com:15674/ws",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":679,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["yield",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            isBinaryBody\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended IFrame, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ack\n                                        \n                                \n                                \n                                        \n                                            nack\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { IFrame } from './i-frame.js';\nimport { StompHeaders } from './stomp-headers.js';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link IFrame}, you can access [headers]{@link IFrame#headers}\n * and [body]{@link IFrame#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipContentLengthHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { IFrame } from './i-frame.js';\nimport type { IMessage } from './i-message.js';\nimport { StompHeaders } from './stomp-headers.js';\nimport { Versions } from './versions.js';\n\n/**\n * This callback will receive a `string` as a parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = ((frame: IFrame) => void) | (() => void);\n\n/**\n * This callback is an \"Event\" only callback, no parameters provided.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type emptyCallbackType = () => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default, a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string | undefined;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  url: string;\n  onclose: ((ev?: any) => any) | undefined | null;\n  onerror: ((ev: any) => any) | undefined | null;\n  onmessage: ((ev: any) => any) | undefined | null;\n  onopen: ((ev?: any) => any) | undefined | null;\n  terminate?: (() => any) | undefined | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType?: string;\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n/**\n * Possible reconnection wait time modes\n */\nexport enum ReconnectionTimeMode {\n  LINEAR,\n  EXPONENTIAL,\n}\n\n/**\n * Possible ticker strategies for outgoing heartbeat ping\n */\nexport enum TickerStrategy {\n  Interval = 'interval',\n  Worker = 'worker',\n}\n\n/**\n * @internal\n */\nexport interface IStomptHandlerConfig {\n  debug: debugFnType;\n  stompVersions: Versions;\n  connectHeaders: StompHeaders;\n  disconnectHeaders: StompHeaders;\n  heartbeatIncoming: number;\n  heartbeatGracePeriods: number;\n  heartbeatOutgoing: number;\n  heartbeatStrategy: TickerStrategy;\n  splitLargeFrames: boolean;\n  maxWebSocketChunkSize: number;\n  forceBinaryWSFrames: boolean;\n  logRawCommunication: boolean;\n  appendMissingNULLonIncoming: boolean;\n  discardWebsocketOnCommFailure: boolean;\n  onConnect: frameCallbackType;\n  onDisconnect: frameCallbackType;\n  onStompError: frameCallbackType;\n  onWebSocketClose: closeEventCallbackType;\n  onWebSocketError: wsErrorCallbackType;\n  onUnhandledMessage: messageCallbackType;\n  onUnhandledReceipt: frameCallbackType;\n  onUnhandledFrame: frameCallbackType;\n  onHeartbeatReceived: emptyCallbackType;\n  onHeartbeatLost: emptyCallbackType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish.\nThese options extend the base STOMP publish parameters with client-side\nbehavior that is specific to RxStomp.\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            retryIfDisconnected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When true, if the client is disconnected at publish time, the message\nis queued locally and will be sent automatically after reconnection.\nNotes:\n\nOrdering is preserved among queued messages.\nMessages are kept in-memory only; they are not persisted across page reloads.\nIf set to false, publish will be attempted immediately and will fail\nif there is no active connection.\n\nDefault: true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}.\n *\n * These options extend the base STOMP publish parameters with client-side\n * behavior that is specific to RxStomp.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When `true`, if the client is disconnected at publish time, the message\n   * is queued locally and will be sent automatically after reconnection.\n   *\n   * Notes:\n   * - Ordering is preserved among queued messages.\n   * - Messages are kept in-memory only; they are not persisted across page reloads.\n   * - If set to `false`, publish will be attempted immediately and will fail\n   *   if there is no active connection.\n   *\n   * Default: `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abort\n                                        \n                                \n                                \n                                        \n                                            commit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nThese parameters control how a subscription is created, re-created on reconnects,\nand how headers are supplied both during subscribe and unsubscribe.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subscribeOnlyOnce\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unsubHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target (destination). This is broker-specific and typically\nlooks like a queue or a topic, e.g. /queue/orders or /topic/updates.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to send with the SUBSCRIBE frame. Defaults to {}.\nIf header values may change across reconnects, supply a function that will be\ninvoked before each (re)subscription so it can return the latest headers.\nExample:\nconst subHeadersCallback = () => ({ Authorization: `Bearer ${getToken()}` });\nconst sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback })\n  .subscribe(message => { /* handle message *\\/ });\n// The function runs before every subscription and resubscription.\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be re-subscribed automatically after each\nsuccessful reconnection. Set to true to subscribe only once and suppress\nautomatic resubscriptions.\nThis is useful for one-off streams or when you prefer to control the lifetime\nexplicitly across reconnects.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to send with the UNSUBSCRIBE frame. Defaults to {}.\nWhen headers are not known up-front, pass a function that will be invoked\nright before unsubscribing to obtain the current headers.\nExample:\nconst unsubHeadersCallback = () => ({ reason: 'user-navigation' });\nconst sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback })\n  .subscribe(message => { /* handle message *\\/ });\n// Later:\nsub.unsubscribe(); // The callback will be invoked to fetch headers.\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * These parameters control how a subscription is created, re-created on reconnects,\n * and how headers are supplied both during subscribe and unsubscribe.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target (destination). This is broker-specific and typically\n   * looks like a queue or a topic, e.g. `/queue/orders` or `/topic/updates`.\n   */\n  readonly destination?: string;\n\n  /**\n   * Headers to send with the SUBSCRIBE frame. Defaults to `{}`.\n   *\n   * If header values may change across reconnects, supply a function that will be\n   * invoked before each (re)subscription so it can return the latest headers.\n   *\n   * Example:\n   * ```typescript\n   * const subHeadersCallback = () => ({ Authorization: `Bearer ${getToken()}` });\n   * const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback })\n   *   .subscribe(message => { /* handle message *\\/ });\n   * // The function runs before every subscription and resubscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to send with the UNSUBSCRIBE frame. Defaults to `{}`.\n   *\n   * When headers are not known up-front, pass a function that will be invoked\n   * right before unsubscribing to obtain the current headers.\n   *\n   * Example:\n   * ```typescript\n   * const unsubHeadersCallback = () => ({ reason: 'user-navigation' });\n   * const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback })\n   *   .subscribe(message => { /* handle message *\\/ });\n   * // Later:\n   * sub.unsubscribe(); // The callback will be invoked to fetch headers.\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be re-subscribed automatically after each\n   * successful reconnection. Set to `true` to subscribe only once and suppress\n   * automatic resubscriptions.\n   *\n   * This is useful for one-off streams or when you prefer to control the lifetime\n   * explicitly across reconnects.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of these calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                correlateErrors\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatStrategy\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatToleranceMultiplier\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxReconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectTimeMode\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:174\n                        \n                    \n\n            \n                \n                    Workaround for environments where incoming frames may be truncated at NULL.\nAppends a trailing NULL to incoming frames.\nMaps to: Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:217\n                        \n                    \n\n            \n                \n                    Callback invoked before attempting a connection to the STOMP broker.\nYou may update configuration or credentials within this callback.\nIt is valid to call RxStomp#deactivate here.\nThis callback can be async; connection proceeds after the returned Promise resolves.\nAs of 0.3.5, this callback receives the RxStomp instance.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:29\n                        \n                    \n\n            \n                \n                    The WebSocket URL of the STOMP broker endpoint.\nExample: \"ws://broker.domain.com:15674/ws\" or \"wss://broker.domain.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory needs to be set.\nIf both are set, RxStompConfig#webSocketFactory takes precedence.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:197\n                        \n                    \n\n            \n                \n                    Connection headers, common keys include login, passcode, and host.\nRefer to your broker documentation for exact requirements.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:97\n                        \n                    \n\n            \n                \n                    Connection timeout in milliseconds; the attempt is aborted if not connected within this time.\nDefault: 0 (wait indefinitely).\nMaps to: Client#connectionTimeout.\nCaution: Experimental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        correlateErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:228\n                        \n                    \n\n            \n                \n                    Callback invoked on every ERROR frame from the broker.\nReturn the subscription ID (or destination-id) that should receive the error. If returned ID\ncorresponds to an active subscription, that observable will error and complete, and will not be\nre-subscribed automatically on reconnection.\nUseful for mapping broker ERROR frames to specific subscriptions that caused them.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:68\n                        \n                    \n\n            \n                \n                    Custom debug logger for library messages.\nExample:\nrxStompConfig.debug = (msg: string) => {\n  console.log(new Date(), msg);\n};Maps to: Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:189\n                        \n                    \n\n            \n                \n                    Immediately discard the WebSocket on communication failure, instead of waiting for a clean close.\nCan reduce reconnection delays on certain browser/network failures.\nMaps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:204\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:166\n                        \n                    \n\n            \n                \n                    Force all WebSocket frames to be sent as binary.\nMaps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:128\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatIncoming\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:143\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TickerStrategy\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:150\n                        \n                    \n\n            \n                \n                    Strategy/ticker used for scheduling heartbeats.\nMaps to: Client#heartbeatStrategy.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatToleranceMultiplier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:136\n                        \n                    \n\n            \n                \n                    Multiplier applied to the incoming heartbeat interval to determine tolerance for missing heartbeats.\nEffective tolerance = heartbeatIncoming * heartbeatToleranceMultiplier.\nMaps to: Client#heartbeatToleranceMultiplier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:54\n                        \n                    \n\n            \n                \n                    Enable logging of raw frames exchanged with the broker.\nWhen unset or false, only parsed frame headers are logged.\nTakes effect from the next (re)connection.\nCaution: Assumes frames contain valid UTF-8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxReconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:112\n                        \n                    \n\n            \n                \n                    Maximum reconnection delay in milliseconds when using increasing reconnection strategies.\nIgnored when reconnectTimeMode is fixed/linear with a constant delay.\nMaps to: Client#maxReconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:181\n                        \n                    \n\n            \n                \n                    Maximum size (in bytes) of each WebSocket chunk when splitLargeFrames is enabled.\nMaps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:105\n                        \n                    \n\n            \n                \n                    Base delay (in milliseconds) between automatic reconnection attempts.\nSet to 0 to disable auto-reconnect.\nMaps to: Client#reconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectTimeMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReconnectionTimeMode\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                        \n                    \n\n            \n                \n                    Strategy for spacing reconnection attempts.\n\nReconnectionTimeMode.LINEAR: fixed delay equal to reconnectDelay\nReconnectionTimeMode.EXPONENTIAL: delay doubles after each attempt, capped by maxReconnectDelay\n\nMaps to: Client#reconnectTimeMode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:159\n                        \n                    \n\n            \n                \n                    Enable a non-standards-compliant mode of splitting large text WebSocket frames.\nUseful for brokers that require chunked text frames (commonly certain Java Spring setups).\nBinary frames are never split.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:42\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during the handshake. By default, versions 1.2, 1.1, and 1.0 are attempted.\nExample:\n// Try only versions 1.1 and 1.0\nrxStompConfig.stompVersions = new Versions(['1.1', '1.0']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:87\n                        \n                    \n\n            \n                \n                    Factory function to create and return a WebSocket-like object (e.g., WebSocket or SockJS).\nPrefer Client#brokerURL if your broker exposes a standard WebSocket endpoint.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n// Use a native WebSocket\nrxStompConfig.webSocketFactory = () => new WebSocket('wss://broker.domain.com:15674/ws');\n\n// Use SockJS\nrxStompConfig.webSocketFactory = () => new SockJS('https://broker.domain.com/stomp');Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  debugFnType,\n  IFrame,\n  ReconnectionTimeMode,\n  StompHeaders,\n  TickerStrategy,\n  Versions,\n} from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of these calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The WebSocket URL of the STOMP broker endpoint.\n   * Example: \"ws://broker.domain.com:15674/ws\" or \"wss://broker.domain.com:15674/ws\".\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} needs to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} takes precedence.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during the handshake. By default, versions `1.2`, `1.1`, and `1.0` are attempted.\n   *\n   * Example:\n   * ```typescript\n   * // Try only versions 1.1 and 1.0\n   * rxStompConfig.stompVersions = new Versions(['1.1', '1.0']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Enable logging of raw frames exchanged with the broker.\n   * When unset or false, only parsed frame headers are logged.\n   *\n   * Takes effect from the next (re)connection.\n   *\n   * Caution: Assumes frames contain valid UTF-8 strings.\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * Custom debug logger for library messages.\n   *\n   * Example:\n   * ```typescript\n   * rxStompConfig.debug = (msg: string) => {\n   *   console.log(new Date(), msg);\n   * };\n   * ```\n   *\n   * Maps to: [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * Factory function to create and return a WebSocket-like object (e.g., WebSocket or SockJS).\n   * Prefer [Client#brokerURL]{@link Client#brokerURL} if your broker exposes a standard WebSocket endpoint.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```typescript\n   * // Use a native WebSocket\n   * rxStompConfig.webSocketFactory = () => new WebSocket('wss://broker.domain.com:15674/ws');\n   *\n   * // Use SockJS\n   * rxStompConfig.webSocketFactory = () => new SockJS('https://broker.domain.com/stomp');\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Connection timeout in milliseconds; the attempt is aborted if not connected within this time.\n   * Default: 0 (wait indefinitely).\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   *\n   * Caution: Experimental.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Base delay (in milliseconds) between automatic reconnection attempts.\n   * Set to 0 to disable auto-reconnect.\n   *\n   * Maps to: [Client#reconnectDelay]{@link Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n  /**\n   * Maximum reconnection delay in milliseconds when using increasing reconnection strategies.\n   * Ignored when [reconnectTimeMode]{@link RxStompConfig#reconnectTimeMode} is fixed/linear with a constant delay.\n   *\n   * Maps to: [Client#maxReconnectDelay]{@link Client#maxReconnectDelay}\n   */\n  public maxReconnectDelay?: number;\n\n  /**\n   * Strategy for spacing reconnection attempts.\n   * - ReconnectionTimeMode.LINEAR: fixed delay equal to [reconnectDelay]{@link RxStompConfig#reconnectDelay}\n   * - ReconnectionTimeMode.EXPONENTIAL: delay doubles after each attempt, capped by [maxReconnectDelay]{@link RxStompConfig#maxReconnectDelay}\n   *\n   * Maps to: [Client#reconnectTimeMode]{@link Client#reconnectTimeMode}\n   */\n  public reconnectTimeMode?: ReconnectionTimeMode;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Multiplier applied to the incoming heartbeat interval to determine tolerance for missing heartbeats.\n   * Effective tolerance = heartbeatIncoming * heartbeatToleranceMultiplier.\n   *\n   * Maps to: [Client#heartbeatToleranceMultiplier]{@link Client#heartbeatToleranceMultiplier}.\n   */\n  public heartbeatToleranceMultiplier?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Strategy/ticker used for scheduling heartbeats.\n   *\n   * Maps to: [Client#heartbeatStrategy]{@link Client#heartbeatStrategy}.\n   */\n  public heartbeatStrategy?: TickerStrategy;\n\n  /**\n   * Enable a non-standards-compliant mode of splitting large text WebSocket frames.\n   * Useful for brokers that require chunked text frames (commonly certain Java Spring setups).\n   * Binary frames are never split.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Force all WebSocket frames to be sent as binary.\n   *\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * Workaround for environments where incoming frames may be truncated at NULL.\n   * Appends a trailing NULL to incoming frames.\n   *\n   * Maps to: [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maximum size (in bytes) of each WebSocket chunk when [splitLargeFrames]{@link RxStompConfig#splitLargeFrames} is enabled.\n   *\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Immediately discard the WebSocket on communication failure, instead of waiting for a clean close.\n   * Can reduce reconnection delays on certain browser/network failures.\n   *\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, common keys include `login`, `passcode`, and `host`.\n   * Refer to your broker documentation for exact requirements.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback invoked before attempting a connection to the STOMP broker.\n   *\n   * You may update configuration or credentials within this callback.\n   * It is valid to call [RxStomp#deactivate]{@link RxStomp#deactivate} here.\n   *\n   * This callback can be async; connection proceeds after the returned Promise resolves.\n   * As of 0.3.5, this callback receives the [RxStomp]{@link RxStomp} instance.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n\n  /**\n   * Callback invoked on every ERROR frame from the broker.\n   *\n   * Return the subscription ID (or destination-id) that should receive the error. If returned ID\n   * corresponds to an active subscription, that observable will error and complete, and will not be\n   * re-subscribed automatically on reconnection.\n   *\n   * Useful for mapping broker ERROR frames to specific subscriptions that caused them.\n   */\n  public correlateErrors?: (error: IFrame) => string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n\n            \n                Description\n            \n            \n                Remote Procedure Call (RPC) helper over STOMP.\nRxStompRPC implements a simple request/reply pattern using STOMP frames:\n\nRequests are published to a destination you control.\nA reply destination is advertised via the reply-to header.\nResponses are matched back to the request using a correlation-id header.\n\nUsage summary\n\nUse rpc(...) when you expect exactly one reply; it completes after the first matching message.\nUse stream(...) when the server may send multiple messages (e.g., progress updates).\nIf you provide a correlation-id in params.headers, it will be used; otherwise a UUID is generated.\nThe reply-to header is set automatically to replyQueueName (default /temp-queue/rpc-replies).\n\nReply queue strategy\n\nBy default, replies are read from rxStomp.unhandledMessage$, which is suitable when the broker\nroutes temporary-queue replies without an explicit subscription.\nTo subscribe to a dedicated queue or customize the reply stream, provide { setupReplyQueue }\nvia RxStompRPCConfig. RxStompRPC will keep your observable “hot” internally.\n\nSee the guide for end-to-end examples:\n/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:67\n                            \n                        \n\n                \n                    \n                            Construct a new RxStompRPC.\nNotes\n\nIf replyQueueName is provided, it is used in the reply-to header for all requests.\nIf setupReplyQueue is provided, it must return a hot Observable of all reply messages.\nRxStompRPC will subscribe internally to keep it alive across consumers.\n\nSee the guide for broker-specific considerations.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The active RxStomp instance to use for publishing and receiving.\n\n                                                        \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional hooks to customize reply queue name and setup.\nNotes\n\nIf replyQueueName is provided, it is used in the reply-to header for all requests.\nIf setupReplyQueue is provided, it must return a hot Observable of all reply messages.\nRxStompRPC will subscribe internally to keep it alive across consumers.\n\nSee the guide for broker-specific considerations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:107\n                \n            \n\n\n            \n                \n                    Perform a unary RPC request that resolves with the first matching reply.\nBehavior\n\nSends a single request using stream and returns an Observable that emits the first\nreply whose correlation-id matches the request.\nThe returned Observable completes after emitting the first message.\n\nUse stream if you expect multiple replies for a single request.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:134\n                \n            \n\n\n            \n                \n                    Perform an RPC request and receive a stream of matching replies.\nHow it matches replies\n\nA correlation-id is attached to the request and used to filter messages\nfrom the reply stream. If you pass headers['correlation-id'], it is preserved;\notherwise, a UUID is generated.\n\nHeaders set by RxStompRPC\n\nreply-to: set to _replyQueueName.\ncorrelation-id: set or preserved as described above.\n\nObservability\n\nThe returned Observable is cold with respect to the request; the request is sent\nupon subscription, and the filtered replies are forwarded to the subscriber.\nUnsubscribe to stop receiving further replies for the request; the underlying\nreply-queue subscription remains active and shared.\n\nWhen to use\n\nUse this when the server responds with multiple messages (progress events, partials).\nPrefer rpc if exactly one reply is expected.\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { filter, first, Observable, Observer, Subscription } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { IMessage, IPublishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp.js';\nimport {\n  RxStompRPCConfig,\n  setupReplyQueueFnType,\n} from './rx-stomp-rpc-config.js';\n\n/**\n * Remote Procedure Call (RPC) helper over STOMP.\n *\n * RxStompRPC implements a simple request/reply pattern using STOMP frames:\n * - Requests are published to a destination you control.\n * - A reply destination is advertised via the `reply-to` header.\n * - Responses are matched back to the request using a `correlation-id` header.\n *\n * Usage summary\n * - Use `rpc(...)` when you expect exactly one reply; it completes after the first matching message.\n * - Use `stream(...)` when the server may send multiple messages (e.g., progress updates).\n * - If you provide a `correlation-id` in `params.headers`, it will be used; otherwise a UUID is generated.\n * - The `reply-to` header is set automatically to `replyQueueName` (default `/temp-queue/rpc-replies`).\n *\n * Reply queue strategy\n * - By default, replies are read from `rxStomp.unhandledMessage$`, which is suitable when the broker\n *   routes temporary-queue replies without an explicit subscription.\n * - To subscribe to a dedicated queue or customize the reply stream, provide `{ setupReplyQueue }`\n *   via {@link RxStompRPCConfig}. RxStompRPC will keep your observable “hot” internally.\n *\n * See the guide for end-to-end examples:\n * /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  /**\n   * Destination used in the `reply-to` header for all RPC calls.\n   * You can override it through {@link RxStompRPCConfig.replyQueueName}.\n   */\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  /**\n   * Factory that returns a hot Observable delivering all reply messages.\n   * Defaults to a function that uses `rxStomp.unhandledMessage$`.\n   * Override via {@link RxStompRPCConfig.setupReplyQueue}.\n   */\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  /**\n   * Shared stream of all messages arriving on the reply destination.\n   * Lazily initialized on first call to {@link stream}.\n   */\n  private _repliesObservable: Observable;\n\n  /**\n   * True when a custom reply queue setup function is supplied.\n   * In that case, this class keeps a dummy subscription to prevent accidental teardown.\n   */\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Construct a new RxStompRPC.\n   *\n   * @param rxStomp The active {@link RxStomp} instance to use for publishing and receiving.\n   * @param stompRPCConfig Optional hooks to customize reply queue name and setup.\n   *\n   * Notes\n   * - If `replyQueueName` is provided, it is used in the `reply-to` header for all requests.\n   * - If `setupReplyQueue` is provided, it must return a hot Observable of all reply messages.\n   *   RxStompRPC will subscribe internally to keep it alive across consumers.\n   *\n   * See the guide for broker-specific considerations.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig,\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Perform a unary RPC request that resolves with the first matching reply.\n   *\n   * Behavior\n   * - Sends a single request using {@link stream} and returns an Observable that emits the first\n   *   reply whose `correlation-id` matches the request.\n   * - The returned Observable completes after emitting the first message.\n   *\n   * Use {@link stream} if you expect multiple replies for a single request.\n   */\n  public rpc(params: IPublishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Perform an RPC request and receive a stream of matching replies.\n   *\n   * How it matches replies\n   * - A `correlation-id` is attached to the request and used to filter messages\n   *   from the reply stream. If you pass `headers['correlation-id']`, it is preserved;\n   *   otherwise, a UUID is generated.\n   *\n   * Headers set by RxStompRPC\n   * - `reply-to`: set to {@link _replyQueueName}.\n   * - `correlation-id`: set or preserved as described above.\n   *\n   * Observability\n   * - The returned Observable is cold with respect to the request; the request is sent\n   *   upon subscription, and the filtered replies are forwarded to the subscriber.\n   * - Unsubscribe to stop receiving further replies for the request; the underlying\n   *   reply-queue subscription remains active and shared.\n   *\n   * When to use\n   * - Use this when the server responds with multiple messages (progress events, partials).\n   * - Prefer {@link rpc} if exactly one reply is expected.\n   */\n  public stream(params: IPublishParams): Observable {\n    // defensively copy\n    const headers: StompHeaders = { ...(params.headers || {}) };\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp,\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || uuid();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          }),\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ ...params, headers });\n\n      return () => {\n        // Cleanup: stop forwarding matching replies to this observer\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a Ninja-level topic.\nConfiguration and customization hooks for RxStomp RPC reply handling.\nFor usage examples, see the guide:\n/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:64\n                        \n                    \n\n            \n                \n                    Destination name for the reply queue used by RPC.\nDefault: /temp-queue/rpc-replies — suitable for brokers like RabbitMQ and ActiveMQ that\nsupport temporary or auto-named queues and route replies based on the reply-to header.\nWhen to customize:\n\nYour broker requires a different temporary-queue prefix/name.\nYou prefer a dedicated, durable, or pre-provisioned reply destination.\nYou want to isolate replies per application instance or user.\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:83\n                        \n                    \n\n            \n                \n                    This is a Ninja-level topic.\nA hook to set up the reply queue and return an Observable of reply messages.\nDefaults to a function that uses RxStomp.unhandledMessage$, which is adequate when the broker\nroutes replies (via reply-to) to a temporary queue that doesn’t have an explicit subscription.\nProvide a custom implementation when:\n\nThe broker requires an explicit subscription to the reply destination.\nYou want to apply operators (e.g., share, retry) or diagnostics to the reply stream.\n\nContract:\n\nMust return an Observable that emits every reply message (IMessage) received on\nthe reply destination. RxStompRPC will filter messages by correlation-id.\nThe Observable should remain active across reconnects or be resilient to resubscription.\n\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * This is a Ninja-level topic.\n *\n * A factory function type used to create an Observable for the reply queue.\n *\n * Purpose\n * - RxStompRPC needs an Observable that emits all RPC replies. By default, it uses\n *   RxStomp.unhandledMessage$, which receives messages that don’t match any explicit subscription.\n * - Implement this to route replies from a dedicated queue or custom destination if your broker\n *   requires it.\n *\n * Parameters\n * - replyQueueName: The queue/destination where RPC replies should arrive.\n * - rxStomp: The active RxStomp instance (use it to set up any subscriptions you need).\n *\n * Return\n * - An Observable that emits every reply ({@link IMessage}) arriving on the reply queue.\n *\n * Notes\n * - The returned Observable should be “hot” (i.e., continue receiving frames without requiring\n *   downstream subscribers). If you return a cold Observable, RxStompRPC ensures it remains\n *   subscribed internally to keep the stream alive.\n * - The Observable must include all messages for the reply queue; RxStompRPC will filter replies\n *   per request using the correlation-id header.\n *\n * Example: use a dedicated temporary reply queue\n * ```typescript\n * const setupReplyQueue: setupReplyQueueFnType = (replyQueueName, rxStomp) => {\n *   // Ensure the broker delivers replies to `replyQueueName` for this session.\n *   // Then return a hot Observable of all messages from that destination.\n *   return rxStomp.watch({ destination: replyQueueName });\n * };\n * ```\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp,\n) => Observable;\n\n/**\n * This is a Ninja-level topic.\n *\n * Configuration and customization hooks for RxStomp RPC reply handling.\n *\n * For usage examples, see the guide:\n * /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n */\nexport class RxStompRPCConfig {\n  /**\n   * Destination name for the reply queue used by RPC.\n   *\n   * Default: `/temp-queue/rpc-replies` — suitable for brokers like RabbitMQ and ActiveMQ that\n   * support temporary or auto-named queues and route replies based on the `reply-to` header.\n   *\n   * When to customize:\n   * - Your broker requires a different temporary-queue prefix/name.\n   * - You prefer a dedicated, durable, or pre-provisioned reply destination.\n   * - You want to isolate replies per application instance or user.\n   */\n  public replyQueueName?: string;\n\n  /**\n   * This is a Ninja-level topic.\n   *\n   * A hook to set up the reply queue and return an Observable of reply messages.\n   *\n   * Defaults to a function that uses RxStomp.unhandledMessage$, which is adequate when the broker\n   * routes replies (via `reply-to`) to a temporary queue that doesn’t have an explicit subscription.\n   *\n   * Provide a custom implementation when:\n   * - The broker requires an explicit subscription to the reply destination.\n   * - You want to apply operators (e.g., share, retry) or diagnostics to the reply stream.\n   *\n   * Contract:\n   * - Must return an Observable that emits every reply message ({@link IMessage}) received on\n   *   the reply destination. RxStompRPC will filter messages by `correlation-id`.\n   * - The Observable should remain active across reconnects or be resilient to resubscription.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        WebSocketClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                        \n                    \n\n            \n                \n                    In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n       StompJs = require('../../esm5/');\n       Stomp = StompJs.Stomp;\n       Stomp.WebSocketClass = require('websocket').w3cwebsocket;Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        client\n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n       var url = \"ws://localhost:61614/stomp\";\n       var client = Stomp.client(url);Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        over\n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n       var client = Stomp.over(function(){\n         return new WebSocket('ws://localhost:15674/ws')\n       });Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions.js';\nimport { CompatClient } from './compat-client.js';\nimport { IStompSocket } from '../types.js';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over',\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatStrategy\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatToleranceMultiplier\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxReconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onHeartbeatLost\n                            \n                            \n                                    Public\n                                    Optional\n                                onHeartbeatReceived\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectTimeMode\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:92\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:127\n                        \n                    \n\n            \n                \n                    See Client#beforeConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:27\n                        \n                    \n\n            \n                \n                    See Client#brokerURL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:102\n                        \n                    \n\n            \n                \n                    See Client#connectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:42\n                        \n                    \n\n            \n                \n                    See Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:171\n                        \n                    \n\n            \n                \n                    See Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:176\n                        \n                    \n\n            \n                \n                    See Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:107\n                        \n                    \n\n            \n                \n                    See Client#disconnectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:87\n                        \n                    \n\n            \n                \n                    See Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:62\n                        \n                    \n\n            \n                \n                    See Client#heartbeatIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:72\n                        \n                    \n\n            \n                \n                    See Client#heartbeatOutgoing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TickerStrategy\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:77\n                        \n                    \n\n            \n                \n                    See Client#heartbeatStrategy.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatToleranceMultiplier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:67\n                        \n                    \n\n            \n                \n                    See Client#heartbeatToleranceMultiplier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:166\n                        \n                    \n\n            \n                \n                    See Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxReconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:52\n                        \n                    \n\n            \n                \n                    See Client#maxReconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:97\n                        \n                    \n\n            \n                \n                    See Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:181\n                        \n                    \n\n            \n                \n                    See Client#onChangeState.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:132\n                        \n                    \n\n            \n                \n                    See Client#onConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDisconnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:137\n                        \n                    \n\n            \n                \n                    See Client#onDisconnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onHeartbeatLost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         emptyCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:162\n                        \n                    \n\n            \n                \n                    See Client#onHeartbeatLost.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onHeartbeatReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         emptyCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:157\n                        \n                    \n\n            \n                \n                    See Client#onHeartbeatReceived.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:142\n                        \n                    \n\n            \n                \n                    See Client#onStompError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:122\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledFrame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         messageCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:112\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledMessage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledReceipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:117\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledReceipt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         closeEventCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:147\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketClose.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         wsErrorCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:152\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:47\n                        \n                    \n\n            \n                \n                    See Client#reconnectDelay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectTimeMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReconnectionTimeMode\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:57\n                        \n                    \n\n            \n                \n                    See Client#reconnectTimeMode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:82\n                        \n                    \n\n            \n                \n                    See Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:32\n                        \n                    \n\n            \n                \n                    See Client#stompVersions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:37\n                        \n                    \n\n            \n                \n                    See Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\nimport {\n  ActivationState,\n  TickerStrategy,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  ReconnectionTimeMode,\n  wsErrorCallbackType,\n  emptyCallbackType,\n} from './types.js';\nimport { Versions } from './versions.js';\nimport { Client } from './client.js';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#maxReconnectDelay]{@link Client#maxReconnectDelay}\n   */\n  public maxReconnectDelay?: number;\n\n  /**\n   * See [Client#reconnectTimeMode]{@link Client#reconnectTimeMode}\n   */\n  public reconnectTimeMode?: ReconnectionTimeMode;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatToleranceMultiplier]{@link Client#heartbeatToleranceMultiplier}.\n   */\n  public heartbeatToleranceMultiplier?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#heartbeatStrategy]{@link Client#heartbeatStrategy}.\n   */\n  public heartbeatStrategy?: TickerStrategy;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: (client: Client) => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#onHeartbeatReceived]{@link Client#onHeartbeatReceived}.\n   */\n  public onHeartbeatReceived?: emptyCallbackType;\n\n  /**\n   * See [Client#onHeartbeatLost]{@link Client#onHeartbeatLost}.\n   */\n  public onHeartbeatLost?: emptyCallbackType;\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP headers. Many function calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            unsubscribe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id associated with this subscription.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubscribe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubscribe:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unsubscribe. See Client#unsubscribe for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ticker.html":{"url":"classes/Ticker.html","title":"class - Ticker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ticker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/ticker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_interval: number, _strategy, _debug: debugFnType)\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/ticker.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _interval\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _strategy\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _debug\n                                                  \n                                                        \n                                                                        debugFnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        start\n                        \n                    \n                \n            \n            \n                \n                    \n                    start(tick: (elapsedTime: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/ticker.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tick\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stop\n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/ticker.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, TickerStrategy } from './types.js';\n\nexport class Ticker {\n  private readonly _workerScript = `\n    var startTime = Date.now();\n    setInterval(function() {\n        self.postMessage(Date.now() - startTime);\n    }, ${this._interval});\n  `;\n\n  private _worker?: Worker;\n  private _timer?: any;\n\n  constructor(\n    private readonly _interval: number,\n    private readonly _strategy = TickerStrategy.Interval,\n    private readonly _debug: debugFnType,\n  ) {}\n\n  public start(tick: (elapsedTime: number) => void): void {\n    this.stop();\n\n    if (this.shouldUseWorker()) {\n      this.runWorker(tick);\n    } else {\n      this.runInterval(tick);\n    }\n  }\n\n  public stop(): void {\n    this.disposeWorker();\n    this.disposeInterval();\n  }\n\n  private shouldUseWorker(): boolean {\n    return (\n      typeof Worker !== 'undefined' && this._strategy === TickerStrategy.Worker\n    );\n  }\n\n  private runWorker(tick: (elapsedTime: number) => void): void {\n    this._debug('Using runWorker for outgoing pings');\n    if (!this._worker) {\n      this._worker = new Worker(\n        URL.createObjectURL(\n          new Blob([this._workerScript], { type: 'text/javascript' }),\n        ),\n      );\n      this._worker.onmessage = message => tick(message.data);\n    }\n  }\n\n  private runInterval(tick: (elapsedTime: number) => void): void {\n    this._debug('Using runInterval for outgoing pings');\n    if (!this._timer) {\n      const startTime = Date.now();\n      this._timer = setInterval(() => {\n        tick(Date.now() - startTime);\n      }, this._interval);\n    }\n  }\n\n  private disposeWorker(): void {\n    if (this._worker) {\n      this._worker.terminate();\n      delete this._worker;\n      this._debug('Outgoing ping disposeWorker');\n    }\n  }\n\n  private disposeInterval(): void {\n    if (this._timer) {\n      clearInterval(this._timer);\n      delete this._timer;\n      this._debug('Outgoing ping disposeInterval');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\nYou will be creating an instance of this class if you want to override\nsupported versions to be declared during STOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_0\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:10\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.1'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:14\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.2'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:18\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.2\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        protocolVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        supportedVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n   *\n   * You will be creating an instance of this class if you want to override\n   * supported versions to be declared during STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (47/47)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (50/50)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (33/33)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            interface\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/ticker.ts\n            \n            class\n            Ticker\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            ReconnectionTimeMode   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                        \n                            TickerStrategy   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ReconnectionTimeMode\n                    \n                \n                    \n                        \n                            Possible reconnection wait time modes\n\n                        \n                    \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                 EXPONENTIAL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TickerStrategy\n                    \n                \n                    \n                        \n                            Possible ticker strategies for outgoing heartbeat ping\n\n                        \n                    \n                        \n                            \n                                 Interval\n                            \n                        \n                        \n                            \n                                Value : interval\n                            \n                        \n                        \n                            \n                                 Worker\n                            \n                        \n                        \n                            \n                                Value : worker\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Connection lifecycle states for RxStomp.\nThese states reflect the status of the underlying STOMP-over-WebSocket connection\nas well as the client's activation/deactivation lifecycle.\nCommon usage:\nrxStomp.connectionState$.subscribe((state) => {\n  switch (state) {\n    case RxStompState.CONNECTING:\n      console.log('Attempting to connect...');\n      break;\n    case RxStompState.OPEN:\n      console.log('Connected');\n      break;\n    case RxStompState.CLOSING:\n      console.log('Disconnecting...');\n      break;\n    case RxStompState.CLOSED:\n      console.log('Disconnected');\n      break;\n  }\n});Part of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover the following libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs with RxJS primitives\n\nThe documentation for classes also indicates which library each of the classes\n belongs. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using the compatibility mode, your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Documentation for StompJS family\n        \n            License : Apache-2.0\n        \n            Author : Deepak Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            emptyCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a [CloseEvent]://developer.mozilla.org/en-US/docs/Web/API/CloseEventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as a parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    emptyCallbackType\n                \n            \n            \n                \n                    This callback is an \"Event\" only callback, no parameters provided.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an [Event]://developer.mozilla.org/en-US/docs/Web/API/Eventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    This is a Ninja-level topic.\nA factory function type used to create an Observable for the reply queue.\nPurpose\n\nRxStompRPC needs an Observable that emits all RPC replies. By default, it uses\nRxStomp.unhandledMessage$, which receives messages that don’t match any explicit subscription.\nImplement this to route replies from a dedicated queue or custom destination if your broker\nrequires it.\n\nParameters\n\nreplyQueueName: The queue/destination where RPC replies should arrive.\nrxStomp: The active RxStomp instance (use it to set up any subscriptions you need).\n\nReturn\n\nAn Observable that emits every reply (IMessage) arriving on the reply queue.\n\nNotes\n\nThe returned Observable should be “hot” (i.e., continue receiving frames without requiring\ndownstream subscribers). If you return a cold Observable, RxStompRPC ensures it remains\nsubscribed internally to keep the stream alive.\nThe Observable must include all messages for the reply queue; RxStompRPC will filter replies\nper request using the correlation-id header.\n\nExample: use a dedicated temporary reply queue\nconst setupReplyQueue: setupReplyQueueFnType = (replyQueueName, rxStomp) => {\n  // Ensure the broker delivers replies to `replyQueueName` for this session.\n  // Then return a hot Observable of all messages from that destination.\n  return rxStomp.watch({ destination: replyQueueName });\n};\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
