var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.652,1,1.162]],["body/interfaces/IFrame.html",[0,0.742,1,2.217,2,1.453,3,0.47,4,0.47,5,0.411,6,1.969,7,2.504,8,0.411,9,3.774,10,0.252,11,2.242,12,3.774,13,3.256,14,3.256,15,3.256,16,1.718,17,4.56,18,3.256,19,2.082,20,2.56,21,1.519,22,0.391,23,0.868,24,1.564,25,3.774,26,0.249,27,0.692,28,3.831,29,3.303,30,4.718,31,5.365,32,3.971,33,0.576,34,0.037,35,1.121,36,1.385,37,3.256,38,1.718,39,4.56,40,1.738,41,3.256,42,2.56,43,4.56,44,4.56,45,1.718,46,3.774,47,0.668,48,2.903,49,2.903,50,1.564,51,0.611,52,2.56,53,2.903,54,0.027,55,0.027]],["title/interfaces/IMessage.html",[0,0.652,24,1.058]],["body/interfaces/IMessage.html",[0,0.75,1,1.92,2,1.47,3,0.475,4,0.475,5,0.415,6,1.991,8,0.415,10,0.154,11,1.336,20,2.578,21,1.391,22,0.437,23,0.97,24,1.848,25,3.801,26,0.252,27,0.818,29,1.991,33,0.515,34,0.037,36,1.315,45,1.731,47,0.875,48,2.935,50,1.576,51,0.616,54,0.027,55,0.027,56,2.532,57,2.319,58,2.509,59,2.578,60,1.47,61,2.89,62,4.593,63,1.089,64,3.205,65,1.625,66,2.097,67,4.082,68,4.732,69,1.531,70,4.459,71,5.388,72,3.847,73,2.03,74,3.39,75,4.593,76,4.593,77,3.547,78,2.935,79,3.547,80,3.547,81,3.547,82,2.935,83,3.547,84,1.903,85,3.547,86,2.532]],["title/interfaces/IPublishParams.html",[0,0.652,87,1.278]],["body/interfaces/IPublishParams.html",[0,1.053,1,1.517,2,0.946,3,0.306,4,0.306,5,0.267,8,0.267,10,0.099,11,1.517,16,1.274,21,1.365,22,0.463,23,1.029,24,1.381,26,0.162,27,0.513,28,3.393,29,2.969,30,1.889,32,3.178,33,0.57,34,0.038,35,1.104,36,1.285,40,1.814,41,2.874,47,0.848,50,1.527,51,0.771,52,1.281,54,0.02,55,0.02,58,1.401,60,1.969,84,2.134,86,2.413,87,1.844,88,1.436,89,1.274,90,2.797,91,2.874,92,2.413,93,1.217,94,2.513,95,3.684,96,2.413,97,2.797,98,0.96,99,2.797,100,2.797,101,2.8,102,2.797,103,1.543,104,1.897,105,3.38,106,1.517,107,2.17,108,2.4,109,1.897,110,1.629,111,2.413,112,3.553,113,1.629,114,2.282,115,3.38,116,2.282,117,2.413,118,3.38,119,3.38,120,2.282,121,2.282,122,2.413,123,2.282,124,1.629,125,1.436,126,1.629,127,0.783,128,3.38,129,3.393,130,3.38,131,2.282,132,1.629,133,1.281,134,2.282,135,3.38,136,3.38,137,4.451,138,4.753,139,2.282,140,1.281,141,2.282,142,2.282,143,2.282,144,1.629,145,3.677,146,2.282,147,4.451,148,3.393,149,2.282,150,2.282,151,2.282,152,2.282,153,1.159,154,1.889,155,2.126,156,2.282,157,2.282,158,1.629,159,2.282,160,1.897,161,2.033,162,1.889,163,2.797,164,2.282,165,2.248,166,2.282,167,1.629,168,2.282,169,0.86,170,2.282,171,2.413,172,1.889,173,3.38,174,1.889,175,1.889,176,1.889,177,1.436,178,1.889,179,1.629,180,1.889,181,1.889,182,1.889,183,2.282,184,1.152,185,1.436,186,1.152,187,1.436,188,1.152,189,1.152,190,1.436,191,1.436,192,1.436,193,1.436,194,1.436,195,1.436,196,1.889,197,1.889,198,1.889,199,1.889,200,1.889,201,1.889,202,1.889,203,1.889]],["title/interfaces/IRxStompPublishParams.html",[0,0.652,204,1.94]],["body/interfaces/IRxStompPublishParams.html",[0,0.866,2,1.696,3,0.548,4,0.548,5,0.479,8,0.479,10,0.236,16,1.894,22,0.431,23,0.779,26,0.291,27,0.763,33,0.413,34,0.037,40,1.867,47,0.779,51,0.548,54,0.03,55,0.03,58,2.083,66,2.296,87,2.255,93,1.063,98,1.428,103,2.296,104,3.186,161,2.866,204,3.163,205,1.696,206,2.922,207,1.404,208,2.575,209,2.922,210,3.589,211,2.822,212,5.027,213,1.428,214,4.697,215,5.027,216,5.027,217,4.16,218,3.589,219,5.027,220,5.027,221,4.093]],["title/interfaces/ITransaction.html",[0,0.652,222,2.202]],["body/interfaces/ITransaction.html",[0,0.853,2,1.671,3,0.54,4,0.54,5,0.472,6,2.264,8,0.472,19,2.275,20,2.797,22,0.346,23,0.768,26,0.286,27,0.756,33,0.546,34,0.037,35,1.029,51,0.54,54,0.029,55,0.029,63,1.075,65,1.648,67,3.557,68,4.123,69,1.604,84,2.064,222,3.557,223,3.337,224,5.989,225,3.337,226,3.337,227,4.033,228,4.033,229,4.033,230,5.91,231,5.91,232,2.34,233,4.982,234,4.982,235,3.134,236,4.123,237,4.033,238,4.033]],["title/interfaces/IWatchParams.html",[0,0.652,239,1.731]],["body/interfaces/IWatchParams.html",[0,0.564,2,1.106,3,0.358,4,0.358,5,0.312,8,0.312,10,0.164,16,1.979,21,1.47,22,0.324,23,0.508,26,0.189,27,0.575,33,0.484,34,0.038,35,0.963,36,1.45,38,1.427,40,1.509,45,1.805,47,0.508,51,0.358,52,2.688,54,0.022,55,0.022,58,1.984,59,2.688,60,1.984,93,1.168,94,2.875,98,1.076,101,2.382,103,1.729,169,1.427,205,1.106,206,1.905,209,1.905,211,2.125,213,1.076,217,3.133,239,2.125,240,1.679,241,4.789,242,5.253,243,4.789,244,5.253,245,3.786,246,3.786,247,4.789,248,3.133,249,2.703,250,2.703,251,2.703,252,3.786,253,2.703,254,3.786,255,3.786,256,3.786,257,2.521,258,5.253,259,2.177,260,4.789,261,4.789,262,4.789,263,4.789,264,3.963,265,3.963,266,4.789,267,2.688,268,2.703,269,3.786,270,2.382,271,2.125,272,3.786,273,2.703,274,3.786,275,2.125,276,2.703,277,3.786,278,3.133,279,2.703,280,3.786,281,3.786,282,5.253,283,3.013,284,2.125,285,1.912,286,2.703,287,3.786,288,3.786,289,3.786,290,3.786]],["title/injectables/InjectableRxStompConfig.html",[291,0.876,292,1.557]],["body/injectables/InjectableRxStompConfig.html",[3,0.268,4,0.268,5,0.234,8,0.234,10,0.235,11,1.152,16,1.855,18,1.426,19,1.696,20,1.121,21,0.959,22,0.262,26,0.142,27,0.464,33,0.585,34,0.037,35,0.38,36,0.789,38,1.152,40,1.539,42,1.121,47,0.582,50,1.274,51,0.268,54,0.018,55,0.018,60,1.961,63,0.901,65,0.869,66,1.396,69,1.443,73,0.753,93,1.297,94,1.544,98,0.869,103,2.249,106,1.568,107,0.912,108,1.008,109,1.121,127,1.274,133,1.716,140,2.085,153,0.685,161,2.101,165,2.265,169,1.568,177,1.256,184,1.544,185,1.923,186,1.544,187,1.923,188,1.544,189,1.544,190,1.923,191,1.923,192,1.923,193,1.923,194,1.923,195,1.923,207,0.685,213,0.567,232,0.828,249,2.183,253,1.426,257,1.396,259,1.724,267,1.716,268,1.426,270,1.256,275,1.121,278,2.53,279,2.971,291,1.183,292,1.544,293,1.008,294,0.753,295,1.256,296,0.828,297,1.049,298,0.955,299,0.375,300,1.4,301,2.251,302,2.53,303,2.183,304,2.53,305,1.544,306,2.101,307,2.53,308,2.53,309,2.53,310,2.971,311,1.267,312,4.162,313,1.876,314,3.057,315,3.057,316,2.085,317,2.53,318,3.057,319,3.057,320,3.057,321,2.183,322,3.057,323,3.057,324,3.057,325,2.53,326,1.915,327,2.183,328,1.716,329,2.183,330,2.53,331,1.716,332,2.183,333,3.249,334,1.645,335,1.997,336,1.426,337,1.997,338,1.049,339,1.653,340,1.653,341,2.337,342,2.183,343,1.256,344,1.653,345,1.256,346,1.653,347,1.716,348,1.121,349,1.121,350,1.653,351,1.653,352,1.653,353,1.653,354,1.653,355,1.653,356,1.008,357,1.426,358,1.256,359,1.653,360,3.529,361,1.426,362,1.997,363,1.426,364,1.653,365,1.653,366,1.426,367,2.53,368,1.923,369,2.337,370,1.997,371,1.653,372,2.53,373,1.256,374,1.256,375,1.653,376,1.653,377,2.183,378,1.426,379,1.653,380,1.653,381,1.256,382,0.912,383,1.256,384,1.426,385,1.997,386,1.653,387,1.256,388,1.653,389,3.444,390,2.618,391,1.653,392,1.653,393,1.426,394,1.997,395,1.923,396,1.653,397,1.653,398,1.256,399,1.653,400,1.653,401,1.653,402,1.653,403,1.653,404,1.653,405,1.426,406,1.653,407,1.256,408,1.653,409,2.53,410,1.716,411,1.121,412,1.997,413,2.53,414,1.008,415,1.653,416,1.997,417,1.426,418,1.997,419,1.653,420,1.426,421,1.997,422,1.426,423,1.997,424,1.653,425,2.53,426,2.53,427,3.074,428,1.426,429,1.997,430,2.53,431,1.426,432,1.997,433,1.653,434,1.256,435,1.653,436,1.653,437,1.653,438,1.653,439,1.653,440,1.653,441,1.426,442,1.716,443,1.426,444,1.653,445,1.653,446,1.426,447,1.426,448,1.997,449,1.426,450,1.997,451,1.653,452,1.426,453,1.997,454,1.121,455,1.653,456,1.256,457,1.426,458,1.653,459,1.653,460,1.653,461,1.653,462,2.183,463,1.256,464,1.653,465,1.653,466,1.256,467,1.997,468,1.256,469,1.426,470,2.183,471,2.183,472,1.653,473,1.653,474,1.696,475,1.653,476,1.653,477,1.426,478,1.997,479,1.426,480,1.426,481,2.183,482,1.426,483,1.653,484,1.653,485,1.256,486,1.426,487,0.828,488,2.53,489,1.653,490,1.426,491,1.653,492,1.256,493,1.121]],["title/injectables/InjectableRxStompRPCConfig.html",[291,0.876,494,1.557]],["body/injectables/InjectableRxStompRPCConfig.html",[3,0.512,4,0.512,5,0.448,8,0.448,10,0.209,22,0.413,26,0.271,27,0.731,33,0.487,34,0.037,35,0.728,47,0.918,50,1.81,51,0.646,54,0.028,55,0.028,63,1.055,66,2.2,93,1.172,98,1.086,124,2.73,125,2.405,207,1.311,213,1.086,257,1.746,291,1.574,293,1.93,294,1.441,295,2.405,296,1.584,297,1.9,298,1.505,299,0.386,300,1.816,306,2.433,311,2.296,326,1.73,333,2.705,334,1.369,487,1.584,493,2.146,494,2.884,495,1.584,496,2.989,497,3.988,498,3.44,499,3.44,500,3.44,501,3.988,502,3.988,503,3.823,504,1.311,505,3.44,506,3.032,507,2.73,508,2.73,509,2.73,510,3.164,511,2.405,512,3.164,513,2.405,514,3.823,515,3.164,516,1.93,517,2.146]],["title/classes/RxStompConfig.html",[299,0.312,301,1.162]],["body/classes/RxStompConfig.html",[1,0.88,3,0.191,4,0.191,5,0.167,8,0.167,9,1.932,10,0.257,11,1.295,16,1.955,18,1.667,19,1.066,20,1.311,21,1.053,22,0.2,23,0.271,26,0.101,27,0.354,33,0.549,34,0.038,35,0.566,36,0.98,40,1.646,42,1.311,45,0.88,47,0.445,51,0.191,54,0.014,55,0.014,57,1.179,60,2.079,63,0.655,65,0.977,69,1.324,73,0.88,84,0.589,93,1.259,94,1.736,98,0.977,103,2.369,106,1.756,107,1.066,108,1.179,109,1.667,127,1.4,133,1.93,140,2.29,153,0.801,161,2.273,165,2.422,177,1.469,184,1.5,185,1.868,186,1.5,187,1.868,188,1.5,189,1.5,190,1.868,191,1.868,192,1.868,193,1.868,194,1.868,195,1.868,205,2.272,207,0.488,213,0.663,232,0.967,249,2.454,253,1.667,259,1.865,267,1.93,268,1.667,270,1.469,275,1.311,296,0.589,299,0.144,300,0.88,301,0.88,306,1.736,313,1.736,316,1.311,326,1.908,327,2.12,328,1.667,329,2.12,330,2.458,331,1.667,332,2.12,334,1.544,336,1.667,338,1.544,339,1.932,340,1.932,341,2.567,342,2.454,343,1.469,344,1.932,345,0.895,346,1.932,347,1.93,348,1.311,349,1.311,350,1.932,351,1.932,352,1.932,353,1.932,354,1.932,355,1.932,356,1.179,357,1.667,358,1.469,359,1.932,360,3.648,361,1.667,363,1.667,364,1.932,365,1.932,366,1.667,367,2.845,368,2.163,369,2.567,371,1.932,372,2.845,373,1.469,374,1.469,375,1.932,376,1.932,377,2.454,378,1.667,379,1.932,380,1.932,381,1.469,382,1.066,383,1.469,384,1.667,386,1.932,387,1.469,388,1.932,389,3.725,390,2.831,391,1.932,392,1.932,393,1.667,395,2.388,396,1.932,397,1.932,398,1.469,399,1.932,400,1.932,401,1.932,402,1.932,403,1.932,404,1.932,405,1.667,406,1.932,407,1.469,408,1.932,409,2.845,410,1.93,411,1.311,413,2.845,414,1.5,415,1.932,417,1.667,419,1.932,420,1.667,422,1.667,424,1.932,425,2.845,426,2.845,427,3.377,428,1.667,430,2.845,431,1.667,433,1.932,434,1.469,435,1.932,436,1.932,437,1.932,438,1.932,439,1.932,440,1.932,441,1.667,442,1.93,443,1.667,444,1.932,445,1.932,446,1.667,447,1.667,449,1.667,451,1.932,452,1.667,454,1.311,455,1.932,456,1.469,457,1.667,458,1.932,459,1.932,460,1.932,461,1.932,462,2.454,463,1.469,464,1.932,465,1.932,466,1.469,468,1.469,469,1.667,470,2.454,471,2.71,472,1.932,473,1.932,474,1.863,475,1.932,476,1.177,477,1.667,479,1.667,480,1.667,481,2.454,482,2.454,483,1.932,484,1.932,485,1.469,486,1.667,487,0.967,488,2.845,489,1.932,490,1.667,491,1.932,492,1.469,518,0.536,519,2.768,520,2.335,521,2.335,522,1.469,523,1.177,524,1.422,525,1.422,526,1.422,527,1.177,528,1.422,529,1.422,530,1.177,531,1.422,532,1.177,533,1.422,534,1.422,535,1.422,536,1.177,537,1.422,538,1.177,539,1.422,540,1.422,541,1.422,542,2.335,543,2.12,544,1.932,545,1.177,546,1.177,547,1.015,548,1.177,549,1.177,550,1.177,551,1.177,552,1.932,553,1.177,554,1.177,555,1.177,556,1.177,557,1.177,558,1.177,559,1.422,560,1.422,561,1.422,562,1.422,563,1.422,564,1.422,565,1.177,566,1.422]],["title/classes/RxStompRPC.html",[299,0.312,567,1.731]],["body/classes/RxStompRPC.html",[3,0.335,4,0.335,5,0.293,8,0.293,10,0.236,21,1.201,22,0.31,23,0.476,24,1.456,26,0.178,33,0.429,34,0.038,36,0.933,40,0.858,45,1.362,47,0.939,51,0.335,54,0.021,55,0.021,57,1.826,58,1.037,59,2.611,63,1.033,65,1.027,73,1.752,87,2.196,89,1.6,93,0.898,104,1.404,127,1.456,153,1.24,169,1.362,205,1.927,207,1.24,213,1.027,232,2.196,235,1.574,257,1.939,259,2.044,265,2.07,270,2.274,284,1.404,285,2.596,286,2.581,297,1.595,299,0.253,305,1.826,306,2.348,311,1.927,326,1.606,334,1.206,338,1.763,348,1.404,366,1.786,495,2.327,496,2.348,498,3.32,499,3.67,500,3.32,504,1.456,505,1.786,506,1.574,507,1.786,508,1.786,509,1.786,513,2.274,517,2.03,518,0.943,519,2.348,567,2.03,568,2.07,569,2.992,570,3.616,571,3.616,572,1.826,573,2.926,574,2.03,575,2.07,576,3.849,577,2.502,578,2.03,579,1.574,580,2.992,581,2.502,582,3.849,583,3.103,584,2.992,585,2.581,586,2.992,587,2.992,588,3.513,589,2.992,590,2.502,591,2.274,592,2.581,593,2.992,594,2.992,595,3.849,596,2.581,597,2.502,598,2.502,599,2.581,600,2.502,601,3.031,602,1.574,603,4.651,604,5.301,605,2.502,606,2.502,607,2.502,608,2.502,609,2.502,610,1.786,611,3.616,612,1.574,613,3.616,614,2.502,615,3.616,616,4.246,617,3.616,618,3.616,619,3.616,620,2.502,621,2.502,622,2.502,623,2.502,624,2.502,625,2.502,626,4.246,627,3.616,628,2.502,629,2.502,630,2.502,631,2.502,632,2.502,633,3.616,634,4.246,635,3.616,636,2.502,637,2.502,638,2.502,639,2.502,640,2.502,641,2.502,642,2.502,643,2.502]],["title/classes/RxStompRPCConfig.html",[299,0.312,496,1.557]],["body/classes/RxStompRPCConfig.html",[3,0.494,4,0.494,5,0.432,8,0.432,10,0.245,22,0.316,23,0.702,24,1.265,26,0.262,27,0.715,33,0.524,34,0.037,35,0.988,47,0.988,51,0.631,54,0.028,55,0.028,63,1.118,65,1.475,93,1.157,98,1.339,205,2.151,207,1.265,213,1.048,284,2.071,285,2.379,296,1.529,299,0.373,306,2.761,311,2.434,326,1.804,334,1.339,338,1.78,495,2.341,496,2.379,501,4.525,502,4.295,504,1.616,505,3.904,506,3.44,507,3.363,508,3.363,509,3.363,510,3.899,511,2.964,512,3.899,513,3.265,515,3.899,518,1.39,519,2.621,602,2.964,644,3.689,645,3.689]],["title/injectables/RxStompRPCService.html",[291,0.876,646,1.94]],["body/injectables/RxStompRPCService.html",[3,0.449,4,0.449,5,0.392,8,0.392,10,0.229,21,0.864,22,0.379,26,0.238,33,0.5,34,0.037,45,1.261,47,1.003,50,1.517,51,0.449,54,0.026,55,0.026,57,2.233,63,1.003,65,0.951,66,2.02,73,1.261,87,2.183,89,1.866,93,1.159,127,1.148,144,3.158,153,1.517,207,1.517,213,0.951,232,1.833,285,2.233,286,2.39,291,1.557,293,1.69,294,1.667,297,1.807,298,1.381,299,0.338,300,1.667,311,2.183,316,2.483,326,1.646,333,2.483,334,1.407,338,1.699,349,2.483,493,1.879,494,2.661,495,2.27,497,3.66,498,3.158,499,3.158,500,3.158,504,1.699,517,1.879,567,3.222,572,2.233,573,3.116,574,2.483,575,2.77,576,4.534,578,2.483,579,2.106,580,2.77,582,3.66,583,2.783,584,2.77,585,2.39,586,2.77,587,2.77,588,3.66,589,2.77,591,2.106,592,2.39,593,2.77,594,2.77,595,3.66,596,2.39,602,2.106,646,2.783,647,2.783,648,2.77,649,2.406,650,3.348,651,4.423,652,3.66,653,4.423,654,3.348,655,3.348,656,3.348,657,4.423,658,3.348]],["title/injectables/RxStompService.html",[291,0.876,649,1.408]],["body/injectables/RxStompService.html",[1,1.412,3,0.221,4,0.221,5,0.193,8,0.193,10,0.248,11,1.793,13,1.177,14,1.177,15,3.272,16,2.073,19,1.499,21,1.127,22,0.225,24,0.565,26,0.117,27,0.399,28,1.878,29,2.572,32,1.878,33,0.556,34,0.036,35,0.831,38,1.237,40,0.565,41,2.344,42,0.925,45,0.621,47,0.501,50,1.286,51,0.221,52,3.088,54,0.015,55,0.015,58,1.809,60,1.553,61,1.037,63,0.906,64,1.037,65,0.748,66,1.201,69,1.164,72,2.344,73,1.237,74,2.577,84,1.809,87,0.683,89,1.645,90,1.364,92,1.177,93,0.793,94,1.328,95,2.177,96,1.177,98,0.468,99,3.792,100,3.39,101,2.994,102,2.717,103,1.499,104,1.477,107,0.753,108,1.658,110,1.878,113,3.272,127,1.126,132,2.925,133,1.477,148,1.177,153,1.572,155,1.037,158,1.177,160,0.925,161,2.477,165,0.832,167,1.177,169,0.621,184,0.832,186,0.832,188,0.832,189,0.832,204,2.066,208,2.066,210,1.177,211,0.925,213,0.468,214,1.364,218,3.118,232,1.09,235,2.066,239,1.843,240,1.655,251,1.177,257,0.753,259,0.683,267,1.477,271,2.104,273,1.177,275,1.477,276,1.177,283,1.037,284,0.925,285,1.658,291,1.065,293,0.832,294,0.621,297,0.902,298,0.822,299,0.332,300,1.237,301,1.237,302,2.177,303,1.878,304,2.177,305,2.068,306,1.328,307,2.177,308,2.177,309,2.177,310,2.676,311,1.09,313,1.328,316,1.477,326,1.853,328,0.925,331,0.925,333,3.056,334,1.547,338,1.99,343,1.037,345,1.655,347,0.925,348,0.925,349,2.572,358,1.037,360,3.086,368,1.037,373,1.037,374,1.037,381,1.655,382,1.499,383,2.066,387,1.655,390,1.037,395,2.358,398,1.037,407,2.577,410,0.925,411,1.477,434,1.655,442,1.843,443,1.177,454,0.925,456,1.655,463,1.037,466,2.358,468,1.037,474,0.753,480,1.177,485,1.037,486,1.177,487,1.361,493,0.925,504,1.286,511,1.037,522,1.037,572,1.328,573,2.066,583,2.066,591,1.037,599,2.925,601,1.177,610,2.344,612,2.066,647,1.037,649,1.201,659,1.364,660,1.477,661,3.34,662,2.177,663,2.177,664,2.177,665,2.177,666,2.177,667,2.177,668,2.177,669,2.717,670,2.177,671,2.717,672,2.177,673,1.364,674,1.364,675,1.364,676,1.364,677,1.364,678,1.364,679,1.177,680,2.717,681,2.177,682,1.364,683,1.364,684,1.364,685,1.364,686,1.364,687,1.364,688,1.364,689,1.364,690,1.364,691,1.364,692,2.177,693,1.364,694,1.364,695,1.364,696,1.364,697,1.364,698,1.177,699,1.364,700,1.364,701,1.364,702,1.177,703,1.364,704,1.364,705,1.364,706,1.364,707,1.364,708,1.648,709,1.648,710,1.364,711,1.648,712,1.177,713,1.648,714,1.648,715,1.364,716,1.648,717,1.648,718,1.364,719,1.648,720,1.648,721,1.648,722,1.648,723,2.177,724,1.648,725,2.676,726,1.364,727,2.177,728,1.648,729,1.648,730,1.648,731,1.364,732,2.177,733,1.364,734,1.364,735,1.177,736,2.177,737,1.648,738,3.102,739,3.102,740,2.631,741,1.648,742,1.648,743,3.284,744,2.631,745,1.648,746,1.648,747,1.364,748,2.631,749,1.648,750,1.648,751,1.648,752,2.177,753,1.648,754,1.364,755,1.364,756,2.676,757,2.177,758,2.177,759,1.364,760,1.364,761,1.364,762,1.364,763,1.364,764,1.364,765,1.878,766,1.364,767,1.177,768,1.364,769,2.177,770,1.364,771,1.364,772,1.364,773,2.177,774,1.364,775,1.364,776,1.364,777,1.364,778,1.364,779,1.364,780,1.364,781,1.364,782,1.364,783,1.364,784,1.364,785,3.102,786,1.364,787,1.878,788,1.364,789,2.717,790,1.364,791,1.364,792,1.364,793,1.364,794,1.364,795,2.177,796,2.177,797,1.364,798,1.364,799,1.364,800,1.364,801,2.717,802,1.364,803,1.364,804,1.364,805,1.364,806,1.364,807,1.364,808,3.39,809,1.364,810,1.878,811,1.364,812,1.364,813,2.177,814,1.364,815,1.364,816,2.177,817,2.177,818,1.364,819,1.177,820,1.364,821,1.177,822,1.364,823,1.364,824,3.39,825,1.364,826,1.364,827,3.102,828,1.177,829,1.364,830,2.177,831,1.364,832,1.364,833,1.364,834,1.177,835,1.364,836,1.364,837,1.364,838,1.364,839,1.364,840,1.364,841,1.364,842,1.364,843,1.364,844,1.364,845,1.177,846,1.364,847,1.364,848,1.364,849,1.364,850,1.177]],["title/classes/Stomp.html",[10,0.134,299,0.312]],["body/classes/Stomp.html",[3,0.291,4,0.291,5,0.254,8,0.254,10,0.226,19,1.487,22,0.279,23,0.62,26,0.154,27,0.494,33,0.395,34,0.038,35,1.015,38,0.818,47,0.744,50,1.596,51,0.291,54,0.019,55,0.019,57,2.192,63,0.62,65,0.925,69,1.481,73,0.818,74,2.927,89,1.227,93,0.689,98,0.617,106,1.227,107,0.991,126,3.721,127,0.744,129,1.549,140,3.169,145,2.79,148,2.79,153,1.117,155,2.731,158,2.324,169,1.964,171,1.549,226,1.796,236,2.694,250,2.324,257,1.784,259,2.099,298,1.017,299,0.512,300,1.964,305,2.691,321,2.79,326,1.22,334,1.11,348,1.828,363,3.488,369,2.048,378,3.321,411,1.828,414,2.976,441,3.805,442,1.218,454,1.828,474,2.479,479,2.324,481,2.324,482,2.324,487,1.928,492,2.731,504,1.34,516,2.558,517,1.218,518,0.818,543,1.549,544,3.234,547,2.324,569,1.796,572,1.644,578,1.828,579,1.365,612,2.731,661,2.048,702,1.549,712,1.549,718,2.694,747,4.043,756,2.324,767,1.549,787,1.549,819,2.324,851,1.796,852,3.256,853,5.211,854,5.211,855,4.411,856,3.907,857,2.17,858,3.256,859,3.256,860,3.256,861,3.256,862,4.342,863,2.17,864,3.256,865,5.066,866,2.17,867,2.694,868,3.256,869,3.256,870,2.17,871,3.85,872,3.256,873,2.17,874,3.256,875,3.256,876,3.256,877,3.907,878,3.256,879,3.256,880,3.256,881,2.694,882,3.256,883,3.256,884,3.256,885,3.256,886,3.256,887,3.256,888,3.256,889,3.256,890,3.256,891,4.342,892,2.17,893,2.17,894,2.17,895,2.17,896,2.17,897,2.17,898,2.17,899,3.256,900,3.256,901,2.17,902,2.17,903,2.17,904,3.907,905,2.17,906,2.17,907,4.342,908,2.17,909,2.17,910,3.256,911,2.17,912,2.17,913,2.17,914,2.17,915,2.17,916,2.17]],["title/classes/StompConfig.html",[299,0.312,917,1.94]],["body/classes/StompConfig.html",[3,0.255,4,0.255,5,0.223,8,0.223,10,0.157,21,0.492,22,0.253,23,0.562,26,0.135,27,0.448,33,0.602,34,0.038,35,0.562,36,1.134,37,2.105,40,1.8,45,1.111,47,0.687,50,1.393,51,0.255,54,0.017,55,0.017,61,1.855,63,1.187,69,1.025,78,1.577,84,1.222,93,1.317,106,1.53,109,2.025,111,2.575,112,3.813,117,2.575,122,2.575,127,1.012,160,1.07,165,2.649,179,2.105,184,1.821,185,2.269,186,1.821,187,2.269,188,1.821,189,1.821,190,2.269,191,2.269,192,2.269,193,2.269,194,2.269,195,2.269,196,2.985,197,2.985,198,2.985,199,2.985,200,2.985,201,2.985,202,2.985,203,2.985,211,1.655,271,1.655,292,1.489,296,0.79,297,1.012,298,0.921,299,0.364,301,1.111,303,2.899,313,1.489,326,1.974,327,2.575,328,2.025,329,2.575,331,2.025,332,2.575,334,1.694,336,2.105,347,1.07,361,2.105,369,1.855,384,2.105,393,2.105,414,2.345,417,2.105,420,2.105,422,2.105,428,2.105,431,2.105,447,2.105,449,2.105,452,2.105,462,2.105,477,2.105,492,1.855,504,1.393,518,0.718,523,1.577,527,1.577,530,1.577,532,1.577,536,1.577,538,1.577,543,1.361,545,1.577,546,1.577,547,1.361,548,1.577,549,1.577,550,1.577,551,1.577,552,1.577,553,1.577,554,1.577,555,1.577,556,1.577,557,1.577,558,1.577,565,1.577,574,1.655,698,2.105,712,1.361,828,2.105,834,2.105,845,2.105,850,2.105,917,1.855,918,3.762,919,2.949,920,2.441,921,2.949,922,3.607,923,1.906,924,1.906,925,1.906,926,1.906,927,1.906,928,2.949,929,1.906,930,1.906,931,1.906,932,1.906,933,1.906,934,1.906,935,1.906,936,1.906,937,2.949,938,2.949,939,2.949,940,1.906,941,1.906,942,1.906,943,2.949,944,1.906,945,1.906,946,1.906,947,1.906,948,1.906,949,1.906,950,1.906,951,1.906,952,1.906,953,1.906,954,1.906,955,1.906,956,1.906,957,1.906]],["title/classes/StompHeaders.html",[36,0.796,299,0.312]],["body/classes/StompHeaders.html",[3,0.598,4,0.598,5,0.523,8,0.523,10,0.194,12,3.695,16,1.682,21,1.459,22,0.383,23,0.85,34,0.035,35,1.113,36,1.368,37,4.173,38,1.682,49,3.695,51,0.598,54,0.031,55,0.031,89,1.682,299,0.451,334,1.269,342,3.188,446,3.188,518,1.682,522,2.809,725,3.188,918,3.333,958,3.695,959,3.188,960,4.465,961,4.465,962,4.465,963,4.465,964,4.465,965,4.465,966,4.465,967,4.465]],["title/injectables/StompService.html",[291,0.876,968,1.94]],["body/injectables/StompService.html",[1,1.303,3,0.193,4,0.193,5,0.168,8,0.276,10,0.245,11,1.814,13,1.026,14,1.026,15,3.226,16,1.96,19,0.656,21,1.118,22,0.202,24,0.493,26,0.102,27,0.357,29,1.322,33,0.545,34,0.037,35,0.958,36,0.893,38,1.763,40,0.493,42,1.322,45,1.127,47,0.57,50,0.808,51,0.193,52,2.996,54,0.014,55,0.014,58,1.939,59,0.807,60,1.873,61,0.904,63,0.57,64,0.904,65,0.85,66,1.075,67,1.681,69,1.165,70,1.189,72,2.927,73,1.127,74,2.724,84,1.995,89,1.631,91,1.681,92,1.026,93,0.916,94,0.726,96,1.681,98,0.85,101,2.401,103,1.075,104,0.807,107,0.656,108,1.189,110,1.681,113,3.714,127,1.309,132,2.725,133,0.807,153,1.757,155,0.904,160,1.942,161,2.431,162,1.949,165,1.189,167,1.026,169,1.438,184,0.726,186,0.726,188,0.726,189,0.726,208,1.882,210,1.026,211,0.807,218,3.226,232,1.433,235,1.882,239,1.679,240,1.481,251,1.026,257,0.656,259,0.595,264,1.949,267,1.322,271,2.143,273,1.026,275,1.322,276,1.681,283,0.904,284,0.807,285,2.282,291,0.669,293,0.726,294,0.887,297,1.187,298,0.735,299,0.302,300,0.541,301,1.127,305,1.747,313,1.747,316,1.942,326,1.877,328,0.807,331,0.807,333,3.108,334,1.585,338,1.85,341,0.904,343,0.904,345,1.481,347,0.807,349,2.626,356,1.928,357,1.681,358,1.481,360,2.843,368,0.904,373,0.904,374,0.904,381,0.904,382,0.656,383,1.882,387,1.481,390,0.904,395,1.481,398,1.481,405,1.026,407,2.843,410,1.322,411,1.322,434,2.176,442,1.942,454,0.807,456,1.481,463,0.904,466,2.401,468,0.904,474,0.656,485,0.904,487,1.582,493,0.807,504,1.485,506,1.882,511,0.904,516,1.189,522,0.904,572,1.189,573,1.481,574,1.679,579,0.904,583,2.58,591,1.481,596,1.681,599,2.725,601,1.681,602,1.481,610,1.026,612,2.401,649,1.075,660,1.322,661,3.273,662,1.949,663,1.949,664,1.949,665,1.949,666,1.949,667,1.949,668,1.949,669,2.476,670,2.863,671,2.476,672,1.949,673,1.189,674,1.189,675,1.189,676,1.189,677,1.189,678,1.189,679,1.026,680,3.393,681,1.949,682,1.189,683,1.189,684,1.189,685,1.189,686,1.189,687,1.189,688,1.189,689,1.189,690,1.189,691,1.189,692,1.949,693,1.189,694,1.189,695,1.189,696,1.189,697,1.189,698,1.026,699,1.189,700,1.189,701,1.189,702,1.681,703,1.189,704,1.189,705,1.189,706,1.189,707,1.189,710,1.189,723,1.949,725,2.136,727,1.189,731,1.189,732,1.949,733,1.189,734,1.189,735,1.681,736,1.189,738,2.863,739,1.949,752,1.189,754,1.189,755,1.189,756,2.927,757,2.863,758,2.476,759,1.949,760,1.949,761,1.949,762,1.189,763,1.949,764,1.949,765,2.725,766,1.949,767,1.681,768,1.189,769,1.949,770,1.189,771,1.189,772,1.189,773,1.949,774,1.189,775,1.189,776,1.189,777,1.189,778,1.189,779,1.189,780,1.189,781,1.189,782,1.189,783,1.189,784,1.949,785,3.583,786,1.949,787,2.47,788,1.949,789,3.393,790,1.949,791,1.949,792,1.949,793,1.949,794,1.949,795,2.476,796,2.476,797,1.949,798,1.949,799,1.949,800,1.949,801,3.393,802,1.949,803,1.189,804,1.949,805,1.949,806,1.949,807,1.189,808,3.159,809,1.189,810,1.681,811,1.189,812,1.189,813,2.863,814,1.189,815,1.949,816,2.863,817,2.863,818,1.949,819,1.681,820,1.189,821,1.026,822,1.189,823,1.189,824,3.159,825,1.189,826,1.189,827,2.863,828,1.026,829,1.189,830,1.949,831,1.189,832,1.189,833,1.189,834,1.026,835,1.189,836,1.189,837,1.949,838,1.189,839,1.189,840,1.189,841,1.189,842,1.189,843,1.189,844,1.189,845,1.026,846,1.189,847,1.189,848,1.189,849,1.189,850,1.026,867,1.189,917,2.176,920,1.189,968,1.882,969,1.189,970,1.949,971,1.949,972,1.949,973,2.355,974,2.355,975,2.355,976,2.355,977,2.355,978,2.355,979,2.355,980,2.355,981,2.355,982,3.437,983,2.992,984,2.355,985,2.355,986,1.437,987,2.355,988,2.355,989,2.355,990,1.437,991,1.437,992,1.437,993,1.437,994,1.437,995,1.437,996,1.437,997,1.437,998,1.437,999,1.437,1000,1.437,1001,1.437,1002,1.437,1003,1.437,1004,1.437,1005,1.437,1006,1.437,1007,1.437,1008,1.437,1009,1.437,1010,1.437]],["title/interfaces/StompSubscription.html",[0,0.652,1011,2.202]],["body/interfaces/StompSubscription.html",[0,0.884,2,1.731,3,0.56,4,0.56,5,0.489,8,0.489,10,0.181,21,1.314,22,0.436,23,0.969,26,0.297,27,0.773,33,0.514,34,0.037,35,1.046,36,1.314,47,0.795,51,0.56,54,0.03,55,0.03,59,2.858,63,0.969,64,3.203,65,1.447,69,1.447,73,1.918,82,3.457,84,1.731,232,2.47,283,3.749,578,2.858,918,2.628,1011,4.081,1012,3.457,1013,5.091,1014,5.091,1015,4.178]],["title/classes/Versions.html",[106,1.162,299,0.312]],["body/classes/Versions.html",[3,0.427,4,0.427,5,0.373,8,0.373,10,0.241,11,1.612,22,0.414,23,0.606,26,0.226,27,0.649,33,0.544,34,0.037,35,1.111,38,1.82,46,3.54,51,0.427,54,0.025,55,0.025,57,2.16,89,1.2,93,0.673,98,1.467,106,2.258,127,1.771,129,2.273,140,2.401,153,1.467,154,4.591,259,1.772,299,0.488,300,2.091,326,1.872,334,1.611,341,2.691,377,3.961,410,2.401,469,3.054,470,3.961,471,3.961,474,1.454,490,3.054,504,1.092,518,1.2,572,2.16,574,1.787,592,3.054,715,4.591,735,3.054,855,4.881,1016,2.635,1017,4.831,1018,4.831,1019,4.831,1020,4.831,1021,5.165,1022,5.165,1023,3.184,1024,3.184,1025,4.278,1026,4.278,1027,4.278,1028,4.278,1029,3.184,1030,3.184,1031,3.184,1032,3.184,1033,3.184,1034,3.184,1035,3.184,1036,3.184,1037,3.184,1038,3.184,1039,3.184,1040,3.184,1041,3.184]],["title/coverage.html",[1042,3.464]],["body/coverage.html",[0,1.215,1,1.263,5,0.393,6,2.783,7,2.394,10,0.259,24,1.15,33,0.339,34,0.037,36,0.866,54,0.026,55,0.026,56,2.394,69,0.953,87,1.389,88,2.109,106,1.263,204,2.109,205,2.333,206,3.161,207,1.809,208,2.109,209,3.161,222,2.394,223,2.775,239,1.882,240,2.109,291,1.6,292,1.693,294,2.196,295,3.118,296,2.333,299,0.602,301,1.263,338,1.15,356,1.693,382,1.531,414,1.693,474,1.531,494,2.236,495,2.054,496,1.693,519,2.662,567,1.882,568,2.775,646,2.109,647,3.118,648,2.775,649,1.531,659,2.775,660,1.882,851,2.775,871,2.775,917,2.109,918,3.118,958,2.775,968,2.109,969,2.775,982,2.394,1011,2.394,1012,2.775,1016,2.775,1042,2.775,1043,3.353,1044,3.353,1045,2.775,1046,3.353,1047,3.353,1048,3.353,1049,6.248,1050,3.353,1051,4.428,1052,5.273,1053,3.353,1054,4.957,1055,5.273,1056,2.775,1057,3.353,1058,3.353,1059,3.353,1060,3.353,1061,3.353,1062,3.353,1063,3.353,1064,3.353,1065,3.353,1066,3.353,1067,3.353,1068,4.428,1069,3.353,1070,3.353,1071,3.353,1072,3.353,1073,3.353]],["title/miscellaneous/enumerations.html",[1074,1.072,1075,3.064]],["body/miscellaneous/enumerations.html",[10,0.251,22,0.444,26,0.305,34,0.03,54,0.03,55,0.03,88,2.705,145,3.07,160,2.414,163,4.287,171,4.121,172,4.602,174,4.287,175,4.287,176,4.287,177,3.498,178,3.558,179,3.699,180,3.558,181,3.558,182,3.558,205,1.782,213,1.222,294,1.62,297,1.777,298,1.343,299,0.434,338,1.475,356,2.171,516,2.171,519,2.171,661,2.705,679,3.07,970,3.558,971,3.558,972,3.558,1045,3.558,1074,1.782,1075,3.558,1076,4.287,1077,5.561,1078,3.07,1079,5.772,1080,5.181,1081,4.3,1082,4.3]],["title/miscellaneous/functions.html",[959,2.644,1074,1.072]],["body/miscellaneous/functions.html",[10,0.227,22,0.375,26,0.311,33,0.442,34,0.034,54,0.031,55,0.031,63,0.833,69,1.592,89,1.649,93,0.926,144,3.124,153,1.501,169,1.649,225,3.622,279,3.124,292,2.644,294,1.649,297,1.501,298,1.367,301,1.649,310,3.738,311,1.813,313,2.21,317,3.622,321,3.124,325,3.622,356,2.644,487,1.813,504,1.501,578,2.457,647,2.753,649,2.71,652,3.622,660,2.939,810,3.124,821,3.124,959,3.124,1056,4.333,1074,1.813,1078,3.124,1083,4.376,1084,4.376,1085,4.376,1086,4.376,1087,4.376,1088,4.376]],["title/index.html",[26,0.184,1089,2.586,1090,2.586]],["body/index.html",[10,0.254,23,0.964,34,0.03,54,0.03,55,0.03,63,0.964,97,4.526,106,2.061,125,2.603,169,1.907,207,1.736,213,1.438,248,3.425,250,3.614,271,2.323,291,1.176,292,2.09,297,1.42,298,1.708,301,1.559,305,2.09,338,1.736,382,1.89,414,2.09,457,2.955,494,2.09,495,1.715,496,2.09,516,2.09,518,2.147,567,2.841,585,2.955,646,2.603,649,1.89,660,2.323,726,3.425,765,2.955,881,3.425,968,2.603,982,2.955,1091,4.139,1092,4.139,1093,5.469,1094,5.698,1095,4.139,1096,4.139,1097,4.139,1098,4.139,1099,4.139,1100,4.139,1101,4.139,1102,4.139,1103,4.139,1104,4.139,1105,4.139,1106,4.139,1107,4.139,1108,4.139,1109,4.139,1110,4.139,1111,5.469,1112,4.139]],["title/modules.html",[1113,3.464]],["body/modules.html",[34,0.033,54,0.033,55,0.033,1113,4.083]],["title/overview.html",[1114,3.464]],["body/overview.html",[2,2.017,34,0.033,54,0.033,55,0.033,293,2.458,518,1.834,1114,4.029,1115,4.869,1116,4.869,1117,4.869]],["title/properties.html",[27,0.562,1118,2.586]],["body/properties.html",[8,0.558,27,0.723,34,0.036,54,0.032,55,0.032,298,1.488,300,1.795,382,2.175,1119,4.764,1120,4.764,1121,4.764,1122,4.764,1123,4.764,1124,4.764,1125,4.764,1126,4.764]],["title/miscellaneous/typealiases.html",[1074,1.072,1127,3.703]],["body/miscellaneous/typealiases.html",[1,2.034,6,2.79,7,3.549,10,0.234,11,1.873,22,0.513,23,1.124,24,1.851,26,0.285,33,0.406,34,0.029,35,0.765,53,3.325,54,0.029,55,0.029,56,3.549,58,2.06,60,2.401,63,0.765,65,1.142,69,1.678,86,2.869,87,2.06,88,2.528,91,3.549,107,2.646,108,2.926,109,2.79,111,3.549,112,3.549,117,3.549,122,3.549,124,2.869,125,2.528,126,2.869,205,1.665,213,1.142,296,2.06,311,1.665,495,2.06,513,3.127,519,2.029,1074,1.665,1076,4.886,1078,2.869,1128,4.018,1129,4.971,1130,4.018,1131,4.018,1132,4.018,1133,4.018]],["title/miscellaneous/variables.html",[1074,1.072,1134,3.064]],["body/miscellaneous/variables.html",[10,0.237,26,0.333,34,0.034,38,1.768,54,0.032,55,0.032,98,1.333,207,1.871,294,1.768,295,2.952,296,2.261,487,1.944,494,2.999,495,2.261,516,2.369,517,2.634,1074,1.944,1134,3.883,1135,4.693]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":390,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["0.1.0",{"_index":1119,"title":{},"body":{"properties.html":{}}}],["0.1.1",{"_index":344,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":359,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["1.0",{"_index":470,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":471,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1']);maps",{"_index":476,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["1.2",{"_index":377,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1116,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["2.0",{"_index":1123,"title":{},"body":{"properties.html":{}}}],["2/2",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":694,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["20000",{"_index":693,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["21/22",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["44/44",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1115,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1117,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":742,"title":{},"body":{"injectables/RxStompService.html":{}}}],["94",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["_customreplyqueue",{"_index":609,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_dummysubscription",{"_index":614,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_not_",{"_index":566,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["_repliesobservable",{"_index":608,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":605,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":606,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":230,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":960,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["ack",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/StompService.html":{}}}],["acknowledgement",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["acknowledges",{"_index":804,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["activate",{"_index":669,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["activated",{"_index":1087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activation",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":512,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":852,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":434,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["actually",{"_index":795,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["add",{"_index":688,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["added",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["addition",{"_index":962,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":210,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["advance",{"_index":315,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["alias",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":1128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":787,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["allowing",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["allows",{"_index":718,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["already",{"_index":810,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["alternate",{"_index":779,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["alternative",{"_index":874,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":887,"title":{},"body":{"classes/Stomp.html":{}}}],["always",{"_index":727,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["angular",{"_index":651,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["angular's",{"_index":323,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/core",{"_index":493,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":973,"title":{},"body":{"injectables/StompService.html":{}}}],["angular7.html",{"_index":309,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["another",{"_index":900,"title":{},"body":{"classes/Stomp.html":{}}}],["anything",{"_index":832,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["apache",{"_index":1122,"title":{},"body":{"properties.html":{}}}],["api",{"_index":1093,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":324,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["appendmissingnullonincoming",{"_index":194,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["application/octet",{"_index":753,"title":{},"body":{"injectables/RxStompService.html":{}}}],["appropriate",{"_index":704,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["around",{"_index":586,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["array",{"_index":1025,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["associated",{"_index":1013,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["assumes",{"_index":444,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["async",{"_index":345,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":560,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":357,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompService.html":{}}}],["asynchronously",{"_index":786,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["attempt",{"_index":468,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["attempted",{"_index":409,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["attempts",{"_index":682,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["attributes",{"_index":521,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":1124,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":702,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["automatic",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["automatically",{"_index":275,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["available",{"_index":961,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["before",{"_index":268,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":327,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behavior",{"_index":736,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["behaviorsubject",{"_index":813,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["belong",{"_index":1104,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["binarydata",{"_index":748,"title":{},"body":{"injectables/RxStompService.html":{}}}],["binarytype",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["both",{"_index":368,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["box",{"_index":724,"title":{},"body":{"injectables/RxStompService.html":{}}}],["breaks",{"_index":675,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{}}}],["brokers",{"_index":466,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["brokerurl",{"_index":328,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["builds",{"_index":1102,"title":{},"body":{"index.html":{}}}],["bye",{"_index":260,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["call.html",{"_index":500,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callable",{"_index":880,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["called",{"_index":349,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["calling",{"_index":226,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":522,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{}}}],["care",{"_index":593,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["carry",{"_index":784,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["case",{"_index":348,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":281,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":443,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["caveat",{"_index":229,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":381,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["class",{"_index":299,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":518,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":642,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":414,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":233,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":238,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#activate",{"_index":683,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["client#appendmissingnullonincoming",{"_index":336,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":554,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":361,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":565,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":227,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":369,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":543,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":234,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":237,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":698,"title":{},"body":{"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["client#configure]{@link",{"_index":948,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":384,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":557,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":393,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":548,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#deactivate",{"_index":707,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["client#debug",{"_index":928,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":956,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":417,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":556,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":420,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":558,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":422,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":553,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":428,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":550,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":431,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":551,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":447,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":546,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":449,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":555,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":937,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":957,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":938,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":951,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":939,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":952,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":828,"title":{},"body":{"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["client#onstomperror]{@link",{"_index":953,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":834,"title":{},"body":{"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["client#onunhandledframe]{@link",{"_index":950,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["client#onunhandledmessage]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":845,"title":{},"body":{"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":949,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":943,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":954,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":850,"title":{},"body":{"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["client#onwebsocketerror]{@link",{"_index":955,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["client#publish]{@link",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":452,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":549,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":462,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":552,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":477,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":545,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":1014,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":1015,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":806,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["client#websocketfactory",{"_index":492,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":547,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":864,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":879,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["closed",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent]://developer.mozilla.org/en",{"_index":1130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":770,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["combination",{"_index":793,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["combined",{"_index":322,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":231,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":436,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["compat",{"_index":892,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":871,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":910,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["complaint",{"_index":794,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["completed",{"_index":796,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["compliant",{"_index":456,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["compodoc",{"_index":1109,"title":{},"body":{"index.html":{}}}],["config",{"_index":602,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompService.html":{}}}],["config.ts",{"_index":296,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.ts:101",{"_index":940,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:102",{"_index":534,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:106",{"_index":924,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:111",{"_index":538,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:116",{"_index":532,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":523,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:126",{"_index":536,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:131",{"_index":530,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:136",{"_index":934,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:140",{"_index":526,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:141",{"_index":927,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:146",{"_index":929,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:147",{"_index":531,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:151",{"_index":936,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:167",{"_index":524,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:178",{"_index":528,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":525,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":644,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:26",{"_index":925,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":645,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:31",{"_index":946,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":539,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:36",{"_index":947,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:41",{"_index":926,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":944,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":535,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:50",{"_index":529,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:51",{"_index":932,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:56",{"_index":933,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:61",{"_index":945,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:66",{"_index":931,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:71",{"_index":923,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:73",{"_index":540,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:76",{"_index":935,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:81",{"_index":527,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:86",{"_index":930,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:88",{"_index":537,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:91",{"_index":941,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:95",{"_index":533,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:96",{"_index":942,"title":{},"body":{"classes/StompConfig.html":{}}}],["configuration",{"_index":313,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":670,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["configure(rxstompconfig",{"_index":684,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["configured",{"_index":1086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connect",{"_index":341,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["connected",{"_index":661,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":186,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["connecting",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["connectionstate",{"_index":662,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["connectiontimeout",{"_index":329,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["consider",{"_index":255,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["console.log(new",{"_index":695,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["console.warn",{"_index":913,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":1129,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../injectable",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../rx",{"_index":1078,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":1081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.ts",{"_index":1076,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":294,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["consolidated/rx",{"_index":205,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":851,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":873,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":857,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":866,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":918,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":88,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":1016,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":1029,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":1030,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":1031,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":1024,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":1032,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":1034,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":1033,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":257,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["constructor",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":985,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(public",{"_index":1038,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(versions",{"_index":1023,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":963,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["copied",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copy",{"_index":624,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlateerrors",{"_index":330,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["correlation",{"_index":595,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["correlationid",{"_index":634,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":1095,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":398,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["corresponds",{"_index":919,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":1099,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1042,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covert",{"_index":719,"title":{},"body":{"injectables/RxStompService.html":{}}}],["cr",{"_index":964,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":225,"title":{},"body":{"interfaces/ITransaction.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":867,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":353,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["current",{"_index":816,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["currently",{"_index":396,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["custom",{"_index":629,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["data",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["date",{"_index":696,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["deactivate",{"_index":671,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["deactivating",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":184,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["debugfntype",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":415,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["declare",{"_index":893,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":1028,"title":{},"body":{"classes/Versions.html":{}}}],["deepak",{"_index":1125,"title":{},"body":{"properties.html":{}}}],["default",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessagessubscription",{"_index":633,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":643,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":247,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["defensively",{"_index":623,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["define",{"_index":317,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":334,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["defining",{"_index":1084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":451,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["dependency",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompRPCService.html":{},"miscellaneous/functions.html":{}}}],["dependent",{"_index":246,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":516,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["designed",{"_index":766,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["destination",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["destinations",{"_index":714,"title":{},"body":{"injectables/RxStompService.html":{}}}],["details",{"_index":306,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["development",{"_index":1096,"title":{},"body":{"index.html":{}}}],["different",{"_index":777,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["disable",{"_index":427,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":195,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnect",{"_index":680,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["disconnectheaders",{"_index":187,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnecting",{"_index":1082,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnection",{"_index":419,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["docs",{"_index":1094,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":916,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":382,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["documents",{"_index":1107,"title":{},"body":{"index.html":{}}}],["dom",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":216,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["dropped",{"_index":971,"title":{},"body":{"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["drops",{"_index":760,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["during",{"_index":410,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":480,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["each",{"_index":271,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"index.html":{}}}],["earlier",{"_index":768,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["effects",{"_index":440,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["elements",{"_index":1026,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":815,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["emitted",{"_index":397,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["enable",{"_index":413,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["end",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["endpoint",{"_index":840,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["enqueued",{"_index":215,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ensure",{"_index":611,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["entry",{"_index":1111,"title":{},"body":{"index.html":{}}}],["enum",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":1075,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":859,"title":{},"body":{"classes/Stomp.html":{}}}],["erroneous",{"_index":408,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["error",{"_index":395,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["errors",{"_index":848,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["es6",{"_index":976,"title":{},"body":{"injectables/StompService.html":{}}}],["established",{"_index":387,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["etc",{"_index":355,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["ev",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["even",{"_index":759,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["event",{"_index":849,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["event]://developer.mozilla.org/en",{"_index":1132,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["exact",{"_index":826,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["exactly",{"_index":302,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["example",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":989,"title":{},"body":{"injectables/StompService.html":{}}}],["existing",{"_index":689,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["explicitly",{"_index":996,"title":{},"body":{"injectables/StompService.html":{}}}],["export",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["factory",{"_index":321,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.ts",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["false",{"_index":610,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["family",{"_index":1120,"title":{},"body":{"properties.html":{}}}],["favor",{"_index":970,"title":{},"body":{"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":352,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["field",{"_index":920,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["fields",{"_index":312,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":597,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":637,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":598,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fixed",{"_index":314,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["flag",{"_index":274,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["following",{"_index":774,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["forcebinarywsframes",{"_index":192,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#body",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frames",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["framework",{"_index":653,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["function",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":304,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["functions",{"_index":959,"title":{"miscellaneous/functions.html":{}},"body":{"classes/StompHeaders.html":{},"miscellaneous/functions.html":{}}}],["generatebinarydata",{"_index":749,"title":{},"body":{"injectables/RxStompService.html":{}}}],["generated",{"_index":1108,"title":{},"body":{"index.html":{}}}],["generating",{"_index":594,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["gets",{"_index":734,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["getting",{"_index":1089,"title":{"index.html":{}},"body":{}}],["good",{"_index":750,"title":{},"body":{"injectables/RxStompService.html":{}}}],["guest",{"_index":692,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["guide",{"_index":311,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":307,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["guide/rx",{"_index":497,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](/guide/rx",{"_index":603,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["guides",{"_index":1105,"title":{},"body":{"index.html":{}}}],["hack",{"_index":899,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":266,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handles",{"_index":1007,"title":{},"body":{"injectables/StompService.html":{}}}],["handshake",{"_index":469,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["headers.ts",{"_index":958,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":967,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":635,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":640,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":425,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":188,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["heartbeatoutgoing",{"_index":189,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["hello",{"_index":743,"title":{},"body":{"injectables/RxStompService.html":{}}}],["here",{"_index":769,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["host",{"_index":375,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["html5",{"_index":877,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":914,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":346,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["id",{"_index":232,"title":{},"body":{"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["identifier",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["ignore",{"_index":811,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":340,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["immediately",{"_index":738,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["impact",{"_index":339,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["implementation",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implies",{"_index":391,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["important",{"_index":371,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["importantly",{"_index":401,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["inactive",{"_index":182,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":424,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":966,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicate",{"_index":726,"title":{},"body":{"injectables/RxStompService.html":{},"index.html":{}}}],["indicates",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["information",{"_index":248,"title":{},"body":{"interfaces/IWatchParams.html":{},"index.html":{}}}],["inherited",{"_index":333,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["initandconnect",{"_index":983,"title":{},"body":{"injectables/StompService.html":{}}}],["initialize",{"_index":981,"title":{},"body":{"injectables/StompService.html":{}}}],["initiate",{"_index":674,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["inject",{"_index":318,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injectable",{"_index":291,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":292,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["injectablerxstomprpcconfig",{"_index":494,"title":{"injectables/InjectableRxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":293,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"overview.html":{}}}],["injected",{"_index":320,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injection",{"_index":652,"title":{},"body":{"injectables/RxStompRPCService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":517,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"overview.html":{}}}],["internal",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":286,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["interval",{"_index":426,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["invoke",{"_index":799,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["invoked",{"_index":267,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["invoking",{"_index":280,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":87,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":204,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issue",{"_index":764,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["issued",{"_index":287,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["istompthandlerconfig",{"_index":183,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":222,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":239,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["iwatchparams#subscribeonlyonce",{"_index":762,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["java",{"_index":464,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["javascript",{"_index":544,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":915,"title":{},"body":{"classes/Stomp.html":{}}}],["json",{"_index":721,"title":{},"body":{"injectables/RxStompService.html":{}}}],["keep",{"_index":678,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":372,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["klass",{"_index":908,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":909,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":621,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":279,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["kumar",{"_index":1126,"title":{},"body":{"properties.html":{}}}],["large",{"_index":459,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["later",{"_index":319,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leave",{"_index":998,"title":{},"body":{"injectables/StompService.html":{}}}],["length",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["lf",{"_index":965,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":1101,"title":{},"body":{"index.html":{}}}],["library",{"_index":765,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["license",{"_index":1121,"title":{},"body":{"properties.html":{}}}],["line:variable",{"_index":897,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["literal",{"_index":256,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["locally",{"_index":731,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["located",{"_index":868,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":433,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["login",{"_index":373,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["lograwcommunication",{"_index":193,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":438,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["loop",{"_index":703,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["major",{"_index":854,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["mandatory",{"_index":744,"title":{},"body":{"injectables/RxStompService.html":{}}}],["manual",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["manually",{"_index":980,"title":{},"body":{"injectables/StompService.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["maps",{"_index":360,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["marks",{"_index":379,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["matched",{"_index":797,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["matching",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxwebsocketchunksize",{"_index":191,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["meaning",{"_index":775,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["means",{"_index":405,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompService.html":{}}}],["mechanism",{"_index":325,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":638,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.ts",{"_index":56,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":218,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["messaging",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["methods",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":389,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":1074,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":763,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["missing",{"_index":730,"title":{},"body":{"injectables/RxStompService.html":{}}}],["mode",{"_index":457,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"index.html":{}}}],["modules",{"_index":1113,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":881,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":901,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["msg});maps",{"_index":805,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["multiple",{"_index":686,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["nack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":504,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":710,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["naming",{"_index":713,"title":{},"body":{"injectables/RxStompService.html":{}}}],["navigating",{"_index":1091,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["needed",{"_index":886,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":789,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["new",{"_index":474,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":441,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["ng2",{"_index":1112,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":858,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":454,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["normally",{"_index":831,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["note",{"_index":591,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["notify",{"_index":843,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["now",{"_index":404,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["npm",{"_index":1097,"title":{},"body":{"index.html":{}}}],["null",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["number",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["object",{"_index":482,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["objects",{"_index":827,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["observable",{"_index":285,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["observable(s",{"_index":399,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["observable.create((rpcobserver",{"_index":632,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observables",{"_index":403,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["observer",{"_index":599,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["occasionally",{"_index":278,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{}}}],["occurs",{"_index":809,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["octet(s",{"_index":729,"title":{},"body":{"injectables/RxStompService.html":{}}}],["once",{"_index":882,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":922,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":196,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":197,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["one",{"_index":366,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onmessage",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":198,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":203,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":201,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":202,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":199,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":200,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["open",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["operation",{"_index":785,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["optional",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":211,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["opts",{"_index":781,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["order",{"_index":878,"title":{},"body":{"classes/Stomp.html":{}}}],["otherwise",{"_index":700,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["out",{"_index":723,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["outgoing",{"_index":430,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["over",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":872,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":1027,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":1114,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1118,"title":{"properties.html":{}},"body":{}}],["packets",{"_index":461,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["param",{"_index":657,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["parameter",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":588,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["params.headers",{"_index":625,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":209,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":439,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["parser",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["passcode",{"_index":374,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["passing",{"_index":888,"title":{},"body":{"classes/Stomp.html":{}}}],["payload",{"_index":720,"title":{},"body":{"injectables/RxStompService.html":{}}}],["per",{"_index":676,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["pipe",{"_index":636,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":305,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"index.html":{}}}],["point",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["practice",{"_index":751,"title":{},"body":{"injectables/RxStompService.html":{}}}],["prefer",{"_index":485,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["preferred",{"_index":1110,"title":{},"body":{"index.html":{}}}],["present",{"_index":380,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["prior",{"_index":902,"title":{},"body":{"classes/Stomp.html":{}}}],["priority",{"_index":741,"title":{},"body":{"injectables/RxStompService.html":{}}}],["private",{"_index":604,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["procedure",{"_index":499,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["processing",{"_index":839,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["promise",{"_index":347,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":562,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["protocol",{"_index":715,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Versions.html":{}}}],["protocols",{"_index":865,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":1021,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":894,"title":{},"body":{"classes/Stomp.html":{}}}],["provider",{"_index":1085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":821,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":326,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["publish",{"_index":208,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["publish(parameters",{"_index":708,"title":{},"body":{"injectables/RxStompService.html":{}}}],["publish(queuename",{"_index":992,"title":{},"body":{"injectables/StompService.html":{}}}],["published",{"_index":219,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishing",{"_index":800,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["publishparams",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":506,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":508,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/test",{"_index":740,"title":{},"body":{"injectables/RxStompService.html":{}}}],["queued",{"_index":732,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["queuename",{"_index":264,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompService.html":{}}}],["queues",{"_index":757,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["r.service",{"_index":1006,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.ts",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["rabbitmq",{"_index":511,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["raise",{"_index":737,"title":{},"body":{"injectables/RxStompService.html":{}}}],["random",{"_index":792,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["randomtext",{"_index":802,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["raw",{"_index":435,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re",{"_index":406,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["re)connection",{"_index":273,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["re)subscription",{"_index":269,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["reactivate",{"_index":705,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["readme",{"_index":987,"title":{},"body":{"injectables/StompService.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["reads",{"_index":771,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["readystate",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["receipt",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["receiptid",{"_index":801,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["receive",{"_index":107,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["receiving",{"_index":836,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["recent",{"_index":822,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["reconnect",{"_index":442,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["reconnectdelay",{"_index":331,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{}}}],["reconnecting",{"_index":883,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":411,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["reconnects",{"_index":761,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["reestablished",{"_index":220,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["refer",{"_index":711,"title":{},"body":{"injectables/RxStompService.html":{}}}],["released",{"_index":1098,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":351,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["remains",{"_index":613,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["remarks",{"_index":905,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":853,"title":{},"body":{"classes/Stomp.html":{}}}],["replaced",{"_index":921,"title":{},"body":{"classes/StompConfig.html":{}}}],["replies",{"_index":509,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["repliesobservable",{"_index":627,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":631,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":505,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":501,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["report",{"_index":728,"title":{},"body":{"injectables/RxStompService.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":583,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["requested",{"_index":842,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["requesting",{"_index":788,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["require('../../esm5",{"_index":860,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":895,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket;deprecated",{"_index":863,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":350,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["resubscribe",{"_index":276,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["resubscriptions",{"_index":254,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["results",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":386,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":214,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/RxStompService.html":{}}}],["return",{"_index":259,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["returned",{"_index":823,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["returns",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["rpc",{"_index":495,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rpc(params",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["rpc.service.ts",{"_index":648,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":650,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.ts",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:29",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:55",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:66",{"_index":590,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":639,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":207,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":284,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp",{"_index":338,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#activate",{"_index":706,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp#configure",{"_index":520,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":541,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":343,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp#deactivate]{@link",{"_index":559,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":212,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":221,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":241,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":289,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watchforreceipt",{"_index":844,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp.activate();maps",{"_index":697,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp.configure",{"_index":690,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp.publish({\"/queue/test",{"_index":746,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp.publish({destination",{"_index":739,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":1002,"title":{},"body":{"injectables/StompService.html":{}}}],["rxstomp.watch",{"_index":263,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.watchforreceipt(receiptid",{"_index":803,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:107",{"_index":829,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:119",{"_index":841,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:132",{"_index":825,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:142",{"_index":846,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:161",{"_index":993,"title":{},"body":{"injectables/StompService.html":{}}}],["rxstomp:268",{"_index":685,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:300",{"_index":673,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:347",{"_index":701,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:360",{"_index":699,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:420",{"_index":709,"title":{},"body":{"injectables/RxStompService.html":{}}}],["rxstomp:473",{"_index":755,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:54",{"_index":814,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:616",{"_index":783,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:62",{"_index":807,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:77",{"_index":820,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp:94",{"_index":835,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstomp]{@link",{"_index":564,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":301,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompconfig#reconnectdelay",{"_index":677,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["rxstompconfig#websocketfactory",{"_index":367,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":542,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":473,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":488,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["rxstompconfig:102",{"_index":429,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:111",{"_index":453,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:116",{"_index":421,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:121",{"_index":335,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:126",{"_index":448,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:131",{"_index":416,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:140",{"_index":370,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:147",{"_index":418,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:167",{"_index":337,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:178",{"_index":394,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:22",{"_index":362,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:35",{"_index":467,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:47",{"_index":432,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:50",{"_index":412,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:73",{"_index":478,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:81",{"_index":385,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:88",{"_index":450,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstompconfig:95",{"_index":423,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["rxstomprpc",{"_index":567,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":587,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["rxstomprpc#stream]{@link",{"_index":620,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc:55",{"_index":654,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rxstomprpc:66",{"_index":655,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rxstomprpcconfig",{"_index":496,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpcconfig:23",{"_index":503,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{}}}],["rxstomprpcconfig:27",{"_index":514,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{}}}],["rxstomprpcservice",{"_index":646,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstompservice",{"_index":649,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory",{"_index":660,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":1083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstate",{"_index":1077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["safely",{"_index":758,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["same",{"_index":303,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{}}}],["samples",{"_index":988,"title":{},"body":{"injectables/StompService.html":{}}}],["scripts",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":235,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["send(data",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sent",{"_index":725,"title":{},"body":{"injectables/RxStompService.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{}}}],["sequence",{"_index":791,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["server",{"_index":756,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["serverheaders",{"_index":663,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["service",{"_index":356,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["setting",{"_index":486,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["setup",{"_index":515,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":502,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":513,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":818,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["similar",{"_index":479,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":584,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["simplest",{"_index":1088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skip",{"_index":745,"title":{},"body":{"injectables/RxStompService.html":{}}}],["skipcontentlengthheader",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["skipped",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["sockjs",{"_index":481,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":491,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["sometimes",{"_index":722,"title":{},"body":{"injectables/RxStompService.html":{}}}],["soon",{"_index":733,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":383,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["specification",{"_index":977,"title":{},"body":{"injectables/StompService.html":{}}}],["specified",{"_index":388,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["specifies",{"_index":716,"title":{},"body":{"injectables/RxStompService.html":{}}}],["specify",{"_index":876,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":190,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":458,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["spring",{"_index":465,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["standard",{"_index":378,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":455,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["started",{"_index":1090,"title":{"index.html":{}},"body":{}}],["state",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":1079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":855,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["status",{"_index":817,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["step",{"_index":310,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stomp#client",{"_index":875,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":911,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":903,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":898,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url);deprecated",{"_index":870,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":1005,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.js",{"_index":975,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp.over",{"_index":904,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":889,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.service",{"_index":656,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.ts",{"_index":659,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.ts",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":862,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":297,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stomp/rx",{"_index":213,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":206,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":519,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.js",{"_index":974,"title":{},"body":{"injectables/StompService.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":917,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stomperrors",{"_index":664,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":298,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["stompjs.stomp",{"_index":861,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/ng2",{"_index":308,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["stompjs/remote",{"_index":498,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/src/app/compatibility/stomp",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/app/compatibility/stomp.service.ts",{"_index":969,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/app/compatibility/stomp.service.ts:25",{"_index":986,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs/src/app/injectable",{"_index":295,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stompjs/src/app/rx",{"_index":647,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs@8.x.x",{"_index":972,"title":{},"body":{"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":615,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":617,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservice",{"_index":982,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stomprservice:136",{"_index":991,"title":{},"body":{"injectables/StompService.html":{}}}],["stomprservice:147",{"_index":990,"title":{},"body":{"injectables/StompService.html":{}}}],["stomprservice:195",{"_index":995,"title":{},"body":{"injectables/StompService.html":{}}}],["stomprservice:230",{"_index":1001,"title":{},"body":{"injectables/StompService.html":{}}}],["stomprservice:40",{"_index":1004,"title":{},"body":{"injectables/StompService.html":{}}}],["stompservice",{"_index":968,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompsocketstate",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate",{"_index":1080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stompstate.open",{"_index":812,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["stompsubscription",{"_index":1011,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":185,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["stop",{"_index":681,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["strange",{"_index":772,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["stray",{"_index":838,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["stream",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["stream(params",{"_index":589,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["streaming",{"_index":978,"title":{},"body":{"injectables/StompService.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":446,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":262,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":288,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":242,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":258,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subject",{"_index":824,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["subscribe",{"_index":407,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["subscribe((message",{"_index":265,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribe(queuename",{"_index":994,"title":{},"body":{"injectables/StompService.html":{}}}],["subscribed",{"_index":270,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["subscribeonlyonce",{"_index":243,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompService.html":{}}}],["subscription",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["subscription.ts",{"_index":1012,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["successful",{"_index":272,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":217,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suggests",{"_index":717,"title":{},"body":{"injectables/RxStompService.html":{}}}],["suitable",{"_index":510,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":1008,"title":{},"body":{"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":658,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["support",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":1017,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":1022,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":483,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["switch",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["syntax",{"_index":780,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["t",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":592,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Versions.html":{}}}],["target",{"_index":245,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":885,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":507,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":837,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["terminate",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["terminating",{"_index":400,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["test.destination",{"_index":1003,"title":{},"body":{"injectables/StompService.html":{}}}],["text",{"_index":460,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["thin",{"_index":1103,"title":{},"body":{"index.html":{}}}],["things",{"_index":778,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["this._customreplyqueue",{"_index":618,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._dummysubscription",{"_index":630,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable",{"_index":626,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":616,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":619,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.config",{"_index":1009,"title":{},"body":{"injectables/StompService.html":{}}}],["this.initandconnect",{"_index":1010,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":628,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":641,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":607,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.stream(params).pipe(first",{"_index":622,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":1039,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":1040,"title":{},"body":{"classes/Versions.html":{}}}],["those",{"_index":402,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["though",{"_index":376,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["three",{"_index":1100,"title":{},"body":{"index.html":{}}}],["through",{"_index":1092,"title":{},"body":{"index.html":{}}}],["time",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["times",{"_index":687,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["todo",{"_index":228,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":354,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["topic/special",{"_index":752,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["transaction",{"_index":224,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":223,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":884,"title":{},"body":{"classes/Stomp.html":{}}}],["trigger",{"_index":808,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["true",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["try",{"_index":472,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["trying",{"_index":679,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["tslint:disable",{"_index":896,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":1106,"title":{},"body":{"index.html":{}}}],["two",{"_index":773,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1127,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":912,"title":{},"body":{"classes/Stomp.html":{}}}],["types",{"_index":712,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["typescript",{"_index":290,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["typical",{"_index":490,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":316,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{}}}],["undefined",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":612,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["understand",{"_index":997,"title":{},"body":{"injectables/StompService.html":{}}}],["unhandled",{"_index":830,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["unhandledframe",{"_index":665,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["unhandledmessage",{"_index":666,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["unhandledreceipts",{"_index":667,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["unique",{"_index":790,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["unless",{"_index":833,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["unset",{"_index":437,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":244,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":282,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":283,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["unsubscribing",{"_index":277,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":363,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/closeeventhttps",{"_index":1131,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/event",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/eventhttps",{"_index":1133,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":563,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":561,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":487,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["useful",{"_index":463,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["user",{"_index":819,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["using",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["utf8",{"_index":445,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["uuid",{"_index":601,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["v${x.replace",{"_index":1041,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":1018,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":1019,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":1020,"title":{},"body":{"classes/Versions.html":{}}}],["v4",{"_index":600,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["valid",{"_index":342,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompService.html":{}}}],["var",{"_index":747,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{}}}],["variable",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1134,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":300,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"properties.html":{}}}],["versions",{"_index":106,"title":{"classes/Versions.html":{}},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.0",{"_index":475,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":906,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_0",{"_index":1037,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":1036,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":1035,"title":{},"body":{"classes/Versions.html":{}}}],["very",{"_index":776,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["via",{"_index":596,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompService.html":{}}}],["void",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"interfaces/StompSubscription.html":{}}}],["wait",{"_index":392,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["waitforreceipt",{"_index":984,"title":{},"body":{"injectables/StompService.html":{}}}],["waitforreceipt(receiptid",{"_index":1000,"title":{},"body":{"injectables/StompService.html":{}}}],["want",{"_index":735,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watch",{"_index":240,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["watch(opts",{"_index":754,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["watchforreceipt",{"_index":672,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["watchforreceipt(receiptid",{"_index":782,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["watching",{"_index":798,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["way",{"_index":358,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["web",{"_index":847,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["websocket",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":489,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":890,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":856,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketerrors",{"_index":668,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["websocketfactory",{"_index":332,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":484,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["well",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["wiring",{"_index":979,"title":{},"body":{"injectables/StompService.html":{}}}],["within",{"_index":236,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":767,"title":{},"body":{"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["working",{"_index":999,"title":{},"body":{"injectables/StompService.html":{}}}],["world",{"_index":261,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":585,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"index.html":{}}}],["ws",{"_index":891,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://127.0.0.1:15674/ws",{"_index":691,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":364,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":869,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":907,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":365,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{}}}],["yes",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompService.html":{}}}],["yield",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompService.html":{},"injectables/StompService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            isBinaryBody\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ack\n                                        \n                                \n                                \n                                        \n                                            nack\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipContentLengthHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { IMessage } from './i-message';\nimport { StompHeaders } from './stomp-headers';\nimport { Versions } from './versions';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string | undefined;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | null;\n  onmessage: ((this: IStompSocket, ev: IStompSocketMessageEvent) => any) | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | null;\n  terminate?: ((this: IStompSocket) => any) | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType: 'arraybuffer';\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n/**\n * @internal\n */\nexport interface IStomptHandlerConfig {\n  debug: debugFnType;\n  stompVersions: Versions;\n  connectHeaders: StompHeaders;\n  disconnectHeaders: StompHeaders;\n  heartbeatIncoming: number;\n  heartbeatOutgoing: number;\n  splitLargeFrames: boolean;\n  maxWebSocketChunkSize: number;\n  forceBinaryWSFrames: boolean;\n  logRawCommunication: boolean;\n  appendMissingNULLonIncoming: boolean;\n  discardWebsocketOnCommFailure: boolean;\n  onConnect: frameCallbackType;\n  onDisconnect: frameCallbackType;\n  onStompError: frameCallbackType;\n  onWebSocketClose: closeEventCallbackType;\n  onWebSocketError: wsErrorCallbackType;\n  onUnhandledMessage: messageCallbackType;\n  onUnhandledReceipt: frameCallbackType;\n  onUnhandledFrame: frameCallbackType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            retryIfDisconnected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abort\n                                        \n                                \n                                \n                                        \n                                            commit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subscribeOnlyOnce\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unsubHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\nIf header information can change over time and you are allowing automatic resubscriptions,\nconsider using a callback as the value rather than a string literal.\n             const subHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // The subHeadersCallback will be invoked before every (re)subscription.\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n             const unsubHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n             // `unsubHeadersCallback` will be invoked to get the headers.\n             sub.unsubscribe();\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   *\n   * If header information can change over time and you are allowing automatic resubscriptions,\n   * consider using a callback as the value rather than a string literal.\n   *\n   * ```typescript\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n            \n                Extends\n            \n            \n                        RxStompConfig\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                correlateErrors\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:121\n\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:167\n\n                        \n                    \n\n            \n                \n                    Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#deactivate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive RxStomp as parameter.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:22\n\n                        \n                    \n\n            \n                \n                    The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:140\n\n                        \n                    \n\n            \n                \n                    Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:81\n\n                        \n                    \n\n            \n                \n                    Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait for ever.\nMaps to: Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        correlateErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:178\n\n                        \n                    \n\n            \n                \n                    Callback invoked on every ERROR frame. If the callback returns the ID of a currently\nsubscribed destination, the frame will be emitted as an error on the corresponding\nobservable(s), terminating them.\nImportantly, since those observables are now closed, this means a re-SUBSCRIBE to\nthe erroneous destination will not be attempted during an automatic reconnection of\nthe websocket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:50\n\n                        \n                    \n\n            \n                \n                    Enable client debugging?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:131\n\n                        \n                    \n\n            \n                \n                    Maps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:147\n\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:116\n\n                        \n                    \n\n            \n                \n                    Maps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:95\n\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatIncoming\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:102\n\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:47\n\n                        \n                    \n\n            \n                \n                    Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:126\n\n                        \n                    \n\n            \n                \n                    Maps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:88\n\n                        \n                    \n\n            \n                \n                    Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: Client#reconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:111\n\n                        \n                    \n\n            \n                \n                    Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:35\n\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n       // Try only versions 1.0 and 1.1\n       rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompConfig:73\n\n                        \n                    \n\n            \n                \n                    This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n       // use a WebSocket\n       rxStompConfig.webSocketFactory= function () {\n         return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n       };\n\n       // Typical usage with SockJS\n       rxStompConfig.webSocketFactory= function () {\n         return new SockJS(\"http://broker.329broker.com/stomp\");\n       };Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRPCConfig.html":{"url":"injectables/InjectableRxStompRPCConfig.html","title":"injectable - InjectableRxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n\n            \n\n            \n                Extends\n            \n            \n                        RxStompRPCConfig\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompRPCConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompRPCConfig:23\n\n                        \n                    \n\n            \n                \n                    Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStompRPCConfig\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStompRPCConfig:27\n\n                        \n                    \n\n            \n                \n                    Setup the reply queue. See the guide for details.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompRPCConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRPCConfig extends RxStompRPCConfig {}\n\n// Backward compatibility\n/**\n * Deprecated, use {@link InjectableRxStompRPCConfig} instead\n */\nexport const InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                correlateErrors\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:167\n                        \n                    \n\n            \n                \n                    Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#deactivate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive RxStomp as parameter.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                        \n                    \n\n            \n                \n                    The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:140\n                        \n                    \n\n            \n                \n                    Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:81\n                        \n                    \n\n            \n                \n                    Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait for ever.\nMaps to: Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        correlateErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:178\n                        \n                    \n\n            \n                \n                    Callback invoked on every ERROR frame. If the callback returns the ID of a currently\nsubscribed destination, the frame will be emitted as an error on the corresponding\nobservable(s), terminating them.\nImportantly, since those observables are now closed, this means a re-SUBSCRIBE to\nthe erroneous destination will not be attempted during an automatic reconnection of\nthe websocket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:50\n                        \n                    \n\n            \n                \n                    Enable client debugging?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:131\n                        \n                    \n\n            \n                \n                    Maps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:147\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:116\n                        \n                    \n\n            \n                \n                    Maps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatIncoming\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                        \n                    \n\n            \n                \n                    Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:126\n                        \n                    \n\n            \n                \n                    Maps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                        \n                    \n\n            \n                \n                    Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: Client#reconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:111\n                        \n                    \n\n            \n                \n                    Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n       // Try only versions 1.0 and 1.1\n       rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:73\n                        \n                    \n\n            \n                \n                    This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n       // use a WebSocket\n       rxStompConfig.webSocketFactory= function () {\n         return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n       };\n\n       // Typical usage with SockJS\n       rxStompConfig.webSocketFactory= function () {\n         return new SockJS(\"http://broker.329broker.com/stomp\");\n       };Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, IFrame, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 0, which implies wait for ever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@link Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#deactivate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp]{@link RxStomp} as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n\n  /**\n   * Callback invoked on every ERROR frame. If the callback returns the ID of a currently\n   * subscribed destination, the frame will be emitted as an error on the corresponding\n   * observable(s), terminating them.\n   *\n   * Importantly, since those observables are now closed, this means a re-SUBSCRIBE to\n   * the erroneous destination will _not_ be attempted during an automatic reconnection of\n   * the websocket.\n   */\n  public correlateErrors?: (error: IFrame) => string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:29\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:55\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:66\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { filter, first, Observable, Observer, Subscription } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { IMessage, IPublishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: IPublishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: IPublishParams): Observable {\n    // defensively copy\n    const headers: StompHeaders = { ...(params.headers || {}) };\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || uuid();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ ...params, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                        \n                    \n\n            \n                \n                    Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                        \n                    \n\n            \n                \n                    Setup the reply queue. See the guide for details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n\n            \n\n            \n                Extends\n            \n            \n                        RxStompRPC\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            Create an instance, typically called by Angular Dependency Injection framework.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        InjectableRxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStompRPC\n\n                \n            \n            \n                \n                        Defined in         RxStompRPC:55\n\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStompRPC\n\n                \n            \n            \n                \n                        Defined in         RxStompRPC:66\n\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { RxStompRPC } from '@stomp/rx-stomp';\nimport { RxStompService } from './rx-stomp.service';\nimport { InjectableRxStompRPCConfig } from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  /**\n   * Create an instance, typically called by Angular Dependency Injection framework.\n   *\n   * @param rxStomp\n   * @param stompRPCConfig\n   */\n  constructor(\n    rxStomp: RxStompService,\n    @Optional() stompRPCConfig?: InjectableRxStompRPCConfig\n  ) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n            \n                Extends\n            \n            \n                        RxStomp\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                connected$\n                            \n                            \n                                    Public\n                                    Readonly\n                                connectionState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                serverHeaders$\n                            \n                            \n                                    Public\n                                    Readonly\n                                stompErrors$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledFrame$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledMessage$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledReceipts$\n                            \n                            \n                                    Public\n                                    Readonly\n                                webSocketErrors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activate\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                connected\n                            \n                            \n                                    Public\n                                    Async\n                                deactivate\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                watch\n                            \n                            \n                                    Public\n                                watchForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        activate\n                        \n                    \n                \n            \n            \n                \n                    \n                    activate()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:300\n\n                \n            \n\n\n            \n                \n                    Initiate the connection with the broker.\nIf the connection breaks, as per RxStompConfig#reconnectDelay,\nit will keep trying to reconnect.\nCall RxStomp#deactivate to disconnect and stop reconnection attempts.\nMaps to: Client#activate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(rxStompConfig: RxStompConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:268\n\n                \n            \n\n\n            \n                \n                    Set configuration. This method may be called multiple times.\nEach call will add to the existing configuration.\nExample:\n       const rxStomp = new RxStomp();\n       rxStomp.configure({\n         brokerURL: 'ws://127.0.0.1:15674/ws',\n         connectHeaders: {\n           login: 'guest',\n           passcode: 'guest'\n         },\n         heartbeatIncoming: 0,\n         heartbeatOutgoing: 20000,\n         reconnectDelay: 200,\n         debug: (msg: string): void => {\n           console.log(new Date(), msg);\n         }\n       });\n       rxStomp.activate();Maps to: Client#configure\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rxStompConfig\n                                    \n                                                RxStompConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connected\n                        \n                    \n                \n            \n            \n                \n                    \n                    connected()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:360\n\n                \n            \n\n\n            \n                \n                    It will return true if STOMP broker is connected and false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deactivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    deactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:347\n\n                \n            \n\n\n            \n                \n                    Disconnect if connected and stop auto reconnect loop.\nAppropriate callbacks will be invoked if underlying STOMP connection was connected.\nTo reactivate you can call RxStomp#activate.\nMaps to: Client#deactivate\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        publish\n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(parameters: IRxStompPublishParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:420\n\n                \n            \n\n\n            \n                \n                    Send a message to a named destination. Refer to your STOMP broker documentation for types\nand naming of destinations.\nSTOMP protocol specifies and suggests some headers and also allows broker specific headers.\nbody must be String.\nYou will need to covert the payload to string in case it is not string (e.g. JSON).\nTo send a binary message body use binaryBody parameter. It should be a\nUint8Array.\nSometimes brokers may not support binary frames out of the box.\nPlease check your broker documentation.\ncontent-length header is automatically added to the STOMP Frame sent to the broker.\nSet skipContentLengthHeader to indicate that content-length header should not be added.\nFor binary messages content-length header is always added.\nCaution: The broker will, most likely, report an error and disconnect if message body has NULL octet(s)\nand content-length header is missing.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\nIf you do not want that behavior,\nplease set retryIfDisconnected to false\nin the parameters.\nWhen false, this function will raise an error if message could not be sent immediately.\nMaps to: Client#publish\nSee: IRxStompPublishParams and IPublishParams\n       rxStomp.publish({destination: \"/queue/test\", headers: {priority: 9}, body: \"Hello, STOMP\"});\n\n       // Only destination is mandatory parameter\n       rxStomp.publish({destination: \"/queue/test\", body: \"Hello, STOMP\"});\n\n       // Skip content-length header in the frame to the broker\n       rxStomp.publish({\"/queue/test\", body: \"Hello, STOMP\", skipContentLengthHeader: true});\n\n       var binaryData = generateBinaryData(); // This need to be of type Uint8Array\n       // setting content-type header is not mandatory, however a good practice\n       rxStomp.publish({destination: '/topic/special', binaryBody: binaryData,\n                        headers: {'content-type': 'application/octet-stream'}});\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameters\n                                    \n                                                IRxStompPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watch\n                        \n                    \n                \n            \n            \n                \n                    \n                    watch(opts: IWatchParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:473\n\n                \n            \n\n\n            \n                \n                    It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, by default, it will resubscribe automatically.\nSee IWatchParams#subscribeOnlyOnce also.\nNote that messages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\nThis method in the underlying library is called subscribe.\nIn earlier version it was called subscribe here as well.\nHowever subscribe is also used by RxJS and code reads strange with two subscribe calls\nfollowing each other and both meaning very different things.\nThis method has two alternate syntax, use IWatchParams if you need to pass additional options.\nMaps to: Client#subscribe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                IWatchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watchForReceipt\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchForReceipt(receiptId: string, callback: (frame: IFrame) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:616\n\n                \n            \n\n\n            \n                \n                    STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n       // Publishing with acknowledgement\n       let receiptId = randomText();\n\n       rxStomp.watchForReceipt(receiptId, function() {\n         // Will be called after server acknowledges\n       });\n       rxStomp.publish({destination: '/topic/special', headers: {receipt: receiptId}, body: msg});Maps to: Client#watchForReceipt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    receiptId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connected$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:62\n\n                        \n                    \n\n            \n                \n                    Will trigger when connection is established.\nIt will trigger every time a (re)connection occurs.\nIf it is already connected it will trigger immediately.\nYou can safely ignore the value, as it will always be StompState.OPEN\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectionState$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:54\n\n                        \n                    \n\n            \n                \n                    Connection State\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        serverHeaders$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:77\n\n                        \n                    \n\n            \n                \n                    Provides headers from most recent connection to the server as returned by the CONNECTED frame.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will trigger for each reconnection.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        stompErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:132\n\n                        \n                    \n\n            \n                \n                    It will stream all ERROR frames received from the STOMP Broker.\nA compliant STOMP Broker will close the connection after this type of frame.\nPlease check broker specific documentation for exact behavior.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onStompError\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        unhandledFrame$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:107\n\n                        \n                    \n\n            \n                \n                    This function will be called for any unhandled frame.\nNormally you should receive anything here unless it is non compliant STOMP broker\nor an error.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onUnhandledFrame\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        unhandledMessage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:94\n\n                        \n                    \n\n            \n                \n                    This function will be called for any unhandled messages.\nIt is useful for receiving messages sent to RabbitMQ temporary queues.\nIt can also get invoked with stray messages while the server is processing\na request to unsubscribe from an endpoint.\nThis Observer will yield the received\nIMessage\nobjects.\nMaps to: Client#onUnhandledMessage\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        unhandledReceipts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:119\n\n                        \n                    \n\n            \n                \n                    STOMP brokers can be requested to notify when an operation is actually completed.\nPrefer using RxStomp#watchForReceipt.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onUnhandledReceipt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        webSocketErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:142\n\n                        \n                    \n\n            \n                \n                    It will stream all web socket errors.\nThis Observer will yield the received\nEvent.\nMaps to: Client#onWebSocketError\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        WebSocketClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                        \n                    \n\n            \n                \n                    In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n       StompJs = require('../../esm5/');\n       Stomp = StompJs.Stomp;\n       Stomp.WebSocketClass = require('websocket').w3cwebsocket;Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        client\n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n       var url = \"ws://localhost:61614/stomp\";\n       var client = Stomp.client(url);Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        over\n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n       var client = Stomp.over(function(){\n         return new WebSocket('ws://localhost:15674/ws')\n       });Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions';\nimport { CompatClient } from './compat-client';\nimport { IStompSocket } from '../types';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nThere used to be a class with the same name in @stomp/ng2-stompjs, which has been replaced by\nRxStompConfig and InjectableRxStompConfig.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:71\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:106\n                        \n                    \n\n            \n                \n                    See Client#beforeConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:26\n                        \n                    \n\n            \n                \n                    See Client#brokerURL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:81\n                        \n                    \n\n            \n                \n                    See Client#connectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:41\n                        \n                    \n\n            \n                \n                    See Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:141\n                        \n                    \n\n            \n                \n                    See Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:146\n                        \n                    \n\n            \n                \n                    See Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:86\n                        \n                    \n\n            \n                \n                    See Client#disconnectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:66\n                        \n                    \n\n            \n                \n                    See Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:51\n                        \n                    \n\n            \n                \n                    See Client#heartbeatIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:56\n                        \n                    \n\n            \n                \n                    See Client#heartbeatOutgoing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:136\n                        \n                    \n\n            \n                \n                    See Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:76\n                        \n                    \n\n            \n                \n                    See Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:151\n                        \n                    \n\n            \n                \n                    See Client#onChangeState.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:111\n                        \n                    \n\n            \n                \n                    See Client#onConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDisconnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:116\n                        \n                    \n\n            \n                \n                    See Client#onDisconnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:121\n                        \n                    \n\n            \n                \n                    See Client#onStompError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:101\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledFrame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         messageCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:91\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledMessage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledReceipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:96\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledReceipt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         closeEventCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:126\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketClose.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         wsErrorCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:131\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:46\n                        \n                    \n\n            \n                \n                    See Client#reconnectDelay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:61\n                        \n                    \n\n            \n                \n                    See Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:31\n                        \n                    \n\n            \n                \n                    See See Client#stompVersions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:36\n                        \n                    \n\n            \n                \n                    See Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport {\n  ActivationState,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType,\n} from './types';\nimport { Versions } from './versions';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * There used to be a class with the same name in `@stomp/ng2-stompjs`, which has been replaced by\n * {@link RxStompConfig} and {@link InjectableRxStompConfig}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you want to manually configure and initialize the service\nplease use StompRService\n\n            \n\n            \n                Extends\n            \n            \n                        StompRService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                    Readonly\n                                connected$\n                            \n                            \n                                    Public\n                                    Readonly\n                                connectionState$\n                            \n                            \n                                    Public\n                                    Readonly\n                                serverHeaders$\n                            \n                            \n                                    Public\n                                    Readonly\n                                stompErrors$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledFrame$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledMessage$\n                            \n                            \n                                    Public\n                                    Readonly\n                                unhandledReceipts$\n                            \n                            \n                                    Public\n                                    Readonly\n                                webSocketErrors$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                            \n                                    Public\n                                activate\n                            \n                            \n                                    Public\n                                configure\n                            \n                            \n                                    Public\n                                connected\n                            \n                            \n                                    Public\n                                    Async\n                                deactivate\n                            \n                            \n                                    Public\n                                watch\n                            \n                            \n                                    Public\n                                watchForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        disconnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    disconnect()\n                \n            \n\n\n            \n                \n                    Inherited from         StompRService\n\n                \n            \n            \n                \n                        Defined in         StompRService:147\n\n                \n            \n\n\n            \n                \n                    It will disconnect from the STOMP broker.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initAndConnect\n                        \n                    \n                \n            \n            \n                \n                    \n                    initAndConnect()\n                \n            \n\n\n            \n                \n                    Inherited from         StompRService\n\n                \n            \n            \n                \n                        Defined in         StompRService:136\n\n                \n            \n\n\n            \n                \n                    It will connect to the STOMP broker.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        publish\n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:161\n\n                \n            \n\n\n            \n                \n                    It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string | publishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    headers\n                                    \n                                                StompHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        subscribe\n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe(queueName: string, headers: StompHeaders)\n                \n            \n\n\n            \n                \n                    Inherited from         StompRService\n\n                \n            \n            \n                \n                        Defined in         StompRService:195\n\n                \n            \n\n\n            \n                \n                    It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, messages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    headers\n                                    \n                                                StompHeaders\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        waitForReceipt\n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         StompRService\n\n                \n            \n            \n                \n                        Defined in         StompRService:230\n\n                \n            \n\n\n            \n                \n                    STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n       // Publishing with acknowledgement\n       let receiptId = randomText();\n\n       rxStomp.waitForReceipt(receiptId, function() {\n         // Will be called after server acknowledges\n       });\n       rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});Maps to: Client#watchForReceipt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    receiptId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        activate\n                        \n                    \n                \n            \n            \n                \n                    \n                    activate()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:300\n\n                \n            \n\n\n            \n                \n                    Initiate the connection with the broker.\nIf the connection breaks, as per RxStompConfig#reconnectDelay,\nit will keep trying to reconnect.\nCall RxStomp#deactivate to disconnect and stop reconnection attempts.\nMaps to: Client#activate\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(rxStompConfig: RxStompConfig)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:268\n\n                \n            \n\n\n            \n                \n                    Set configuration. This method may be called multiple times.\nEach call will add to the existing configuration.\nExample:\n       const rxStomp = new RxStomp();\n       rxStomp.configure({\n         brokerURL: 'ws://127.0.0.1:15674/ws',\n         connectHeaders: {\n           login: 'guest',\n           passcode: 'guest'\n         },\n         heartbeatIncoming: 0,\n         heartbeatOutgoing: 20000,\n         reconnectDelay: 200,\n         debug: (msg: string): void => {\n           console.log(new Date(), msg);\n         }\n       });\n       rxStomp.activate();Maps to: Client#configure\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rxStompConfig\n                                    \n                                                RxStompConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connected\n                        \n                    \n                \n            \n            \n                \n                    \n                    connected()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:360\n\n                \n            \n\n\n            \n                \n                    It will return true if STOMP broker is connected and false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deactivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    deactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:347\n\n                \n            \n\n\n            \n                \n                    Disconnect if connected and stop auto reconnect loop.\nAppropriate callbacks will be invoked if underlying STOMP connection was connected.\nTo reactivate you can call RxStomp#activate.\nMaps to: Client#deactivate\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watch\n                        \n                    \n                \n            \n            \n                \n                    \n                    watch(opts: IWatchParams)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:473\n\n                \n            \n\n\n            \n                \n                    It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, by default, it will resubscribe automatically.\nSee IWatchParams#subscribeOnlyOnce also.\nNote that messages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\nThis method in the underlying library is called subscribe.\nIn earlier version it was called subscribe here as well.\nHowever subscribe is also used by RxJS and code reads strange with two subscribe calls\nfollowing each other and both meaning very different things.\nThis method has two alternate syntax, use IWatchParams if you need to pass additional options.\nMaps to: Client#subscribe\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                IWatchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watchForReceipt\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchForReceipt(receiptId: string, callback: (frame: IFrame) => void)\n                \n            \n\n\n            \n                \n                    Inherited from         RxStomp\n\n                \n            \n            \n                \n                        Defined in         RxStomp:616\n\n                \n            \n\n\n            \n                \n                    STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n       // Publishing with acknowledgement\n       let receiptId = randomText();\n\n       rxStomp.watchForReceipt(receiptId, function() {\n         // Will be called after server acknowledges\n       });\n       rxStomp.publish({destination: '/topic/special', headers: {receipt: receiptId}, body: msg});Maps to: Client#watchForReceipt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    receiptId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         StompRService\n\n                            \n                        \n                    \n                        \n                                Defined in         StompRService:40\n\n                        \n                    \n\n            \n                \n                    State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connected$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:62\n\n                        \n                    \n\n            \n                \n                    Will trigger when connection is established.\nIt will trigger every time a (re)connection occurs.\nIf it is already connected it will trigger immediately.\nYou can safely ignore the value, as it will always be StompState.OPEN\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        connectionState$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:54\n\n                        \n                    \n\n            \n                \n                    Connection State\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        serverHeaders$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:77\n\n                        \n                    \n\n            \n                \n                    Provides headers from most recent connection to the server as returned by the CONNECTED frame.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will trigger for each reconnection.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        stompErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:132\n\n                        \n                    \n\n            \n                \n                    It will stream all ERROR frames received from the STOMP Broker.\nA compliant STOMP Broker will close the connection after this type of frame.\nPlease check broker specific documentation for exact behavior.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onStompError\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        unhandledFrame$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:107\n\n                        \n                    \n\n            \n                \n                    This function will be called for any unhandled frame.\nNormally you should receive anything here unless it is non compliant STOMP broker\nor an error.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onUnhandledFrame\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        unhandledMessage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:94\n\n                        \n                    \n\n            \n                \n                    This function will be called for any unhandled messages.\nIt is useful for receiving messages sent to RabbitMQ temporary queues.\nIt can also get invoked with stray messages while the server is processing\na request to unsubscribe from an endpoint.\nThis Observer will yield the received\nIMessage\nobjects.\nMaps to: Client#onUnhandledMessage\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        unhandledReceipts$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:119\n\n                        \n                    \n\n            \n                \n                    STOMP brokers can be requested to notify when an operation is actually completed.\nPrefer using RxStomp#watchForReceipt.\nThis Observer will yield the received\nIFrame\nobjects.\nMaps to: Client#onUnhandledReceipt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        webSocketErrors$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                        \n                            \n                                Inherited from         RxStomp\n\n                            \n                        \n                    \n                        \n                                Defined in         RxStomp:142\n\n                        \n                    \n\n            \n                \n                    It will stream all web socket errors.\nThis Observer will yield the received\nEvent.\nMaps to: Client#onWebSocketError\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            unsubscribe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id associated with this subscription.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubscribe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubscribe:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unsubscribe. See Client#unsubscribe for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_0\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:10\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.1'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:14\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.2'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:18\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.2\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        protocolVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        supportedVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts\n            \n            injectable\n            StompRService\n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts\n            \n            injectable\n            StompService\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n            \n            injectable\n            InjectableRxStompConfig\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            injectable\n            InjectableRxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            variable\n            InjectableRxStompRpcConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n            \n            injectable\n            RxStompRPCService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n            \n            function\n            rxStompServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n            \n            injectable\n            RxStompService\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (44/44)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            interface\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/app/compatibility/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        rxStompServiceFactory\n                        \n                    \n                \n            \n            \n                \nrxStompServiceFactory(rxStompConfig: InjectableRxStompConfig)\n                \n            \n\n\n\n\n            \n                \n                    Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: \nfor a step-by-step guide.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rxStompConfig\n                                    \n                                                InjectableRxStompConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RxStompService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover three libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs\n@stomp/ng2-stompjs - thin wrapper over @stomp/rx-stomp\n\nThe documentation for classes indicate which library each of the classes\nbelong. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using compatibility mode your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\nng2-stompjs\nInjectable versions of rx-stomp classes:\n\nRxStompService for RxStomp\nInjectableRxStompConfig for RxStompConfig\nRxStompRPCService for RxStompRPC\nInjectableRxStompRPCConfig for RxStompRPCConfig\nrxStompServiceFactory\n\nDeprecated classes:\n\nStompRService\nStompService\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Documentation for StompJS family\n        \n            License : Apache-2.0\n        \n            Author : Deepak Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a [CloseEvent]://developer.mozilla.org/en-US/docs/Web/API/CloseEventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an [Event]://developer.mozilla.org/en-US/docs/Web/API/Eventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InjectableRxStompRpcConfig   (consolidated/.../injectable-rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InjectableRxStompRpcConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : InjectableRxStompRPCConfig\n                    \n                \n\n            \n                \n                    Deprecated, use InjectableRxStompRPCConfig instead\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
