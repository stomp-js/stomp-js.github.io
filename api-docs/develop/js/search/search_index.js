var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.363,1,1.116]],["body/interfaces/IFrame.html",[0,0.393,1,2.114,2,1.068,3,0.468,4,0.468,5,0.393,6,1.557,7,2.065,8,0.393,9,3.234,10,0.335,11,2.756,12,3.234,13,3.994,14,3.994,15,3.994,16,1.813,17,3.994,18,3.234,19,2.36,20,2.36,21,1.84,22,0.428,23,0.428,24,1.414,25,3.234,26,0.323,27,0.62,28,3.86,29,3.611,30,4.125,31,4.766,32,4.015,33,0.664,34,0.049,35,1.111,36,1.151,37,2.734,38,2.062,39,3.994,40,1.794,41,3.234,42,3.234,43,3.994,44,3.994,45,1.813,46,3.234,47,0.729,48,1.557,49,2.443,50,2.065,51,2.062,52,0.62,53,2.734,54,2.443,55,0.034,56,0.034]],["title/interfaces/IMessage.html",[0,0.363,24,0.986]],["body/interfaces/IMessage.html",[0,0.398,1,1.994,2,1.08,3,0.473,4,0.473,5,0.398,6,1.574,8,0.398,10,0.197,20,2.377,21,1.594,22,0.482,23,0.482,24,1.695,25,3.257,26,0.327,27,0.743,29,2.087,33,0.624,34,0.049,36,1.087,45,1.826,47,0.972,48,1.574,49,2.469,50,2.087,51,2.076,52,0.624,55,0.034,56,0.034,57,2.087,58,2.076,59,2.472,60,2.377,61,1.574,62,3.257,63,1.407,64,3.645,65,2.32,66,3.257,67,4.138,68,4.138,69,1.918,70,4.786,71,4.786,72,4.786,73,2.471,74,3.876,75,4.022,76,4.022,77,2.469,78,3.049,79,2.469,80,3.049,81,3.049,82,2.469,83,3.049,84,1.826,85,3.049,86,2.087]],["title/interfaces/IPublishParams.html",[0,0.363,87,1.264]],["body/interfaces/IPublishParams.html",[0,0.561,1,1.356,2,0.646,3,0.283,4,0.283,5,0.238,8,0.238,10,0.118,11,1.747,16,1.266,21,1.585,22,0.507,23,0.507,24,1.198,26,0.195,27,0.433,28,3.305,29,3.16,30,1.478,32,3.068,33,0.664,34,0.05,35,1.099,36,1.04,40,1.85,41,2.741,47,0.915,48,0.942,51,1.956,52,0.798,53,1.249,55,0.024,56,0.024,59,0.829,61,2.107,77,1.478,84,2.096,86,1.909,87,1.72,88,1.078,89,1.439,90,2.789,91,2.741,92,2.789,93,1.593,94,2.946,95,3.789,96,2.789,97,2.258,98,1.117,99,2.789,100,2.789,101,3.068,102,2.789,103,1.648,104,1.909,105,2.789,106,1.825,107,0.987,108,1.249,109,2.412,110,2.794,111,1.648,112,1.478,113,1.909,114,2.946,115,1.825,116,2.789,117,1.825,118,1.909,119,2.789,120,2.789,121,1.825,122,1.825,123,1.909,124,1.825,125,1.478,126,1.249,127,1.249,128,0.942,129,2.789,130,2.794,131,2.789,132,1.825,133,1.825,134,1.478,135,1.825,136,4.477,137,2.789,138,3.789,139,3.789,140,1.825,141,1.078,142,1.825,143,1.825,144,1.825,145,1.825,146,1.909,147,1.249,148,1.825,149,3.789,150,3.305,151,1.825,152,1.825,153,1.825,154,1.825,155,1.439,156,1.249,157,2.258,158,1.825,159,1.825,160,1.249,161,1.825,162,1.909,163,2.317,164,1.825,165,2.258,166,1.825,167,2.594,168,1.825,169,1.825,170,1.825,171,0.942,172,1.825,173,2.317,174,1.478,175,3.384,176,1.249,177,1.478,178,1.478,179,1.249,180,1.478,181,1.249,182,1.478,183,1.478,184,1.478,185,1.078,186,1.249,187,1.249,188,1.478,189,1.249,190,1.478,191,1.478,192,1.825,193,1.249,194,1.249,195,1.249,196,1.249,197,1.249,198,1.249,199,1.249,200,1.249,201,1.249,202,1.249,203,1.249,204,1.249,205,1.478,206,1.478,207,1.478,208,1.478,209,1.478,210,1.478,211,1.478,212,1.478]],["title/interfaces/IRxStompPublishParams.html",[0,0.363,213,1.906]],["body/interfaces/IRxStompPublishParams.html",[0,0.468,2,1.272,3,0.558,4,0.558,5,0.468,8,0.468,10,0.314,16,2.028,22,0.479,23,0.385,26,0.385,27,0.694,33,0.468,34,0.049,40,1.949,47,0.868,52,0.558,55,0.038,56,0.038,59,2.028,66,3.618,87,2.208,93,1.397,98,1.79,103,2.64,104,3.483,163,3.483,213,3.058,214,1.272,215,2.459,216,1.631,217,2.909,218,2.459,219,4.468,220,3.058,221,4.468,222,1.582,223,5.088,224,4.468,225,4.468,226,3.618,227,4.468,228,4.468,229,4.468,230,3.592]],["title/interfaces/ITransaction.html",[0,0.363,231,1.906]],["body/interfaces/ITransaction.html",[0,0.461,2,1.251,3,0.548,4,0.548,5,0.461,6,1.823,8,0.461,19,2.612,20,2.612,22,0.378,23,0.378,26,0.378,27,0.686,33,0.629,34,0.049,35,1.016,52,0.548,55,0.038,56,0.038,63,1.393,65,2.364,67,3.58,68,3.58,69,2.027,84,2.007,231,3.026,232,2.86,233,5.39,234,3.532,235,2.86,236,3.532,237,3.532,238,3.532,239,5.313,240,5.313,241,2.989,242,4.421,243,4.421,244,3.58,245,3.58,246,3.532,247,3.532]],["title/interfaces/IWatchParams.html",[0,0.363,248,1.906]],["body/interfaces/IWatchParams.html",[0,0.29,2,0.788,3,0.345,4,0.345,5,0.29,8,0.29,10,0.209,16,2.102,21,1.795,22,0.346,23,0.238,26,0.238,27,0.502,33,0.545,34,0.05,35,0.934,36,1.205,38,1.669,40,1.526,45,1.897,47,0.537,52,0.345,53,2.86,55,0.028,56,0.028,59,1.897,60,2.469,61,2.157,93,1.531,94,3.47,98,1.295,101,2.618,103,1.91,171,1.669,187,2.213,214,0.788,215,1.523,218,1.523,220,2.213,222,1.145,226,2.618,248,2.213,249,1.802,250,4.179,251,4.631,252,4.179,253,4.631,254,3.233,255,3.233,256,4.179,257,2.618,258,2.618,259,2.213,260,3.233,261,2.618,262,2.618,263,3.233,264,3.233,265,3.233,266,3.351,267,4.631,268,2.39,269,4.179,270,4.179,271,4.179,272,4.179,273,4.179,274,3.384,275,4.179,276,3.384,277,2.618,278,3.233,279,2.213,280,2.213,281,3.233,282,3.233,283,3.233,284,2.618,285,3.233,286,3.233,287,3.233,288,3.233,289,3.233,290,3.233,291,4.631,292,3.384,293,1.91,294,2.213,295,2.618,296,3.233,297,3.233,298,3.233,299,2.618]],["title/classes/RxStompConfig.html",[300,0.363,301,1.906]],["body/classes/RxStompConfig.html",[1,0.746,3,0.172,4,0.172,5,0.144,8,0.144,9,1.508,10,0.339,11,1.462,16,2.047,18,1.508,19,1.1,20,1.1,21,1.213,22,0.199,23,0.118,26,0.118,27,0.289,33,0.621,34,0.05,35,0.665,36,0.764,40,1.65,42,1.508,45,0.845,47,0.45,52,0.172,55,0.016,56,0.016,58,0.961,61,2.239,63,0.78,65,1.556,69,1.597,73,0.961,84,1.095,93,1.658,94,1.938,98,1.135,103,2.664,107,1.411,109,1.1,110,1.275,111,1.426,112,2.293,128,1.769,134,2.293,141,2.025,147,1.275,155,0.961,160,1.275,163,2.345,167,2.819,176,1.275,179,1.275,185,1.673,186,1.275,193,2.164,194,1.652,195,1.652,196,1.652,197,1.652,198,1.652,199,1.652,200,1.652,201,1.652,202,1.652,203,1.652,204,1.652,214,1.703,216,0.502,222,0.659,241,1.1,258,2.293,261,1.508,262,1.508,268,1.976,276,2.293,277,1.508,279,1.275,284,1.508,299,0.895,300,0.144,301,1.275,302,0.346,303,2.183,304,0.571,305,2.293,306,2.293,307,1.738,308,1.862,309,1.862,310,1.508,311,2.483,312,1.954,313,1.954,314,1.954,315,2.413,316,1.954,317,1.954,318,1.907,319,1.105,320,1.508,321,1.105,322,1.862,323,1.862,324,1.862,325,2.293,326,1.862,327,1.1,328,1.862,329,1.105,330,1.862,331,2.293,332,1.275,333,2.293,334,1.862,335,1.862,336,1.862,337,1.862,338,1.862,339,1.862,340,1.862,341,1.862,342,1.862,343,1.862,344,1.862,345,5.138,346,1.508,347,1.105,348,1.862,349,1.862,350,1.862,351,1.508,352,2.832,353,2.832,354,2.345,355,1.105,356,1.862,357,2.832,358,1.862,359,1.862,360,1.862,361,1.862,362,2.293,363,1.508,364,1.862,365,1.862,366,1.862,367,1.1,368,1.938,369,1.862,370,1.508,371,1.105,372,1.862,373,1.862,374,1.862,375,3.829,376,3.829,377,1.862,378,1.862,379,1.508,380,2.832,381,1.862,382,1.862,383,1.105,384,3.161,385,1.862,386,1.862,387,1.862,388,1.862,389,1.862,390,1.862,391,1.862,392,1.862,393,1.862,394,1.862,395,1.862,396,1.862,397,2.832,398,2.293,399,1.105,400,2.832,401,1.246,402,1.862,403,1.862,404,1.862,405,1.105,406,1.508,407,0.895,408,1.862,409,1.508,410,1.105,411,1.508,412,1.105,413,1.862,414,2.832,415,2.832,416,3.427,417,1.508,418,0.895,419,2.832,420,1.508,421,1.105,422,1.862,423,1.862,424,1.862,425,1.862,426,1.862,427,1.862,428,1.862,429,1.275,430,1.862,431,1.508,432,1.862,433,1.862,434,1.508,435,1.508,436,1.105,437,1.508,438,1.105,439,1.508,440,1.862,441,1.508,442,1.105,443,1.508,444,1.862,445,1.862,446,2.293,447,1.862,448,1.862,449,1.862,450,1.862,451,2.293,452,1.862,453,1.862,454,1.862,455,1.862,456,1.105,457,1.862,458,1.508,459,2.293,460,2.56,461,1.862,462,1.862,463,2.025,464,1.862,465,1.105,466,1.508,467,1.105,468,1.508,469,1.862,470,2.293,471,1.862,472,1.862,473,1.862,474,1.862,475,1.508,476,2.832,477,1.862,478,1.508,479,1.862,480,1.275,481,0.757,482,1.105,483,1.862,484,1.652,485,1.508,486,0.895,487,0.895,488,0.757,489,0.895,490,0.895,491,0.895,492,0.895,493,1.508,494,0.895,495,0.895,496,0.895,497,0.895,498,0.895,499,0.895,500,1.105,501,1.105,502,1.105,503,1.105,504,1.105,505,1.105,506,0.895,507,1.105]],["title/classes/RxStompRPC.html",[300,0.363,508,1.646]],["body/classes/RxStompRPC.html",[3,0.323,4,0.323,5,0.271,8,0.271,10,0.302,21,1.433,22,0.33,23,0.223,24,1.297,26,0.223,33,0.478,34,0.05,36,0.743,40,0.834,45,1.397,47,1.043,52,0.323,55,0.026,56,0.026,58,1.588,59,0.944,60,2.391,63,1.323,65,1.397,73,2.089,87,2.124,89,1.89,93,1.145,104,1.424,128,1.89,155,1.588,171,1.588,214,1.433,216,1.397,222,1.09,241,2.765,244,1.685,266,2.507,268,2.229,274,1.685,279,2.106,293,1.229,294,3.095,295,2.492,300,0.271,302,0.65,303,1.837,307,2.053,311,2.053,318,1.467,332,1.424,351,1.685,368,2.77,429,2.106,481,1.424,508,1.818,509,1.685,510,2.492,511,3.077,512,3.661,513,2.576,514,3.077,515,2.106,516,2.77,517,2.106,518,4.047,519,2.106,520,2.08,521,4.047,522,2.391,523,2.08,524,2.106,525,1.89,526,1.685,527,3.077,528,2.08,529,4.047,530,4.319,531,3.077,532,3.077,533,3.077,534,3.077,535,3.662,536,3.077,537,2.08,538,3.077,539,3.077,540,3.077,541,4.047,542,3.077,543,2.492,544,2.08,545,2.08,546,3.077,547,2.08,548,3.662,549,2.106,550,2.08,551,3.277,552,3.277,553,3.277,554,3.277,555,4.678,556,2.08,557,1.685,558,1.685,559,1.685,560,2.08,561,2.08,562,2.08,563,2.08,564,2.08,565,3.077,566,1.685,567,3.077,568,2.08,569,3.077,570,3.662,571,3.077,572,3.077,573,3.077,574,2.08,575,2.08,576,1.685,577,2.08,578,2.08,579,2.08,580,2.08,581,3.662,582,3.077,583,2.08,584,2.08,585,1.685,586,2.08,587,2.08,588,2.08,589,3.077,590,3.662,591,3.077,592,2.08,593,2.08,594,2.08,595,2.08,596,2.08,597,2.08,598,2.08,599,2.08]],["title/classes/RxStompRPCConfig.html",[300,0.363,522,1.646]],["body/classes/RxStompRPCConfig.html",[3,0.488,4,0.488,5,0.41,8,0.41,10,0.313,22,0.337,23,0.337,24,1.114,26,0.337,27,0.637,33,0.596,34,0.049,35,0.962,47,1.104,52,0.637,55,0.035,56,0.035,63,1.446,93,1.515,98,1.645,214,1.618,216,1.428,222,1.114,293,1.859,294,2.81,300,0.41,302,0.984,303,2.075,304,1.624,307,2.075,311,2.34,318,1.645,368,3.316,481,2.153,512,3.324,513,2.594,516,3.44,522,2.426,525,2.119,549,3.128,551,3.324,552,3.324,553,3.324,554,3.324,557,3.324,558,3.324,559,3.324,576,3.923,585,3.923,600,4.105,601,3.701,602,4.844,603,4.57,604,3.145,605,4.105,606,4.105,607,4.105,608,3.145,609,4.105]],["title/classes/Stomp.html",[10,0.18,300,0.363]],["body/classes/Stomp.html",[3,0.277,4,0.277,5,0.233,8,0.233,10,0.296,19,1.62,22,0.294,23,0.294,26,0.191,27,0.426,33,0.435,34,0.05,35,0.99,38,0.921,47,0.806,51,2.086,52,0.277,55,0.023,56,0.023,58,1.933,63,0.755,65,1.245,69,1.837,73,0.921,74,3.272,89,1.415,93,0.857,98,0.715,107,0.632,108,1.222,109,1.055,127,3.138,128,0.921,130,1.222,141,2.964,146,2.285,147,2.92,150,2.703,155,1.415,157,3.033,160,1.876,171,2.366,173,1.222,185,1.62,235,1.445,245,2.22,259,1.876,266,2.285,268,2.293,300,0.579,302,0.558,306,2.22,311,1.515,318,1.337,327,2.709,332,1.876,354,1.876,363,3.272,401,2.703,431,3.807,439,1.445,443,2.22,463,2.836,468,2.22,470,2.22,475,3.272,480,2.563,484,1.222,485,2.703,488,1.876,510,1.445,515,3.218,517,1.876,524,1.876,525,1.723,526,1.445,543,1.445,566,3.033,610,1.445,611,2.741,612,3.338,613,4.442,614,4.584,615,4.584,616,3.807,617,3.338,618,1.785,619,2.741,620,2.741,621,1.876,622,2.741,623,2.741,624,3.745,625,1.785,626,2.741,627,4.442,628,1.785,629,2.741,630,2.741,631,2.741,632,2.741,633,4.266,634,2.741,635,1.785,636,3.272,637,2.741,638,1.785,639,2.741,640,2.741,641,2.741,642,2.741,643,3.338,644,2.741,645,2.741,646,2.741,647,2.22,648,2.741,649,2.741,650,2.741,651,2.741,652,2.741,653,2.741,654,2.741,655,2.741,656,2.741,657,2.741,658,3.745,659,1.785,660,1.785,661,1.445,662,1.785,663,1.785,664,1.785,665,1.785,666,1.785,667,1.785,668,2.741,669,1.785,670,2.741,671,1.785,672,1.785,673,1.785,674,3.338,675,1.785,676,1.785,677,3.745,678,1.785,679,1.785,680,2.741,681,1.785,682,1.785,683,1.785,684,1.785,685,1.785,686,1.785,687,1.785,688,1.785]],["title/classes/StompConfig.html",[300,0.363,689,1.906]],["body/classes/StompConfig.html",[3,0.236,4,0.236,5,0.199,8,0.199,10,0.195,22,0.259,23,0.259,26,0.163,27,0.376,33,0.699,34,0.05,35,0.51,36,0.906,37,1.658,40,1.838,45,1.1,47,0.728,48,0.786,51,1.25,52,0.236,55,0.021,56,0.021,62,1.961,63,1.548,69,1.208,79,1.234,84,1.1,93,1.757,107,1.068,108,1.043,111,1.782,113,2.064,114,3.205,118,2.064,123,2.064,162,1.043,167,3.262,181,1.658,189,2.064,193,2.064,194,2.064,195,2.064,196,2.064,197,2.064,198,2.064,199,2.064,200,2.064,201,2.064,202,2.064,203,2.064,204,2.064,205,2.442,206,2.442,207,2.442,208,2.442,209,2.442,210,2.442,211,2.442,212,2.442,220,1.658,280,1.658,300,0.199,302,0.476,304,0.786,305,1.961,311,2.593,312,2.442,313,2.442,314,2.442,316,2.442,317,2.442,318,2.147,320,1.961,331,1.234,346,1.961,354,1.658,370,1.961,379,1.961,401,2.061,406,1.961,407,1.234,409,1.961,411,1.961,417,1.961,418,1.234,420,1.961,435,1.961,437,1.961,441,1.961,451,1.961,466,1.961,480,1.658,484,1.043,486,1.234,487,1.234,488,1.043,489,1.234,490,1.234,491,1.234,492,1.234,493,1.234,494,1.234,495,1.234,496,1.234,497,1.234,498,1.234,499,1.234,506,1.234,519,1.658,525,1.25,661,1.234,689,1.658,690,3.176,691,2.422,692,2.422,693,2.422,694,2.422,695,3.015,696,3.015,697,3.015,698,1.523,699,1.523,700,1.523,701,1.523,702,1.523,703,2.422,704,1.523,705,1.523,706,1.523,707,1.523,708,1.523,709,1.523,710,1.523,711,2.422,712,1.523,713,2.422,714,1.523,715,2.422,716,1.523,717,2.422,718,1.523,719,2.422,720,1.523,721,2.422,722,1.523,723,1.523,724,2.422,725,1.523,726,2.422,727,1.523,728,2.422,729,1.523,730,1.523,731,2.422,732,1.523,733,1.523,734,1.523,735,1.523,736,1.523,737,1.523,738,1.523,739,1.523,740,1.523,741,1.523,742,1.523,743,1.523,744,1.523,745,1.523,746,1.523]],["title/classes/StompHeaders.html",[36,0.673,300,0.363]],["body/classes/StompHeaders.html",[3,0.616,4,0.616,5,0.518,8,0.518,10,0.256,12,3.215,16,1.802,21,1.799,22,0.425,23,0.425,34,0.046,35,1.108,36,1.147,37,3.604,38,2.049,50,2.718,52,0.616,55,0.041,56,0.041,89,2.049,300,0.518,302,1.241,310,3.215,318,1.591,325,3.215,434,3.215,690,2.806,747,3.215,748,3.97,749,3.97,750,3.97,751,3.97,752,3.97,753,3.97,754,3.97,755,3.97,756,3.97,757,3.97]],["title/interfaces/StompSubscription.html",[0,0.363,758,1.906]],["body/interfaces/StompSubscription.html",[0,0.48,2,1.302,3,0.571,4,0.571,5,0.48,8,0.48,10,0.237,21,1.302,22,0.486,23,0.486,26,0.394,27,0.704,33,0.591,34,0.049,35,1.035,36,1.095,47,0.888,48,1.898,52,0.571,55,0.039,56,0.039,60,2.679,63,1.249,64,3.671,65,2.058,69,1.817,73,2.34,82,2.978,84,1.67,241,3.171,292,4.345,524,3.103,690,2.173,758,3.512,759,2.978,760,4.533,761,4.533,762,3.677]],["title/classes/Versions.html",[107,0.986,300,0.363]],["body/classes/Versions.html",[3,0.42,4,0.42,5,0.353,8,0.353,10,0.318,11,1.917,22,0.454,23,0.29,26,0.29,27,0.577,33,0.623,34,0.049,35,1.064,38,2.188,46,3.693,52,0.42,55,0.032,56,0.032,58,1.917,89,1.398,93,0.847,98,1.828,107,1.905,128,2.354,130,1.854,141,2.195,155,1.917,156,3.379,268,1.917,300,0.553,302,0.847,311,2.442,318,2.026,327,2.917,333,3.008,362,3.997,398,3.008,429,2.542,458,3.008,459,3.997,460,3.997,463,1.6,478,3.008,517,2.542,519,1.854,525,1.398,616,4.279,763,2.193,764,4.239,765,4.239,766,4.239,767,4.239,768,4.561,769,4.561,770,2.708,771,2.708,772,3.714,773,3.714,774,3.714,775,3.714,776,3.714,777,2.708,778,4.936,779,2.708,780,2.708,781,2.708,782,2.708,783,2.708,784,2.708,785,2.708,786,2.708,787,2.708,788,2.708,789,2.708,790,2.708]],["title/coverage.html",[791,3.065]],["body/coverage.html",[0,0.691,1,1.314,5,0.428,6,2.407,7,2.245,10,0.329,24,1.161,33,0.428,34,0.049,36,0.792,55,0.036,56,0.036,57,2.245,87,1.489,88,1.938,107,1.161,213,2.245,214,1.846,215,2.887,216,1.489,217,2.655,218,2.887,231,2.245,232,2.655,248,2.245,249,2.655,300,0.713,301,2.245,303,2.234,304,2.407,307,1.489,367,1.938,401,1.693,463,1.938,508,1.938,509,2.655,513,1.693,522,1.938,610,2.655,636,2.655,689,2.245,690,2.755,747,2.655,758,2.245,759,2.655,763,2.655,791,2.655,792,3.279,793,3.279,794,5.608,795,3.279,796,3.279,797,3.279,798,4.662,799,4.662,800,3.279,801,3.279,802,3.279,803,3.279,804,3.279,805,3.279,806,3.279,807,3.279,808,4.218,809,3.279,810,3.279,811,3.279,812,3.279,813,3.279,814,3.279]],["title/miscellaneous/enumerations.html",[815,1.379,816,2.709]],["body/miscellaneous/enumerations.html",[10,0.327,22,0.421,26,0.421,34,0.04,55,0.04,56,0.04,88,2.324,146,2.692,162,2.692,165,3.824,173,3.593,174,3.824,176,3.233,177,3.824,178,3.824,179,3.233,180,3.185,181,3.233,182,3.185,183,3.185,184,3.185,185,2.324,186,2.692,187,2.692,188,3.185,189,3.233,190,3.185,191,3.185,214,1.393,222,1.393,303,1.786,307,1.786,815,2.324,816,3.185,817,4.098,818,4.723,819,3.185,820,4.723]],["title/index.html",[26,0.25,821,2.333,822,2.333]],["body/index.html",[10,0.323,23,0.499,34,0.04,55,0.04,56,0.04,63,1.283,97,4.058,107,1.649,126,2.631,156,2.631,171,2.404,216,1.745,222,1.361,257,3.113,259,2.631,280,2.631,293,2.272,302,1.456,307,1.745,367,2.272,401,1.984,446,3.113,508,2.272,513,1.984,515,2.631,621,2.631,647,3.113,823,3.844,824,3.844,825,5.011,826,5.209,827,3.844,828,3.844,829,3.844,830,3.844,831,3.844,832,3.844,833,3.844,834,3.844,835,3.844,836,3.844,837,3.844,838,3.844,839,3.844,840,3.844,841,3.844,842,3.844,843,3.844,844,5.011]],["title/modules.html",[845,3.065]],["body/modules.html",[34,0.044,55,0.044,56,0.044,845,3.613]],["title/overview.html",[846,3.065]],["body/overview.html",[2,1.563,34,0.043,55,0.043,56,0.043,302,1.38,846,3.575,847,4.415,848,4.415]],["title/properties.html",[27,0.519,849,2.333]],["body/properties.html",[8,0.558,27,0.665,34,0.048,55,0.042,56,0.042,327,2.53,367,2.53,621,2.93,850,4.281,851,4.281,852,4.281,853,4.281,854,4.281,855,4.281,856,4.281,857,4.281]],["title/miscellaneous/typealiases.html",[815,1.379,858,3.345]],["body/miscellaneous/typealiases.html",[1,1.93,6,2.276,7,3.018,10,0.311,11,2.276,22,0.577,23,0.568,24,1.706,26,0.377,33,0.459,34,0.041,35,0.74,54,2.848,55,0.038,56,0.038,57,3.018,59,2.002,61,2.685,63,0.969,69,2.084,86,2.408,87,2.002,88,2.078,91,3.571,109,3.073,110,3.56,111,2.606,113,3.018,114,3.018,118,3.018,123,3.018,125,2.848,126,2.408,127,2.408,214,1.245,222,1.245,303,1.597,304,2.276,513,2.276,516,2.408,549,3.018,601,2.848,815,2.078,817,4.298,819,2.848,859,3.517,860,4.409,861,3.517,862,3.517,863,3.517,864,3.517]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.0",{"_index":850,"title":{},"body":{"properties.html":{}}}],["0.1.1",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.0']);maps",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.1",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":847,"title":{},"body":{"overview.html":{}}}],["100",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["19/20",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["2.0",{"_index":854,"title":{},"body":{"properties.html":{}}}],["2/2",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["29/29",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["43/43",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["46/46",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":848,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["_customreplyqueue",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_dummysubscription",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_not_",{"_index":507,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["_repliesobservable",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":239,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":749,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["ack",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["acknowledgement",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["activation",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":182,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":607,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":611,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["added",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":752,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":219,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["alias",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":669,"title":{},"body":{"classes/Stomp.html":{}}}],["allowing",{"_index":260,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["allows",{"_index":654,"title":{},"body":{"classes/Stomp.html":{}}}],["alternative",{"_index":639,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":653,"title":{},"body":{"classes/Stomp.html":{}}}],["another",{"_index":670,"title":{},"body":{"classes/Stomp.html":{}}}],["apache",{"_index":853,"title":{},"body":{"properties.html":{}}}],["api",{"_index":825,"title":{},"body":{"index.html":{}}}],["appendmissingnullonincoming",{"_index":203,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":772,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["associated",{"_index":760,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["assumes",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempt",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempted",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempting",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":855,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":684,"title":{},"body":{"classes/Stomp.html":{}}}],["automatic",{"_index":261,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["automatically",{"_index":284,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["available",{"_index":751,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["before",{"_index":277,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["belongs",{"_index":837,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarytype",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["brokers",{"_index":455,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["brokerurl",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["builds",{"_index":834,"title":{},"body":{"index.html":{}}}],["bye",{"_index":269,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["call.html",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["callable",{"_index":646,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["calling",{"_index":235,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["case",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":290,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":238,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":258,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":300,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["classes",{"_index":302,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":598,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":242,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":247,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":506,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":236,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":243,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":246,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":694,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":735,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":703,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":745,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxreconnectdelay",{"_index":711,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#maxreconnectdelay]{@link",{"_index":736,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":713,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":746,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":715,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":740,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":717,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":741,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":719,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":742,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":721,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":739,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":724,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":738,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":726,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":743,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":728,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":744,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnecttimemode",{"_index":731,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnecttimemode]{@link",{"_index":737,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":761,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":762,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#websocketfactory",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":626,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":645,"title":{},"body":{"classes/Stomp.html":{}}}],["client.js",{"_index":660,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closed",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent]://developer.mozilla.org/en",{"_index":861,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":240,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":659,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":636,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":680,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["compliant",{"_index":445,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":842,"title":{},"body":{"index.html":{}}}],["config",{"_index":600,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.js",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["config.ts",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:100",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:104",{"_index":723,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:107",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:109",{"_index":720,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:114",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:119",{"_index":714,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:123",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:124",{"_index":716,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:128",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:129",{"_index":718,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:133",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:134",{"_index":725,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:138",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:139",{"_index":727,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:143",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:144",{"_index":709,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:149",{"_index":702,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:152",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:154",{"_index":704,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:159",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:179",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:190",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":604,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:24",{"_index":699,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":608,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:29",{"_index":733,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:34",{"_index":734,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:39",{"_index":701,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:44",{"_index":729,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:49",{"_index":710,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:54",{"_index":730,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:59",{"_index":707,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:60",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:64",{"_index":708,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:69",{"_index":732,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:74",{"_index":706,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:79",{"_index":698,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:83",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:84",{"_index":712,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:89",{"_index":700,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:94",{"_index":705,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:99",{"_index":722,"title":{},"body":{"classes/StompConfig.html":{}}}],["configuration",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connect",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["connected",{"_index":630,"title":{},"body":{"classes/Stomp.html":{}}}],["connectheaders",{"_index":195,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["connectiontimeout",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["consider",{"_index":264,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["console.log(new",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["console.warn",{"_index":683,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":860,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../rx",{"_index":819,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../types.ts",{"_index":817,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/rx",{"_index":214,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":610,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":638,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":618,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":628,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":690,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":88,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":763,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":777,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":779,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":780,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":771,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":781,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":783,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":782,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":266,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["constructor",{"_index":519,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["constructor(public",{"_index":787,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":520,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(versions",{"_index":770,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":753,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copied",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copy",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlateerrors",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["correlation",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":590,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":827,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["corresponds",{"_index":691,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":831,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":791,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":754,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["created",{"_index":234,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["creates",{"_index":629,"title":{},"body":{"classes/Stomp.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["currently",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["custom",{"_index":584,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["data",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["date",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["deactivating",{"_index":183,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":193,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declare",{"_index":662,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":776,"title":{},"body":{"classes/Versions.html":{}}}],["deepak",{"_index":856,"title":{},"body":{"properties.html":{}}}],["default",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["defaultmessagessubscription",{"_index":589,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":599,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":256,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["defensively",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defined",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["delay",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependency",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["dependent",{"_index":255,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":613,"title":{},"body":{"classes/Stomp.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["destination",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["details",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["development",{"_index":828,"title":{},"body":{"index.html":{}}}],["disable",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":204,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnectheaders",{"_index":196,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnection",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["docs",{"_index":826,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":688,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["documents",{"_index":840,"title":{},"body":{"index.html":{}}}],["dom",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":225,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["during",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":280,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{},"index.html":{}}}],["effect",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":773,"title":{},"body":{"classes/Versions.html":{}}}],["emitted",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["enable",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enqueued",{"_index":224,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ensure",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["entry",{"_index":844,"title":{},"body":{"index.html":{}}}],["enum",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":816,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":620,"title":{},"body":{"classes/Stomp.html":{}}}],["erroneous",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["error",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["established",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["etc",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["event]://developer.mozilla.org/en",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["example",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["examples",{"_index":601,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["experimental",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["exponential",{"_index":191,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["factory",{"_index":612,"title":{},"body":{"classes/Stomp.html":{}}}],["false",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["family",{"_index":851,"title":{},"body":{"properties.html":{}}}],["feature",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["fetch",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":692,"title":{},"body":{"classes/StompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":593,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["flag",{"_index":283,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["following",{"_index":832,"title":{},"body":{"index.html":{}}}],["forcebinarywsframes",{"_index":201,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["forever",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.js",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frames",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["function",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":748,"title":{},"body":{"classes/StompHeaders.html":{}}}],["generated",{"_index":841,"title":{},"body":{"index.html":{}}}],["generating",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getting",{"_index":821,"title":{"index.html":{}},"body":{}}],["guide",{"_index":516,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["guide](/guide/rx",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["guides",{"_index":838,"title":{},"body":{"index.html":{}}}],["hack",{"_index":668,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":275,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handshake",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{}}}],["headers.js",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["headers.ts",{"_index":747,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":757,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":591,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":596,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":197,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":198,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":643,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":686,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":241,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["identifier",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#body",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["iframe#headers",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/StompHeaders.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["impact",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":510,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implies",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["important",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["importantly",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["inactive",{"_index":184,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":756,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["information",{"_index":257,"title":{},"body":{"interfaces/IWatchParams.html":{},"index.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"overview.html":{}}}],["internal",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":295,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["interval",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoked",{"_index":276,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["invoking",{"_index":289,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":87,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":213,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issued",{"_index":296,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["istompthandlerconfig",{"_index":192,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":231,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":248,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":687,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":678,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":679,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":288,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["kumar",{"_index":857,"title":{},"body":{"properties.html":{}}}],["large",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["length",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":755,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":833,"title":{},"body":{"index.html":{}}}],["library",{"_index":836,"title":{},"body":{"index.html":{}}}],["license",{"_index":852,"title":{},"body":{"properties.html":{}}}],["line:variable",{"_index":666,"title":{},"body":{"classes/Stomp.html":{}}}],["linear",{"_index":190,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["link",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["literal",{"_index":265,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["located",{"_index":632,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":202,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":615,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["maps",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["marks",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matching",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["maxreconnectdelay",{"_index":695,"title":{},"body":{"classes/StompConfig.html":{}}}],["maxwebsocketchunksize",{"_index":200,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":594,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.js",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":227,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["messaging",{"_index":514,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{}}}],["methods",{"_index":517,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":815,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modes",{"_index":188,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["modules",{"_index":845,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":647,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":671,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["nack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["navigating",{"_index":823,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["needed",{"_index":652,"title":{},"body":{"classes/Stomp.html":{}}}],["new",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":619,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["now",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["npm",{"_index":829,"title":{},"body":{"index.html":{}}}],["null",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["number",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["object",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":294,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["observable(s",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observable.create((rpcobserver",{"_index":588,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observables",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observer",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":287,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["once",{"_index":648,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":696,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":205,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":206,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["one",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onmessage",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":207,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":212,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":210,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":211,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":208,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":209,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["open",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["options",{"_index":220,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":644,"title":{},"body":{"classes/Stomp.html":{}}}],["outgoing",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":259,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":637,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":775,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":846,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":849,"title":{"properties.html":{}},"body":{}}],["packets",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["parameter",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["params",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":218,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{}}}],["passcode",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["passing",{"_index":655,"title":{},"body":{"classes/Stomp.html":{}}}],["pipe",{"_index":592,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":515,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["point",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["preferred",{"_index":843,"title":{},"body":{"index.html":{}}}],["present",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["primitives",{"_index":835,"title":{},"body":{"index.html":{}}}],["prior",{"_index":672,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["probably",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["procedure",{"_index":512,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["promise",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["protocol",{"_index":778,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":627,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":768,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":663,"title":{},"body":{"classes/Stomp.html":{}}}],["public",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["publish",{"_index":217,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["published",{"_index":228,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishparams",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":585,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/rpc",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuename",{"_index":273,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rabbitmq",{"_index":606,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["raw",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re",{"_index":262,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["re)connection",{"_index":282,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["re)subscription",{"_index":278,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["readystate",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["receive",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{}}}],["reconnect",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reconnectdelay",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":649,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":185,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["reconnectiontimemode",{"_index":189,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["reconnecttimemode",{"_index":697,"title":{},"body":{"classes/StompConfig.html":{}}}],["reestablished",{"_index":229,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["released",{"_index":830,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remains",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["remarks",{"_index":675,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":511,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":614,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["repliesobservable",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":587,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":602,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["require('../../esm5",{"_index":622,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":664,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket;deprecated",{"_index":625,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["resubscribe",{"_index":285,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["results",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retry",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":223,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":268,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["returns",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["rpc",{"_index":513,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(params",{"_index":527,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts",{"_index":509,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:32",{"_index":523,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:58",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:69",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":595,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":216,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":293,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"index.html":{}}}],["rxstomp",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#configure",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate]{@link",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":221,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":230,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":298,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.watch",{"_index":272,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp]{@link",{"_index":505,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":301,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#websocketfactory",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":508,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":522,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstompstate",{"_index":818,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["same",{"_index":693,"title":{},"body":{"classes/StompConfig.html":{}}}],["scripts",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":244,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{}}}],["send(data",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sent",{"_index":750,"title":{},"body":{"classes/StompHeaders.html":{}}}],["server",{"_index":631,"title":{},"body":{"classes/Stomp.html":{}}}],["service",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["set",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["setting",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":609,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":603,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["similar",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["skipcontentlengthheader",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specified",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specify",{"_index":642,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":199,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["standard",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["started",{"_index":822,"title":{"index.html":{}},"body":{}}],["state",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":820,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":616,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":640,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":681,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":673,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":667,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url);deprecated",{"_index":635,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.js",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp.over",{"_index":674,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":656,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.ts",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":624,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp/rx",{"_index":222,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":215,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":689,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":621,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"properties.html":{}}}],["stompjs.stomp",{"_index":623,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/remote",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomprpcconfig",{"_index":521,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stompsocketstate",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompsubscription",{"_index":758,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":194,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["stream",{"_index":518,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":271,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":297,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":267,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribe",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["subscribe((message",{"_index":274,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribed",{"_index":279,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["subscribeonlyonce",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["subscription.ts",{"_index":759,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscriptions",{"_index":263,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["successful",{"_index":281,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":226,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":605,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["support",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":764,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":769,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["target",{"_index":254,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":651,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["terminate",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["terminating",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["text",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["this._customreplyqueue",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._dummysubscription",{"_index":586,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp",{"_index":583,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":597,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.stream(params).pipe(first",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":788,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":789,"title":{},"body":{"classes/Versions.html":{}}}],["those",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["though",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["through",{"_index":824,"title":{},"body":{"index.html":{}}}],["time",{"_index":187,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":237,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":233,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":232,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":650,"title":{},"body":{"classes/Stomp.html":{}}}],["true",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["try",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tslint:disable",{"_index":665,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":839,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":858,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":682,"title":{},"body":{"classes/Stomp.html":{}}}],["types.js",{"_index":661,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["typescript",{"_index":299,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["typical",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["undefined",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["unset",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":291,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":292,"title":{},"body":{"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}}}],["unsubscribing",{"_index":286,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/closeeventhttps",{"_index":862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/event",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/eventhttps",{"_index":864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":504,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["used",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["user",{"_index":641,"title":{},"body":{"classes/Stomp.html":{}}}],["using",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["utf8",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":790,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":765,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":766,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":767,"title":{},"body":{"classes/Versions.html":{}}}],["v4",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["valid",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["values",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["var",{"_index":633,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"properties.html":{}}}],["versions",{"_index":107,"title":{"classes/Versions.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.1",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":676,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.js",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["versions.v1_0",{"_index":786,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":785,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":784,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["void",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["wait",{"_index":186,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["want",{"_index":774,"title":{},"body":{"classes/Versions.html":{}}}],["watch",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["way",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":657,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":617,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["within",{"_index":245,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":685,"title":{},"body":{"classes/Stomp.html":{}}}],["world",{"_index":270,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["ws",{"_index":658,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":634,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":677,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["yield",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            isBinaryBody\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended IFrame, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ack\n                                        \n                                \n                                \n                                        \n                                            nack\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { IFrame } from './i-frame.js';\nimport { StompHeaders } from './stomp-headers.js';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link IFrame}, you can access [headers]{@link IFrame#headers}\n * and [body]{@link IFrame#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipContentLengthHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { IFrame } from './i-frame.js';\nimport type { IMessage } from './i-message.js';\nimport { StompHeaders } from './stomp-headers.js';\nimport { Versions } from './versions.js';\n\n/**\n * This callback will receive a `string` as a parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = ((frame: IFrame) => void) | (() => void);\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default, a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string | undefined;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  url: string;\n  onclose: ((ev?: any) => any) | undefined | null;\n  onerror: ((ev: any) => any) | undefined | null;\n  onmessage: ((ev: IStompSocketMessageEvent) => any) | undefined | null;\n  onopen: ((ev?: any) => any) | undefined | null;\n  terminate?: (() => any) | undefined | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType?: string;\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n/**\n * Possible reconnection wait time modes\n */\nexport enum ReconnectionTimeMode {\n  LINEAR,\n  EXPONENTIAL\n}\n\n/**\n * @internal\n */\nexport interface IStomptHandlerConfig {\n  debug: debugFnType;\n  stompVersions: Versions;\n  connectHeaders: StompHeaders;\n  disconnectHeaders: StompHeaders;\n  heartbeatIncoming: number;\n  heartbeatOutgoing: number;\n  splitLargeFrames: boolean;\n  maxWebSocketChunkSize: number;\n  forceBinaryWSFrames: boolean;\n  logRawCommunication: boolean;\n  appendMissingNULLonIncoming: boolean;\n  discardWebsocketOnCommFailure: boolean;\n  onConnect: frameCallbackType;\n  onDisconnect: frameCallbackType;\n  onStompError: frameCallbackType;\n  onWebSocketClose: closeEventCallbackType;\n  onWebSocketError: wsErrorCallbackType;\n  onUnhandledMessage: messageCallbackType;\n  onUnhandledReceipt: frameCallbackType;\n  onUnhandledFrame: frameCallbackType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            retryIfDisconnected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abort\n                                        \n                                \n                                \n                                        \n                                            commit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subscribeOnlyOnce\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unsubHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\nIf header information can change over time, and you are allowing automatic re-subscriptions,\nconsider using a callback as the value rather than a string literal.\n             const subHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // The subHeadersCallback will be invoked before every (re)subscription.\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n             const unsubHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n             // `unsubHeadersCallback` will be invoked to get the headers.\n             sub.unsubscribe();\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   *\n   * If header information can change over time, and you are allowing automatic re-subscriptions,\n   * consider using a callback as the value rather than a string literal.\n   *\n   * ```typescript\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of these calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                correlateErrors\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:133\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:179\n                        \n                    \n\n            \n                \n                    Callback, invoked before attempting connection to the STOMP broker.\nYou can change the configuration of the rxStomp, which will impact the immediate connecting.\nIt is valid to call RxStomp#deactivate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case, connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive RxStomp as parameter.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                        \n                    \n\n            \n                \n                    The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:152\n                        \n                    \n\n            \n                \n                    Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:93\n                        \n                    \n\n            \n                \n                    Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait forever.\nMaps to: Client#connectionTimeout.\nCaution: This feature is experimental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        correlateErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:190\n                        \n                    \n\n            \n                \n                    Callback invoked on every ERROR frame. If the callback returns the ID of a currently\nsubscribed destination, the frame will be emitted as an error on the corresponding\nobservable(s), terminating them.\nImportantly, since those observables are now closed, this means a re-SUBSCRIBE to\nthe erroneous destination will not be attempted during an automatic reconnection of\nthe websocket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:60\n                        \n                    \n\n            \n                \n                    Enable client debugging\nExample:\n    debug: (msg: string): void => {\n      console.log(new Date(), msg);\n    },\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:143\n                        \n                    \n\n            \n                \n                    Maps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:159\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:128\n                        \n                    \n\n            \n                \n                    Maps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:107\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatIncoming\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:114\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                        \n                    \n\n            \n                \n                    Set it to log the actual raw communication with the broker.\nWhen unset, it logs only the headers of the parsed frames.\nChange in this takes effect from the next broker reconnection.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:138\n                        \n                    \n\n            \n                \n                    Maps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:100\n                        \n                    \n\n            \n                \n                    Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: Client#reconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:123\n                        \n                    \n\n            \n                \n                    Enable a non-standards compliant mode of splitting outgoing large text packets.\nSee Client#splitLargeFrames for details.\nProbably, only Java Spring based brokers support this mode.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during STOMP handshake. By default, versions 1.2, 1.1, and 1.0 are attempted.\nExample:\n       // Try only versions 1.1 and 1.0\n       rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:83\n                        \n                    \n\n            \n                \n                    This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n       // use a WebSocket\n       rxStompConfig.webSocketFactory= function () {\n         return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n       };\n\n       // Typical usage with SockJS\n       rxStompConfig.webSocketFactory= function () {\n         return new SockJS(\"http://broker.329broker.com/stomp\");\n       };Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, IFrame, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of these calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default, versions `1.2`, `1.1`, and `1.0` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.1 and 1.0\n   *        rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs only the headers of the parsed frames.\n   *\n   * Change in this takes effect from the next broker reconnection.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * Enable client debugging\n   *\n   * Example:\n   *\n   * ```typescript\n   *     debug: (msg: string): void => {\n   *       console.log(new Date(), msg);\n   *     },\n   * ```\n   */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 0, which implies wait forever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   *\n   * Caution: This feature is experimental.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@link Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable a non-standards compliant mode of splitting outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Probably, only Java Spring based brokers support this mode.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked before attempting connection to the STOMP broker.\n   *\n   * You can change the configuration of the rxStomp, which will impact the immediate connecting.\n   * It is valid to call [RxStomp#deactivate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case, connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp]{@link RxStomp} as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n\n  /**\n   * Callback invoked on every ERROR frame. If the callback returns the ID of a currently\n   * subscribed destination, the frame will be emitted as an error on the corresponding\n   * observable(s), terminating them.\n   *\n   * Importantly, since those observables are now closed, this means a re-SUBSCRIBE to\n   * the erroneous destination will _not_ be attempted during an automatic reconnection of\n   * the websocket.\n   */\n  public correlateErrors?: (error: IFrame) => string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:32\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:58\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:69\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { filter, first, Observable, Observer, Subscription } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { IMessage, IPublishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp.js';\nimport {\n  RxStompRPCConfig,\n  setupReplyQueueFnType,\n} from './rx-stomp-rpc-config.js';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: IPublishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: IPublishParams): Observable {\n    // defensively copy\n    const headers: StompHeaders = { ...(params.headers || {}) };\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || uuid();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ ...params, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                RPC Config. For examples see the guide.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                        \n                    \n\n            \n                \n                    Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                        \n                    \n\n            \n                \n                    Setup the reply queue. See the guide for details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        WebSocketClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                        \n                    \n\n            \n                \n                    In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n       StompJs = require('../../esm5/');\n       Stomp = StompJs.Stomp;\n       Stomp.WebSocketClass = require('websocket').w3cwebsocket;Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        client\n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n       var url = \"ws://localhost:61614/stomp\";\n       var client = Stomp.client(url);Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        over\n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n       var client = Stomp.over(function(){\n         return new WebSocket('ws://localhost:15674/ws')\n       });Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions.js';\nimport { CompatClient } from './compat-client.js';\nimport { IStompSocket } from '../types.js';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxReconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectTimeMode\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:79\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:114\n                        \n                    \n\n            \n                \n                    See Client#beforeConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:24\n                        \n                    \n\n            \n                \n                    See Client#brokerURL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:89\n                        \n                    \n\n            \n                \n                    See Client#connectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:39\n                        \n                    \n\n            \n                \n                    See Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:149\n                        \n                    \n\n            \n                \n                    See Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:154\n                        \n                    \n\n            \n                \n                    See Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:94\n                        \n                    \n\n            \n                \n                    See Client#disconnectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:74\n                        \n                    \n\n            \n                \n                    See Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:59\n                        \n                    \n\n            \n                \n                    See Client#heartbeatIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:64\n                        \n                    \n\n            \n                \n                    See Client#heartbeatOutgoing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:144\n                        \n                    \n\n            \n                \n                    See Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxReconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:49\n                        \n                    \n\n            \n                \n                    See Client#maxReconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:84\n                        \n                    \n\n            \n                \n                    See Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:159\n                        \n                    \n\n            \n                \n                    See Client#onChangeState.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:119\n                        \n                    \n\n            \n                \n                    See Client#onConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDisconnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:124\n                        \n                    \n\n            \n                \n                    See Client#onDisconnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:129\n                        \n                    \n\n            \n                \n                    See Client#onStompError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:109\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledFrame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         messageCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:99\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledMessage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledReceipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:104\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledReceipt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         closeEventCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:134\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketClose.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         wsErrorCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:139\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:44\n                        \n                    \n\n            \n                \n                    See Client#reconnectDelay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectTimeMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReconnectionTimeMode\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:54\n                        \n                    \n\n            \n                \n                    See Client#reconnectTimeMode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:69\n                        \n                    \n\n            \n                \n                    See Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:29\n                        \n                    \n\n            \n                \n                    See Client#stompVersions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:34\n                        \n                    \n\n            \n                \n                    See Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\nimport {\n  ActivationState,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  ReconnectionTimeMode,\n  wsErrorCallbackType,\n} from './types.js';\nimport { Versions } from './versions.js';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#maxReconnectDelay]{@link Client#maxReconnectDelay}\n   */\n  public maxReconnectDelay?: number;\n\n  /**\n   * See [Client#reconnectTimeMode]{@link Client#reconnectTimeMode}\n   */\n  public reconnectTimeMode?: ReconnectionTimeMode;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            unsubscribe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id associated with this subscription.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubscribe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubscribe:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unsubscribe. See Client#unsubscribe for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\nYou will be creating an instance of this class if you want to override\nsupported versions to be declared during STOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_0\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:10\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.1'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:14\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.2'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:18\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.2\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        protocolVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        supportedVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n   *\n   * You will be creating an instance of this class if you want to override\n   * supported versions to be declared during STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (46/46)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            interface\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            ReconnectionTimeMode   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ReconnectionTimeMode\n                    \n                \n                    \n                        \n                            Possible reconnection wait time modes\n\n                        \n                    \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                 EXPONENTIAL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover the following libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs with RxJS primitives\n\nThe documentation for classes also indicates which library each of the classes\n belongs. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using the compatibility mode, your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Documentation for StompJS family\n        \n            License : Apache-2.0\n        \n            Author : Deepak Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a [CloseEvent]://developer.mozilla.org/en-US/docs/Web/API/CloseEventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as a parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an [Event]://developer.mozilla.org/en-US/docs/Web/API/Eventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    For examples see the guide.\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
