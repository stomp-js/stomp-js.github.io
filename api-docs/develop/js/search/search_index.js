var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.409,1,1.16]],["body/interfaces/IFrame.html",[0,0.445,1,2.204,2,1.123,3,0.445,4,0.445,5,0.375,6,1.615,7,2.125,8,0.445,9,3.31,10,0.422,11,2.847,12,3.31,13,4.072,14,4.072,15,4.072,16,1.885,17,4.072,18,3.31,19,2.434,20,2.434,21,1.928,22,0.495,23,0.495,24,1.485,25,3.31,26,0.308,27,0.688,28,3.946,29,3.703,30,4.215,31,4.854,32,4.103,33,0.631,34,0.047,35,1.199,36,1.232,37,2.809,38,1.885,39,4.072,40,1.663,41,3.31,42,3.31,43,4.072,44,4.072,45,1.885,46,3.31,47,0.688,48,1.615,49,2.504,50,2.125,51,2.134,52,0.589,53,2.434,54,2.504,55,0.033,56,0.033]],["title/interfaces/IMessage.html",[0,0.409,24,1.031]],["body/interfaces/IMessage.html",[0,0.45,1,2.079,2,1.135,3,0.45,4,0.45,5,0.379,6,1.632,8,0.45,10,0.248,20,2.451,21,1.672,22,0.558,23,0.558,24,1.777,25,3.334,26,0.312,27,0.824,29,2.147,33,0.593,34,0.047,36,1.164,45,1.898,47,0.916,48,1.632,49,2.531,50,2.147,51,2.149,52,0.593,55,0.033,56,0.033,57,2.147,58,2.149,59,2.273,60,2.451,61,1.632,62,3.334,63,1.494,64,3.728,65,2.407,66,3.334,67,4.228,68,4.228,69,1.777,70,4.874,71,4.874,72,4.874,73,2.554,74,3.962,75,4.101,76,4.101,77,2.531,78,3.114,79,2.531,80,3.114,81,3.114,82,2.531,83,3.114,84,1.683,85,3.114,86,2.147]],["title/interfaces/IPublishParams.html",[0,0.409,87,1.308]],["body/interfaces/IPublishParams.html",[0,0.628,1,1.397,2,0.665,3,0.264,4,0.264,5,0.222,8,0.264,10,0.145,11,1.784,16,1.295,21,1.65,22,0.582,23,0.582,24,1.241,26,0.183,27,0.473,28,3.347,29,3.219,30,1.482,32,3.103,33,0.628,34,0.048,35,1.182,36,1.103,40,1.702,41,2.767,47,0.853,48,0.956,51,2.001,52,0.759,53,1.09,55,0.023,56,0.023,59,0.749,61,2.158,77,1.482,84,1.916,86,1.929,87,1.767,88,1.09,89,1.295,90,2.798,91,2.767,92,2.798,93,1.482,94,2.997,95,3.817,96,2.798,97,2.274,98,1.148,99,2.798,100,2.798,101,3.103,102,2.798,103,1.672,104,1.929,105,2.798,106,1.824,107,1.02,108,1.258,109,2.461,110,2.84,111,1.466,112,1.482,113,1.929,114,2.997,115,1.824,116,2.798,117,1.824,118,1.929,119,2.798,120,2.798,121,1.824,122,1.824,123,1.929,124,1.824,125,1.482,126,1.258,127,1.258,128,0.956,129,2.798,130,2.84,131,2.798,132,1.824,133,1.824,134,1.482,135,1.824,136,3.677,137,2.798,138,3.817,139,3.817,140,1.824,141,1.09,142,1.824,143,1.824,144,1.824,145,1.824,146,1.929,147,1.258,148,1.824,149,3.817,150,3.347,151,1.824,152,1.824,153,1.824,154,1.824,155,1.295,156,1.258,157,2.274,158,1.824,159,1.824,160,1.258,161,1.824,162,1.929,163,2.347,164,1.824,165,2.274,166,1.824,167,2.461,168,1.824,169,1.824,170,1.824,171,0.956,172,1.824,173,2.633,174,1.482,175,3.817,176,1.258,177,1.482,178,1.482,179,1.258,180,1.482,181,1.258,182,1.482,183,1.482,184,1.482,185,1.09,186,1.258,187,1.258,188,1.482,189,1.258,190,1.482,191,1.482,192,0.956,193,1.482,194,1.09,195,1.258,196,1.258,197,1.672,198,1.929,199,1.929,200,1.824,201,1.258,202,1.258,203,1.258,204,1.258,205,1.258,206,1.824,207,1.258,208,1.482,209,1.258,210,1.258,211,1.258,212,1.258,213,1.258,214,1.258,215,1.482,216,1.482,217,1.482,218,1.482,219,1.482,220,1.482,221,1.482,222,1.482]],["title/interfaces/IRxStompPublishParams.html",[0,0.409,223,1.949]],["body/interfaces/IRxStompPublishParams.html",[0,0.529,2,1.335,3,0.529,4,0.529,5,0.445,8,0.529,10,0.395,16,2.106,22,0.554,23,0.445,26,0.367,27,0.769,33,0.445,34,0.047,40,1.805,47,0.818,52,0.529,55,0.037,56,0.037,59,1.867,66,3.698,87,2.291,93,1.307,98,1.867,103,2.719,104,3.571,163,3.571,223,3.138,224,1.335,225,2.525,226,1.695,227,2.977,228,2.525,229,4.55,230,3.138,231,4.55,232,1.659,233,5.177,234,4.55,235,4.55,236,3.698,237,4.55,238,4.55,239,4.55,240,3.662]],["title/interfaces/ITransaction.html",[0,0.409,241,1.949]],["body/interfaces/ITransaction.html",[0,0.524,2,1.321,3,0.524,4,0.524,5,0.441,6,1.899,8,0.524,19,2.701,20,2.701,22,0.441,23,0.441,26,0.363,27,0.764,33,0.599,34,0.047,35,1.1,52,0.524,55,0.036,56,0.036,63,1.482,65,2.388,67,3.674,68,3.674,69,1.881,84,1.855,241,3.117,242,2.946,243,5.49,244,3.624,245,2.946,246,3.624,247,5.413,248,5.413,249,3.082,250,4.52,251,4.52,252,3.674,253,3.674,254,3.624,255,3.624]],["title/interfaces/IWatchParams.html",[0,0.409,256,1.949]],["body/interfaces/IWatchParams.html",[0,0.329,2,0.83,3,0.329,4,0.329,5,0.277,8,0.329,10,0.263,16,2.184,21,1.882,22,0.402,23,0.277,26,0.228,27,0.558,33,0.519,34,0.048,35,1.011,36,1.29,38,1.529,40,1.417,45,1.973,47,0.509,52,0.329,53,2.547,55,0.027,56,0.027,59,1.749,60,2.547,61,2.234,93,1.432,94,3.559,98,1.356,101,2.685,103,1.974,171,1.731,187,2.278,224,0.83,225,1.571,228,1.571,230,2.278,232,1.204,236,2.685,256,2.278,257,1.851,258,4.262,259,4.719,260,4.262,261,4.719,262,3.303,263,3.303,264,4.262,265,2.685,266,2.685,267,2.278,268,3.303,269,2.685,270,2.685,271,3.303,272,3.303,273,3.303,274,2.979,275,4.719,276,2.184,277,4.262,278,4.262,279,4.262,280,4.262,281,4.262,282,3.464,283,4.262,284,3.464,285,2.685,286,3.303,287,2.278,288,2.278,289,3.303,290,3.303,291,3.303,292,2.685,293,3.303,294,3.303,295,3.303,296,3.303,297,3.303,298,3.303,299,4.719,300,3.464,301,1.974,302,2.278,303,2.685,304,3.303,305,3.303,306,3.303,307,2.685]],["title/classes/RxStompConfig.html",[308,0.283,309,1.949]],["body/classes/RxStompConfig.html",[1,0.784,3,0.164,4,0.164,5,0.138,8,0.164,9,1.552,10,0.427,11,1.519,16,2.128,18,1.552,19,1.141,20,1.141,21,1.277,22,0.232,23,0.138,26,0.114,27,0.323,33,0.59,34,0.047,35,0.722,36,0.821,40,1.532,42,1.552,45,0.884,47,0.427,52,0.164,55,0.015,56,0.015,58,1.001,61,2.319,63,0.832,65,1.621,69,1.483,73,1.001,84,1.014,93,1.55,94,1.998,98,1.189,103,2.747,107,1.483,109,1.141,110,1.317,111,1.295,112,2.356,128,1.835,134,2.356,141,2.093,147,1.317,155,0.884,160,1.317,163,2.415,167,2.512,176,1.317,179,1.317,185,1.732,186,1.317,194,1.732,195,1.998,198,1.998,201,2.229,202,1.704,203,1.704,204,1.704,205,1.704,207,1.704,209,1.704,210,1.704,211,1.704,212,1.704,213,1.704,214,1.704,224,1.787,226,0.526,232,0.696,249,1.141,266,2.356,269,1.552,270,1.552,276,1.81,284,2.356,285,1.552,287,1.317,292,1.552,307,0.923,308,0.114,309,1.317,310,0.326,311,2.268,312,0.595,313,2.356,314,2.356,315,1.81,316,1.91,317,1.91,318,1.552,319,2.284,320,2.009,321,2.009,322,2.009,323,2.472,324,2.009,325,2.009,326,1.768,327,1.135,328,1.552,329,1.135,330,1.91,331,1.91,332,1.91,333,2.356,334,1.91,335,1.141,336,1.91,337,1.135,338,1.91,339,2.356,340,1.317,341,2.356,342,1.91,343,1.91,344,1.91,345,1.91,346,1.91,347,1.91,348,1.91,349,1.91,350,1.91,351,1.91,352,1.91,353,5.232,354,1.552,355,1.135,356,1.91,357,1.91,358,1.91,359,1.552,360,2.898,361,2.898,362,2.415,363,1.135,364,1.91,365,2.898,366,1.91,367,1.91,368,1.91,369,1.91,370,2.356,371,1.552,372,1.91,373,1.91,374,1.91,375,1.141,376,1.998,377,1.91,378,1.552,379,1.135,380,1.91,381,1.91,382,1.91,383,3.909,384,3.178,385,1.91,386,1.91,387,1.552,388,2.898,389,1.91,390,1.91,391,1.135,392,3.232,393,1.91,394,1.91,395,1.91,396,1.91,397,1.91,398,1.91,399,1.91,400,1.91,401,1.91,402,1.91,403,1.91,404,1.91,405,2.898,406,2.356,407,1.135,408,2.898,409,1.295,410,1.91,411,1.91,412,1.91,413,1.135,414,1.552,415,1.135,416,1.91,417,1.552,418,1.135,419,1.552,420,1.135,421,1.91,422,3.502,423,1.552,424,1.135,425,1.552,426,1.135,427,1.91,428,1.91,429,1.91,430,1.91,431,1.91,432,1.91,433,1.91,434,1.317,435,1.91,436,1.552,437,1.91,438,1.91,439,1.552,440,1.552,441,1.135,442,1.552,443,1.135,444,1.552,445,1.91,446,1.552,447,1.135,448,1.552,449,1.91,450,1.91,451,2.356,452,1.91,453,1.91,454,1.91,455,1.91,456,2.356,457,1.91,458,1.91,459,1.91,460,1.91,461,1.135,462,1.91,463,1.552,464,2.356,465,2.628,466,1.91,467,1.91,468,1.835,469,1.91,470,1.135,471,1.552,472,1.135,473,1.552,474,1.91,475,2.356,476,1.91,477,1.91,478,1.91,479,1.91,480,1.552,481,2.898,482,1.91,483,1.552,484,1.91,485,1.317,486,0.783,487,1.135,488,1.91,489,1.704,490,1.552,491,0.923,492,0.923,493,0.783,494,0.923,495,0.923,496,0.923,497,0.923,498,1.552,499,0.923,500,0.923,501,0.923,502,0.923,503,0.923,504,0.923,505,1.135,506,1.135,507,1.135,508,1.135,509,1.135,510,1.135,511,0.923,512,1.135]],["title/classes/RxStompRPC.html",[308,0.283,513,1.689]],["body/classes/RxStompRPC.html",[3,0.308,4,0.308,5,0.259,8,0.308,10,0.38,21,1.505,22,0.383,23,0.259,24,1.363,26,0.213,33,0.455,34,0.048,36,0.799,40,0.777,45,1.456,47,0.984,52,0.308,55,0.025,56,0.025,58,1.648,59,0.874,60,2.467,63,1.405,65,1.456,73,2.164,87,2.207,89,1.731,93,1.074,104,1.469,128,1.959,155,1.456,171,1.648,224,1.505,226,1.456,232,1.147,249,2.849,252,1.732,274,2.234,276,2.038,282,1.732,287,2.169,301,1.273,302,3.178,303,2.557,308,0.213,310,0.612,311,1.911,315,2.133,319,1.892,326,1.363,340,1.469,359,1.732,376,2.847,434,2.169,486,1.469,513,1.88,514,1.732,515,2.557,516,3.145,517,3.746,518,2.663,519,3.145,520,2.169,521,2.847,522,1.88,523,4.129,524,1.88,525,2.13,526,4.129,527,2.467,528,2.13,529,2.169,530,1.731,531,1.732,532,3.145,533,2.13,534,4.129,535,4.404,536,3.145,537,3.145,538,3.145,539,3.145,540,3.739,541,3.145,542,2.13,543,3.145,544,3.145,545,3.145,546,4.129,547,3.145,548,2.557,549,2.13,550,2.13,551,3.145,552,2.13,553,3.739,554,2.169,555,2.13,556,3.356,557,3.356,558,3.356,559,3.356,560,3.875,561,2.13,562,1.732,563,1.732,564,1.732,565,2.13,566,2.13,567,2.13,568,2.13,569,2.13,570,3.145,571,1.732,572,3.145,573,2.13,574,3.145,575,3.739,576,3.145,577,3.145,578,3.145,579,2.13,580,2.13,581,1.732,582,2.13,583,2.13,584,2.13,585,2.13,586,3.739,587,3.145,588,2.13,589,2.13,590,1.732,591,2.13,592,2.13,593,2.13,594,3.145,595,3.739,596,3.145,597,2.13,598,2.13,599,2.13,600,2.13,601,2.13,602,2.13,603,2.13,604,2.13]],["title/classes/RxStompRPCConfig.html",[308,0.283,527,1.689]],["body/classes/RxStompRPCConfig.html",[3,0.464,4,0.464,5,0.391,8,0.464,10,0.393,22,0.391,23,0.391,24,1.171,26,0.321,27,0.707,33,0.566,34,0.047,35,1.04,47,1.04,52,0.605,55,0.034,56,0.034,63,1.534,93,1.417,98,1.718,224,1.697,226,1.486,232,1.171,301,1.919,302,2.886,308,0.321,310,0.922,311,2.155,312,1.683,315,2.155,319,2.153,326,1.526,376,3.402,486,2.214,517,3.402,518,2.681,521,3.528,527,2.501,530,1.937,554,3.21,556,3.402,557,3.402,558,3.402,559,3.402,562,3.402,563,3.402,564,3.402,581,4.01,590,4.01,605,4.185,606,3.784,607,4.933,608,4.655,609,3.211,610,4.185,611,4.185,612,4.185,613,3.211,614,4.185]],["title/classes/Stomp.html",[10,0.225,308,0.283]],["body/classes/Stomp.html",[3,0.264,4,0.264,5,0.223,8,0.264,10,0.373,19,1.676,22,0.341,23,0.341,26,0.183,27,0.474,33,0.415,34,0.048,35,1.07,38,0.847,47,0.762,51,2.161,52,0.264,55,0.023,56,0.023,58,2.004,63,0.806,65,1.298,69,1.704,73,0.959,74,3.352,89,1.298,93,0.806,98,0.751,107,0.667,108,1.262,109,1.093,127,3.222,128,0.959,130,1.262,141,3.053,146,2.352,147,3,150,2.772,155,1.298,157,3.108,160,1.934,171,2.449,173,1.262,185,1.676,245,1.487,253,2.28,267,1.934,274,2.038,276,2.096,308,0.453,310,0.525,314,2.28,319,1.4,326,1.244,335,2.792,340,1.934,362,1.934,371,3.352,409,2.793,436,3.894,444,1.487,448,2.28,468,2.563,473,2.28,475,2.28,480,3.352,485,2.637,489,1.262,490,2.772,493,1.934,515,1.487,520,3.304,522,1.676,529,1.934,530,1.579,531,1.487,548,1.487,571,3.108,615,1.487,616,2.805,617,3.411,618,4.529,619,4.673,620,4.673,621,3.894,622,3.411,623,1.829,624,2.805,625,2.805,626,1.934,627,2.805,628,2.805,629,3.824,630,1.829,631,2.805,632,4.529,633,1.829,634,2.805,635,2.805,636,2.805,637,2.805,638,3.537,639,2.805,640,1.829,641,3.352,642,2.805,643,1.829,644,2.805,645,2.805,646,2.805,647,2.805,648,3.411,649,2.805,650,2.805,651,2.805,652,2.28,653,2.805,654,2.805,655,2.805,656,2.805,657,2.805,658,2.805,659,2.805,660,2.805,661,2.805,662,2.805,663,3.824,664,1.829,665,1.487,666,1.262,667,1.829,668,1.829,669,1.829,670,1.829,671,1.829,672,1.829,673,2.805,674,1.829,675,2.805,676,1.829,677,1.829,678,1.829,679,3.411,680,1.829,681,1.829,682,3.824,683,1.829,684,1.829,685,2.805,686,1.829,687,1.829,688,1.829,689,1.829,690,1.829,691,1.829,692,1.829,693,1.829]],["title/classes/StompConfig.html",[308,0.283,694,1.949]],["body/classes/StompConfig.html",[3,0.216,4,0.216,5,0.182,8,0.216,10,0.238,22,0.291,23,0.291,26,0.149,27,0.404,33,0.664,34,0.047,35,0.534,36,0.95,37,1.648,40,1.681,45,1.106,47,0.764,48,0.782,51,1.253,52,0.216,55,0.019,56,0.019,62,1.943,63,1.642,69,1.09,79,1.213,84,0.981,93,1.642,107,1.09,108,1.029,111,1.567,113,2.062,114,3.249,118,2.062,123,2.062,162,1.029,167,2.951,181,1.648,189,2.062,197,1.787,201,2.062,202,2.062,203,2.062,204,2.062,205,2.062,207,2.062,208,2.431,209,2.062,210,2.062,211,2.062,212,2.062,213,2.062,214,2.062,215,2.431,216,2.431,217,2.431,218,2.431,219,2.431,220,2.431,221,2.431,222,2.431,230,1.648,288,1.648,308,0.149,310,0.429,312,0.782,313,1.943,319,2.385,320,2.431,321,2.431,322,2.431,324,2.431,325,2.431,326,1.989,328,1.943,339,1.213,354,1.943,362,1.648,378,1.943,387,1.943,409,2.356,414,1.943,417,1.943,419,1.943,423,1.943,425,1.943,440,1.943,442,1.943,446,1.943,456,1.943,471,1.943,485,1.648,489,1.029,491,1.213,492,1.213,493,1.029,494,1.213,495,1.213,496,1.213,497,1.213,498,1.213,499,1.213,500,1.213,501,1.213,502,1.213,503,1.213,504,1.213,511,1.213,524,1.428,530,1.106,665,1.213,666,1.029,694,1.648,695,3.27,696,2.39,697,2.39,698,2.39,699,2.39,700,2.99,701,2.99,702,2.99,703,2.99,704,1.492,705,1.492,706,1.492,707,1.492,708,1.492,709,1.492,710,2.39,711,1.492,712,1.492,713,1.492,714,1.492,715,1.492,716,1.492,717,2.39,718,1.492,719,2.39,720,1.492,721,1.492,722,2.39,723,1.492,724,1.492,725,2.39,726,1.492,727,2.39,728,1.492,729,2.39,730,1.492,731,2.39,732,1.492,733,2.39,734,1.492,735,1.492,736,2.39,737,1.492,738,2.39,739,1.492,740,2.39,741,1.492,742,1.492,743,2.39,744,1.492,745,1.492,746,1.492,747,1.492,748,1.492,749,1.492,750,1.492,751,1.492,752,1.492,753,1.492,754,1.492,755,1.492,756,1.492,757,1.492,758,1.492,759,1.492,760,1.492]],["title/classes/StompHeaders.html",[36,0.718,308,0.283]],["body/classes/StompHeaders.html",[3,0.584,4,0.584,5,0.492,8,0.584,10,0.322,12,3.286,16,1.871,21,1.885,22,0.492,23,0.492,34,0.044,35,1.196,36,1.227,37,3.694,38,1.871,50,2.788,52,0.584,55,0.039,56,0.039,89,1.871,308,0.405,310,1.161,318,3.286,326,1.474,333,3.286,439,3.286,695,2.888,761,3.286,762,4.043,763,4.043,764,4.043,765,4.043,766,4.043,767,4.043,768,4.043,769,4.043,770,4.043,771,4.043]],["title/interfaces/StompSubscription.html",[0,0.409,772,1.949]],["body/interfaces/StompSubscription.html",[0,0.542,2,1.367,3,0.542,4,0.542,5,0.456,8,0.542,10,0.299,21,1.367,22,0.562,23,0.562,26,0.375,27,0.78,33,0.562,34,0.047,35,1.117,36,1.172,47,0.837,48,1.964,52,0.542,55,0.037,56,0.037,60,2.758,63,1.326,64,3.752,65,2.137,69,1.683,73,2.419,82,3.047,84,1.538,249,3.262,300,4.437,529,3.183,695,2.24,772,3.6,773,3.047,774,4.616,775,4.616,776,3.748]],["title/classes/Ticker.html",[192,1.481,308,0.283]],["body/classes/Ticker.html",[3,0.409,4,0.409,5,0.344,26,0.283,33,0.531,34,0.048,40,1.031,47,0.631,52,0.409,53,2.801,55,0.031,56,0.031,59,1.16,69,1.031,84,2.254,89,1.779,93,1.104,111,2.457,136,2.298,155,1.779,167,3.092,192,2.015,194,2.297,196,2.651,197,1.689,199,2.651,274,1.689,276,1.308,308,0.283,310,0.812,319,2.076,326,1.593,468,2.015,522,2.297,524,2.297,530,1.779,560,4.429,638,2.298,666,1.949,777,2.298,778,3.844,779,4.688,780,2.827,781,4.368,782,4.368,783,2.827,784,3.844,785,3.844,786,4.688,787,2.827,788,2.827,789,2.827,790,2.827,791,4.688,792,3.844,793,2.827,794,2.827,795,3.844,796,2.827,797,2.827,798,2.827,799,2.827,800,2.827,801,2.827,802,2.827,803,2.827,804,2.827,805,2.827,806,2.827,807,2.827,808,2.827,809,2.827,810,3.844,811,2.827,812,3.844,813,4.688,814,2.827,815,2.827,816,2.827,817,2.827,818,2.827,819,2.827,820,2.827,821,4.688,822,2.827,823,2.827,824,3.844,825,2.827,826,3.844,827,3.844,828,3.844,829,2.827]],["title/classes/Versions.html",[107,1.031,308,0.283]],["body/classes/Versions.html",[3,0.4,4,0.4,5,0.337,8,0.4,10,0.401,11,1.986,22,0.526,23,0.337,26,0.277,27,0.64,33,0.592,34,0.047,35,1.149,38,2,46,3.778,52,0.4,55,0.031,56,0.031,58,1.986,89,1.281,93,0.795,98,1.908,107,1.995,128,2.436,130,1.909,141,2.265,155,1.754,156,3.466,276,1.754,308,0.433,310,0.795,319,2.246,326,1.876,335,3.004,341,3.081,370,4.086,406,3.081,434,2.614,463,3.081,464,4.086,465,4.086,468,1.451,483,3.081,522,2.265,524,1.654,530,1.281,621,4.371,830,2.25,831,4.321,832,4.321,833,4.321,834,4.321,835,4.647,836,4.647,837,2.768,838,2.768,839,3.79,840,3.79,841,3.79,842,3.79,843,3.79,844,2.768,845,5.026,846,2.768,847,2.768,848,2.768,849,2.768,850,2.768,851,2.768,852,2.768,853,2.768,854,2.768,855,2.768,856,2.768,857,2.768]],["title/coverage.html",[858,3.125]],["body/coverage.html",[0,0.778,1,1.358,5,0.402,6,2.475,7,2.281,10,0.412,24,1.206,33,0.402,34,0.046,36,0.84,55,0.034,56,0.034,57,2.281,87,1.531,88,1.977,107,1.206,192,1.734,223,2.281,224,1.928,225,2.942,226,1.531,227,2.689,228,2.942,241,2.281,242,2.689,256,2.281,257,2.689,308,0.56,309,2.281,311,2.309,312,2.475,315,1.531,375,1.977,384,2.689,409,1.734,468,1.734,513,1.977,514,2.689,518,1.734,527,1.977,615,2.689,641,2.689,694,2.281,695,2.822,761,2.689,772,2.281,773,2.689,777,2.689,830,2.689,858,2.689,859,3.308,860,3.308,861,5.696,862,3.308,863,3.308,864,3.308,865,4.722,866,4.722,867,3.308,868,3.308,869,3.308,870,3.308,871,3.308,872,3.308,873,3.308,874,3.308,875,4.266,876,3.308,877,3.308,878,3.308,879,3.308,880,3.308,881,3.308,882,3.308]],["title/miscellaneous/enumerations.html",[883,1.414,884,2.76]],["body/miscellaneous/enumerations.html",[10,0.404,22,0.469,26,0.386,34,0.042,38,2.174,55,0.038,56,0.038,88,2.304,146,2.659,162,2.659,165,3.818,173,3.726,174,3.818,176,3.239,177,3.818,178,3.818,179,3.239,180,3.134,181,3.239,182,3.134,183,3.134,184,3.134,185,2.304,186,2.659,187,2.659,188,3.134,189,3.239,190,3.134,191,3.134,192,2.021,193,3.134,194,2.304,195,2.659,196,2.659,197,2.806,198,3.239,199,3.239,224,1.406,232,1.406,311,1.785,315,1.785,883,2.304,884,3.134,885,4.285,886,4.696,887,3.134,888,4.696]],["title/index.html",[26,0.237,889,2.367,890,2.367]],["body/index.html",[10,0.407,23,0.577,34,0.038,55,0.038,56,0.038,63,1.362,97,4.145,107,1.729,126,2.701,156,2.701,171,2.485,226,1.813,232,1.428,265,3.183,267,2.701,288,2.701,301,2.34,310,1.362,315,1.813,375,2.34,409,2.052,451,3.183,513,2.34,518,2.052,520,2.701,626,2.701,652,3.183,891,3.916,892,3.916,893,5.099,894,5.299,895,3.916,896,3.916,897,3.916,898,3.916,899,3.916,900,3.916,901,3.916,902,3.916,903,3.916,904,3.916,905,3.916,906,3.916,907,3.916,908,3.916,909,3.916,910,3.916,911,3.916,912,5.099]],["title/modules.html",[913,3.125]],["body/modules.html",[34,0.042,55,0.042,56,0.042,913,3.687]],["title/overview.html",[914,3.125]],["body/overview.html",[2,1.637,34,0.041,55,0.041,56,0.041,310,1.289,914,3.649,915,4.489,916,4.489]],["title/properties.html",[27,0.574,917,2.367]],["body/properties.html",[8,0.63,27,0.736,34,0.045,55,0.041,56,0.041,335,2.603,375,2.603,626,3.004,918,4.355,919,4.355,920,4.355,921,4.355,922,4.355,923,4.355,924,4.355,925,4.355]],["title/miscellaneous/typealiases.html",[883,1.414,926,3.396]],["body/miscellaneous/typealiases.html",[1,2.013,6,2.354,7,3.097,10,0.391,11,2.354,22,0.666,23,0.657,24,1.788,26,0.359,33,0.436,34,0.039,35,0.801,54,2.915,55,0.036,56,0.036,57,3.097,59,1.843,61,2.773,63,1.03,69,1.93,86,2.473,87,2.079,88,2.143,91,3.651,109,3.162,110,3.65,111,2.354,113,3.097,114,3.097,118,3.097,123,3.097,125,2.915,126,2.473,127,2.473,224,1.308,232,1.308,311,1.66,312,2.354,518,2.354,521,2.473,554,3.097,606,2.915,883,2.143,885,4.389,887,2.915,927,3.587,928,4.491,929,3.587,930,3.587,931,3.587,932,3.587]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["0.1.0",{"_index":918,"title":{},"body":{"properties.html":{}}}],["0.1.1",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0/4",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.0']);maps",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.1",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":915,"title":{},"body":{"overview.html":{}}}],["19/19",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["19/20",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["2.0",{"_index":922,"title":{},"body":{"properties.html":{}}}],["2/2",{"_index":862,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["31/31",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["45/45",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["48/48",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":916,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["_customreplyqueue",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_debug",{"_index":782,"title":{},"body":{"classes/Ticker.html":{}}}],["_dummysubscription",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_interval",{"_index":784,"title":{},"body":{"classes/Ticker.html":{}}}],["_not_",{"_index":512,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["_repliesobservable",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_strategy",{"_index":781,"title":{},"body":{"classes/Ticker.html":{}}}],["_timer",{"_index":797,"title":{},"body":{"classes/Ticker.html":{}}}],["_worker",{"_index":796,"title":{},"body":{"classes/Ticker.html":{}}}],["_workerscript",{"_index":790,"title":{},"body":{"classes/Ticker.html":{}}}],["abort",{"_index":247,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":763,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["ack",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["acknowledgement",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["activation",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":182,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":612,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":616,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["added",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":766,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":229,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["alias",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":927,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":674,"title":{},"body":{"classes/Stomp.html":{}}}],["allowing",{"_index":268,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["allows",{"_index":659,"title":{},"body":{"classes/Stomp.html":{}}}],["alternative",{"_index":644,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":658,"title":{},"body":{"classes/Stomp.html":{}}}],["another",{"_index":675,"title":{},"body":{"classes/Stomp.html":{}}}],["apache",{"_index":921,"title":{},"body":{"properties.html":{}}}],["api",{"_index":893,"title":{},"body":{"index.html":{}}}],["appendmissingnullonincoming",{"_index":213,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":839,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["associated",{"_index":774,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["assumes",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":506,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempt",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempted",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempting",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":923,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":689,"title":{},"body":{"classes/Stomp.html":{}}}],["automatic",{"_index":269,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["automatically",{"_index":292,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["available",{"_index":765,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["before",{"_index":285,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["belongs",{"_index":905,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarytype",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["blob([this._workerscript",{"_index":815,"title":{},"body":{"classes/Ticker.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{}}}],["both",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["brokers",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["brokerurl",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["builds",{"_index":902,"title":{},"body":{"index.html":{}}}],["bye",{"_index":277,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["call.html",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["callable",{"_index":651,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["calling",{"_index":245,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["case",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":298,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["change",{"_index":266,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":308,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["classes",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":603,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["clearinterval(this._timer",{"_index":829,"title":{},"body":{"classes/Ticker.html":{}}}],["client",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":250,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":255,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":511,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":246,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":251,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":254,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":699,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":747,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":710,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":759,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":504,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatstrategy",{"_index":717,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatstrategy]{@link",{"_index":751,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeattolerancemultiplier",{"_index":719,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeattolerancemultiplier]{@link",{"_index":750,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxreconnectdelay",{"_index":722,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#maxreconnectdelay]{@link",{"_index":748,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":725,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":760,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":727,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":754,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":729,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":755,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":731,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":756,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":733,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":753,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":736,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":752,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":738,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":757,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":740,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":758,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnecttimemode",{"_index":743,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnecttimemode]{@link",{"_index":749,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":775,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":776,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#websocketfactory",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":631,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":650,"title":{},"body":{"classes/Stomp.html":{}}}],["client.js",{"_index":665,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client.ts",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closed",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent]://developer.mozilla.org/en",{"_index":929,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":248,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":664,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":641,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":685,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["compliant",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":910,"title":{},"body":{"index.html":{}}}],["config",{"_index":605,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.js",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["config.ts",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:100",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:101",{"_index":707,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:106",{"_index":712,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:107",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:111",{"_index":734,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:114",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:116",{"_index":735,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":732,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:123",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:126",{"_index":705,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:128",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:131",{"_index":726,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:133",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:136",{"_index":728,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:138",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:141",{"_index":730,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:143",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:146",{"_index":737,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:151",{"_index":739,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:152",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:156",{"_index":720,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:159",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:161",{"_index":709,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:166",{"_index":711,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:171",{"_index":724,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:179",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:190",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":609,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:26",{"_index":706,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":613,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:31",{"_index":745,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:36",{"_index":746,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:41",{"_index":708,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":741,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:51",{"_index":721,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:56",{"_index":742,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:60",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:61",{"_index":714,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:66",{"_index":718,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:71",{"_index":715,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:76",{"_index":716,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:81",{"_index":744,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:83",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:86",{"_index":713,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:91",{"_index":704,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:96",{"_index":723,"title":{},"body":{"classes/StompConfig.html":{}}}],["configuration",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connect",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["connected",{"_index":635,"title":{},"body":{"classes/Stomp.html":{}}}],["connectheaders",{"_index":203,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["connectiontimeout",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["consider",{"_index":272,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["console.log(new",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["console.warn",{"_index":688,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":928,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../rx",{"_index":887,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../types.ts",{"_index":885,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/rx",{"_index":224,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":615,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":643,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":623,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":633,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":695,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/ticker.ts",{"_index":777,"title":{},"body":{"classes/Ticker.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/ticker.ts:12",{"_index":783,"title":{},"body":{"classes/Ticker.html":{}}}],["consolidated/stompjs/src/ticker.ts:20",{"_index":787,"title":{},"body":{"classes/Ticker.html":{}}}],["consolidated/stompjs/src/ticker.ts:30",{"_index":789,"title":{},"body":{"classes/Ticker.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":88,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":830,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":844,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":846,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":847,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":838,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":848,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":850,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":849,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":274,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{}}}],["constructor",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["constructor(_interval",{"_index":780,"title":{},"body":{"classes/Ticker.html":{}}}],["constructor(public",{"_index":854,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(versions",{"_index":837,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":767,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copied",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copy",{"_index":584,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlateerrors",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["correlation",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":595,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":895,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["corresponds",{"_index":696,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":899,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":858,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":768,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["created",{"_index":244,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["creates",{"_index":634,"title":{},"body":{"classes/Stomp.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["currently",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["custom",{"_index":589,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["data",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["date",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["date.now",{"_index":792,"title":{},"body":{"classes/Ticker.html":{}}}],["deactivating",{"_index":183,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":201,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declare",{"_index":667,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":843,"title":{},"body":{"classes/Versions.html":{}}}],["deepak",{"_index":924,"title":{},"body":{"properties.html":{}}}],["default",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["defaultmessagessubscription",{"_index":594,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":604,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":264,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["defensively",{"_index":583,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defined",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["delay",{"_index":445,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["delete",{"_index":826,"title":{},"body":{"classes/Ticker.html":{}}}],["dependency",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["dependent",{"_index":263,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":618,"title":{},"body":{"classes/Stomp.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["destination",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["details",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["development",{"_index":896,"title":{},"body":{"index.html":{}}}],["disable",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":214,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnectheaders",{"_index":204,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnection",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["disposeinterval",{"_index":828,"title":{},"body":{"classes/Ticker.html":{}}}],["disposeworker",{"_index":824,"title":{},"body":{"classes/Ticker.html":{}}}],["docs",{"_index":894,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":693,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["documents",{"_index":908,"title":{},"body":{"index.html":{}}}],["dom",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":235,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["during",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":288,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{},"index.html":{}}}],["effect",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elapsedtime",{"_index":786,"title":{},"body":{"classes/Ticker.html":{}}}],["elements",{"_index":840,"title":{},"body":{"classes/Versions.html":{}}}],["emitted",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["enable",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enqueued",{"_index":234,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ensure",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["entry",{"_index":912,"title":{},"body":{"index.html":{}}}],["enum",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":884,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":625,"title":{},"body":{"classes/Stomp.html":{}}}],["erroneous",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["error",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["established",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["etc",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["event]://developer.mozilla.org/en",{"_index":931,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["example",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["examples",{"_index":606,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["experimental",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["exponential",{"_index":191,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["factory",{"_index":617,"title":{},"body":{"classes/Stomp.html":{}}}],["false",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["family",{"_index":919,"title":{},"body":{"properties.html":{}}}],["feature",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["fetch",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":697,"title":{},"body":{"classes/StompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":598,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["flag",{"_index":291,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["following",{"_index":900,"title":{},"body":{"index.html":{}}}],["forcebinarywsframes",{"_index":211,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["forever",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.js",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frames",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["function",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":762,"title":{},"body":{"classes/StompHeaders.html":{}}}],["generated",{"_index":909,"title":{},"body":{"index.html":{}}}],["generating",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getting",{"_index":889,"title":{"index.html":{}},"body":{}}],["guide",{"_index":521,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["guide](/guide/rx",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["guides",{"_index":906,"title":{},"body":{"index.html":{}}}],["hack",{"_index":673,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":283,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handshake",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{}}}],["headers.js",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["headers.ts",{"_index":761,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":771,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":596,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":601,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":195,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["heartbeatgraceperiods",{"_index":206,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["heartbeatincoming",{"_index":205,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":207,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatstrategy",{"_index":208,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["heartbeattolerancemultiplier",{"_index":700,"title":{},"body":{"classes/StompConfig.html":{}}}],["host",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":648,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":691,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":249,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["identifier",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#body",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["iframe#headers",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/StompHeaders.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["impact",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":515,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implies",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{}}}],["important",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["importantly",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["inactive",{"_index":184,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":770,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["information",{"_index":265,"title":{},"body":{"interfaces/IWatchParams.html":{},"index.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"overview.html":{}}}],["internal",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":303,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["interval",{"_index":198,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["invoked",{"_index":284,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["invoking",{"_index":297,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":87,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":223,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issued",{"_index":304,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["istompthandlerconfig",{"_index":200,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":241,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":256,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":692,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":683,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":684,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":296,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["kumar",{"_index":925,"title":{},"body":{"properties.html":{}}}],["large",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["length",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":769,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":901,"title":{},"body":{"index.html":{}}}],["library",{"_index":904,"title":{},"body":{"index.html":{}}}],["license",{"_index":920,"title":{},"body":{"properties.html":{}}}],["line:variable",{"_index":671,"title":{},"body":{"classes/Stomp.html":{}}}],["linear",{"_index":190,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["link",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["literal",{"_index":273,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["located",{"_index":637,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":212,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":620,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["maps",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["marks",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matching",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["maxreconnectdelay",{"_index":701,"title":{},"body":{"classes/StompConfig.html":{}}}],["maxwebsocketchunksize",{"_index":210,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Ticker.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":599,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.js",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":237,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["messaging",{"_index":519,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{}}}],["methods",{"_index":522,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":883,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modes",{"_index":188,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["modules",{"_index":913,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":652,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":676,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["nack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["navigating",{"_index":891,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["needed",{"_index":657,"title":{},"body":{"classes/Stomp.html":{}}}],["new",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":624,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["now",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["npm",{"_index":897,"title":{},"body":{"index.html":{}}}],["null",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["number",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{}}}],["object",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":302,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["observable(s",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observable.create((rpcobserver",{"_index":593,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observables",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observer",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":295,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["once",{"_index":653,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":702,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":215,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":216,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["one",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onmessage",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":217,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":222,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":220,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":221,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":218,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":219,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["open",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["options",{"_index":230,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":649,"title":{},"body":{"classes/Stomp.html":{}}}],["outgoing",{"_index":194,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["over",{"_index":267,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":642,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":842,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":914,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":917,"title":{"properties.html":{}},"body":{}}],["packets",{"_index":455,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["parameter",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["params",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":585,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":228,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{}}}],["passcode",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["passing",{"_index":660,"title":{},"body":{"classes/Stomp.html":{}}}],["ping",{"_index":196,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["pings",{"_index":812,"title":{},"body":{"classes/Ticker.html":{}}}],["pipe",{"_index":597,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":520,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["point",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["preferred",{"_index":911,"title":{},"body":{"index.html":{}}}],["present",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["primitives",{"_index":903,"title":{},"body":{"index.html":{}}}],["prior",{"_index":677,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Ticker.html":{}}}],["probably",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["procedure",{"_index":517,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["promise",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":508,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["protocol",{"_index":845,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":632,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":835,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":668,"title":{},"body":{"classes/Stomp.html":{}}}],["public",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["publish",{"_index":227,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["published",{"_index":238,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishparams",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":590,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/rpc",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuename",{"_index":281,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rabbitmq",{"_index":611,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["raw",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re",{"_index":270,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["re)connection",{"_index":290,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["re)subscription",{"_index":286,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/Ticker.html":{}}}],["readystate",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["receive",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{}}}],["reconnect",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reconnectdelay",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":654,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":185,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["reconnectiontimemode",{"_index":189,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["reconnecttimemode",{"_index":703,"title":{},"body":{"classes/StompConfig.html":{}}}],["reestablished",{"_index":239,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["released",{"_index":898,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remains",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["remarks",{"_index":680,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":516,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":619,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["repliesobservable",{"_index":587,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":592,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":607,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["require('../../esm5",{"_index":627,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":669,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket;deprecated",{"_index":630,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["resubscribe",{"_index":293,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["results",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retry",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":233,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":276,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["returns",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["rpc",{"_index":518,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(params",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts",{"_index":514,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:32",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:58",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:69",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":600,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["runinterval",{"_index":820,"title":{},"body":{"classes/Ticker.html":{}}}],["runinterval(tick",{"_index":819,"title":{},"body":{"classes/Ticker.html":{}}}],["runworker",{"_index":811,"title":{},"body":{"classes/Ticker.html":{}}}],["runworker(tick",{"_index":809,"title":{},"body":{"classes/Ticker.html":{}}}],["rx",{"_index":226,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":301,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"index.html":{}}}],["rxstomp",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#configure",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate]{@link",{"_index":505,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":231,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":240,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":258,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":306,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.watch",{"_index":280,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp]{@link",{"_index":510,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":309,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#websocketfactory",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":513,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":527,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstompstate",{"_index":886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["same",{"_index":698,"title":{},"body":{"classes/StompConfig.html":{}}}],["scripts",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["self.postmessage(date.now",{"_index":794,"title":{},"body":{"classes/Ticker.html":{}}}],["send",{"_index":252,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{}}}],["send(data",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sent",{"_index":764,"title":{},"body":{"classes/StompHeaders.html":{}}}],["server",{"_index":636,"title":{},"body":{"classes/Stomp.html":{}}}],["service",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["set",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["setinterval",{"_index":822,"title":{},"body":{"classes/Ticker.html":{}}}],["setinterval(function",{"_index":793,"title":{},"body":{"classes/Ticker.html":{}}}],["setting",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":614,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":608,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["shoulduseworker",{"_index":805,"title":{},"body":{"classes/Ticker.html":{}}}],["similar",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["skipcontentlengthheader",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{}}}],["specific",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specified",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specify",{"_index":647,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":209,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["standard",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["start",{"_index":778,"title":{},"body":{"classes/Ticker.html":{}}}],["start(tick",{"_index":785,"title":{},"body":{"classes/Ticker.html":{}}}],["started",{"_index":890,"title":{"index.html":{}},"body":{}}],["starttime",{"_index":791,"title":{},"body":{"classes/Ticker.html":{}}}],["state",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":621,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":645,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":686,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":678,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":672,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url);deprecated",{"_index":640,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.js",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp.over",{"_index":679,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":661,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.ts",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":629,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp/rx",{"_index":232,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":225,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":694,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":626,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"properties.html":{}}}],["stompjs.stomp",{"_index":628,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/remote",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomprpcconfig",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stompsocketstate",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompsubscription",{"_index":772,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":202,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["stop",{"_index":779,"title":{},"body":{"classes/Ticker.html":{}}}],["strategies",{"_index":193,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stream",{"_index":523,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":279,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":305,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":259,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":275,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribe",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["subscribe((message",{"_index":282,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribed",{"_index":287,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["subscribeonlyonce",{"_index":260,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["subscription.ts",{"_index":773,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscriptions",{"_index":271,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["successful",{"_index":289,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":236,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":610,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["support",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":831,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":836,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["target",{"_index":262,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":656,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["terminate",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["terminating",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["text",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["text/javascript",{"_index":816,"title":{},"body":{"classes/Ticker.html":{}}}],["this._customreplyqueue",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._debug('outgoing",{"_index":827,"title":{},"body":{"classes/Ticker.html":{}}}],["this._debug('using",{"_index":810,"title":{},"body":{"classes/Ticker.html":{}}}],["this._dummysubscription",{"_index":591,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._interval",{"_index":795,"title":{},"body":{"classes/Ticker.html":{}}}],["this._repliesobservable",{"_index":586,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._strategy",{"_index":807,"title":{},"body":{"classes/Ticker.html":{}}}],["this._timer",{"_index":821,"title":{},"body":{"classes/Ticker.html":{}}}],["this._worker",{"_index":813,"title":{},"body":{"classes/Ticker.html":{}}}],["this._worker.onmessage",{"_index":817,"title":{},"body":{"classes/Ticker.html":{}}}],["this._worker.terminate",{"_index":825,"title":{},"body":{"classes/Ticker.html":{}}}],["this.disposeinterval",{"_index":804,"title":{},"body":{"classes/Ticker.html":{}}}],["this.disposeworker",{"_index":803,"title":{},"body":{"classes/Ticker.html":{}}}],["this.runinterval(tick",{"_index":802,"title":{},"body":{"classes/Ticker.html":{}}}],["this.runworker(tick",{"_index":801,"title":{},"body":{"classes/Ticker.html":{}}}],["this.rxstomp",{"_index":588,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":602,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.shoulduseworker",{"_index":800,"title":{},"body":{"classes/Ticker.html":{}}}],["this.stop",{"_index":799,"title":{},"body":{"classes/Ticker.html":{}}}],["this.stream(params).pipe(first",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":855,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":856,"title":{},"body":{"classes/Versions.html":{}}}],["those",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["though",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["through",{"_index":892,"title":{},"body":{"index.html":{}}}],["tick",{"_index":788,"title":{},"body":{"classes/Ticker.html":{}}}],["tick(date.now",{"_index":823,"title":{},"body":{"classes/Ticker.html":{}}}],["tick(message.data",{"_index":818,"title":{},"body":{"classes/Ticker.html":{}}}],["ticker",{"_index":192,"title":{"classes/Ticker.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["tickerstrategy",{"_index":197,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["tickerstrategy.interval",{"_index":798,"title":{},"body":{"classes/Ticker.html":{}}}],["tickerstrategy.worker",{"_index":808,"title":{},"body":{"classes/Ticker.html":{}}}],["time",{"_index":187,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"miscellaneous/enumerations.html":{}}}],["token",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":243,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":242,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":655,"title":{},"body":{"classes/Stomp.html":{}}}],["true",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["try",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tslint:disable",{"_index":670,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":907,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":926,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":687,"title":{},"body":{"classes/Stomp.html":{}}}],["typeof(worker",{"_index":806,"title":{},"body":{"classes/Ticker.html":{}}}],["types.js",{"_index":666,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Ticker.html":{}}}],["typescript",{"_index":307,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["typical",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["undefined",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{}}}],["underlying",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["unset",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":261,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":299,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":300,"title":{},"body":{"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}}}],["unsubscribing",{"_index":294,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["url.createobjecturl",{"_index":814,"title":{},"body":{"classes/Ticker.html":{}}}],["us/docs/web/api/closeevent",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/closeeventhttps",{"_index":930,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/event",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/eventhttps",{"_index":932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":509,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":507,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["used",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["user",{"_index":646,"title":{},"body":{"classes/Stomp.html":{}}}],["using",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["utf8",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":857,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":832,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":833,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":834,"title":{},"body":{"classes/Versions.html":{}}}],["v4",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["valid",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["var",{"_index":638,"title":{},"body":{"classes/Stomp.html":{},"classes/Ticker.html":{}}}],["version",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"properties.html":{}}}],["versions",{"_index":107,"title":{"classes/Versions.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.1",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":681,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.js",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["versions.v1_0",{"_index":853,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":852,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":851,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["void",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Ticker.html":{}}}],["wait",{"_index":186,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["want",{"_index":841,"title":{},"body":{"classes/Versions.html":{}}}],["watch",{"_index":257,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["way",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":662,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":622,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["within",{"_index":253,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":690,"title":{},"body":{"classes/Stomp.html":{}}}],["worker",{"_index":199,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Ticker.html":{},"miscellaneous/enumerations.html":{}}}],["world",{"_index":278,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["ws",{"_index":663,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":639,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":682,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["yield",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            isBinaryBody\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended IFrame, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ack\n                                        \n                                \n                                \n                                        \n                                            nack\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { IFrame } from './i-frame.js';\nimport { StompHeaders } from './stomp-headers.js';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link IFrame}, you can access [headers]{@link IFrame#headers}\n * and [body]{@link IFrame#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipContentLengthHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { IFrame } from './i-frame.js';\nimport type { IMessage } from './i-message.js';\nimport { StompHeaders } from './stomp-headers.js';\nimport { Versions } from './versions.js';\n\n/**\n * This callback will receive a `string` as a parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = ((frame: IFrame) => void) | (() => void);\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default, a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string | undefined;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  url: string;\n  onclose: ((ev?: any) => any) | undefined | null;\n  onerror: ((ev: any) => any) | undefined | null;\n  onmessage: ((ev: IStompSocketMessageEvent) => any) | undefined | null;\n  onopen: ((ev?: any) => any) | undefined | null;\n  terminate?: (() => any) | undefined | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType?: string;\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n/**\n * Possible reconnection wait time modes\n */\nexport enum ReconnectionTimeMode {\n  LINEAR,\n  EXPONENTIAL\n}\n\n/**\n * Possible ticker strategies for outgoing heartbeat ping\n */\nexport enum TickerStrategy {\n  Interval = 'interval',\n  Worker = 'worker'\n}\n\n/**\n * @internal\n */\nexport interface IStomptHandlerConfig {\n  debug: debugFnType;\n  stompVersions: Versions;\n  connectHeaders: StompHeaders;\n  disconnectHeaders: StompHeaders;\n  heartbeatIncoming: number;\n  heartbeatGracePeriods: number;\n  heartbeatOutgoing: number;\n  heartbeatStrategy: TickerStrategy;\n  splitLargeFrames: boolean;\n  maxWebSocketChunkSize: number;\n  forceBinaryWSFrames: boolean;\n  logRawCommunication: boolean;\n  appendMissingNULLonIncoming: boolean;\n  discardWebsocketOnCommFailure: boolean;\n  onConnect: frameCallbackType;\n  onDisconnect: frameCallbackType;\n  onStompError: frameCallbackType;\n  onWebSocketClose: closeEventCallbackType;\n  onWebSocketError: wsErrorCallbackType;\n  onUnhandledMessage: messageCallbackType;\n  onUnhandledReceipt: frameCallbackType;\n  onUnhandledFrame: frameCallbackType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            retryIfDisconnected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abort\n                                        \n                                \n                                \n                                        \n                                            commit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subscribeOnlyOnce\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unsubHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\nIf header information can change over time, and you are allowing automatic re-subscriptions,\nconsider using a callback as the value rather than a string literal.\n             const subHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // The subHeadersCallback will be invoked before every (re)subscription.\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n             const unsubHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n             // `unsubHeadersCallback` will be invoked to get the headers.\n             sub.unsubscribe();\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   *\n   * If header information can change over time, and you are allowing automatic re-subscriptions,\n   * consider using a callback as the value rather than a string literal.\n   *\n   * ```typescript\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of these calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                correlateErrors\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:133\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:179\n                        \n                    \n\n            \n                \n                    Callback, invoked before attempting connection to the STOMP broker.\nYou can change the configuration of the rxStomp, which will impact the immediate connecting.\nIt is valid to call RxStomp#deactivate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case, connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive RxStomp as parameter.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                        \n                    \n\n            \n                \n                    The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:152\n                        \n                    \n\n            \n                \n                    Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:93\n                        \n                    \n\n            \n                \n                    Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait forever.\nMaps to: Client#connectionTimeout.\nCaution: This feature is experimental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        correlateErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:190\n                        \n                    \n\n            \n                \n                    Callback invoked on every ERROR frame. If the callback returns the ID of a currently\nsubscribed destination, the frame will be emitted as an error on the corresponding\nobservable(s), terminating them.\nImportantly, since those observables are now closed, this means a re-SUBSCRIBE to\nthe erroneous destination will not be attempted during an automatic reconnection of\nthe websocket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:60\n                        \n                    \n\n            \n                \n                    Enable client debugging\nExample:\n    debug: (msg: string): void => {\n      console.log(new Date(), msg);\n    },\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:143\n                        \n                    \n\n            \n                \n                    Maps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:159\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:128\n                        \n                    \n\n            \n                \n                    Maps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:107\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatIncoming\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:114\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                        \n                    \n\n            \n                \n                    Set it to log the actual raw communication with the broker.\nWhen unset, it logs only the headers of the parsed frames.\nChange in this takes effect from the next broker reconnection.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:138\n                        \n                    \n\n            \n                \n                    Maps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:100\n                        \n                    \n\n            \n                \n                    Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: Client#reconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:123\n                        \n                    \n\n            \n                \n                    Enable a non-standards compliant mode of splitting outgoing large text packets.\nSee Client#splitLargeFrames for details.\nProbably, only Java Spring based brokers support this mode.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during STOMP handshake. By default, versions 1.2, 1.1, and 1.0 are attempted.\nExample:\n       // Try only versions 1.1 and 1.0\n       rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:83\n                        \n                    \n\n            \n                \n                    This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n       // use a WebSocket\n       rxStompConfig.webSocketFactory= function () {\n         return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n       };\n\n       // Typical usage with SockJS\n       rxStompConfig.webSocketFactory= function () {\n         return new SockJS(\"http://broker.329broker.com/stomp\");\n       };Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, IFrame, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of these calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default, versions `1.2`, `1.1`, and `1.0` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.1 and 1.0\n   *        rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs only the headers of the parsed frames.\n   *\n   * Change in this takes effect from the next broker reconnection.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * Enable client debugging\n   *\n   * Example:\n   *\n   * ```typescript\n   *     debug: (msg: string): void => {\n   *       console.log(new Date(), msg);\n   *     },\n   * ```\n   */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 0, which implies wait forever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   *\n   * Caution: This feature is experimental.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@link Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable a non-standards compliant mode of splitting outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Probably, only Java Spring based brokers support this mode.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked before attempting connection to the STOMP broker.\n   *\n   * You can change the configuration of the rxStomp, which will impact the immediate connecting.\n   * It is valid to call [RxStomp#deactivate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case, connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp]{@link RxStomp} as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n\n  /**\n   * Callback invoked on every ERROR frame. If the callback returns the ID of a currently\n   * subscribed destination, the frame will be emitted as an error on the corresponding\n   * observable(s), terminating them.\n   *\n   * Importantly, since those observables are now closed, this means a re-SUBSCRIBE to\n   * the erroneous destination will _not_ be attempted during an automatic reconnection of\n   * the websocket.\n   */\n  public correlateErrors?: (error: IFrame) => string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:32\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:58\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:69\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { filter, first, Observable, Observer, Subscription } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { IMessage, IPublishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp.js';\nimport {\n  RxStompRPCConfig,\n  setupReplyQueueFnType,\n} from './rx-stomp-rpc-config.js';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: IPublishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: IPublishParams): Observable {\n    // defensively copy\n    const headers: StompHeaders = { ...(params.headers || {}) };\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || uuid();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ ...params, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                RPC Config. For examples see the guide.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                        \n                    \n\n            \n                \n                    Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                        \n                    \n\n            \n                \n                    Setup the reply queue. See the guide for details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        WebSocketClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                        \n                    \n\n            \n                \n                    In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n       StompJs = require('../../esm5/');\n       Stomp = StompJs.Stomp;\n       Stomp.WebSocketClass = require('websocket').w3cwebsocket;Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        client\n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n       var url = \"ws://localhost:61614/stomp\";\n       var client = Stomp.client(url);Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        over\n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n       var client = Stomp.over(function(){\n         return new WebSocket('ws://localhost:15674/ws')\n       });Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions.js';\nimport { CompatClient } from './compat-client.js';\nimport { IStompSocket } from '../types.js';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatStrategy\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatToleranceMultiplier\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxReconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectTimeMode\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:91\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:126\n                        \n                    \n\n            \n                \n                    See Client#beforeConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:26\n                        \n                    \n\n            \n                \n                    See Client#brokerURL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:101\n                        \n                    \n\n            \n                \n                    See Client#connectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:41\n                        \n                    \n\n            \n                \n                    See Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:161\n                        \n                    \n\n            \n                \n                    See Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:166\n                        \n                    \n\n            \n                \n                    See Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:106\n                        \n                    \n\n            \n                \n                    See Client#disconnectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:86\n                        \n                    \n\n            \n                \n                    See Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:61\n                        \n                    \n\n            \n                \n                    See Client#heartbeatIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:71\n                        \n                    \n\n            \n                \n                    See Client#heartbeatOutgoing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TickerStrategy\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:76\n                        \n                    \n\n            \n                \n                    See Client#heartbeatStrategy.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatToleranceMultiplier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:66\n                        \n                    \n\n            \n                \n                    See Client#heartbeatToleranceMultiplier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:156\n                        \n                    \n\n            \n                \n                    See Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxReconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:51\n                        \n                    \n\n            \n                \n                    See Client#maxReconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:96\n                        \n                    \n\n            \n                \n                    See Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:171\n                        \n                    \n\n            \n                \n                    See Client#onChangeState.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:131\n                        \n                    \n\n            \n                \n                    See Client#onConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDisconnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:136\n                        \n                    \n\n            \n                \n                    See Client#onDisconnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:141\n                        \n                    \n\n            \n                \n                    See Client#onStompError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:121\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledFrame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         messageCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:111\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledMessage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledReceipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:116\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledReceipt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         closeEventCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:146\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketClose.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         wsErrorCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:151\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:46\n                        \n                    \n\n            \n                \n                    See Client#reconnectDelay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectTimeMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReconnectionTimeMode\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:56\n                        \n                    \n\n            \n                \n                    See Client#reconnectTimeMode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:81\n                        \n                    \n\n            \n                \n                    See Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:31\n                        \n                    \n\n            \n                \n                    See Client#stompVersions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:36\n                        \n                    \n\n            \n                \n                    See Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\nimport {\n  ActivationState,\n  TickerStrategy,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  ReconnectionTimeMode,\n  wsErrorCallbackType,\n} from './types.js';\nimport { Versions } from './versions.js';\nimport { Client } from './client.js';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#maxReconnectDelay]{@link Client#maxReconnectDelay}\n   */\n  public maxReconnectDelay?: number;\n\n  /**\n   * See [Client#reconnectTimeMode]{@link Client#reconnectTimeMode}\n   */\n  public reconnectTimeMode?: ReconnectionTimeMode;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatToleranceMultiplier]{@link Client#heartbeatToleranceMultiplier}.\n   */\n  public heartbeatToleranceMultiplier?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#heartbeatStrategy]{@link Client#heartbeatStrategy}.\n   */\n  public heartbeatStrategy?: TickerStrategy;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: (client: Client) => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            unsubscribe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id associated with this subscription.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubscribe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubscribe:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unsubscribe. See Client#unsubscribe for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ticker.html":{"url":"classes/Ticker.html","title":"class - Ticker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ticker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/ticker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_interval: number, _strategy, _debug: debugFnType)\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/ticker.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _interval\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _strategy\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _debug\n                                                  \n                                                        \n                                                                        debugFnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        start\n                        \n                    \n                \n            \n            \n                \n                    \n                    start(tick: (elapsedTime: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/ticker.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tick\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stop\n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/ticker.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, TickerStrategy } from './types.js';\n\nexport class Ticker {\n  private readonly _workerScript = `\n    var startTime = Date.now();\n    setInterval(function() {\n        self.postMessage(Date.now() - startTime);\n    }, ${this._interval});\n  `;\n\n  private _worker?: Worker;\n  private _timer?: any;\n\n  constructor(\n    private readonly _interval: number,\n    private readonly _strategy = TickerStrategy.Interval,\n    private readonly _debug: debugFnType) {\n  }\n\n  public start(tick: (elapsedTime: number) => void): void {\n    this.stop();\n\n    if (this.shouldUseWorker()) {\n      this.runWorker(tick);\n    } else {\n      this.runInterval(tick);\n    }\n  }\n\n  public stop(): void {\n    this.disposeWorker();\n    this.disposeInterval();\n  }\n\n  private shouldUseWorker(): boolean {\n    return typeof(Worker) !== 'undefined' && this._strategy === TickerStrategy.Worker\n  }\n\n  private runWorker(tick: (elapsedTime: number) => void): void {\n    this._debug('Using runWorker for outgoing pings');\n    if (!this._worker) {\n      this._worker = new Worker(\n        URL.createObjectURL(\n          new Blob([this._workerScript], { type: 'text/javascript' })\n        )\n      );\n      this._worker.onmessage = (message) => tick(message.data);\n    }\n  }\n\n  private runInterval(tick: (elapsedTime: number) => void): void {\n    this._debug('Using runInterval for outgoing pings');\n    if (!this._timer) {\n      const startTime = Date.now();\n      this._timer = setInterval(() => {\n        tick(Date.now() - startTime);\n      }, this._interval);\n    }\n  }\n\n  private disposeWorker(): void {\n    if (this._worker) {\n      this._worker.terminate();\n      delete this._worker;\n      this._debug('Outgoing ping disposeWorker');\n    }\n  }\n\n  private disposeInterval(): void {\n    if (this._timer) {\n      clearInterval(this._timer);\n      delete this._timer;\n      this._debug('Outgoing ping disposeInterval');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\nYou will be creating an instance of this class if you want to override\nsupported versions to be declared during STOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_0\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:10\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.1'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:14\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.2'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:18\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.2\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        protocolVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        supportedVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n   *\n   * You will be creating an instance of this class if you want to override\n   * supported versions to be declared during STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (45/45)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (48/48)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            interface\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/ticker.ts\n            \n            class\n            Ticker\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            ReconnectionTimeMode   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                        \n                            TickerStrategy   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ReconnectionTimeMode\n                    \n                \n                    \n                        \n                            Possible reconnection wait time modes\n\n                        \n                    \n                        \n                            \n                                 LINEAR\n                            \n                        \n                        \n                            \n                                 EXPONENTIAL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TickerStrategy\n                    \n                \n                    \n                        \n                            Possible ticker strategies for outgoing heartbeat ping\n\n                        \n                    \n                        \n                            \n                                 Interval\n                            \n                        \n                        \n                            \n                                Value : interval\n                            \n                        \n                        \n                            \n                                 Worker\n                            \n                        \n                        \n                            \n                                Value : worker\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover the following libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs with RxJS primitives\n\nThe documentation for classes also indicates which library each of the classes\n belongs. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using the compatibility mode, your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Documentation for StompJS family\n        \n            License : Apache-2.0\n        \n            Author : Deepak Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a [CloseEvent]://developer.mozilla.org/en-US/docs/Web/API/CloseEventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as a parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an [Event]://developer.mozilla.org/en-US/docs/Web/API/Eventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    For examples see the guide.\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
