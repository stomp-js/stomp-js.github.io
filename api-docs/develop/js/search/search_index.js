var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.363,1,1.116]],["body/interfaces/IFrame.html",[0,0.392,1,2.112,2,1.064,3,0.467,4,0.467,5,0.392,6,1.551,7,2.057,8,0.392,9,3.226,10,0.335,11,2.754,12,3.226,13,3.984,14,3.984,15,3.984,16,1.809,17,3.984,18,3.226,19,2.354,20,2.354,21,1.838,22,0.427,23,0.427,24,1.411,25,3.226,26,0.322,27,0.618,28,3.854,29,3.609,30,4.121,31,4.759,32,4.01,33,0.664,34,0.049,35,1.11,36,1.15,37,2.727,38,2.057,39,3.984,40,1.791,41,3.226,42,3.226,43,3.984,44,3.984,45,1.809,46,3.226,47,0.726,48,1.551,49,2.434,50,2.434,51,2.057,52,0.618,53,2.727,54,2.434,55,0.034,56,0.034]],["title/interfaces/IMessage.html",[0,0.363,24,0.986]],["body/interfaces/IMessage.html",[0,0.397,1,1.802,2,1.078,3,0.472,4,0.472,5,0.397,6,1.571,8,0.397,10,0.196,20,2.374,21,1.592,22,0.482,23,0.482,24,1.694,25,3.253,26,0.326,27,0.742,29,2.083,33,0.586,34,0.049,36,1.086,45,1.824,47,0.97,48,1.571,49,2.465,51,2.074,52,0.624,55,0.034,56,0.034,57,2.083,58,2.074,59,2.471,60,2.374,61,1.571,62,3.253,63,4.017,64,1.407,65,3.642,66,2.319,67,3.253,68,4.136,69,4.136,70,1.917,71,4.783,72,4.783,73,4.783,74,2.469,75,3.873,76,4.017,77,4.017,78,2.465,79,3.043,80,2.465,81,3.043,82,3.043,83,3.043,84,2.465,85,3.043,86,1.824,87,3.043,88,2.083]],["title/interfaces/IPublishParams.html",[0,0.363,89,1.264]],["body/interfaces/IPublishParams.html",[0,0.566,1,1.374,2,0.66,3,0.289,4,0.289,5,0.243,8,0.243,10,0.12,11,1.769,16,1.286,21,1.597,22,0.51,23,0.51,24,1.214,26,0.2,27,0.44,28,3.336,29,3.181,30,1.509,32,3.101,33,0.652,34,0.05,35,1.086,36,1.048,40,1.862,41,2.776,47,0.925,48,0.962,51,1.977,52,0.794,53,1.275,55,0.024,56,0.024,59,0.846,61,2.127,78,1.509,86,2.11,88,1.939,89,1.739,90,1.101,91,1.462,92,2.833,93,2.776,94,2.833,95,1.599,96,2.97,97,3.83,98,2.833,99,2.294,100,1.135,101,2.833,102,2.833,103,3.101,104,2.833,105,1.674,106,1.939,107,2.833,108,1.863,109,1.003,110,1.275,111,2.434,112,2.82,113,1.674,114,1.509,115,1.939,116,2.97,117,1.863,118,2.833,119,1.863,120,1.939,121,2.833,122,2.833,123,1.863,124,1.863,125,1.939,126,1.863,127,1.509,128,1.275,129,1.275,130,0.846,131,2.833,132,2.82,133,2.833,134,1.863,135,1.863,136,1.509,137,1.863,138,2.833,139,2.833,140,3.83,141,4.12,142,1.863,143,1.101,144,1.863,145,1.863,146,1.863,147,1.863,148,3.087,149,1.863,150,3.83,151,3.336,152,1.863,153,1.863,154,1.863,155,1.863,156,1.462,157,1.275,158,2.294,159,1.863,160,1.863,161,1.275,162,1.863,163,1.939,164,2.346,165,1.863,166,2.294,167,1.863,168,2.621,169,1.863,170,1.863,171,1.863,172,0.962,173,1.863,174,1.939,175,1.509,176,2.833,177,1.275,178,1.509,179,1.509,180,1.275,181,1.509,182,1.275,183,1.509,184,1.509,185,1.509,186,1.863,187,1.275,188,1.275,189,1.275,190,1.275,191,1.275,192,1.275,193,1.275,194,1.275,195,1.275,196,1.275,197,1.275,198,1.275,199,1.509,200,1.509,201,1.509,202,1.509,203,1.509,204,1.509,205,1.509,206,1.509]],["title/interfaces/IRxStompPublishParams.html",[0,0.363,207,1.906]],["body/interfaces/IRxStompPublishParams.html",[0,0.467,2,1.269,3,0.556,4,0.556,5,0.467,8,0.467,10,0.313,16,2.025,22,0.478,23,0.384,26,0.384,27,0.693,33,0.467,34,0.049,40,1.947,47,0.866,52,0.556,55,0.038,56,0.038,59,2.025,67,3.613,89,2.205,95,1.395,100,1.788,105,2.636,106,3.48,164,3.48,207,3.054,208,1.269,209,2.453,210,1.627,211,2.902,212,2.453,213,4.461,214,3.054,215,4.461,216,1.58,217,5.084,218,4.461,219,4.461,220,3.613,221,4.461,222,4.461,223,4.461,224,3.583]],["title/interfaces/ITransaction.html",[0,0.363,225,1.906]],["body/interfaces/ITransaction.html",[0,0.459,2,1.248,3,0.547,4,0.547,5,0.459,6,1.819,8,0.459,19,2.608,20,2.608,22,0.377,23,0.377,26,0.377,27,0.685,33,0.629,34,0.049,35,1.015,52,0.547,55,0.038,56,0.038,64,1.392,66,2.362,68,3.574,69,3.574,70,2.025,86,2.004,225,3.021,226,2.853,227,5.387,228,3.523,229,2.853,230,3.523,231,3.523,232,3.523,233,5.309,234,5.309,235,2.986,236,4.414,237,4.414,238,3.574,239,3.574,240,3.523,241,3.523]],["title/interfaces/IWatchParams.html",[0,0.363,242,1.906]],["body/interfaces/IWatchParams.html",[0,0.288,2,0.783,3,0.343,4,0.343,5,0.288,8,0.288,10,0.208,16,2.098,21,1.793,22,0.345,23,0.237,26,0.237,27,0.5,33,0.543,34,0.05,35,0.932,36,1.204,38,1.662,40,1.521,45,1.892,47,0.534,52,0.343,53,2.853,55,0.028,56,0.028,59,1.892,60,2.463,61,2.151,95,1.528,96,3.465,100,1.29,103,2.607,105,1.902,172,1.662,208,0.783,209,1.514,212,1.514,214,2.204,216,1.14,220,2.607,242,2.204,243,1.792,244,4.168,245,4.621,246,4.168,247,4.621,248,3.219,249,3.219,250,4.168,251,2.607,252,2.607,253,2.204,254,3.219,255,3.219,256,2.607,257,2.607,258,3.219,259,3.219,260,3.219,261,3.346,262,4.621,263,2.386,264,4.168,265,4.168,266,4.168,267,4.168,268,4.168,269,3.375,270,4.168,271,3.375,272,2.607,273,3.219,274,2.204,275,2.204,276,3.219,277,3.219,278,3.219,279,2.607,280,3.219,281,3.219,282,3.219,283,3.219,284,3.219,285,3.219,286,4.621,287,3.375,288,2.204,289,2.204,290,2.607,291,3.219,292,3.219,293,3.219,294,2.607]],["title/classes/RxStompConfig.html",[295,0.363,296,1.646]],["body/classes/RxStompConfig.html",[1,0.741,3,0.17,4,0.17,5,0.143,8,0.143,9,1.497,10,0.339,11,1.454,16,2.042,18,1.497,19,1.093,20,1.093,21,1.208,22,0.198,23,0.117,26,0.117,27,0.287,33,0.619,34,0.05,35,0.662,36,0.76,40,1.645,42,1.497,45,0.839,47,0.447,52,0.17,55,0.016,56,0.016,58,0.954,61,2.233,64,0.776,66,1.549,70,1.591,74,0.954,86,1.089,95,1.656,96,1.928,100,1.129,105,2.658,109,1.406,111,1.093,112,1.266,113,1.417,114,2.281,130,1.549,136,2.281,143,2.016,156,0.954,161,1.266,164,2.335,168,2.81,177,1.266,180,1.266,187,2.153,188,1.642,189,1.642,190,1.642,191,1.642,192,1.642,193,1.642,194,1.642,195,1.642,196,1.642,197,1.642,198,1.642,208,1.699,210,0.498,216,0.655,235,1.093,252,2.281,256,1.497,257,1.497,263,1.969,271,2.281,272,1.497,274,1.266,279,1.497,294,0.888,295,0.143,296,1.093,297,0.343,298,2.179,299,0.566,300,2.281,301,2.281,302,1.732,303,1.849,304,1.849,305,1.497,306,2.481,307,1.942,308,1.942,309,1.942,310,2.398,311,1.942,312,1.942,313,1.903,314,1.096,315,1.497,316,1.096,317,1.849,318,1.849,319,1.849,320,2.281,321,1.849,322,1.093,323,1.849,324,1.096,325,1.849,326,2.281,327,1.266,328,2.281,329,1.849,330,1.849,331,1.849,332,1.849,333,1.849,334,1.849,335,1.849,336,1.849,337,1.849,338,1.849,339,1.849,340,5.131,341,1.497,342,1.096,343,1.497,344,1.849,345,1.849,346,1.849,347,1.497,348,2.817,349,2.817,350,2.335,351,1.096,352,1.849,353,2.817,354,1.849,355,1.849,356,1.849,357,1.849,358,2.281,359,1.497,360,1.849,361,1.849,362,1.849,363,1.093,364,1.928,365,1.849,366,1.497,367,1.096,368,1.849,369,1.849,370,1.849,371,3.815,372,3.815,373,1.849,374,1.849,375,1.849,376,1.497,377,2.817,378,1.849,379,1.849,380,1.096,381,3.146,382,1.849,383,1.849,384,1.849,385,1.849,386,1.849,387,1.849,388,1.849,389,1.849,390,1.849,391,1.849,392,1.849,393,1.849,394,2.817,395,2.281,396,2.281,397,1.096,398,2.817,399,1.238,400,1.849,401,1.849,402,1.849,403,1.096,404,1.497,405,1.096,406,1.849,407,1.497,408,1.096,409,1.497,410,1.096,411,1.849,412,2.817,413,2.817,414,3.412,415,1.497,416,1.096,417,2.817,418,1.497,419,1.096,420,1.849,421,1.849,422,1.849,423,1.849,424,1.849,425,1.849,426,1.849,427,1.266,428,1.849,429,1.497,430,1.849,431,1.849,432,1.497,433,1.497,434,1.096,435,1.497,436,1.096,437,1.497,438,1.849,439,1.497,440,1.096,441,1.497,442,1.849,443,1.849,444,2.281,445,1.849,446,1.849,447,1.849,448,1.849,449,2.281,450,1.849,451,1.849,452,1.849,453,1.849,454,1.096,455,1.849,456,1.497,457,2.281,458,2.547,459,1.849,460,1.849,461,2.016,462,1.849,463,1.096,464,1.497,465,1.096,466,1.497,467,1.849,468,2.281,469,1.849,470,1.849,471,1.849,472,1.849,473,1.497,474,2.817,475,1.849,476,1.497,477,1.849,478,1.266,479,0.75,480,1.096,481,1.849,482,1.642,483,1.497,484,0.888,485,0.888,486,0.75,487,0.888,488,0.888,489,0.888,490,0.888,491,1.497,492,0.888,493,0.888,494,0.888,495,0.888,496,0.888,497,0.888,498,1.096,499,1.096,500,1.096,501,1.096,502,1.096,503,1.096,504,0.888,505,1.096]],["title/classes/RxStompRPC.html",[295,0.363,506,1.646]],["body/classes/RxStompRPC.html",[3,0.321,4,0.321,5,0.27,8,0.27,10,0.301,21,1.429,22,0.328,23,0.221,24,1.292,26,0.221,33,0.476,34,0.05,36,0.74,40,0.829,45,1.391,47,1.041,52,0.321,55,0.026,56,0.026,58,1.581,59,0.939,60,2.384,64,1.321,66,1.391,74,2.083,89,2.12,91,1.884,95,1.141,106,1.415,130,1.657,156,1.581,172,1.581,208,1.429,210,1.391,216,1.085,235,2.759,238,1.674,261,2.498,263,2.224,269,1.674,274,2.097,288,1.415,289,3.088,290,2.481,295,0.27,297,0.647,298,1.832,302,2.048,306,2.048,313,1.462,327,1.415,347,1.674,364,2.762,427,2.097,479,1.415,506,1.81,507,1.674,508,2.481,509,3.063,510,3.653,511,2.572,512,3.063,513,2.097,514,2.762,515,2.097,516,4.035,517,2.097,518,2.068,519,4.035,520,2.384,521,2.068,522,2.097,523,1.884,524,1.674,525,3.063,526,2.068,527,4.035,528,4.308,529,3.063,530,3.063,531,3.063,532,3.063,533,3.649,534,3.063,535,2.068,536,3.063,537,3.063,538,3.063,539,4.035,540,3.063,541,2.481,542,2.068,543,2.068,544,3.063,545,2.068,546,3.649,547,2.097,548,2.068,549,3.267,550,2.762,551,3.267,552,3.267,553,4.669,554,2.068,555,1.674,556,1.674,557,1.674,558,2.068,559,2.068,560,2.068,561,2.068,562,2.068,563,3.063,564,1.674,565,3.063,566,2.068,567,3.063,568,3.649,569,3.063,570,3.063,571,3.063,572,2.068,573,2.068,574,1.674,575,2.068,576,2.068,577,2.068,578,2.068,579,3.649,580,3.063,581,2.068,582,2.068,583,1.674,584,2.068,585,2.068,586,2.068,587,3.063,588,3.649,589,3.063,590,2.068,591,2.068,592,2.068,593,2.068,594,2.068,595,2.068,596,2.068,597,2.068]],["title/classes/RxStompRPCConfig.html",[295,0.363,520,1.646]],["body/classes/RxStompRPCConfig.html",[3,0.487,4,0.487,5,0.409,8,0.409,10,0.312,22,0.336,23,0.336,24,1.11,26,0.336,27,0.636,33,0.595,34,0.049,35,0.96,47,1.102,52,0.636,55,0.035,56,0.035,64,1.445,95,1.513,100,1.641,208,1.616,210,1.423,216,1.11,288,2.146,289,2.804,295,0.409,297,0.98,298,2.071,299,1.618,302,2.071,306,2.338,313,1.641,364,3.312,479,2.146,510,3.317,511,2.591,514,3.436,520,2.42,523,2.114,547,3.123,549,3.317,550,2.804,551,3.317,552,3.317,555,3.317,556,3.317,557,3.317,574,3.918,583,3.918,598,4.096,599,3.695,600,4.838,601,4.562,602,3.135,603,4.096,604,4.096,605,4.096,606,3.135,607,4.096]],["title/classes/Stomp.html",[10,0.18,295,0.363]],["body/classes/Stomp.html",[3,0.275,4,0.275,5,0.231,8,0.231,10,0.295,19,1.611,22,0.292,23,0.292,26,0.19,27,0.423,33,0.433,34,0.05,35,0.988,38,0.915,47,0.803,51,2.08,52,0.275,55,0.023,56,0.023,58,1.926,64,0.751,66,1.238,70,1.833,74,0.915,75,3.262,91,1.408,95,0.853,100,0.71,109,0.628,110,1.213,111,1.047,129,3.131,130,0.805,132,1.213,143,2.96,148,2.275,151,2.691,156,1.408,158,3.022,161,1.867,172,2.361,174,1.213,229,1.435,239,2.208,253,1.867,261,2.275,263,2.287,295,0.578,297,0.554,301,2.208,306,1.509,313,1.332,322,2.703,327,1.867,343,3.445,350,1.867,359,3.262,396,2.208,399,2.7,429,3.8,437,1.435,441,2.208,461,2.831,466,2.208,468,2.208,473,3.262,478,2.554,482,1.213,483,2.691,486,1.867,508,1.435,513,3.212,515,1.867,522,1.867,523,1.716,524,1.435,541,1.435,564,3.022,608,1.435,609,2.727,610,3.324,611,4.431,612,4.574,613,4.574,614,3.8,615,3.324,616,1.773,617,2.727,618,2.727,619,1.611,620,2.727,621,2.727,622,3.732,623,1.773,624,2.727,625,4.431,626,1.773,627,2.727,628,2.727,629,2.727,630,2.727,631,4.254,632,2.727,633,1.773,634,3.262,635,2.727,636,1.773,637,2.727,638,2.727,639,2.727,640,2.727,641,3.324,642,2.727,643,2.727,644,2.727,645,2.208,646,2.727,647,2.727,648,2.727,649,2.727,650,2.727,651,2.727,652,2.727,653,2.727,654,2.727,655,2.727,656,3.732,657,1.773,658,1.773,659,1.435,660,1.773,661,1.773,662,1.773,663,1.773,664,1.773,665,1.773,666,2.727,667,1.773,668,2.727,669,1.773,670,1.773,671,1.773,672,3.324,673,1.773,674,1.773,675,3.732,676,1.773,677,1.773,678,2.727,679,1.773,680,1.773,681,1.773,682,1.773,683,1.773,684,1.773,685,1.773,686,1.773]],["title/classes/StompConfig.html",[295,0.363,687,1.906]],["body/classes/StompConfig.html",[3,0.239,4,0.239,5,0.201,8,0.201,10,0.196,22,0.262,23,0.262,26,0.165,27,0.38,33,0.695,34,0.049,35,0.515,36,0.911,37,1.675,40,1.845,45,1.111,47,0.734,48,0.796,51,1.786,52,0.239,55,0.021,56,0.021,62,1.981,64,1.546,70,1.218,80,1.249,86,1.111,95,1.752,109,1.077,110,1.056,113,1.797,115,2.081,116,3.217,120,2.081,125,2.081,130,1.111,163,1.056,168,3.152,182,1.675,187,2.081,188,2.081,189,2.081,190,2.081,191,2.081,192,2.081,193,2.081,194,2.081,195,2.081,196,2.081,197,2.081,198,2.081,199,2.462,200,2.462,201,2.462,202,2.462,203,2.462,204,2.462,205,2.462,206,2.462,214,1.675,275,1.675,295,0.396,296,1.446,297,0.482,299,0.796,300,1.981,306,2.588,307,2.462,308,2.462,309,2.462,311,2.462,312,2.462,313,2.135,315,1.981,326,1.249,341,1.981,350,1.675,366,1.981,376,1.981,399,2.072,404,1.981,407,1.981,409,1.981,415,1.981,418,1.981,433,1.981,435,1.981,439,1.981,449,1.981,464,1.981,478,1.675,482,1.056,484,1.249,485,1.249,486,1.056,487,1.249,488,1.249,489,1.249,490,1.249,491,1.249,492,1.249,493,1.249,494,1.249,495,1.249,496,1.249,497,1.249,504,1.249,517,1.675,523,1.786,550,1.675,619,1.446,659,1.249,687,1.675,688,3.16,689,2.447,690,2.447,691,3.46,692,2.447,693,2.447,694,2.447,695,3.04,696,1.543,697,1.543,698,1.543,699,1.543,700,1.543,701,1.543,702,2.447,703,1.543,704,1.543,705,1.543,706,1.543,707,1.543,708,1.543,709,1.543,710,1.543,711,2.447,712,1.543,713,2.447,714,1.543,715,2.447,716,1.543,717,2.447,718,1.543,719,2.447,720,1.543,721,1.543,722,2.447,723,1.543,724,2.447,725,1.543,726,2.447,727,1.543,728,1.543,729,1.543,730,1.543,731,1.543,732,1.543,733,1.543,734,1.543,735,1.543,736,1.543,737,1.543,738,1.543,739,1.543,740,1.543]],["title/classes/StompHeaders.html",[36,0.673,295,0.363]],["body/classes/StompHeaders.html",[3,0.615,4,0.615,5,0.517,8,0.517,10,0.256,12,3.21,16,1.8,21,1.798,22,0.425,23,0.425,34,0.046,35,1.108,36,1.146,37,3.603,38,2.047,50,3.21,52,0.615,55,0.041,56,0.041,91,2.047,295,0.517,297,1.24,305,3.21,313,1.589,320,3.21,432,3.21,688,2.804,741,3.21,742,3.965,743,3.965,744,3.965,745,3.965,746,3.965,747,3.965,748,3.965,749,3.965,750,3.965,751,3.965]],["title/interfaces/StompSubscription.html",[0,0.363,752,1.906]],["body/interfaces/StompSubscription.html",[0,0.479,2,1.299,3,0.57,4,0.57,5,0.479,8,0.479,10,0.237,21,1.299,22,0.485,23,0.485,26,0.393,27,0.703,33,0.59,34,0.049,35,1.034,36,1.094,47,0.886,48,1.894,52,0.57,55,0.039,56,0.039,60,2.675,64,1.247,65,3.666,66,2.055,70,1.814,74,2.337,84,2.972,86,1.666,235,3.169,287,4.343,522,3.099,688,2.168,752,3.509,753,2.972,754,4.527,755,4.527,756,3.67]],["title/classes/Versions.html",[109,0.986,295,0.363]],["body/classes/Versions.html",[3,0.419,4,0.419,5,0.352,8,0.352,10,0.318,11,1.911,22,0.453,23,0.289,26,0.289,27,0.575,33,0.622,34,0.049,35,1.098,38,2.183,46,2.998,52,0.419,55,0.032,56,0.032,58,1.911,91,1.392,95,0.843,100,1.824,109,1.903,130,2.067,132,1.845,143,2.188,156,1.911,157,3.374,263,1.911,295,0.551,297,0.843,306,2.44,313,2.023,322,2.913,328,2.998,358,3.992,395,2.998,427,2.534,456,2.998,457,3.992,458,3.992,461,1.593,476,2.998,515,2.534,517,1.845,523,1.392,614,4.275,757,2.183,758,4.229,759,4.229,760,4.229,761,4.229,762,4.552,763,4.552,764,2.696,765,2.696,766,3.703,767,3.703,768,3.703,769,3.703,770,3.703,771,2.696,772,4.929,773,2.696,774,2.696,775,2.696,776,2.696,777,2.696,778,2.696,779,2.696,780,2.696,781,2.696,782,2.696,783,2.696,784,2.696]],["title/coverage.html",[785,3.065]],["body/coverage.html",[0,0.691,1,1.31,5,0.426,6,2.403,7,2.238,10,0.328,24,1.158,33,0.426,34,0.049,36,0.79,55,0.036,56,0.036,57,2.238,89,1.484,90,1.932,109,1.158,207,2.238,208,1.844,209,2.881,210,1.484,211,2.647,212,2.881,225,2.238,226,2.647,242,2.238,243,2.647,295,0.713,296,1.932,298,2.232,299,2.403,302,1.484,363,1.932,399,1.687,461,1.932,506,1.932,507,2.647,511,1.687,520,1.932,608,2.647,634,2.647,687,2.238,688,2.751,741,2.647,752,2.238,753,2.647,757,2.647,785,2.647,786,3.269,787,3.269,788,5.606,789,3.269,790,3.269,791,3.269,792,4.655,793,4.655,794,3.269,795,3.269,796,3.269,797,3.269,798,3.269,799,3.269,800,3.269,801,3.269,802,4.209,803,3.269,804,3.269,805,3.269,806,3.269,807,3.269,808,3.269]],["title/miscellaneous/enumerations.html",[809,1.379,810,2.709]],["body/miscellaneous/enumerations.html",[10,0.33,22,0.431,26,0.431,34,0.041,55,0.041,56,0.041,90,2.376,148,2.753,163,2.753,166,3.875,174,3.497,175,3.875,177,3.276,178,3.875,179,3.875,180,3.276,181,3.257,182,3.276,183,3.257,184,3.257,185,3.257,208,1.424,216,1.424,298,1.826,302,1.826,809,2.376,810,3.257,811,3.875,812,4.786,813,3.257,814,4.786]],["title/index.html",[26,0.25,815,2.333,816,2.333]],["body/index.html",[10,0.324,23,0.5,34,0.04,55,0.04,56,0.04,64,1.285,99,4.063,109,1.652,128,2.639,157,2.639,172,2.409,210,1.75,216,1.365,251,3.122,253,2.639,275,2.639,297,1.459,302,1.75,363,2.278,399,1.99,444,3.122,506,2.278,511,1.99,513,2.639,619,2.278,645,3.122,817,3.855,818,3.855,819,5.018,820,5.214,821,3.855,822,3.855,823,3.855,824,3.855,825,3.855,826,3.855,827,3.855,828,3.855,829,3.855,830,3.855,831,3.855,832,3.855,833,3.855,834,3.855,835,3.855,836,3.855,837,5.018]],["title/modules.html",[838,3.065]],["body/modules.html",[34,0.044,55,0.044,56,0.044,838,3.612]],["title/overview.html",[839,3.065]],["body/overview.html",[2,1.563,34,0.043,55,0.043,56,0.043,297,1.38,839,3.574,840,4.413,841,4.413]],["title/properties.html",[27,0.519,842,2.333]],["body/properties.html",[8,0.558,27,0.664,34,0.048,55,0.042,56,0.042,322,2.528,363,2.528,619,2.528,843,4.278,844,4.278,845,4.278,846,4.278,847,4.278,848,4.278,849,4.278,850,4.278]],["title/miscellaneous/typealiases.html",[809,1.379,851,3.345]],["body/miscellaneous/typealiases.html",[1,1.928,6,2.273,7,3.014,10,0.31,11,2.273,22,0.577,23,0.568,24,1.704,26,0.376,33,0.457,34,0.041,35,0.739,54,2.841,55,0.038,56,0.038,57,3.014,59,1.999,61,2.683,64,0.966,70,2.083,88,2.401,89,1.999,90,2.073,93,3.565,111,3.071,112,3.558,113,2.602,115,3.014,116,3.014,120,3.014,125,3.014,127,2.841,128,2.401,129,2.401,208,1.242,216,1.242,298,1.593,299,2.273,511,2.273,514,2.401,547,3.014,599,2.841,809,2.073,811,4.295,813,2.841,852,3.508,853,4.402,854,3.508,855,3.508,856,3.508,857,3.508]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.0",{"_index":843,"title":{},"body":{"properties.html":{}}}],["0.1.1",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.0']);maps",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.1",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":840,"title":{},"body":{"overview.html":{}}}],["100",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["19/19",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["2.0",{"_index":847,"title":{},"body":{"properties.html":{}}}],["2/2",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["44/44",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":841,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["_customreplyqueue",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_dummysubscription",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_not_",{"_index":505,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["_repliesobservable",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":233,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":743,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["ack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["acknowledgement",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{}}}],["activation",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":182,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":183,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":605,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":609,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["added",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":746,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":213,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["alias",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":88,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":667,"title":{},"body":{"classes/Stomp.html":{}}}],["allowing",{"_index":255,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["allows",{"_index":652,"title":{},"body":{"classes/Stomp.html":{}}}],["alternative",{"_index":637,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":651,"title":{},"body":{"classes/Stomp.html":{}}}],["another",{"_index":668,"title":{},"body":{"classes/Stomp.html":{}}}],["apache",{"_index":846,"title":{},"body":{"properties.html":{}}}],["api",{"_index":819,"title":{},"body":{"index.html":{}}}],["appendmissingnullonincoming",{"_index":197,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":766,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["associated",{"_index":754,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["assumes",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempt",{"_index":455,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempted",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempting",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":848,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":682,"title":{},"body":{"classes/Stomp.html":{}}}],["automatic",{"_index":256,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["automatically",{"_index":279,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["available",{"_index":745,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["before",{"_index":272,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["belongs",{"_index":830,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarytype",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["brokers",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["brokerurl",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["builds",{"_index":828,"title":{},"body":{"index.html":{}}}],["bye",{"_index":264,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["call.html",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["callable",{"_index":644,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["calling",{"_index":229,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["case",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":285,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":232,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":295,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["classes",{"_index":297,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":596,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":236,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":241,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":504,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":230,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":237,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":240,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":692,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":731,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":702,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":739,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":87,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":711,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":740,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":713,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":734,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":715,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":735,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":717,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":736,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":719,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":733,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":722,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":732,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":724,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":737,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":726,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":738,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":755,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":756,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#websocketfactory",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":624,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":643,"title":{},"body":{"classes/Stomp.html":{}}}],["client.js",{"_index":658,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closed",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent]://developer.mozilla.org/en",{"_index":854,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":234,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":657,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":634,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":678,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["compliant",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":835,"title":{},"body":{"index.html":{}}}],["config",{"_index":598,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.js",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["config.ts",{"_index":299,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:100",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:101",{"_index":718,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:106",{"_index":697,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:107",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:111",{"_index":712,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:114",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:116",{"_index":714,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":716,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:123",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:126",{"_index":723,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:128",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:131",{"_index":725,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:133",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:136",{"_index":708,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:138",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:141",{"_index":701,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:143",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:146",{"_index":703,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:151",{"_index":710,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:152",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:159",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:179",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:190",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":602,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:26",{"_index":698,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":606,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:31",{"_index":729,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:36",{"_index":730,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:41",{"_index":700,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":727,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:51",{"_index":706,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:56",{"_index":707,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:60",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:61",{"_index":728,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:66",{"_index":705,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:71",{"_index":696,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:76",{"_index":709,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:81",{"_index":699,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:83",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:86",{"_index":704,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:91",{"_index":720,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:96",{"_index":721,"title":{},"body":{"classes/StompConfig.html":{}}}],["configuration",{"_index":300,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connect",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["connected",{"_index":628,"title":{},"body":{"classes/Stomp.html":{}}}],["connectheaders",{"_index":189,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["connectiontimeout",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["consider",{"_index":259,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["console.log(new",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["console.warn",{"_index":681,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../rx",{"_index":813,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../types.ts",{"_index":811,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/rx",{"_index":208,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":608,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":636,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":616,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":626,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":688,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":757,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":771,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":773,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":774,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":765,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":775,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":777,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":776,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":261,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["constructor",{"_index":517,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["constructor(public",{"_index":781,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":518,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(versions",{"_index":764,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":747,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copied",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copy",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlateerrors",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["correlation",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":588,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":821,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["corresponds",{"_index":689,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":825,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":785,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":748,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":522,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["created",{"_index":228,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["creates",{"_index":627,"title":{},"body":{"classes/Stomp.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["currently",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["custom",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["data",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["date",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["deactivating",{"_index":184,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":187,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declare",{"_index":660,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":770,"title":{},"body":{"classes/Versions.html":{}}}],["deepak",{"_index":849,"title":{},"body":{"properties.html":{}}}],["default",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["defaultmessagessubscription",{"_index":587,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":597,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["defensively",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defined",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["delay",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependency",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["dependent",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":611,"title":{},"body":{"classes/Stomp.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["destination",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["details",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["development",{"_index":822,"title":{},"body":{"index.html":{}}}],["disable",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":198,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnectheaders",{"_index":190,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnection",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["docs",{"_index":820,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":686,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["documents",{"_index":833,"title":{},"body":{"index.html":{}}}],["dom",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":219,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["during",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":275,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{},"index.html":{}}}],["effect",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":767,"title":{},"body":{"classes/Versions.html":{}}}],["emitted",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["enable",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enqueued",{"_index":218,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ensure",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["entry",{"_index":837,"title":{},"body":{"index.html":{}}}],["enum",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":810,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":618,"title":{},"body":{"classes/Stomp.html":{}}}],["erroneous",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["error",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["established",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["etc",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["event]://developer.mozilla.org/en",{"_index":856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["example",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["examples",{"_index":599,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["experimental",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["export",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["factory",{"_index":610,"title":{},"body":{"classes/Stomp.html":{}}}],["false",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["family",{"_index":844,"title":{},"body":{"properties.html":{}}}],["feature",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["fetch",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":690,"title":{},"body":{"classes/StompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":591,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["flag",{"_index":278,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["forcebinarywsframes",{"_index":195,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["forever",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.js",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#body",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frames",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["function",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":742,"title":{},"body":{"classes/StompHeaders.html":{}}}],["generated",{"_index":834,"title":{},"body":{"index.html":{}}}],["generating",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getting",{"_index":815,"title":{"index.html":{}},"body":{}}],["guide",{"_index":514,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["guide](/guide/rx",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["guides",{"_index":831,"title":{},"body":{"index.html":{}}}],["hack",{"_index":666,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":270,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handshake",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{}}}],["headers.js",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["headers.ts",{"_index":741,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":751,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":589,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":594,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":191,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":192,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":641,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":684,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":235,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["identifier",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["impact",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":508,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implies",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["important",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["importantly",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["inactive",{"_index":185,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":750,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["information",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":694,"title":{},"body":{"classes/StompConfig.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"overview.html":{}}}],["internal",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":290,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["interval",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoked",{"_index":271,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["invoking",{"_index":284,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":89,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":207,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issued",{"_index":291,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["istompthandlerconfig",{"_index":186,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":225,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":242,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":685,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":676,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":677,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":283,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["kumar",{"_index":850,"title":{},"body":{"properties.html":{}}}],["large",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["length",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":749,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":827,"title":{},"body":{"index.html":{}}}],["library",{"_index":829,"title":{},"body":{"index.html":{}}}],["license",{"_index":845,"title":{},"body":{"properties.html":{}}}],["line:variable",{"_index":664,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["literal",{"_index":260,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["located",{"_index":630,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":196,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":613,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":527,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["maps",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["marks",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matching",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["maxwebsocketchunksize",{"_index":194,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":592,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.js",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":221,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["messaging",{"_index":512,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{}}}],["methods",{"_index":515,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":809,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modules",{"_index":838,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":645,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":669,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["nack",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":523,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["navigating",{"_index":817,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["needed",{"_index":650,"title":{},"body":{"classes/Stomp.html":{}}}],["new",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":617,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["now",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["npm",{"_index":823,"title":{},"body":{"index.html":{}}}],["null",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["number",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["object",{"_index":301,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":289,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["observable(s",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observable.create((rpcobserver",{"_index":586,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observables",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observer",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":282,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["once",{"_index":646,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":695,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":199,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":200,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["one",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onmessage",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":201,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":206,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":204,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":205,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":202,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":203,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["open",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["options",{"_index":214,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":642,"title":{},"body":{"classes/Stomp.html":{}}}],["outgoing",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":635,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":769,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":839,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":842,"title":{"properties.html":{}},"body":{}}],["packets",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["parameter",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["params",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":212,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{}}}],["passcode",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["passing",{"_index":653,"title":{},"body":{"classes/Stomp.html":{}}}],["pipe",{"_index":590,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":513,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["point",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["preferred",{"_index":836,"title":{},"body":{"index.html":{}}}],["present",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":670,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["probably",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["procedure",{"_index":510,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["promise",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"properties.html":{}}}],["protocol",{"_index":772,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":625,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":762,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":661,"title":{},"body":{"classes/Stomp.html":{}}}],["public",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["publish",{"_index":211,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["published",{"_index":222,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishparams",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":583,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/rpc",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuename",{"_index":268,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rabbitmq",{"_index":604,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["raw",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re",{"_index":257,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["re)connection",{"_index":277,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["re)subscription",{"_index":273,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["readystate",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["receive",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{}}}],["reconnect",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reconnectdelay",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":647,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reestablished",{"_index":223,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["released",{"_index":824,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remains",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["remarks",{"_index":673,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":509,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":612,"title":{},"body":{"classes/Stomp.html":{}}}],["replaced",{"_index":693,"title":{},"body":{"classes/StompConfig.html":{}}}],["replies",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["repliesobservable",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":585,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":600,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["require('../../esm5",{"_index":620,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":662,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket;deprecated",{"_index":623,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["resubscribe",{"_index":280,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["results",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retry",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":217,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":263,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["returns",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["rpc",{"_index":511,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(params",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts",{"_index":507,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:32",{"_index":521,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:58",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:69",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":593,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":210,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":288,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["rxstomp",{"_index":302,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#configure",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate]{@link",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":215,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":224,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":244,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":293,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.watch",{"_index":267,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp]{@link",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":296,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#websocketfactory",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":506,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":520,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstompstate",{"_index":812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["same",{"_index":691,"title":{},"body":{"classes/StompConfig.html":{}}}],["scripts",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":238,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{}}}],["send(data",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sent",{"_index":744,"title":{},"body":{"classes/StompHeaders.html":{}}}],["server",{"_index":629,"title":{},"body":{"classes/Stomp.html":{}}}],["service",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["set",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["setting",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":607,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":601,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["similar",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["skipcontentlengthheader",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":107,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specified",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specify",{"_index":640,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":193,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":445,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["standard",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["started",{"_index":816,"title":{"index.html":{}},"body":{}}],["state",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":814,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":614,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":638,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":679,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":671,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":665,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url);deprecated",{"_index":633,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.js",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp.over",{"_index":672,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":654,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.ts",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":622,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{}}}],["stomp/rx",{"_index":216,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":209,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":298,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":687,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":619,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{},"index.html":{},"properties.html":{}}}],["stompjs.stomp",{"_index":621,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/remote",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomprpcconfig",{"_index":519,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stompsocketstate",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompsubscription",{"_index":752,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":188,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["stream",{"_index":516,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":266,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":292,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":245,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":262,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribe",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["subscribe((message",{"_index":269,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribed",{"_index":274,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["subscribeonlyonce",{"_index":246,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["subscription.ts",{"_index":753,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscriptions",{"_index":258,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["successful",{"_index":276,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":220,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":603,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["support",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":758,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":763,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["target",{"_index":248,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":649,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["terminate",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["terminating",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["text",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["this._customreplyqueue",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._dummysubscription",{"_index":584,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":595,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.stream(params).pipe(first",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":782,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":783,"title":{},"body":{"classes/Versions.html":{}}}],["those",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["though",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["three",{"_index":826,"title":{},"body":{"index.html":{}}}],["through",{"_index":818,"title":{},"body":{"index.html":{}}}],["time",{"_index":254,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["todo",{"_index":231,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":227,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":226,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":648,"title":{},"body":{"classes/Stomp.html":{}}}],["true",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["try",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tslint:disable",{"_index":663,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":832,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":851,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":680,"title":{},"body":{"classes/Stomp.html":{}}}],["types.js",{"_index":659,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["typescript",{"_index":294,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["typical",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["undefined",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["unset",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":247,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":286,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":287,"title":{},"body":{"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}}}],["unsubscribing",{"_index":281,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/closeeventhttps",{"_index":855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/event",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/eventhttps",{"_index":857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["used",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{}}}],["user",{"_index":639,"title":{},"body":{"classes/Stomp.html":{}}}],["using",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["utf8",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":784,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":759,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":760,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":761,"title":{},"body":{"classes/Versions.html":{}}}],["v4",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["valid",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["values",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["var",{"_index":631,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"properties.html":{}}}],["versions",{"_index":109,"title":{"classes/Versions.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.1",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":674,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.js",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["versions.v1_0",{"_index":780,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":779,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":778,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["void",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["wait",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["want",{"_index":768,"title":{},"body":{"classes/Versions.html":{}}}],["watch",{"_index":243,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["way",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":655,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":615,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["within",{"_index":239,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":683,"title":{},"body":{"classes/Stomp.html":{}}}],["world",{"_index":265,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["ws",{"_index":656,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":632,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":675,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["yield",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            isBinaryBody\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ack\n                                        \n                                \n                                \n                                        \n                                            nack\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame.js';\nimport { StompHeaders } from './stomp-headers.js';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipContentLengthHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame.js';\nimport { IMessage } from './i-message.js';\nimport { StompHeaders } from './stomp-headers.js';\nimport { Versions } from './versions.js';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = ((frame: IFrame) => void) | (() => void);\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string | undefined;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | null;\n  onmessage: ((this: IStompSocket, ev: IStompSocketMessageEvent) => any) | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | null;\n  terminate?: ((this: IStompSocket) => any) | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType: 'arraybuffer';\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n/**\n * @internal\n */\nexport interface IStomptHandlerConfig {\n  debug: debugFnType;\n  stompVersions: Versions;\n  connectHeaders: StompHeaders;\n  disconnectHeaders: StompHeaders;\n  heartbeatIncoming: number;\n  heartbeatOutgoing: number;\n  splitLargeFrames: boolean;\n  maxWebSocketChunkSize: number;\n  forceBinaryWSFrames: boolean;\n  logRawCommunication: boolean;\n  appendMissingNULLonIncoming: boolean;\n  discardWebsocketOnCommFailure: boolean;\n  onConnect: frameCallbackType;\n  onDisconnect: frameCallbackType;\n  onStompError: frameCallbackType;\n  onWebSocketClose: closeEventCallbackType;\n  onWebSocketError: wsErrorCallbackType;\n  onUnhandledMessage: messageCallbackType;\n  onUnhandledReceipt: frameCallbackType;\n  onUnhandledFrame: frameCallbackType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            retryIfDisconnected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abort\n                                        \n                                \n                                \n                                        \n                                            commit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subscribeOnlyOnce\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unsubHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\nIf header information can change over time, and you are allowing automatic re-subscriptions,\nconsider using a callback as the value rather than a string literal.\n             const subHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // The subHeadersCallback will be invoked before every (re)subscription.\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n             const unsubHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n             // `unsubHeadersCallback` will be invoked to get the headers.\n             sub.unsubscribe();\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   *\n   * If header information can change over time, and you are allowing automatic re-subscriptions,\n   * consider using a callback as the value rather than a string literal.\n   *\n   * ```typescript\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of these calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                correlateErrors\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:133\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:179\n                        \n                    \n\n            \n                \n                    Callback, invoked before attempting connection to the STOMP broker.\nYou can change the configuration of the rxStomp, which will impact the immediate connecting.\nIt is valid to call RxStomp#deactivate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case, connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive RxStomp as parameter.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                        \n                    \n\n            \n                \n                    The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:152\n                        \n                    \n\n            \n                \n                    Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:93\n                        \n                    \n\n            \n                \n                    Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait forever.\nMaps to: Client#connectionTimeout.\nCaution: This feature is experimental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        correlateErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:190\n                        \n                    \n\n            \n                \n                    Callback invoked on every ERROR frame. If the callback returns the ID of a currently\nsubscribed destination, the frame will be emitted as an error on the corresponding\nobservable(s), terminating them.\nImportantly, since those observables are now closed, this means a re-SUBSCRIBE to\nthe erroneous destination will not be attempted during an automatic reconnection of\nthe websocket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:60\n                        \n                    \n\n            \n                \n                    Enable client debugging\nExample:\n    debug: (msg: string): void => {\n      console.log(new Date(), msg);\n    },\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:143\n                        \n                    \n\n            \n                \n                    Maps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:159\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:128\n                        \n                    \n\n            \n                \n                    Maps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:107\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatIncoming\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:114\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                        \n                    \n\n            \n                \n                    Set it to log the actual raw communication with the broker.\nWhen unset, it logs only the headers of the parsed frames.\nChange in this takes effect from the next broker reconnection.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:138\n                        \n                    \n\n            \n                \n                    Maps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:100\n                        \n                    \n\n            \n                \n                    Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: Client#reconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:123\n                        \n                    \n\n            \n                \n                    Enable a non-standards compliant mode of splitting outgoing large text packets.\nSee Client#splitLargeFrames for details.\nProbably, only Java Spring based brokers support this mode.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during STOMP handshake. By default, versions 1.2, 1.1, and 1.0 are attempted.\nExample:\n       // Try only versions 1.1 and 1.0\n       rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:83\n                        \n                    \n\n            \n                \n                    This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n       // use a WebSocket\n       rxStompConfig.webSocketFactory= function () {\n         return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n       };\n\n       // Typical usage with SockJS\n       rxStompConfig.webSocketFactory= function () {\n         return new SockJS(\"http://broker.329broker.com/stomp\");\n       };Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, IFrame, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of these calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default, versions `1.2`, `1.1`, and `1.0` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.1 and 1.0\n   *        rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs only the headers of the parsed frames.\n   *\n   * Change in this takes effect from the next broker reconnection.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * Enable client debugging\n   *\n   * Example:\n   *\n   * ```typescript\n   *     debug: (msg: string): void => {\n   *       console.log(new Date(), msg);\n   *     },\n   * ```\n   */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 0, which implies wait forever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   *\n   * Caution: This feature is experimental.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@link Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable a non-standards compliant mode of splitting outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Probably, only Java Spring based brokers support this mode.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked before attempting connection to the STOMP broker.\n   *\n   * You can change the configuration of the rxStomp, which will impact the immediate connecting.\n   * It is valid to call [RxStomp#deactivate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case, connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp]{@link RxStomp} as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n\n  /**\n   * Callback invoked on every ERROR frame. If the callback returns the ID of a currently\n   * subscribed destination, the frame will be emitted as an error on the corresponding\n   * observable(s), terminating them.\n   *\n   * Importantly, since those observables are now closed, this means a re-SUBSCRIBE to\n   * the erroneous destination will _not_ be attempted during an automatic reconnection of\n   * the websocket.\n   */\n  public correlateErrors?: (error: IFrame) => string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:32\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:58\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:69\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { filter, first, Observable, Observer, Subscription } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { IMessage, IPublishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp.js';\nimport {\n  RxStompRPCConfig,\n  setupReplyQueueFnType,\n} from './rx-stomp-rpc-config.js';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: IPublishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: IPublishParams): Observable {\n    // defensively copy\n    const headers: StompHeaders = { ...(params.headers || {}) };\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || uuid();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ ...params, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                RPC Config. For examples see the guide.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                        \n                    \n\n            \n                \n                    Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                        \n                    \n\n            \n                \n                    Setup the reply queue. See the guide for details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        WebSocketClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                        \n                    \n\n            \n                \n                    In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n       StompJs = require('../../esm5/');\n       Stomp = StompJs.Stomp;\n       Stomp.WebSocketClass = require('websocket').w3cwebsocket;Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        client\n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n       var url = \"ws://localhost:61614/stomp\";\n       var client = Stomp.client(url);Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        over\n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n       var client = Stomp.over(function(){\n         return new WebSocket('ws://localhost:15674/ws')\n       });Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions.js';\nimport { CompatClient } from './compat-client.js';\nimport { IStompSocket } from '../types.js';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nThere used to be a class with the same name in @stomp/ng2-stompjs, which has been replaced by\nRxStompConfig and InjectableRxStompConfig.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:71\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:106\n                        \n                    \n\n            \n                \n                    See Client#beforeConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:26\n                        \n                    \n\n            \n                \n                    See Client#brokerURL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:81\n                        \n                    \n\n            \n                \n                    See Client#connectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:41\n                        \n                    \n\n            \n                \n                    See Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:141\n                        \n                    \n\n            \n                \n                    See Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:146\n                        \n                    \n\n            \n                \n                    See Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:86\n                        \n                    \n\n            \n                \n                    See Client#disconnectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:66\n                        \n                    \n\n            \n                \n                    See Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:51\n                        \n                    \n\n            \n                \n                    See Client#heartbeatIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:56\n                        \n                    \n\n            \n                \n                    See Client#heartbeatOutgoing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:136\n                        \n                    \n\n            \n                \n                    See Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:76\n                        \n                    \n\n            \n                \n                    See Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:151\n                        \n                    \n\n            \n                \n                    See Client#onChangeState.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:111\n                        \n                    \n\n            \n                \n                    See Client#onConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDisconnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:116\n                        \n                    \n\n            \n                \n                    See Client#onDisconnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:121\n                        \n                    \n\n            \n                \n                    See Client#onStompError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:101\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledFrame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         messageCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:91\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledMessage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledReceipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:96\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledReceipt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         closeEventCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:126\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketClose.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         wsErrorCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:131\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:46\n                        \n                    \n\n            \n                \n                    See Client#reconnectDelay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:61\n                        \n                    \n\n            \n                \n                    See Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:31\n                        \n                    \n\n            \n                \n                    See See Client#stompVersions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:36\n                        \n                    \n\n            \n                \n                    See Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\nimport {\n  ActivationState,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType,\n} from './types.js';\nimport { Versions } from './versions.js';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * There used to be a class with the same name in `@stomp/ng2-stompjs`, which has been replaced by\n * {@link RxStompConfig} and {@link InjectableRxStompConfig}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            unsubscribe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id associated with this subscription.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubscribe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubscribe:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unsubscribe. See Client#unsubscribe for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_0\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:10\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.1'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:14\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.2'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:18\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.2\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        protocolVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        supportedVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (44/44)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            interface\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover three libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs\n\nThe documentation for classes also indicates which library each of the classes\n belongs. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using the compatibility mode, your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Documentation for StompJS family\n        \n            License : Apache-2.0\n        \n            Author : Deepak Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a [CloseEvent]://developer.mozilla.org/en-US/docs/Web/API/CloseEventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an [Event]://developer.mozilla.org/en-US/docs/Web/API/Eventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    For examples see the guide.\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
