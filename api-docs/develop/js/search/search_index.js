var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.344,1,1.16]],["body/interfaces/IFrame.html",[0,0.374,1,2.203,2,1.122,3,0.445,4,0.445,5,0.374,6,1.613,7,2.123,8,0.374,9,3.309,10,0.422,11,2.847,12,3.309,13,4.07,14,4.07,15,4.07,16,1.884,17,4.07,18,3.309,19,2.432,20,2.432,21,1.928,22,0.495,23,0.495,24,1.484,25,3.309,26,0.308,27,0.588,28,3.944,29,3.702,30,4.214,31,4.852,32,4.102,33,0.631,34,0.047,35,1.048,36,1.232,37,2.807,38,2.133,39,4.07,40,1.872,41,3.309,42,3.309,43,4.07,44,4.07,45,1.884,46,3.309,47,0.687,48,1.613,49,2.502,50,2.123,51,2.133,52,0.588,53,2.807,54,2.502,55,0.033,56,0.033]],["title/interfaces/IMessage.html",[0,0.344,24,1.031]],["body/interfaces/IMessage.html",[0,0.379,1,2.08,2,1.136,3,0.451,4,0.451,5,0.379,6,1.633,8,0.379,10,0.249,20,2.452,21,1.673,22,0.558,23,0.558,24,1.778,25,3.336,26,0.312,27,0.705,29,2.149,33,0.558,34,0.047,36,1.165,45,1.9,47,0.917,48,1.633,49,2.533,50,2.149,51,2.151,52,0.593,55,0.033,56,0.033,57,2.149,58,2.151,59,2.274,60,2.452,61,1.633,62,3.336,63,1.494,64,3.73,65,2.408,66,3.336,67,4.229,68,4.229,69,1.778,70,4.876,71,4.876,72,4.876,73,2.555,74,3.964,75,4.104,76,4.104,77,2.533,78,3.117,79,2.533,80,3.117,81,3.117,82,2.533,83,3.117,84,1.684,85,3.117,86,2.149]],["title/interfaces/IPublishParams.html",[0,0.344,87,1.308]],["body/interfaces/IPublishParams.html",[0,0.537,1,1.433,2,0.693,3,0.275,4,0.275,5,0.231,8,0.231,10,0.152,11,1.83,16,1.336,21,1.673,22,0.589,23,0.589,24,1.273,26,0.19,27,0.417,28,3.409,29,3.261,30,1.545,32,3.17,33,0.619,34,0.048,35,1.033,36,1.121,40,1.941,41,2.838,47,0.871,48,0.996,51,2.044,52,0.752,53,1.31,55,0.023,56,0.023,59,0.78,61,2.198,77,1.545,84,1.941,86,1.991,87,1.805,88,1.136,89,1.336,90,2.887,91,2.838,92,2.887,93,1.494,94,3.045,95,3.9,96,2.887,97,2.347,98,1.185,99,2.887,100,2.887,101,3.17,102,2.887,103,1.725,104,1.991,105,2.887,106,1.9,107,1.053,108,1.31,109,2.506,110,2.892,111,1.725,112,1.545,113,1.991,114,3.045,115,1.9,116,2.887,117,1.9,118,1.991,119,2.887,120,2.887,121,1.9,122,1.9,123,1.991,124,1.9,125,1.545,126,1.31,127,1.31,128,0.996,129,2.887,130,2.892,131,2.887,132,1.9,133,1.9,134,1.545,135,1.9,136,3.731,137,2.347,138,3.17,139,3.17,140,1.9,141,0.996,142,1.9,143,1.9,144,1.9,145,1.9,146,2.639,147,1.545,148,3.17,149,2.892,150,1.545,151,1.545,152,1.545,153,1.545,154,1.336,155,1.31,156,1.991,157,1.9,158,1.9,159,1.31,160,1.9,161,1.991,162,2.408,163,1.9,164,1.991,165,1.545,166,2.33,167,1.9,168,1.545,169,1.9,170,0.996,171,1.545,172,1.991,173,1.545,174,2.887,175,1.31,176,1.545,177,1.545,178,1.31,179,1.545,180,1.31,181,1.545,182,1.545,183,1.545,184,1.9,185,1.31,186,1.31,187,1.31,188,1.31,189,1.31,190,1.31,191,1.31,192,1.31,193,1.31,194,1.31,195,1.31,196,1.31,197,1.545,198,1.545,199,1.545,200,1.545,201,1.545,202,1.545,203,1.545,204,1.545]],["title/interfaces/IRxStompPublishParams.html",[0,0.344,205,1.949]],["body/interfaces/IRxStompPublishParams.html",[0,0.445,2,1.334,3,0.529,4,0.529,5,0.445,8,0.445,10,0.395,16,2.105,22,0.553,23,0.445,26,0.366,27,0.657,33,0.445,34,0.047,40,2.031,47,0.817,52,0.529,55,0.037,56,0.037,59,1.867,66,3.697,87,2.291,93,1.306,98,1.867,103,2.718,104,3.57,162,3.57,205,3.137,206,1.334,207,2.524,208,1.694,209,2.975,210,2.524,211,4.548,212,3.137,213,4.548,214,1.658,215,5.176,216,4.548,217,4.548,218,3.697,219,4.548,220,4.548,221,4.548,222,3.66]],["title/interfaces/ITransaction.html",[0,0.344,223,1.949]],["body/interfaces/ITransaction.html",[0,0.438,2,1.312,3,0.52,4,0.52,5,0.438,6,1.886,8,0.438,19,2.69,20,2.69,22,0.438,23,0.438,26,0.36,27,0.651,33,0.598,34,0.047,35,0.959,52,0.52,55,0.036,56,0.036,63,1.478,65,2.452,67,3.659,68,3.659,69,1.876,84,1.848,223,3.104,224,2.926,225,5.482,226,3.599,227,2.926,228,3.599,229,3.599,230,3.599,231,5.404,232,5.404,233,3.075,234,4.501,235,4.501,236,3.104,237,3.659,238,3.599,239,3.599]],["title/interfaces/IWatchParams.html",[0,0.344,240,1.949]],["body/interfaces/IWatchParams.html",[0,0.277,2,0.829,3,0.329,4,0.329,5,0.277,8,0.277,10,0.263,16,2.183,21,1.881,22,0.401,23,0.277,26,0.228,27,0.477,33,0.518,34,0.048,35,0.883,36,1.29,38,1.729,40,1.594,45,1.972,47,0.508,52,0.329,53,2.937,55,0.027,56,0.027,59,1.748,60,2.545,61,2.232,93,1.432,94,3.558,98,1.354,101,2.682,103,1.972,170,1.729,206,0.829,207,1.569,210,1.569,212,2.276,214,1.203,218,2.682,240,2.276,241,1.849,242,4.259,243,4.717,244,4.259,245,4.717,246,3.3,247,3.3,248,4.259,249,2.682,250,2.682,251,2.276,252,3.3,253,3.3,254,2.682,255,2.682,256,3.3,257,3.3,258,3.3,259,2.978,260,4.717,261,2.472,262,4.259,263,4.259,264,4.259,265,4.259,266,4.259,267,3.462,268,4.259,269,3.462,270,2.682,271,3.3,272,2.276,273,2.276,274,3.3,275,3.3,276,3.3,277,2.682,278,3.3,279,3.3,280,3.3,281,3.3,282,3.3,283,3.3,284,4.717,285,3.462,286,1.972,287,2.276,288,2.682,289,3.3,290,3.3,291,3.3,292,2.682]],["title/classes/RxStompConfig.html",[293,0.283,294,1.949]],["body/classes/RxStompConfig.html",[1,0.783,3,0.164,4,0.164,5,0.138,8,0.138,9,1.55,10,0.427,11,1.517,16,2.127,18,1.55,19,1.139,20,1.139,21,1.276,22,0.232,23,0.138,26,0.113,27,0.276,33,0.59,34,0.047,35,0.63,36,0.82,40,1.724,42,1.55,45,0.882,47,0.426,52,0.164,55,0.015,56,0.015,58,0.999,61,2.317,63,0.831,65,1.619,69,1.482,73,0.999,84,1.013,93,1.55,94,1.996,98,1.188,103,2.746,107,1.482,109,1.139,110,1.315,111,1.475,112,2.353,128,1.833,134,2.353,141,1.833,154,0.882,159,1.315,162,2.413,166,2.51,175,1.315,178,1.315,185,2.227,186,1.702,187,1.702,188,1.702,189,1.702,190,1.702,191,1.702,192,1.702,193,1.702,194,1.702,195,1.702,196,1.702,206,1.786,208,0.524,214,0.695,233,1.139,250,2.353,254,1.55,255,1.55,261,2.047,269,2.353,270,1.55,272,1.315,277,1.55,292,0.921,293,0.113,294,1.315,295,0.325,296,2.267,297,0.594,298,2.353,299,1.996,300,1.808,301,1.906,302,1.906,303,1.55,304,2.283,305,2.006,306,2.006,307,2.006,308,2.468,309,2.006,310,2.006,311,1.768,312,0.921,313,1.55,314,1.133,315,1.906,316,1.906,317,1.906,318,2.353,319,1.906,320,1.139,321,1.906,322,1.133,323,1.906,324,2.353,325,1.315,326,2.353,327,1.906,328,1.906,329,1.906,330,1.906,331,1.906,332,1.906,333,1.906,334,1.906,335,1.906,336,1.906,337,1.906,338,5.23,339,1.55,340,1.133,341,1.55,342,1.906,343,1.906,344,1.906,345,1.55,346,2.894,347,2.894,348,2.413,349,1.133,350,1.906,351,2.894,352,1.906,353,1.906,354,1.55,355,1.906,356,2.353,357,1.55,358,1.906,359,1.906,360,1.906,361,1.139,362,1.996,363,1.906,364,1.55,365,0.921,366,1.906,367,1.906,368,1.906,369,3.906,370,3.906,371,1.906,372,1.906,373,1.906,374,1.55,375,2.894,376,1.906,377,1.906,378,1.133,379,2.625,380,1.906,381,1.906,382,1.906,383,1.906,384,1.906,385,1.906,386,1.906,387,1.906,388,1.906,389,1.906,390,1.906,391,1.906,392,2.894,393,2.353,394,2.353,395,1.133,396,2.894,397,1.293,398,1.906,399,1.906,400,1.906,401,0.921,402,1.55,403,1.133,404,1.906,405,1.55,406,0.921,407,1.55,408,1.133,409,1.906,410,2.894,411,2.894,412,3.498,413,1.55,414,1.133,415,2.894,416,1.55,417,1.133,418,1.906,419,1.906,420,1.906,421,1.906,422,1.906,423,1.906,424,1.906,425,1.315,426,1.906,427,1.55,428,1.906,429,1.906,430,1.55,431,1.55,432,0.921,433,1.55,434,1.133,435,1.55,436,1.906,437,1.55,438,0.921,439,1.55,440,1.906,441,1.906,442,2.353,443,1.906,444,1.906,445,1.906,446,1.906,447,2.353,448,1.906,449,1.906,450,1.906,451,1.906,452,1.133,453,1.906,454,1.55,455,2.353,456,2.625,457,1.906,458,1.906,459,2.091,460,1.906,461,1.133,462,1.55,463,0.921,464,1.315,465,1.906,466,2.353,467,1.906,468,1.906,469,1.906,470,1.906,471,1.55,472,2.894,473,1.906,474,1.55,475,1.906,476,1.315,477,0.781,478,1.133,479,1.906,480,1.702,481,1.55,482,0.921,483,0.921,484,0.781,485,0.921,486,0.921,487,0.921,488,0.921,489,1.55,490,0.921,491,0.921,492,0.921,493,0.921,494,0.921,495,0.921,496,1.133,497,1.133,498,1.133,499,1.133,500,1.133,501,1.133,502,0.921,503,1.133]],["title/classes/RxStompRPC.html",[293,0.283,504,1.689]],["body/classes/RxStompRPC.html",[3,0.308,4,0.308,5,0.259,8,0.259,10,0.38,21,1.504,22,0.382,23,0.259,24,1.362,26,0.213,33,0.454,34,0.048,36,0.798,40,0.873,45,1.454,47,0.983,52,0.308,55,0.025,56,0.025,58,1.647,59,0.873,60,2.465,63,1.405,65,1.454,73,2.162,87,2.206,89,1.729,93,1.073,104,1.467,128,1.958,154,1.454,170,1.647,206,1.504,208,1.454,214,1.146,233,2.848,236,1.467,259,2.232,261,2.307,267,1.729,272,2.167,286,1.271,287,3.177,288,2.554,293,0.213,295,0.611,296,1.91,300,2.132,304,1.891,311,1.362,325,1.467,345,1.729,362,2.845,425,2.167,477,1.467,504,1.878,505,1.729,506,2.554,507,3.142,508,3.744,509,2.662,510,3.142,511,2.167,512,2.845,513,1.878,514,4.126,515,1.878,516,2.127,517,4.126,518,2.465,519,2.127,520,2.167,521,1.729,522,1.467,523,3.142,524,2.127,525,3.354,526,4.401,527,3.142,528,2.554,529,3.142,530,3.142,531,3.736,532,3.142,533,2.127,534,3.142,535,3.142,536,3.142,537,4.126,538,3.142,539,2.554,540,2.127,541,2.127,542,3.142,543,2.127,544,3.736,545,2.167,546,2.127,547,3.354,548,3.354,549,3.354,550,3.354,551,3.873,552,2.127,553,1.729,554,1.729,555,1.729,556,2.127,557,2.127,558,2.127,559,2.127,560,1.729,561,3.142,562,1.729,563,3.142,564,2.127,565,3.142,566,3.736,567,3.142,568,3.142,569,3.142,570,2.127,571,2.127,572,1.729,573,2.127,574,2.127,575,2.127,576,2.127,577,3.736,578,3.142,579,2.127,580,2.127,581,1.729,582,2.127,583,2.127,584,2.127,585,3.142,586,3.736,587,3.142,588,2.127,589,2.127,590,2.127,591,2.127,592,2.127,593,2.127,594,2.127,595,2.127]],["title/classes/RxStompRPCConfig.html",[293,0.283,518,1.689]],["body/classes/RxStompRPCConfig.html",[3,0.464,4,0.464,5,0.39,8,0.39,10,0.393,22,0.39,23,0.39,24,1.17,26,0.321,27,0.605,33,0.566,34,0.047,35,0.908,47,1.039,52,0.605,55,0.034,56,0.034,63,1.534,93,1.416,98,1.717,206,1.697,208,1.485,214,1.17,286,1.917,287,2.884,293,0.321,295,0.921,296,2.154,297,1.681,300,2.154,304,2.152,311,1.525,362,3.401,477,2.213,508,3.4,509,2.68,512,3.527,518,2.499,521,1.936,545,3.209,547,3.4,548,3.4,549,3.4,550,3.4,553,3.4,554,3.4,555,3.4,572,4.008,581,4.008,596,4.182,597,3.783,598,4.931,599,4.653,600,2.608,601,4.182,602,4.182,603,4.182,604,3.208,605,4.182]],["title/classes/Stomp.html",[10,0.225,293,0.283]],["body/classes/Stomp.html",[3,0.264,4,0.264,5,0.222,8,0.222,10,0.372,19,1.674,22,0.341,23,0.341,26,0.183,27,0.405,33,0.415,34,0.048,35,0.935,38,0.957,47,0.761,51,2.159,52,0.264,55,0.023,56,0.023,58,2.002,63,0.805,65,1.297,69,1.703,73,0.957,74,3.349,89,1.297,93,0.805,98,0.75,107,0.666,108,1.26,109,1.091,127,3.221,128,0.957,130,1.26,141,2.677,146,2.036,149,2.35,154,1.297,156,2.635,159,1.932,170,2.448,172,1.26,227,1.485,237,2.277,251,1.932,259,2.036,261,2.372,293,0.453,295,0.525,299,1.932,304,1.399,311,1.242,320,2.791,325,1.932,341,3.534,348,1.932,357,3.349,394,2.277,397,2.793,427,3.893,435,1.485,439,2.277,459,2.921,464,1.932,466,2.277,471,3.349,476,2.635,480,1.26,481,2.77,484,1.932,506,1.485,511,3.302,513,1.674,520,1.932,521,1.577,522,1.26,539,1.485,562,3.106,606,1.485,607,2.801,608,3.407,609,4.526,610,4.67,611,4.67,612,3.893,613,3.407,614,1.827,615,2.801,616,2.801,617,1.932,618,2.801,619,2.801,620,3.82,621,1.827,622,2.801,623,4.526,624,1.827,625,2.801,626,2.801,627,2.801,628,2.801,629,4.348,630,2.801,631,1.827,632,3.349,633,2.801,634,1.827,635,2.801,636,2.801,637,2.801,638,2.801,639,3.407,640,2.801,641,2.801,642,2.801,643,2.277,644,2.801,645,2.801,646,2.801,647,2.277,648,2.801,649,2.801,650,2.801,651,2.801,652,2.801,653,2.801,654,3.82,655,1.827,656,1.827,657,1.26,658,1.827,659,1.827,660,1.827,661,1.827,662,1.827,663,1.827,664,2.801,665,1.827,666,2.801,667,1.827,668,1.827,669,1.827,670,3.407,671,1.827,672,1.827,673,3.82,674,1.827,675,1.827,676,2.801,677,1.827,678,1.485,679,1.827,680,1.827,681,1.827,682,1.827,683,1.827,684,1.827]],["title/classes/StompConfig.html",[293,0.283,685,1.949]],["body/classes/StompConfig.html",[3,0.235,4,0.235,5,0.198,8,0.198,10,0.253,22,0.312,23,0.312,26,0.163,27,0.37,33,0.662,34,0.047,35,0.5,36,0.992,37,1.767,40,1.943,45,1.186,47,0.708,48,0.853,51,1.343,52,0.235,55,0.021,56,0.021,62,2.083,63,1.64,69,1.155,79,1.324,84,1.052,93,1.64,107,1.155,108,1.123,111,1.893,113,2.185,114,3.329,118,2.185,123,2.185,161,1.123,166,2.829,180,1.767,185,2.185,186,2.185,187,2.185,188,2.185,189,2.185,190,2.185,191,2.185,192,2.185,193,2.185,194,2.185,195,2.185,196,2.185,197,2.575,198,2.575,199,2.575,200,2.575,201,2.575,202,2.575,203,2.575,204,2.575,212,1.767,273,1.767,293,0.163,295,0.468,297,0.853,298,2.083,304,2.383,305,2.575,306,2.575,307,2.575,309,2.575,310,2.575,311,1.985,312,1.324,313,2.083,324,1.324,339,2.083,348,1.767,364,2.083,365,1.324,374,2.083,397,2.174,401,1.324,402,2.083,405,2.083,406,1.324,407,2.083,413,2.083,416,2.083,431,2.083,432,1.324,433,2.083,437,2.083,438,1.324,447,2.083,462,2.083,463,1.324,476,1.767,480,1.123,482,1.324,483,1.324,484,1.123,485,1.324,486,1.324,487,1.324,488,1.324,489,1.324,490,1.324,491,1.324,492,1.324,493,1.324,494,1.324,495,1.324,502,1.324,515,1.531,521,1.186,600,1.324,657,1.123,685,1.767,686,3.264,687,2.562,688,2.562,689,2.562,690,2.562,691,3.168,692,1.629,693,1.629,694,1.629,695,1.629,696,2.562,697,1.629,698,1.629,699,1.629,700,1.629,701,1.629,702,2.562,703,1.629,704,2.562,705,1.629,706,2.562,707,1.629,708,2.562,709,1.629,710,2.562,711,1.629,712,2.562,713,2.562,714,2.562,715,1.629,716,1.629,717,1.629,718,1.629,719,1.629,720,1.629,721,1.629,722,1.629,723,1.629,724,1.629,725,1.629,726,1.629,727,1.629,728,1.629]],["title/classes/StompHeaders.html",[36,0.718,293,0.283]],["body/classes/StompHeaders.html",[3,0.584,4,0.584,5,0.492,8,0.492,10,0.322,12,3.285,16,1.871,21,1.885,22,0.492,23,0.492,34,0.044,35,1.045,36,1.227,37,3.693,38,2.118,50,2.787,52,0.584,55,0.039,56,0.039,89,1.871,293,0.405,295,1.161,303,3.285,311,1.474,318,3.285,430,3.285,686,2.887,729,3.285,730,4.042,731,4.042,732,4.042,733,4.042,734,4.042,735,4.042,736,4.042,737,4.042,738,4.042,739,4.042]],["title/interfaces/StompSubscription.html",[0,0.344,740,1.949]],["body/interfaces/StompSubscription.html",[0,0.456,2,1.366,3,0.542,4,0.542,5,0.456,8,0.456,10,0.299,21,1.366,22,0.561,23,0.561,26,0.375,27,0.667,33,0.561,34,0.047,35,0.976,36,1.172,47,0.837,48,1.963,52,0.542,55,0.037,56,0.037,60,2.757,63,1.325,64,3.751,65,2.136,69,1.682,73,2.418,82,3.045,84,1.538,233,3.261,285,4.436,520,3.182,686,2.239,740,3.599,741,3.045,742,4.614,743,4.614,744,3.746]],["title/classes/TCPWrapper.html",[293,0.283,745,1.949]],["body/classes/TCPWrapper.html",[0,0.401,3,0.329,4,0.329,5,0.277,8,0.277,26,0.228,27,0.477,33,0.636,34,0.048,35,1.007,47,0.737,52,0.329,55,0.027,56,0.027,59,0.934,69,1.553,84,1.594,89,1.797,93,1.115,136,4.13,137,2.682,138,3.156,139,3.156,141,1.729,146,2.908,147,3.156,148,4.051,149,3.437,150,3.156,151,3.156,152,3.156,153,3.462,154,1.797,156,3.119,164,2.678,165,3.156,166,2.819,168,2.682,171,2.682,236,2.276,259,1.359,293,0.228,295,0.653,299,1.569,304,2.308,311,1.852,354,2.682,379,2.682,464,2.276,513,1.972,515,1.359,521,1.797,522,2.276,525,2.682,528,2.682,551,2.682,560,1.849,647,2.682,657,1.569,678,3.676,745,2.276,746,4.194,747,1.849,748,3.3,749,3.3,750,3.3,751,3.883,752,2.275,753,2.275,754,2.275,755,2.275,756,2.275,757,2.275,758,3.3,759,3.883,760,2.275,761,3.883,762,2.275,763,2.275,764,2.275,765,2.275,766,2.275,767,2.275,768,4.522,769,2.275,770,2.275,771,2.275,772,3.3,773,2.275,774,2.275,775,3.3,776,2.275,777,3.3,778,2.275,779,3.3,780,3.3,781,2.275,782,3.3,783,3.3,784,2.275,785,2.275,786,3.3,787,1.849,788,2.275,789,2.275,790,2.275,791,3.3,792,2.275,793,2.275,794,2.275]],["title/classes/Versions.html",[107,1.031,293,0.283]],["body/classes/Versions.html",[3,0.4,4,0.4,5,0.336,8,0.336,10,0.401,11,1.985,22,0.525,23,0.336,26,0.277,27,0.547,33,0.592,34,0.047,35,1.004,38,2.264,46,3.776,52,0.4,55,0.03,56,0.03,58,1.985,89,1.28,93,0.794,98,1.907,107,1.995,128,2.434,130,1.907,141,1.985,154,1.753,155,3.465,261,1.985,293,0.432,295,0.794,304,2.246,311,1.876,320,3.003,326,3.079,356,4.085,393,3.079,425,2.612,454,3.079,455,4.085,456,4.085,459,1.653,474,3.079,513,2.263,515,1.653,521,1.28,612,4.37,795,2.248,796,4.319,797,4.319,798,4.319,799,4.319,800,4.645,801,4.645,802,2.765,803,2.765,804,3.787,805,3.787,806,3.787,807,3.787,808,3.787,809,2.765,810,5.025,811,2.765,812,2.765,813,2.765,814,2.765,815,2.765,816,2.765,817,2.765,818,2.765,819,2.765,820,2.765,821,2.765,822,2.765]],["title/coverage.html",[823,3.125]],["body/coverage.html",[0,0.654,1,1.354,5,0.401,6,2.472,7,2.275,10,0.411,24,1.203,33,0.401,34,0.046,36,0.838,55,0.034,56,0.034,57,2.275,87,1.527,88,1.972,107,1.203,205,2.275,206,1.927,207,2.937,208,1.527,209,2.682,210,2.937,223,2.275,224,2.682,240,2.275,241,2.682,293,0.56,294,2.275,296,2.307,297,2.472,300,1.527,361,1.972,397,1.729,459,1.972,504,1.972,505,2.682,509,1.729,518,1.972,606,2.682,632,2.682,685,2.275,686,2.818,729,2.682,740,2.275,741,2.682,745,2.275,746,2.682,747,2.682,787,4.629,795,2.682,823,2.682,824,3.299,825,3.299,826,3.299,827,3.299,828,3.299,829,4.716,830,4.716,831,3.299,832,3.299,833,3.299,834,3.299,835,3.299,836,3.299,837,3.299,838,3.299,839,4.259,840,3.299,841,3.299,842,3.299,843,3.299,844,3.299,845,3.299,846,3.299,847,3.299]],["title/miscellaneous/enumerations.html",[848,1.414,849,2.76]],["body/miscellaneous/enumerations.html",[10,0.415,22,0.499,26,0.41,34,0.039,55,0.039,56,0.039,88,2.449,146,2.449,161,2.827,164,3.36,172,3.586,173,3.961,175,3.36,176,3.961,177,3.961,178,3.36,179,3.332,180,3.36,181,3.332,182,3.332,183,3.332,206,1.494,214,1.494,296,1.897,300,1.897,848,2.449,849,3.332,850,3.961,851,4.872,852,3.332,853,4.872]],["title/index.html",[26,0.237,854,2.367,855,2.367]],["body/index.html",[10,0.407,23,0.577,34,0.038,55,0.038,56,0.038,63,1.361,97,4.144,107,1.728,126,2.7,155,2.7,170,2.484,208,1.812,214,1.427,249,3.182,251,2.7,273,2.7,286,2.339,295,1.361,300,1.812,361,2.339,397,2.051,442,3.182,504,2.339,509,2.051,511,2.7,617,2.7,643,3.182,856,3.914,857,3.914,858,5.098,859,5.298,860,3.914,861,3.914,862,3.914,863,3.914,864,3.914,865,3.914,866,3.914,867,3.914,868,3.914,869,3.914,870,3.914,871,3.914,872,3.914,873,3.914,874,3.914,875,3.914,876,3.914,877,5.098]],["title/modules.html",[878,3.125]],["body/modules.html",[34,0.042,55,0.042,56,0.042,878,3.687]],["title/overview.html",[879,3.125]],["body/overview.html",[2,1.637,34,0.041,55,0.041,56,0.041,295,1.289,879,3.649,880,4.489,881,4.489]],["title/properties.html",[27,0.491,882,2.367]],["body/properties.html",[8,0.53,27,0.629,34,0.045,55,0.041,56,0.041,320,2.602,361,2.602,617,3.003,883,4.355,884,4.355,885,4.355,886,4.355,887,4.355,888,4.355,889,4.355,890,4.355]],["title/miscellaneous/typealiases.html",[848,1.414,891,3.396]],["body/miscellaneous/typealiases.html",[1,2.012,6,2.353,7,3.096,10,0.391,11,2.353,22,0.666,23,0.657,24,1.787,26,0.359,33,0.436,34,0.039,35,0.7,54,2.914,55,0.036,56,0.036,57,3.096,59,1.843,61,2.773,63,1.03,69,1.929,86,2.472,87,2.078,88,2.142,91,3.649,109,3.162,110,3.649,111,2.683,113,3.096,114,3.096,118,3.096,123,3.096,125,2.914,126,2.472,127,2.472,206,1.307,214,1.307,296,1.659,297,2.353,509,2.353,512,2.472,545,3.096,597,2.914,848,2.142,850,4.388,852,2.914,892,3.584,893,4.49,894,3.584,895,3.584,896,3.584,897,3.584]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.0",{"_index":883,"title":{},"body":{"properties.html":{}}}],["0.1.1",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.0']);maps",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.1",{"_index":455,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":787,"title":{},"body":{"classes/TCPWrapper.html":{},"coverage.html":{}}}],["1000",{"_index":784,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["11",{"_index":880,"title":{},"body":{"overview.html":{}}}],["19/19",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["19/20",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["2.0",{"_index":887,"title":{},"body":{"properties.html":{}}}],["2/2",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["4001",{"_index":793,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["41/41",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["44/44",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":881,"title":{},"body":{"overview.html":{}}}],["7/8",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["_closeevtontermination",{"_index":766,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["_customreplyqueue",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_dummysubscription",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_not_",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["_repliesobservable",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":231,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":731,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["ack",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["acknowledgement",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["activation",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":603,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":607,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["added",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":734,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":211,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{}}}],["alias",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":665,"title":{},"body":{"classes/Stomp.html":{}}}],["allowing",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["allows",{"_index":650,"title":{},"body":{"classes/Stomp.html":{}}}],["alternative",{"_index":635,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":649,"title":{},"body":{"classes/Stomp.html":{}}}],["another",{"_index":666,"title":{},"body":{"classes/Stomp.html":{}}}],["apache",{"_index":886,"title":{},"body":{"properties.html":{}}}],["api",{"_index":858,"title":{},"body":{"index.html":{}}}],["appendmissingnullonincoming",{"_index":195,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":804,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["associated",{"_index":742,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["assumes",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempt",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempted",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attempting",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":302,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["author",{"_index":888,"title":{},"body":{"properties.html":{}}}],["auto",{"_index":680,"title":{},"body":{"classes/Stomp.html":{}}}],["automatic",{"_index":254,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["automatically",{"_index":277,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["available",{"_index":733,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["before",{"_index":270,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":305,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behave",{"_index":748,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["belongs",{"_index":870,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarytype",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["brokers",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["brokerurl",{"_index":306,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["builds",{"_index":867,"title":{},"body":{"index.html":{}}}],["bye",{"_index":262,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["call.html",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["callable",{"_index":642,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["calling",{"_index":227,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":303,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["case",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":283,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":230,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":293,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["classes",{"_index":295,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":594,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":234,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":239,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":313,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":228,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":235,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":238,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":690,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":719,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":696,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":727,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":702,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":728,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":704,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":722,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":706,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":723,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":708,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":724,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":710,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":721,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":712,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":720,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":713,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":725,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":714,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":726,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":743,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":744,"title":{},"body":{"interfaces/StompSubscription.html":{}}}],["client#websocketfactory",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":622,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":641,"title":{},"body":{"classes/Stomp.html":{}}}],["client.js",{"_index":656,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["close(code",{"_index":758,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["closed",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent",{"_index":783,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["closeevent]://developer.mozilla.org/en",{"_index":894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":761,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":232,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":655,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":632,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":676,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["compliant",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":875,"title":{},"body":{"index.html":{}}}],["config",{"_index":596,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.js",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["config.ts",{"_index":297,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.ts:100",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:103",{"_index":693,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:107",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:108",{"_index":703,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:113",{"_index":705,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:114",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:118",{"_index":707,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:123",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:128",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:133",{"_index":312,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:138",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:143",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:148",{"_index":701,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:152",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:159",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:179",{"_index":314,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:190",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":600,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":604,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:28",{"_index":717,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:33",{"_index":718,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:38",{"_index":695,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:43",{"_index":715,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:48",{"_index":698,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:53",{"_index":699,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:58",{"_index":716,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:60",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:63",{"_index":697,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:68",{"_index":692,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:73",{"_index":700,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:78",{"_index":694,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:83",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:88",{"_index":711,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:93",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:98",{"_index":709,"title":{},"body":{"classes/StompConfig.html":{}}}],["configuration",{"_index":298,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connect",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["connected",{"_index":626,"title":{},"body":{"classes/Stomp.html":{}}}],["connectheaders",{"_index":187,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["connectiontimeout",{"_index":307,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["consider",{"_index":257,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["console.log(new",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["console.warn",{"_index":679,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../rx",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../types.ts",{"_index":850,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/rx",{"_index":206,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":606,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":634,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":614,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":624,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":686,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/tcp",{"_index":746,"title":{},"body":{"classes/TCPWrapper.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":88,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":795,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":809,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":811,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":812,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":803,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":813,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":815,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":814,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":259,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["constructor",{"_index":515,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["constructor(host",{"_index":750,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["constructor(public",{"_index":819,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":516,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["constructor(versions",{"_index":802,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":735,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copied",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copy",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlateerrors",{"_index":308,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["correlation",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":586,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":860,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["corresponds",{"_index":687,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":864,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":823,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":736,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":520,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["createconnection",{"_index":764,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["createconnection(port",{"_index":771,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["created",{"_index":226,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["creates",{"_index":625,"title":{},"body":{"classes/Stomp.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["currently",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["custom",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["data",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["date",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["deactivating",{"_index":182,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":185,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declare",{"_index":658,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":808,"title":{},"body":{"classes/Versions.html":{}}}],["deepak",{"_index":889,"title":{},"body":{"properties.html":{}}}],["default",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["defaultmessagessubscription",{"_index":585,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":595,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":248,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["defensively",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defined",{"_index":311,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["delay",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependency",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["dependent",{"_index":247,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":609,"title":{},"body":{"classes/Stomp.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"properties.html":{}}}],["destination",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["details",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["development",{"_index":861,"title":{},"body":{"index.html":{}}}],["disable",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":196,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnectheaders",{"_index":188,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnection",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["docs",{"_index":859,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":684,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["documents",{"_index":873,"title":{},"body":{"index.html":{}}}],["dom",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":217,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["during",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":273,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{},"index.html":{}}}],["effect",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":805,"title":{},"body":{"classes/Versions.html":{}}}],["emitted",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["enable",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enqueued",{"_index":216,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ensure",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["entry",{"_index":877,"title":{},"body":{"index.html":{}}}],["enum",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":849,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":616,"title":{},"body":{"classes/Stomp.html":{}}}],["erroneous",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["error",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/TCPWrapper.html":{}}}],["established",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["etc",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["event]://developer.mozilla.org/en",{"_index":896,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["example",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"interfaces/StompSubscription.html":{}}}],["examples",{"_index":597,"title":{},"body":{"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["experimental",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["export",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{}}}],["factory",{"_index":608,"title":{},"body":{"classes/Stomp.html":{}}}],["false",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/TCPWrapper.html":{}}}],["family",{"_index":884,"title":{},"body":{"properties.html":{}}}],["feature",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["fetch",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":688,"title":{},"body":{"classes/StompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":589,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["flag",{"_index":276,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["following",{"_index":865,"title":{},"body":{"index.html":{}}}],["forcebinarywsframes",{"_index":193,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["forever",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.js",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frames",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["function",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":730,"title":{},"body":{"classes/StompHeaders.html":{}}}],["generated",{"_index":874,"title":{},"body":{"index.html":{}}}],["generating",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getting",{"_index":854,"title":{"index.html":{}},"body":{}}],["guide",{"_index":512,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["guide](/guide/rx",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["guides",{"_index":871,"title":{},"body":{"index.html":{}}}],["hack",{"_index":664,"title":{},"body":{"classes/Stomp.html":{}}}],["haderror",{"_index":777,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["handle",{"_index":268,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["handshake",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{}}}],["headers.js",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{}}}],["headers.ts",{"_index":729,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":739,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":587,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":592,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heartbeat",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":189,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":190,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/TCPWrapper.html":{}}}],["html5",{"_index":639,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":682,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":233,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["identifier",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#body",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["iframe#headers",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"classes/StompHeaders.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["impact",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":506,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implements",{"_index":749,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["implies",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{}}}],["important",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["importantly",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["inactive",{"_index":183,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":738,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicates",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["information",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{},"index.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{},"overview.html":{}}}],["internal",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":288,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["interval",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoked",{"_index":269,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["invoking",{"_index":282,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":87,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":205,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issued",{"_index":289,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["istompthandlerconfig",{"_index":184,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":223,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":240,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["js.github.io/api",{"_index":683,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":674,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":675,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":281,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["kumar",{"_index":890,"title":{},"body":{"properties.html":{}}}],["large",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["length",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":737,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":866,"title":{},"body":{"index.html":{}}}],["library",{"_index":869,"title":{},"body":{"index.html":{}}}],["license",{"_index":885,"title":{},"body":{"properties.html":{}}}],["line:variable",{"_index":662,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["literal",{"_index":258,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["located",{"_index":628,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":194,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":611,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/TCPWrapper.html":{}}}],["manual",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["maps",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["marks",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matching",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["maxwebsocketchunksize",{"_index":192,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/TCPWrapper.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":590,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.js",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":219,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["messaging",{"_index":510,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{}}}],["methods",{"_index":513,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":848,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mode",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modules",{"_index":878,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":643,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":667,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["nack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":521,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["navigating",{"_index":856,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["needed",{"_index":648,"title":{},"body":{"classes/Stomp.html":{}}}],["net",{"_index":765,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["new",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["nodejs",{"_index":615,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["noop",{"_index":767,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["note",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["now",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["npm",{"_index":862,"title":{},"body":{"index.html":{}}}],["null",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["number",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"classes/TCPWrapper.html":{}}}],["object",{"_index":299,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["observable",{"_index":287,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["observable(s",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observable.create((rpcobserver",{"_index":584,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observables",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["observer",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":280,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["once",{"_index":644,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":691,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["onconnect",{"_index":197,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":198,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["one",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["onmessage",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["onopen",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["onstomperror",{"_index":199,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":204,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":202,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":203,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":200,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":201,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{}}}],["open",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["optional",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["options",{"_index":212,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":640,"title":{},"body":{"classes/Stomp.html":{}}}],["outgoing",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":633,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":807,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":879,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":882,"title":{"properties.html":{}},"body":{}}],["packets",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["parameter",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["params",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":210,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{}}}],["passcode",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["passing",{"_index":651,"title":{},"body":{"classes/Stomp.html":{}}}],["pipe",{"_index":588,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":511,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["point",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["port",{"_index":751,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["possible",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["preferred",{"_index":876,"title":{},"body":{"index.html":{}}}],["present",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["primitives",{"_index":868,"title":{},"body":{"index.html":{}}}],["prior",{"_index":668,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/TCPWrapper.html":{}}}],["probably",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["procedure",{"_index":508,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["promise",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"properties.html":{}}}],["protocol",{"_index":810,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":623,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":800,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":659,"title":{},"body":{"classes/Stomp.html":{}}}],["public",{"_index":304,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["publish",{"_index":209,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["published",{"_index":220,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishparams",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["queue",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queue/rpc",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queuename",{"_index":266,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rabbitmq",{"_index":602,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["raw",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rawheadertype",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re",{"_index":255,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["re)connection",{"_index":275,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["re)subscription",{"_index":271,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["readystate",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["reason",{"_index":759,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["receive",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{}}}],["reconnect",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reconnectdelay",{"_index":309,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":645,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["reestablished",{"_index":221,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["released",{"_index":863,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remains",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["remarks",{"_index":671,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":507,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":610,"title":{},"body":{"classes/Stomp.html":{}}}],["replies",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["repliesobservable",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":583,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":598,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["require('../../esm5",{"_index":618,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":660,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket;deprecated",{"_index":621,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["resubscribe",{"_index":278,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["results",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retry",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":215,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":261,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["returns",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["rpc",{"_index":509,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["rpc(params",{"_index":523,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts",{"_index":505,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:32",{"_index":519,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:58",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:69",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":591,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":208,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxjs",{"_index":286,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"index.html":{}}}],["rxstomp",{"_index":300,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#configure",{"_index":301,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate]{@link",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":213,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":222,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":242,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":291,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.watch",{"_index":265,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp]{@link",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":294,"title":{"classes/RxStompConfig.html":{}},"body":{"classes/RxStompConfig.html":{},"coverage.html":{}}}],["rxstompconfig#websocketfactory",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.stompversions",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomprpc",{"_index":504,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":518,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{}}}],["rxstompstate",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["same",{"_index":689,"title":{},"body":{"classes/StompConfig.html":{}}}],["scripts",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":236,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"classes/TCPWrapper.html":{}}}],["send(data",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["sent",{"_index":732,"title":{},"body":{"classes/StompHeaders.html":{}}}],["server",{"_index":627,"title":{},"body":{"classes/Stomp.html":{}}}],["service",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["set",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["setting",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":605,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":599,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["similar",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["simple",{"_index":527,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["skipcontentlengthheader",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["sockjs",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["specific",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specified",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specify",{"_index":638,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":191,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["standard",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["started",{"_index":855,"title":{"index.html":{}},"body":{}}],["state",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":612,"title":{},"body":{"classes/Stomp.html":{},"classes/Versions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp#client",{"_index":636,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":677,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":669,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":663,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url);deprecated",{"_index":631,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.js",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp.over",{"_index":670,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":652,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.ts",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":620,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomp/rx",{"_index":214,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":207,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":296,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":685,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":617,"title":{},"body":{"classes/Stomp.html":{},"index.html":{},"properties.html":{}}}],["stompjs.stomp",{"_index":619,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/remote",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["stomprpcconfig",{"_index":517,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stompsocketstate",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{},"miscellaneous/enumerations.html":{}}}],["stompsocketstate.closed",{"_index":778,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["stompsocketstate.closing",{"_index":791,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["stompsocketstate.connecting",{"_index":769,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["stompsocketstate.open",{"_index":773,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["stompsubscription",{"_index":740,"title":{"interfaces/StompSubscription.html":{}},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":186,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["stream",{"_index":514,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":264,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":290,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":243,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":260,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribe",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["subscribe((message",{"_index":267,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribed",{"_index":272,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["subscribeonlyonce",{"_index":244,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"interfaces/StompSubscription.html":{}}}],["subscription.ts",{"_index":741,"title":{},"body":{"interfaces/StompSubscription.html":{},"coverage.html":{}}}],["subscriptions",{"_index":256,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["successful",{"_index":274,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":218,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":601,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["support",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":796,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":801,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["target",{"_index":246,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":647,"title":{},"body":{"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["tcpwrapper",{"_index":745,"title":{"classes/TCPWrapper.html":{}},"body":{"classes/TCPWrapper.html":{},"coverage.html":{}}}],["temp",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["terminate",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["terminating",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["text",{"_index":445,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["this._closeevtontermination",{"_index":780,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this._customreplyqueue",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._dummysubscription",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.onclose",{"_index":779,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.onclose(this._closeevtontermination",{"_index":781,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.onerror",{"_index":786,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.onmessage",{"_index":775,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.onopen",{"_index":772,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.readystate",{"_index":768,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.rxstomp",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":593,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.socket",{"_index":770,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.socket.destroy",{"_index":794,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.socket.end",{"_index":792,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.socket.on('close",{"_index":776,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.socket.on('data",{"_index":774,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.socket.on('error",{"_index":785,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.socket.write(data",{"_index":788,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.socket.write(new",{"_index":789,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["this.stream(params).pipe(first",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.versions.join",{"_index":820,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":821,"title":{},"body":{"classes/Versions.html":{}}}],["those",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["though",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["through",{"_index":857,"title":{},"body":{"index.html":{}}}],["time",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["todo",{"_index":229,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":225,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":224,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":646,"title":{},"body":{"classes/Stomp.html":{}}}],["true",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["try",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["tslint:disable",{"_index":661,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":872,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":891,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":678,"title":{},"body":{"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["types.js",{"_index":657,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/TCPWrapper.html":{}}}],["typescript",{"_index":292,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["typical",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["uint8array(data",{"_index":790,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["undefined",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/TCPWrapper.html":{}}}],["underlying",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["unset",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":245,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":284,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":285,"title":{},"body":{"interfaces/IWatchParams.html":{},"interfaces/StompSubscription.html":{}}}],["unsubscribing",{"_index":279,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/closeeventhttps",{"_index":895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/api/event",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/eventhttps",{"_index":897,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["used",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["user",{"_index":637,"title":{},"body":{"classes/Stomp.html":{}}}],["using",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"index.html":{}}}],["utf8",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":822,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":797,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":798,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":799,"title":{},"body":{"classes/Versions.html":{}}}],["v4",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["valid",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"classes/Versions.html":{}}}],["values",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["var",{"_index":629,"title":{},"body":{"classes/Stomp.html":{}}}],["version",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{},"properties.html":{}}}],["versions",{"_index":107,"title":{"classes/Versions.html":{}},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.1",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":672,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.js",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["versions.v1_0",{"_index":818,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":817,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":816,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["void",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"interfaces/StompSubscription.html":{},"classes/TCPWrapper.html":{}}}],["wait",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["want",{"_index":806,"title":{},"body":{"classes/Versions.html":{}}}],["wasclean",{"_index":782,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["watch",{"_index":241,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["way",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":653,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":613,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":310,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["within",{"_index":237,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":681,"title":{},"body":{"classes/Stomp.html":{}}}],["world",{"_index":263,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/TCPWrapper.html":{}}}],["wrapper.ts",{"_index":747,"title":{},"body":{"classes/TCPWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:10",{"_index":754,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:11",{"_index":755,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:15",{"_index":756,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:17",{"_index":752,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:55",{"_index":762,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:63",{"_index":760,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:68",{"_index":763,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:8",{"_index":757,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["wrapper.ts:9",{"_index":753,"title":{},"body":{"classes/TCPWrapper.html":{}}}],["ws",{"_index":654,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":630,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":673,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":522,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/TCPWrapper.html":{}}}],["yield",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            command\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            isBinaryBody\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        command:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended IFrame, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                        IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ack\n                                        \n                                \n                                \n                                        \n                                            nack\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nack:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame.js';\nimport { StompHeaders } from './stomp-headers.js';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link IFrame}, you can access [headers]{@link IFrame#headers}\n * and [body]{@link IFrame#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            binaryBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipContentLengthHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:         StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame.js';\nimport { IMessage } from './i-message.js';\nimport { StompHeaders } from './stomp-headers.js';\nimport { Versions } from './versions.js';\n\n/**\n * This callback will receive a `string` as a parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = ((frame: IFrame) => void) | (() => void);\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default, a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string | undefined;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array | undefined;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | undefined | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | undefined | null;\n  onmessage: ((ev: IStompSocketMessageEvent) => any) | undefined | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | undefined | null;\n  terminate?: ((this: IStompSocket) => any) | undefined | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType?: string;\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n/**\n * @internal\n */\nexport interface IStomptHandlerConfig {\n  debug: debugFnType;\n  stompVersions: Versions;\n  connectHeaders: StompHeaders;\n  disconnectHeaders: StompHeaders;\n  heartbeatIncoming: number;\n  heartbeatOutgoing: number;\n  splitLargeFrames: boolean;\n  maxWebSocketChunkSize: number;\n  forceBinaryWSFrames: boolean;\n  logRawCommunication: boolean;\n  appendMissingNULLonIncoming: boolean;\n  discardWebsocketOnCommFailure: boolean;\n  onConnect: frameCallbackType;\n  onDisconnect: frameCallbackType;\n  onStompError: frameCallbackType;\n  onWebSocketClose: closeEventCallbackType;\n  onWebSocketError: wsErrorCallbackType;\n  onUnhandledMessage: messageCallbackType;\n  onUnhandledReceipt: frameCallbackType;\n  onUnhandledFrame: frameCallbackType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                        IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            retryIfDisconnected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abort\n                                        \n                                \n                                \n                                        \n                                            commit\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abort:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            destination\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subscribeOnlyOnce\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unsubHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\nIf header information can change over time, and you are allowing automatic re-subscriptions,\nconsider using a callback as the value rather than a string literal.\n             const subHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // The subHeadersCallback will be invoked before every (re)subscription.\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n             const unsubHeadersCallback = () => {\n                 return {bye: 'world'};\n             };\n             const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n                                .subscribe((message) => {\n                                   // handle message\n                                });\n             // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n             // `unsubHeadersCallback` will be invoked to get the headers.\n             sub.unsubscribe();\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   *\n   * If header information can change over time, and you are allowing automatic re-subscriptions,\n   * consider using a callback as the value rather than a string literal.\n   *\n   * ```typescript\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of these calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                correlateErrors\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:133\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:179\n                        \n                    \n\n            \n                \n                    Callback, invoked before attempting connection to the STOMP broker.\nYou can change the configuration of the rxStomp, which will impact the immediate connecting.\nIt is valid to call RxStomp#deactivate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case, connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive RxStomp as parameter.\nMaps to: Client#beforeConnect\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                        \n                    \n\n            \n                \n                    The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:152\n                        \n                    \n\n            \n                \n                    Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:93\n                        \n                    \n\n            \n                \n                    Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait forever.\nMaps to: Client#connectionTimeout.\nCaution: This feature is experimental.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        correlateErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:190\n                        \n                    \n\n            \n                \n                    Callback invoked on every ERROR frame. If the callback returns the ID of a currently\nsubscribed destination, the frame will be emitted as an error on the corresponding\nobservable(s), terminating them.\nImportantly, since those observables are now closed, this means a re-SUBSCRIBE to\nthe erroneous destination will not be attempted during an automatic reconnection of\nthe websocket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:60\n                        \n                    \n\n            \n                \n                    Enable client debugging\nExample:\n    debug: (msg: string): void => {\n      console.log(new Date(), msg);\n    },\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:143\n                        \n                    \n\n            \n                \n                    Maps to: Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:159\n                        \n                    \n\n            \n                \n                    Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:128\n                        \n                    \n\n            \n                \n                    Maps to: Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:107\n                        \n                    \n\n            \n                \n                    Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatIncoming\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:114\n                        \n                    \n\n            \n                \n                    Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                        \n                    \n\n            \n                \n                    Set it to log the actual raw communication with the broker.\nWhen unset, it logs only the headers of the parsed frames.\nChange in this takes effect from the next broker reconnection.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:138\n                        \n                    \n\n            \n                \n                    Maps to: Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:100\n                        \n                    \n\n            \n                \n                    Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: Client#reconnectDelay\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:123\n                        \n                    \n\n            \n                \n                    Enable a non-standards compliant mode of splitting outgoing large text packets.\nSee Client#splitLargeFrames for details.\nProbably, only Java Spring based brokers support this mode.\nMaps to: Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                        \n                    \n\n            \n                \n                    STOMP versions to attempt during STOMP handshake. By default, versions 1.2, 1.1, and 1.0 are attempted.\nExample:\n       // Try only versions 1.1 and 1.0\n       rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);Maps to: Client#stompVersions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:83\n                        \n                    \n\n            \n                \n                    This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n       // use a WebSocket\n       rxStompConfig.webSocketFactory= function () {\n         return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n       };\n\n       // Typical usage with SockJS\n       rxStompConfig.webSocketFactory= function () {\n         return new SockJS(\"http://broker.329broker.com/stomp\");\n       };Maps to: Client#webSocketFactory\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, IFrame, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of these calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default, versions `1.2`, `1.1`, and `1.0` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.1 and 1.0\n   *        rxStompConfig.stompVersions= new Versions(['1.1', '1.0']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs only the headers of the parsed frames.\n   *\n   * Change in this takes effect from the next broker reconnection.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * Enable client debugging\n   *\n   * Example:\n   *\n   * ```typescript\n   *     debug: (msg: string): void => {\n   *       console.log(new Date(), msg);\n   *     },\n   * ```\n   */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 0, which implies wait forever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   *\n   * Caution: This feature is experimental.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@link Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable a non-standards compliant mode of splitting outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Probably, only Java Spring based brokers support this mode.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked before attempting connection to the STOMP broker.\n   *\n   * You can change the configuration of the rxStomp, which will impact the immediate connecting.\n   * It is valid to call [RxStomp#deactivate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case, connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp]{@link RxStomp} as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n\n  /**\n   * Callback invoked on every ERROR frame. If the callback returns the ID of a currently\n   * subscribed destination, the frame will be emitted as an error on the corresponding\n   * observable(s), terminating them.\n   *\n   * Importantly, since those observables are now closed, this means a re-SUBSCRIBE to\n   * the erroneous destination will _not_ be attempted during an automatic reconnection of\n   * the websocket.\n   */\n  public correlateErrors?: (error: IFrame) => string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:32\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                        RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                        RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        rpc\n                        \n                    \n                \n            \n            \n                \n                    \n                    rpc(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:58\n                \n            \n\n\n            \n                \n                    Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        stream\n                        \n                    \n                \n            \n            \n                \n                    \n                    stream(params: IPublishParams)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:69\n                \n            \n\n\n            \n                \n                    Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IPublishParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { filter, first, Observable, Observer, Subscription } from 'rxjs';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { IMessage, IPublishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp.js';\nimport {\n  RxStompRPCConfig,\n  setupReplyQueueFnType,\n} from './rx-stomp-rpc-config.js';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: IPublishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: IPublishParams): Observable {\n    // defensively copy\n    const headers: StompHeaders = { ...(params.headers || {}) };\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || uuid();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ ...params, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n\n            \n                Description\n            \n            \n                RPC Config. For examples see the guide.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        replyQueueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                        \n                    \n\n            \n                \n                    Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        setupReplyQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         setupReplyQueueFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                        \n                    \n\n            \n                \n                    Setup the reply queue. See the guide for details.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp.js';\n\n/**\n * For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. For examples see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        WebSocketClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                        \n                    \n\n            \n                \n                    In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n       StompJs = require('../../esm5/');\n       Stomp = StompJs.Stomp;\n       Stomp.WebSocketClass = require('websocket').w3cwebsocket;Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        client\n                        \n                    \n                \n            \n            \n                \n                    \n                    client(url: string, protocols?: string[])\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                \n            \n\n\n            \n                \n                    This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n       var url = \"ws://localhost:61614/stomp\";\n       var client = Stomp.client(url);Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    protocols\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        over\n                        \n                    \n                \n            \n            \n                \n                    \n                    over(ws: any)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                \n            \n\n\n            \n                \n                    This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n       var client = Stomp.over(function(){\n         return new WebSocket('ws://localhost:15674/ws')\n       });Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ws\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CompatClient\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions.js';\nimport { CompatClient } from './compat-client.js';\nimport { IStompSocket } from '../types.js';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        appendMissingNULLonIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:68\n                        \n                    \n\n            \n                \n                    See Client#appendMissingNULLonIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        beforeConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:103\n                        \n                    \n\n            \n                \n                    See Client#beforeConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        brokerURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:23\n                        \n                    \n\n            \n                \n                    See Client#brokerURL.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:78\n                        \n                    \n\n            \n                \n                    See Client#connectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        connectionTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:38\n                        \n                    \n\n            \n                \n                    See Client#connectionTimeout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        debug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         debugFnType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:138\n                        \n                    \n\n            \n                \n                    See Client#debug.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        discardWebsocketOnCommFailure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:143\n                        \n                    \n\n            \n                \n                    See Client#discardWebsocketOnCommFailure.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        disconnectHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompHeaders\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:83\n                        \n                    \n\n            \n                \n                    See Client#disconnectHeaders.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        forceBinaryWSFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:63\n                        \n                    \n\n            \n                \n                    See Client#forceBinaryWSFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatIncoming\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:48\n                        \n                    \n\n            \n                \n                    See Client#heartbeatIncoming.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        heartbeatOutgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:53\n                        \n                    \n\n            \n                \n                    See Client#heartbeatOutgoing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        logRawCommunication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:133\n                        \n                    \n\n            \n                \n                    See Client#logRawCommunication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxWebSocketChunkSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:73\n                        \n                    \n\n            \n                \n                    See Client#maxWebSocketChunkSize.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onChangeState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:148\n                        \n                    \n\n            \n                \n                    See Client#onChangeState.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onConnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:108\n                        \n                    \n\n            \n                \n                    See Client#onConnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onDisconnect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:113\n                        \n                    \n\n            \n                \n                    See Client#onDisconnect.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onStompError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:118\n                        \n                    \n\n            \n                \n                    See Client#onStompError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledFrame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:98\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledFrame.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         messageCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:88\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledMessage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onUnhandledReceipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         frameCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:93\n                        \n                    \n\n            \n                \n                    See Client#onUnhandledReceipt.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketClose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         closeEventCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:123\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketClose.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        onWebSocketError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         wsErrorCallbackType\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:128\n                        \n                    \n\n            \n                \n                    See Client#onWebSocketError.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        reconnectDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:43\n                        \n                    \n\n            \n                \n                    See Client#reconnectDelay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        splitLargeFrames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:58\n                        \n                    \n\n            \n                \n                    See Client#splitLargeFrames.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        stompVersions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Versions\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:28\n                        \n                    \n\n            \n                \n                    See Client#stompVersions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        webSocketFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/stomp-config.ts:33\n                        \n                    \n\n            \n                \n                    See Client#webSocketFactory.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\nimport {\n  ActivationState,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType,\n} from './types.js';\nimport { Versions } from './versions.js';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StompSubscription.html":{"url":"interfaces/StompSubscription.html","title":"interface - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            unsubscribe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id associated with this subscription.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubscribe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unsubscribe:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unsubscribe. See Client#unsubscribe for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers.js';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TCPWrapper.html":{"url":"classes/TCPWrapper.html","title":"class - TCPWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TCPWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/tcp-wrapper.ts\n        \n\n\n            \n                Description\n            \n            \n                Wrapper for a TCP socket to make it behave similar to the WebSocket interface\n\n            \n\n\n            \n                Implements\n            \n            \n                            IStompSocket\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onclose\n                            \n                            \n                                    Public\n                                onerror\n                            \n                            \n                                    Public\n                                onmessage\n                            \n                            \n                                    Public\n                                onopen\n                            \n                            \n                                    Public\n                                readyState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                send\n                            \n                            \n                                    Public\n                                terminate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: string, port: number)\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/tcp-wrapper.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        port\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onclose\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | undefined | null\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/tcp-wrapper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onerror\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | undefined | null\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/tcp-wrapper.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onmessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | undefined | null\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/tcp-wrapper.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onopen\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | undefined | null\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/tcp-wrapper.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        readyState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StompSocketState\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/tcp-wrapper.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(code?: number, reason?: string)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/tcp-wrapper.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: string | ArrayBuffer)\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/tcp-wrapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | ArrayBuffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        terminate\n                        \n                    \n                \n            \n            \n                \n                    \n                    terminate()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/tcp-wrapper.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { createConnection, Socket } from \"net\";\nimport { IStompSocket, IStompSocketMessageEvent, StompSocketState } from \"./types.js\";\n\n/**\n * Wrapper for a TCP socket to make it behave similar to the WebSocket interface\n */\nexport class TCPWrapper implements IStompSocket {\n  public readyState: StompSocketState;\n  public onclose: ((this: IStompSocket, ev?: any) => any) | undefined | null;\n  public onerror: ((this: IStompSocket, ev: any) => any) | undefined | null;\n  public onmessage:\n    | ((this: IStompSocket, ev: IStompSocketMessageEvent) => any)\n    | undefined\n    | null;\n  public onopen: ((this: IStompSocket, ev?: any) => any) | undefined | null;\n  private socket: Socket;\n  private _closeEvtOnTermination: object | undefined;\n\n  constructor(host: string, port: number) {\n    const noOp = () => {};\n\n    this.readyState = StompSocketState.CONNECTING;\n\n    this.socket = createConnection(port, host, () => {\n      if (typeof this.onopen === 'function') {\n        this.readyState = StompSocketState.OPEN;\n        this.onopen();\n      }\n    });\n\n    this.socket.on('data', ev => {\n      if (typeof this.onmessage === 'function') {\n        this.onmessage({ data: ev });\n      }\n    });\n\n    this.socket.on('close', hadError => {\n      this.readyState = StompSocketState.CLOSED;\n      if (typeof this.onclose === 'function') {\n        if (this._closeEvtOnTermination) {\n          this.onclose(this._closeEvtOnTermination);\n        } else {\n          this.onclose({ wasClean: !hadError, type: 'CloseEvent', code: 1000 });\n        }\n      }\n    });\n\n    this.socket.on('error', ev => {\n      if (typeof this.onerror === 'function') {\n        this.onerror({ type: 'Error', error: 100, message: ev });\n      }\n    });\n  }\n\n  public send(data: string | ArrayBuffer) {\n    if (typeof data === 'string') {\n      this.socket.write(data);\n    } else {\n      this.socket.write(new Uint8Array(data));\n    }\n  }\n\n  public close(code?: number, reason?: string) {\n    this.readyState = StompSocketState.CLOSING;\n    this.socket.end();\n  }\n\n  public terminate() {\n    this.readyState = StompSocketState.CLOSING;\n    this._closeEvtOnTermination = {\n      wasClean: false,\n      type: 'CloseEvent',\n      code: 4001,\n    };\n    this.socket.destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\nYou will be creating an instance of this class if you want to override\nsupported versions to be declared during STOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_0\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:10\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.0\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.1'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:14\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.1\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        V1_2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.2'\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:18\n                        \n                    \n\n            \n                \n                    Indicates protocol version 1.2\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        versions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in consolidated/stompjs/src/versions.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        protocolVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    protocolVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:47\n                \n            \n\n\n            \n                \n                    Used while creating a WebSocket\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        supportedVersions\n                        \n                    \n                \n            \n            \n                \n                    \n                    supportedVersions()\n                \n            \n\n\n            \n                \n                    Defined in consolidated/stompjs/src/versions.ts:40\n                \n            \n\n\n            \n                \n                    Used as part of CONNECT STOMP Frame\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_2,\n    Versions.V1_1,\n    Versions.V1_0,\n  ]);\n\n  /**\n   * Takes an array of versions, typical elements '1.2', '1.1', or '1.0'\n   *\n   * You will be creating an instance of this class if you want to override\n   * supported versions to be declared during STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (44/44)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            interface\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/tcp-wrapper.ts\n            \n            class\n            TCPWrapper\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover the following libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs with RxJS primitives\n\nThe documentation for classes also indicates which library each of the classes\n belongs. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using the compatibility mode, your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Documentation for StompJS family\n        \n            License : Apache-2.0\n        \n            Author : Deepak Kumar\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a [CloseEvent]://developer.mozilla.org/en-US/docs/Web/API/CloseEventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as a parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                            IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an [Event]://developer.mozilla.org/en-US/docs/Web/API/Eventhttps\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                            IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                            IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    For examples see the guide.\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
