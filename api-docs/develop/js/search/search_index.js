var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/IFrame.html",[0,0.791,1,1.547]],["body/interfaces/IFrame.html",[0,0.861,1,2.94,2,1.523,3,0.391,4,0.391,5,0.337,6,1.873,7,2.382,8,0.391,9,3.652,10,0.175,11,2.975,12,3.652,13,4.413,14,3.652,15,3.652,16,2.015,17,3.652,18,3.652,19,2.228,20,2.776,21,1.997,22,0.313,23,0.753,24,1.829,25,3.652,26,0.447,27,1.139,28,3.757,29,3.268,30,4.653,31,5.262,32,4.529,33,0.853,34,0.037,35,1.503,36,1.495,37,3.151,38,1.663,39,4.413,40,2.258,41,3.652,42,3.151,43,4.413,44,4.413,45,2.015,46,3.652,47,0.569,48,2.761,49,2.761,50,1.378,51,0.517,52,3.151,53,2.761,54,0.02,55,0.026,56,0.02]],["title/interfaces/IMessage.html",[0,0.791,24,1.27]],["body/interfaces/IMessage.html",[0,0.872,1,2.512,2,1.542,3,0.396,4,0.396,5,0.341,6,1.896,8,0.396,10,0.103,11,1.706,20,2.799,21,1.814,22,0.353,23,0.848,24,2.191,25,3.682,26,0.453,27,1.365,29,1.896,33,0.755,34,0.037,36,1.414,45,2.032,47,0.759,48,2.796,50,1.39,51,0.521,54,0.02,55,0.026,56,0.02,57,2.412,58,2.247,59,2.49,60,2.498,61,1.706,62,3.682,63,4.45,64,1.074,65,4.117,66,1.935,67,1.844,68,4.028,69,4.669,70,1.651,71,3.775,72,5.288,73,4.376,74,2.968,75,3.775,76,4.45,77,4.45,78,3.378,79,2.796,80,3.378,81,3.378,82,3.378,83,2.796,84,3.378,85,2.032,86,3.378,87,2.412]],["title/interfaces/IPublishParams.html",[0,0.791,88,1.72]],["body/interfaces/IPublishParams.html",[0,1.215,1,2.006,2,1.019,3,0.261,4,0.261,5,0.225,8,0.261,10,0.068,11,2.006,16,1.518,21,1.802,22,0.381,23,0.916,24,1.646,26,0.299,27,0.858,28,3.361,29,2.95,30,1.846,32,3.643,33,0.853,34,0.038,35,1.491,36,1.251,40,1.814,41,3.288,47,0.677,50,1.375,51,0.665,52,1.593,54,0.013,55,0.02,56,0.013,59,1.377,61,2.377,85,2.335,87,2.373,88,2.471,89,1.404,90,1.252,91,3.324,92,2.499,93,3.324,94,1.479,95,3.105,96,4.402,97,2.751,98,2.751,99,1.252,100,3.324,101,3.324,102,3.143,103,3.324,104,1.866,105,2.373,106,3.324,107,2.962,108,2.962,109,1.404,110,1.846,111,1.593,112,1.593,113,1.846,114,2.231,115,3.324,116,2.231,117,1.593,118,3.324,119,3.324,120,2.231,121,2.231,122,1.593,123,2.231,124,1.593,125,1.404,126,1.593,127,1.019,128,3.324,129,3.143,130,3.324,131,2.231,132,2.231,133,1.846,134,2.231,135,3.324,136,4.402,137,4.708,138,2.231,139,1.404,140,2.231,141,2.231,142,2.231,143,1.404,144,3.65,145,2.231,146,4.402,147,3.896,148,2.231,149,2.231,150,2.231,151,2.231,152,1.518,153,1.846,154,2.751,155,2.231,156,2.231,157,1.846,158,2.231,159,2.091,160,2.499,161,1.593,162,2.751,163,2.231,164,1.404,165,2.231,166,2.231,167,2.231,168,0.841,169,2.231,170,2.373,171,1.846,172,3.324,173,1.846,174,1.846,175,1.846,176,1.846,177,1.846,178,1.593,179,1.846,180,1.846,181,1.846]],["title/interfaces/IRxStompPublishParams.html",[0,0.791,182,2.188]],["body/interfaces/IRxStompPublishParams.html",[0,1.024,2,1.812,3,0.465,4,0.465,5,0.401,8,0.465,10,0.163,16,2.252,22,0.35,23,0.677,26,0.532,27,1.273,33,0.602,34,0.037,40,2.451,47,0.677,51,0.465,54,0.023,55,0.029,56,0.023,59,2.044,67,2.044,88,3.013,94,1.273,99,1.859,104,2.769,105,4.009,160,3.532,182,3.521,183,1.644,184,2.833,185,1.361,186,2.833,187,2.833,188,4.932,189,3.521,190,4.932,191,1.273,192,5.615,193,4.932,194,4.932,195,4.082,196,3.521,197,4.932,198,4.932,199,3.968]],["title/interfaces/ITransaction.html",[0,0.791,200,2.188]],["body/interfaces/ITransaction.html",[0,1.007,2,1.782,3,0.457,4,0.457,5,0.394,6,2.191,8,0.457,19,2.465,20,3.071,22,0.277,23,0.666,26,0.523,27,1.26,33,0.808,34,0.037,35,1.375,51,0.457,54,0.023,55,0.029,56,0.023,64,1.063,66,1.971,68,3.485,69,4.04,70,1.743,85,2.229,200,3.485,201,3.229,202,5.947,203,3.229,204,3.229,205,3.902,206,3.902,207,3.902,208,5.862,209,5.862,210,3.511,211,4.881,212,4.881,213,3.485,214,4.04,215,3.902,216,3.902]],["title/interfaces/IWatchParams.html",[0,0.791,217,2.188]],["body/interfaces/IWatchParams.html",[0,0.622,2,1.099,3,0.282,4,0.282,5,0.243,8,0.282,10,0.107,16,2.316,21,1.909,22,0.25,23,0.411,26,0.323,27,0.908,33,0.693,34,0.038,35,1.254,36,1.556,38,1.325,40,1.897,45,2.086,47,0.411,51,0.282,52,3.261,54,0.014,55,0.021,56,0.014,59,1.893,60,2.564,61,2.306,94,1.386,95,3.502,99,1.325,102,2.51,104,1.974,168,1.325,183,0.998,184,1.719,187,1.719,189,2.51,191,0.908,195,2.91,217,2.51,218,1.992,219,4.568,220,5.073,221,4.568,222,5.073,223,3.516,224,3.516,225,4.568,226,2.91,227,2.91,228,2.51,229,2.91,230,3.516,231,3.516,232,3.516,233,3.516,234,3.516,235,2.712,236,5.073,237,2.562,238,4.568,239,4.568,240,4.568,241,4.568,242,3.78,243,3.78,244,3.78,245,3.78,246,2.91,247,3.516,248,2.91,249,2.212,250,3.516,251,2.91,252,3.516,253,2.51,254,2.91,255,3.516,256,2.91,257,2.51,258,3.516,259,3.516,260,5.073,261,3.78,262,2.212,263,1.974,264,2.91,265,3.516,266,3.516,267,3.516,268,3.516]],["title/injectables/InjectableRxStompConfig.html",[269,0.717,270,1.72]],["body/injectables/InjectableRxStompConfig.html",[3,0.423,4,0.423,5,0.365,8,0.423,10,0.165,19,2.346,22,0.33,34,0.037,38,1.751,47,0.792,50,1.605,51,0.423,54,0.021,55,0.027,56,0.021,64,1.033,67,1.496,70,1.451,168,2.044,185,1.239,191,0.932,235,2.346,256,3.845,257,3.873,269,1.27,270,2.608,271,1.649,272,1.239,273,2.272,274,1.496,275,1.451,276,1.451,277,0.293,278,2.122,279,2.381,280,3.845,281,3.318,282,3.845,283,2.122,284,2.608,285,3.318,286,3.318,287,3.318,288,3.873,289,1.925,290,5.425,291,2.346,292,4.647,293,4.647,294,2.923,295,3.845,296,4.647,297,4.647,298,4.647,299,3.318,300,4.647,301,4.647,302,4.647,303,3.845,304,1.823]],["title/injectables/InjectableRxStompRPCConfig.html",[269,0.717,305,1.547]],["body/injectables/InjectableRxStompRPCConfig.html",[3,0.477,4,0.477,5,0.411,8,0.477,10,0.153,22,0.356,34,0.037,47,0.855,50,1.695,51,0.587,54,0.024,55,0.029,56,0.024,64,0.954,67,1.687,124,2.906,125,2.561,185,1.396,191,1.051,235,2.056,269,1.326,271,1.859,272,1.396,273,2.561,274,1.687,275,1.769,276,1.565,277,0.232,278,2.288,289,2.076,304,2.056,305,2.937,306,1.687,307,2.861,308,4.147,309,3.578,310,3.578,311,3.578,312,1.859,313,1.859,314,2.561]],["title/classes/RxStompConfig.html",[277,0.174,279,1.27]],["body/classes/RxStompConfig.html",[3,0.157,4,0.157,5,0.135,8,0.157,9,1.84,10,0.179,16,2.332,18,1.84,19,1.122,20,1.398,21,1.36,22,0.158,23,0.229,26,0.18,27,0.574,33,0.806,34,0.038,35,0.574,36,1.045,40,2.146,42,1.587,45,1.015,47,0.379,51,0.157,54,0.008,55,0.013,56,0.008,58,1.122,61,2.219,64,0.631,66,1.137,70,1.372,74,1.248,85,0.612,94,1.519,99,1.249,104,2.867,107,1.398,108,1.398,109,1.792,127,1.81,133,2.743,139,2.085,160,2.764,164,2.957,183,2.223,185,0.46,191,0.574,227,2.743,237,2.219,245,1.84,246,1.84,253,1.587,274,0.555,277,0.076,278,1.015,279,0.921,284,1.861,291,1.674,294,1.398,313,1.015,315,0.46,316,2.709,317,2.367,318,1.656,319,2.223,320,2.223,321,1.84,322,2.282,323,2.357,324,2.357,325,2.357,326,2.357,327,2.357,328,2.357,329,2.357,330,2.357,331,2.357,332,2.357,333,2.357,334,2.357,335,2.357,336,2.357,337,2.357,338,2.357,339,2.357,340,1.658,341,1.109,342,1.84,343,1.34,344,2.223,345,2.223,346,2.83,347,2.743,348,1.34,349,2.223,350,1.34,351,2.223,352,2.743,353,1.587,354,1.587,355,2.223,356,2.223,357,2.223,358,2.223,359,2.223,360,2.223,361,1.122,362,1.587,363,1.84,364,2.223,365,2.223,366,4.777,367,1.84,368,1.34,369,1.84,370,2.223,371,2.223,372,1.84,373,3.315,374,3.315,375,2.83,376,1.34,377,2.223,378,3.315,379,2.223,380,2.223,381,2.223,382,2.223,383,2.743,384,1.84,385,2.223,386,2.223,387,2.223,388,1.587,389,1.84,390,1.84,391,1.109,392,2.223,393,1.84,394,2.223,395,4.394,396,4.394,397,2.223,398,2.223,399,1.84,400,1.34,401,3.315,402,1.438,403,2.223,404,1.109,405,1.84,406,1.34,407,2.223,408,1.84,409,1.109,410,1.84,411,1.34,412,2.223,413,3.315,414,3.315,415,3.964,416,2.223,417,1.34,418,3.315,419,1.84,420,1.34,421,2.223,422,1.84,423,1.84,424,2.223,425,2.223,426,2.223,427,2.223,428,2.223,429,1.84,430,2.367,431,2.223,432,2.223,433,2.223,434,1.84,435,1.84,436,1.109,437,1.84,438,1.34,439,2.223,440,2.223,441,1.109,442,1.84,443,2.223,444,2.223,445,1.84,446,2.223,447,2.223,448,2.223,449,2.223,450,2.743,451,2.223,452,2.223,453,2.223,454,1.84,455,2.082,456,1.34,457,1.84,458,1.587,459,1.84,460,2.743,461,3.28,462,2.223,463,2.223,464,2.223,465,2.225,466,2.223,467,1.84,468,1.34,469,1.84,470,2.223,471,2.743,472,2.223,473,2.223,474,2.223,475,2.223,476,2.743,477,2.223,478,1.84,479,2.223,480,1.587,481,1.34,482,2.223,483,2.034,484,1.587,485,1.109,486,1.109,487,0.957,488,1.109,489,1.109,490,1.84,491,1.109,492,1.109,493,1.109,494,1.109,495,1.109,496,1.109,497,1.34,498,1.34,499,1.34,500,1.34,501,1.34,502,1.34,503,1.109]],["title/classes/RxStompRPC.html",[277,0.174,504,1.72]],["body/classes/RxStompRPC.html",[3,0.266,4,0.266,5,0.229,8,0.266,10,0.161,21,1.522,22,0.239,23,0.387,24,1.662,26,0.304,28,2.403,29,1.889,33,0.609,34,0.038,36,0.956,40,1.036,45,1.537,47,0.847,51,0.266,54,0.013,55,0.02,56,0.013,58,1.699,59,0.94,60,2.491,64,1.005,66,1.154,74,2.491,90,1.512,92,3.234,94,1.036,95,2.117,105,1.62,127,1.832,152,1.537,168,1.268,183,1.839,185,1.154,191,0.869,210,3.234,213,1.62,235,2.241,237,2.394,243,1.877,248,2.785,262,1.427,263,2.788,264,2.785,275,1.386,277,0.129,283,1.537,284,2.491,289,1.839,306,2.274,307,2.241,309,3.169,310,3.546,311,3.169,314,2.117,315,0.778,316,2.241,317,1.62,318,1.871,322,1.871,340,1.253,353,1.62,372,1.877,504,1.889,505,1.877,506,2.785,507,3.366,508,3.366,509,2.117,510,4.439,511,1.699,512,1.877,513,3.673,514,2.269,515,1.889,516,1.512,517,1.427,518,3.366,519,2.269,520,4.439,521,3.923,522,3.366,523,2.785,524,3.366,525,3.366,526,4.012,527,3.366,528,2.269,529,2.785,530,2.785,531,3.366,532,3.366,533,4.439,534,2.403,535,3.366,536,2.269,537,2.269,538,1.877,539,2.785,540,1.62,541,2.403,542,1.273,543,4.439,544,4.254,545,2.269,546,1.877,547,1.877,548,1.877,549,2.269,550,2.269,551,2.269,552,2.269,553,2.269,554,3.366,555,1.62,556,3.366,557,2.269,558,3.366,559,4.012,560,3.366,561,3.366,562,3.366,563,2.269,564,2.269,565,1.877,566,2.269,567,2.269,568,2.269,569,4.012,570,3.366,571,2.269,572,2.269,573,1.427,574,2.269,575,2.269,576,2.269,577,3.366,578,4.012,579,3.366,580,2.269,581,2.269,582,2.269,583,2.269,584,2.269,585,2.269,586,2.269,587,2.269,588,2.269]],["title/classes/RxStompRPCConfig.html",[277,0.174,307,1.547]],["body/classes/RxStompRPCConfig.html",[3,0.413,4,0.413,5,0.357,8,0.413,10,0.17,22,0.251,23,0.602,24,1.463,26,0.473,27,1.182,33,0.771,34,0.037,35,1.312,47,0.867,51,0.536,54,0.021,55,0.027,56,0.021,64,1.107,66,1.743,94,1.388,99,1.725,183,2.106,185,1.211,191,0.911,262,2.221,263,2.57,274,1.463,277,0.201,284,3.019,289,2.409,306,2.309,307,2.312,315,1.211,316,2.566,318,1.915,322,2.152,340,1.43,516,1.725,541,3.629,542,2.57,546,3.789,547,3.789,548,3.789,565,4.451,573,3.384,589,5.379,590,5.083,591,3.53,592,4.579,593,4.579,594,4.579,595,3.53,596,4.579]],["title/injectables/RxStompRPCService.html",[269,0.717,597,1.928]],["body/injectables/RxStompRPCService.html",[3,0.425,4,0.425,5,0.367,8,0.425,10,0.165,22,0.331,33,0.551,34,0.037,47,0.927,50,1.457,51,0.425,54,0.021,55,0.027,56,0.021,58,2.355,64,0.888,67,1.505,90,1.368,94,1.33,143,2.934,185,1.6,191,0.938,269,1.316,271,1.658,272,1.6,275,1.698,276,1.457,277,0.207,278,2.13,289,1.933,294,2.934,304,1.834,305,2.745,306,1.505,308,3.86,309,3.33,310,3.33,311,3.33,318,1.941,340,1.134,354,3.33,504,3.052,511,2.355,512,3.005,513,4.653,515,2.618,516,1.368,517,2.285,542,2.039,597,2.934,598,2.934,599,3.005,600,2.253,601,3.632,602,4.664,603,3.86,604,4.664,605,3.632,606,3.86,607,3.632]],["title/injectables/RxStompService.html",[269,0.717,600,1.27]],["body/injectables/RxStompService.html",[3,0.468,4,0.468,5,0.403,8,0.468,10,0.164,22,0.352,34,0.037,47,0.844,50,1.757,51,0.468,54,0.023,55,0.029,56,0.023,64,1.122,67,1.655,191,1.031,269,1.317,271,1.823,272,1.37,275,1.546,276,1.546,277,0.306,278,2.261,280,4.098,281,3.535,282,4.098,283,2.261,284,2.78,285,3.535,286,3.535,287,3.535,288,4.017,289,2.052,304,2.016,318,2.221,598,2.512,600,2.052,608,3.305,609,2.78]],["title/classes/Stomp.html",[10,0.093,277,0.174]],["body/classes/Stomp.html",[3,0.229,4,0.229,5,0.198,8,0.229,10,0.154,19,1.519,22,0.214,23,0.513,26,0.262,27,0.777,33,0.556,34,0.038,35,1.336,38,0.737,47,0.625,50,1.388,51,0.229,54,0.011,55,0.018,56,0.011,58,2.078,64,0.573,66,1.032,70,1.576,74,1.098,75,3.172,90,1.134,94,0.777,99,0.737,107,1.23,126,3.602,127,0.893,129,1.396,139,3.476,144,2.618,147,3.034,152,1.374,154,3.406,157,2.49,168,1.901,170,1.396,204,1.618,214,2.49,228,2.148,235,1.851,237,2.468,276,0.94,277,0.278,278,2.304,283,2.363,299,2.618,312,2.363,313,2.029,314,1.23,315,0.671,317,2.148,322,1.381,340,1.145,353,2.148,369,3.883,375,2.148,384,3.677,402,2.93,429,4.283,430,1.396,442,2.49,455,1.374,465,2.966,469,2.49,471,2.49,480,2.939,483,1.396,484,2.618,487,2.148,506,1.618,509,1.893,515,1.689,516,1.381,517,1.23,555,2.939,610,1.618,611,3.008,612,5.045,613,5.045,614,3.695,615,3.666,616,1.956,617,3.008,618,3.008,619,3.008,620,3.008,621,4.116,622,3.008,623,3.008,624,4.888,625,1.956,626,2.49,627,2.148,628,2.49,629,3.008,630,4.692,631,3.008,632,3.008,633,3.677,634,3.008,635,1.956,636,3.008,637,3.008,638,2.49,639,3.008,640,3.666,641,3.008,642,2.49,643,3.008,644,3.008,645,2.49,646,3.008,647,3.008,648,3.008,649,3.008,650,3.008,651,3.008,652,3.008,653,2.49,654,3.008,655,3.008,656,4.116,657,1.956,658,1.618,659,1.956,660,1.956,661,1.956,662,1.956,663,3.008,664,1.618,665,3.008,666,1.956,667,1.956,668,1.956,669,3.666,670,1.956,671,1.956,672,4.116,673,1.956,674,1.956,675,3.008,676,1.956,677,1.618,678,1.956,679,1.618,680,1.618,681,1.956,682,1.956,683,1.956]],["title/classes/StompConfig.html",[277,0.174,684,1.72]],["body/classes/StompConfig.html",[3,0.202,4,0.202,5,0.174,8,0.202,10,0.103,21,0.591,22,0.194,23,0.465,26,0.231,27,0.704,33,0.893,34,0.037,35,0.704,36,1.19,37,1.946,40,2.328,45,1.245,47,0.577,50,1.2,51,0.202,54,0.01,55,0.016,56,0.01,62,2.256,64,1.18,70,1.056,79,1.426,85,1.245,94,1.597,109,2.127,111,2.414,112,3.713,117,2.414,122,2.414,127,1.245,159,1.084,164,3.207,178,1.946,189,1.946,249,1.715,270,1.53,274,0.714,275,0.851,276,0.851,277,0.193,279,1.129,281,2.744,291,1.376,315,0.591,322,2.371,323,2.798,324,2.798,325,2.798,326,2.798,327,2.798,328,2.798,329,2.798,330,2.798,331,2.798,332,2.798,333,2.798,334,2.798,335,2.798,336,2.798,337,2.798,338,2.798,339,2.798,340,1.838,341,1.426,342,2.256,352,1.426,367,2.256,375,1.946,390,2.256,391,1.426,399,2.256,402,2.248,404,1.426,405,2.256,408,2.256,409,1.426,410,2.256,419,2.256,435,2.256,436,1.426,437,2.256,441,1.426,450,2.256,455,1.755,467,2.256,480,1.946,483,1.23,485,1.426,486,1.426,487,1.23,488,1.426,489,1.426,490,1.426,491,1.426,492,1.426,493,1.426,494,1.426,495,1.426,496,1.426,503,1.426,511,1.376,516,1.448,658,1.426,684,1.53,685,3.716,686,2.726,687,2.256,688,2.726,689,2.726,690,3.381,691,3.381,692,3.381,693,3.381,694,3.381,695,3.381,696,3.381,697,3.381,698,3.381,699,1.723,700,1.723,701,1.723,702,1.723,703,1.723,704,2.726,705,1.723,706,1.723,707,1.723,708,1.723,709,2.726,710,1.723,711,1.723,712,1.723,713,1.723,714,2.726,715,2.726,716,2.726,717,2.726,718,1.723,719,2.726,720,1.723,721,1.723,722,2.726,723,2.726,724,2.726,725,1.723,726,2.726,727,1.723,728,1.723,729,1.723,730,1.723,731,1.723,732,1.723,733,1.723,734,1.723,735,1.723,736,1.723,737,1.723,738,1.723,739,1.723,740,1.723,741,1.723]],["title/classes/StompHeaders.html",[36,0.871,277,0.174]],["body/classes/StompHeaders.html",[3,0.513,4,0.513,5,0.443,8,0.513,10,0.133,12,3.627,16,2.001,21,1.923,22,0.311,23,0.747,34,0.035,35,1.5,36,1.489,37,4.147,38,1.652,49,3.627,51,0.513,54,0.026,55,0.031,56,0.026,90,1.652,277,0.25,315,1.503,321,3.627,340,1.369,347,3.627,434,3.627,685,3.297,742,3.627,743,3.129,744,4.383,745,3.627,746,4.383,747,4.383,748,4.383,749,4.383,750,4.383,751,4.383,752,4.383]],["title/injectables/StompRService.html",[269,0.717,753,1.72]],["body/injectables/StompRService.html",[3,0.136,4,0.136,5,0.117,8,0.136,10,0.167,11,2.318,14,1.631,15,1.631,16,2.238,17,1.631,19,0.995,21,1.758,22,0.14,23,0.198,26,0.156,27,0.781,29,1.441,33,0.459,34,0.038,35,1.339,36,1.116,38,1.774,42,1.407,45,1.382,47,0.705,50,0.615,51,0.136,54,0.007,55,0.012,56,0.007,59,2.149,60,1.699,61,2.175,66,0.676,67,0.481,68,2.161,70,0.802,71,1.407,73,3.049,75,2.161,85,2.149,90,1.14,92,2.132,94,0.781,95,1.615,97,1.631,99,1.14,102,2.63,104,2.205,108,1.24,110,1.631,113,4.056,127,1.682,143,1.24,152,2.196,159,2.318,160,2.71,161,1.407,164,1.24,168,1.14,186,2.42,191,0.3,196,2.951,210,1.904,213,2.161,229,1.631,235,0.995,237,2.475,242,3.565,244,1.631,249,1.24,251,1.631,253,1.407,254,1.631,262,0.73,263,2.577,269,0.461,271,0.53,272,1.709,275,0.945,276,0.615,277,0.193,279,1.064,283,1.382,291,1.528,294,1.904,304,0.586,312,0.9,313,1.682,318,0.743,322,2.03,340,1.531,346,1.407,354,2.161,361,1.528,362,1.407,363,1.631,366,1.631,389,1.631,393,2.504,402,1.86,422,2.504,423,1.631,430,1.833,454,2.504,457,2.125,458,1.407,465,0.652,476,0.961,484,0.829,509,1.904,511,1.297,516,1.14,517,0.73,521,3.049,529,1.631,534,1.407,538,0.961,539,1.631,540,1.407,542,1.441,544,0.961,555,2.161,573,2.318,600,0.817,606,2.805,614,0.829,626,1.631,627,3.278,628,3.42,638,2.504,642,1.631,653,0.961,664,2.504,677,1.631,679,2.125,680,1.631,684,1.106,687,1.631,745,1.631,753,1.106,754,3.558,755,0.961,756,1.407,757,1.407,758,1.407,759,1.631,760,1.971,761,1.971,762,1.631,763,1.631,764,2.161,765,1.631,766,1.631,767,1.631,768,1.631,769,1.699,770,3.928,771,3.026,772,3.389,773,2.568,774,1.971,775,2.568,776,2.568,777,2.568,778,2.568,779,2.568,780,1.161,781,1.161,782,1.161,783,1.161,784,1.161,785,1.971,786,1.971,787,3.026,788,1.971,789,1.971,790,1.161,791,1.161,792,3.026,793,3.026,794,1.971,795,1.971,796,1.971,797,1.971,798,1.971,799,1.971,800,1.971,801,1.971,802,1.971,803,1.971,804,1.971,805,1.971,806,1.161,807,1.161,808,3.026,809,3.026,810,3.684,811,1.971,812,1.971,813,3.684,814,1.971,815,1.971,816,1.971,817,1.971,818,1.971,819,1.971,820,1.971,821,1.971,822,1.971,823,1.971,824,1.971,825,1.971,826,3.684,827,1.971,828,1.971,829,1.971,830,1.971,831,1.971,832,1.971,833,3.389,834,1.161,835,3.684,836,3.026,837,3.026,838,3.684,839,1.971,840,1.161,841,1.161,842,4.707,843,1.971,844,3.026,845,2.504,846,1.971,847,1.971,848,2.568,849,1.161,850,1.161,851,1.631,852,3.026,853,1.971,854,1.631,855,1.971,856,1.161,857,1.161,858,1.971,859,4.308,860,1.161,861,1.161,862,1.971,863,1.161,864,1.161,865,1.971,866,1.971,867,1.161,868,1.161,869,1.161,870,1.161,871,2.504,872,1.971,873,2.125,874,0.961,875,1.161,876,3.389,877,1.161,878,1.161,879,1.161,880,1.161,881,1.161,882,1.161,883,1.161,884,1.161,885,1.161,886,1.161,887,1.161,888,1.161,889,1.161,890,1.161,891,2.568,892,1.161,893,0.961,894,1.161,895,1.161,896,1.161,897,1.161,898,1.161,899,1.161,900,1.161,901,1.161,902,1.161,903,1.161,904,1.971,905,1.161,906,1.161,907,1.161,908,1.161,909,1.161,910,1.971,911,1.161,912,1.161,913,1.161,914,1.161,915,1.161,916,1.161,917,1.161,918,1.161,919,0.961,920,1.161,921,1.161,922,1.161,923,1.161]],["title/injectables/StompService.html",[269,0.717,769,1.72]],["body/injectables/StompService.html",[3,0.411,4,0.411,5,0.355,8,0.534,10,0.163,22,0.324,33,0.533,34,0.037,38,1.323,47,0.864,50,1.425,51,0.411,54,0.021,55,0.027,56,0.021,59,1.454,64,0.869,66,1.204,67,1.454,71,2.506,90,1.323,94,0.906,152,1.603,161,2.506,168,1.91,196,2.506,263,2.561,269,1.068,271,1.603,272,1.565,275,1.676,276,1.425,277,0.289,283,1.603,291,2.304,304,1.772,312,2.083,313,1.603,322,1.719,340,1.096,361,2.71,362,2.506,511,2.56,516,1.323,534,2.506,540,3.257,542,2.561,573,2.208,600,1.89,609,2.561,684,3.013,753,2.845,756,3.257,757,3.257,758,3.257,759,3.776,762,2.905,763,2.905,764,2.506,765,2.905,766,2.905,767,2.905,768,2.905,769,2.561,874,2.905,893,2.905,919,2.905,924,2.905,925,4.563,926,3.51,927,4.563,928,4.563,929,4.563,930,3.51,931,2.905,932,3.51,933,3.51,934,3.51,935,3.51]],["title/classes/StompSubscription.html",[277,0.174,936,2.188]],["body/classes/StompSubscription.html",[3,0.468,4,0.468,5,0.403,8,0.468,10,0.122,21,1.699,22,0.352,23,0.844,26,0.535,27,1.278,33,0.752,34,0.037,35,1.278,36,1.407,47,0.681,51,0.468,54,0.023,55,0.029,56,0.023,60,2.78,64,0.943,65,4.098,66,1.699,70,1.247,74,2.78,83,3.305,85,1.823,210,3.639,261,4.787,277,0.227,315,1.37,322,2.221,340,1.546,515,2.78,685,3.386,936,4.017,937,3.305,938,3.993,939,4.952,940,3.993,941,4.952,942,3.993]],["title/classes/Versions.html",[277,0.174,455,1.399]],["body/classes/Versions.html",[3,0.351,4,0.351,5,0.303,8,0.351,10,0.166,11,2.073,22,0.333,23,0.511,26,0.402,27,1.06,33,0.801,34,0.037,35,1.488,38,1.765,46,3.398,51,0.351,54,0.018,55,0.024,56,0.018,58,2.073,90,1.129,94,0.774,99,1.898,127,2.3,129,2.14,139,2.583,152,1.875,153,4.51,237,2.073,277,0.267,278,2.488,315,1.028,322,2.236,340,1.743,346,2.931,383,4.51,455,2.71,458,2.931,459,3.398,460,4.51,461,4.51,465,1.682,478,3.398,509,2.583,511,1.513,516,1.129,530,3.398,614,4.163,931,3.398,943,2.48,944,4.683,945,4.683,946,4.683,947,4.683,948,5.037,949,5.037,950,2.997,951,2.997,952,4.106,953,4.106,954,4.106,955,4.106,956,2.997,957,5.45,958,2.997,959,2.997,960,2.997,961,2.997,962,2.997,963,2.997,964,2.997,965,2.997,966,2.997,967,2.997,968,2.997,969,2.997]],["title/coverage.html",[970,3.45]],["body/coverage.html",[0,1.431,1,1.602,5,0.321,6,2.707,7,2.266,10,0.179,24,1.315,33,0.482,34,0.037,36,0.902,54,0.019,55,0.025,56,0.019,57,2.266,70,0.991,88,1.781,89,1.996,182,2.266,183,2.297,184,3.047,185,1.769,186,2.266,187,3.047,200,2.266,201,2.626,217,2.266,218,2.626,269,1.297,270,1.781,272,1.975,273,3.034,274,2.297,277,0.339,279,1.315,305,2.155,306,1.998,307,1.602,316,2.604,318,1.196,361,1.602,388,2.266,402,1.602,455,1.449,465,1.781,504,1.781,505,2.626,597,1.996,598,3.034,599,2.626,600,1.315,608,2.626,609,1.781,610,2.626,633,2.626,684,1.781,685,3.034,742,2.626,753,1.781,754,2.266,755,2.626,769,1.781,924,2.626,936,2.266,937,2.626,943,2.626,970,2.626,971,3.173,972,3.173,973,4.268,974,4.268,975,6.218,976,4.823,977,5.543,978,3.173,979,2.626,980,3.173,981,3.173,982,4.823,983,4.823,984,3.173,985,3.173,986,3.173,987,3.173,988,3.173,989,3.173,990,3.173,991,3.173,992,4.268,993,3.173,994,3.173,995,3.173]],["title/miscellaneous/enumerations.html",[996,1.063,997,3.047]],["body/miscellaneous/enumerations.html",[10,0.174,22,0.363,26,0.563,34,0.03,54,0.025,55,0.03,56,0.025,89,2.641,144,2.997,159,2.641,162,4.225,170,4.088,171,4.554,173,4.225,174,4.225,175,4.225,176,4.554,177,3.474,178,3.645,179,3.474,180,3.474,181,3.474,183,1.739,191,1.084,272,1.44,275,1.595,276,1.311,277,0.239,312,1.917,316,2.12,318,1.582,361,2.12,627,2.997,754,2.997,756,2.997,757,2.997,758,2.997,871,4.554,873,4.225,996,1.739,997,3.474,998,4.225,999,2.997,1000,5.726,1001,4.198,1002,4.198,1003,4.198]],["title/miscellaneous/functions.html",[743,2.629,996,1.063]],["body/miscellaneous/functions.html",[10,0.169,22,0.303,26,0.573,34,0.034,54,0.025,55,0.03,56,0.025,64,0.814,70,1.732,90,1.61,94,1.103,143,2.689,152,1.952,168,1.61,203,3.537,257,3.051,272,1.466,275,1.335,276,1.335,279,1.771,285,3.051,286,3.051,287,3.051,288,3.685,289,1.771,291,2.158,295,3.537,299,3.051,303,3.537,313,1.952,361,2.606,515,2.399,516,1.61,598,2.689,600,2.444,603,3.537,609,2.898,743,3.051,845,3.537,851,3.537,979,4.272,996,1.771,999,3.051,1004,4.274,1005,4.274,1006,4.274,1007,4.274,1008,4.274,1009,4.274]],["title/index.html",[26,0.344,1010,2.566,1011,2.566]],["body/index.html",[10,0.176,23,0.848,34,0.029,54,0.024,55,0.029,56,0.024,64,0.947,98,4.467,125,2.528,168,1.873,185,1.705,191,1.283,226,3.326,228,3.549,249,2.528,269,0.941,270,2.256,275,1.255,276,1.686,279,1.665,283,1.835,305,2.029,306,1.665,307,2.029,312,1.835,315,1.935,318,1.873,388,2.869,402,2.029,445,3.326,455,2.465,504,2.791,523,3.326,597,2.528,600,1.665,609,2.256,645,3.326,753,2.256,764,2.869,769,2.256,1012,4.019,1013,4.019,1014,5.398,1015,5.64,1016,4.019,1017,4.019,1018,4.019,1019,4.019,1020,4.019,1021,4.019,1022,4.019,1023,4.019,1024,4.019,1025,4.019,1026,4.019,1027,4.019,1028,4.019,1029,4.019,1030,4.019,1031,4.019,1032,4.019,1033,5.398,1034,4.019]],["title/modules.html",[1035,3.45]],["body/modules.html",[34,0.033,54,0.029,55,0.033,56,0.029,1035,4.072]],["title/overview.html",[1036,3.45]],["body/overview.html",[2,2.212,34,0.033,54,0.028,55,0.033,56,0.028,271,2.212,315,1.662,1036,4.009,1037,5.558,1038,4.845]],["title/miscellaneous/typealiases.html",[996,1.063,1039,3.682]],["body/miscellaneous/typealiases.html",[1,2.69,6,2.74,7,3.485,10,0.162,11,2.465,22,0.422,23,1,24,2.207,26,0.523,33,0.592,34,0.029,35,1.007,53,3.229,54,0.023,55,0.029,56,0.023,57,3.485,59,2.023,61,2.901,64,0.743,66,1.339,70,1.831,87,2.786,88,2.74,89,2.455,92,3.071,107,3.615,108,3.615,109,3.071,111,3.485,112,3.485,117,3.485,122,3.485,124,2.786,125,2.455,126,2.786,183,1.617,191,1.007,274,2.023,289,1.617,306,2.023,316,1.97,541,3.485,854,3.229,996,1.617,998,4.851,999,2.786,1040,3.902,1041,4.881,1042,3.902]],["title/miscellaneous/variables.html",[996,1.063,1043,3.047]],["body/miscellaneous/variables.html",[10,0.165,26,0.622,34,0.034,38,1.749,54,0.027,55,0.032,56,0.027,99,1.749,185,1.86,272,1.592,273,2.92,274,2.246,305,2.989,306,2.246,312,2.12,313,2.12,314,2.92,996,1.923,1043,3.842,1044,4.642]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":396,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.1.1",{"_index":349,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["0.3.5",{"_index":364,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["1.0",{"_index":460,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.1",{"_index":461,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1.2",{"_index":383,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["1/1",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1038,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["27/27",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["41/41",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["44/44",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1037,"title":{},"body":{"overview.html":{}}}],["6/6",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["_customreplyqueue",{"_index":552,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_dummysubscription",{"_index":557,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_mapstompstate(st",{"_index":875,"title":{},"body":{"injectables/StompRService.html":{}}}],["_repliesobservable",{"_index":551,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_replyqueuename",{"_index":545,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["_setupreplyqueue",{"_index":549,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["abort",{"_index":208,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["accept",{"_index":744,"title":{},"body":{"classes/StompHeaders.html":{}}}],["access",{"_index":20,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{}}}],["accessors",{"_index":774,"title":{},"body":{"injectables/StompRService.html":{}}}],["ack",{"_index":68,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/StompRService.html":{}}}],["acknowledgement",{"_index":73,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{}}}],["acknowledges",{"_index":829,"title":{},"body":{"injectables/StompRService.html":{}}}],["activated",{"_index":1008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["activation",{"_index":177,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activationstate",{"_index":178,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/enumerations.html":{}}}],["active",{"_index":179,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["activemq",{"_index":594,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["acts",{"_index":611,"title":{},"body":{"classes/Stomp.html":{}}}],["actual",{"_index":422,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["actually",{"_index":819,"title":{},"body":{"injectables/StompRService.html":{}}}],["added",{"_index":103,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["addition",{"_index":747,"title":{},"body":{"classes/StompHeaders.html":{}}}],["additional",{"_index":188,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["additionally",{"_index":853,"title":{},"body":{"injectables/StompRService.html":{}}}],["advance",{"_index":293,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["advanced",{"_index":17,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["alias",{"_index":53,"title":{},"body":{"interfaces/IFrame.html":{},"miscellaneous/typealiases.html":{}}}],["aliased",{"_index":87,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":1040,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":664,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["allowing",{"_index":230,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["allows",{"_index":652,"title":{},"body":{"classes/Stomp.html":{}}}],["already",{"_index":845,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["alternative",{"_index":636,"title":{},"body":{"classes/Stomp.html":{}}}],["alternatively",{"_index":651,"title":{},"body":{"classes/Stomp.html":{}}}],["always",{"_index":847,"title":{},"body":{"injectables/StompRService.html":{}}}],["angular",{"_index":602,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["angular's",{"_index":301,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["angular/core",{"_index":304,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular2",{"_index":540,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["angular7.html",{"_index":287,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["another",{"_index":665,"title":{},"body":{"classes/Stomp.html":{}}}],["any).assign",{"_index":567,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["api",{"_index":1014,"title":{},"body":{"index.html":{}}}],["app_initializer",{"_index":302,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["appendmissingnullonincoming",{"_index":323,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["around",{"_index":524,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["array",{"_index":952,"title":{},"body":{"classes/Versions.html":{}}}],["arraybuffer",{"_index":137,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["associated",{"_index":939,"title":{},"body":{"classes/StompSubscription.html":{}}}],["assumes",{"_index":432,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async",{"_index":350,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["async](https://developer.mozilla.org/en",{"_index":499,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["asynchronous",{"_index":362,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["asynchronously",{"_index":811,"title":{},"body":{"injectables/StompRService.html":{}}}],["attempt",{"_index":457,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["attempted",{"_index":462,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["attributes",{"_index":320,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["auto",{"_index":679,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["automatic",{"_index":231,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["automatically",{"_index":253,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["available",{"_index":746,"title":{},"body":{"classes/StompHeaders.html":{}}}],["avoid",{"_index":140,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["backward",{"_index":124,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":42,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["beating",{"_index":895,"title":{},"body":{"injectables/StompRService.html":{}}}],["before",{"_index":246,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["beforeconnect",{"_index":324,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["behaviorsubject",{"_index":833,"title":{},"body":{"injectables/StompRService.html":{}}}],["behaviorsubject(stompstate.closed",{"_index":921,"title":{},"body":{"injectables/StompRService.html":{}}}],["belong",{"_index":1026,"title":{},"body":{"index.html":{}}}],["binary",{"_index":41,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["binarybody",{"_index":28,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["binarytype",{"_index":158,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["body",{"_index":29,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["body/binarybody",{"_index":44,"title":{},"body":{"interfaces/IFrame.html":{}}}],["body]{@link",{"_index":81,"title":{},"body":{"interfaces/IMessage.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{}}}],["both",{"_index":374,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["broker",{"_index":16,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["brokers",{"_index":454,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["brokerurl",{"_index":325,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["builds",{"_index":1023,"title":{},"body":{"index.html":{}}}],["bye",{"_index":238,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["call",{"_index":74,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{}}}],["call.html",{"_index":311,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["callable",{"_index":644,"title":{},"body":{"classes/Stomp.html":{}}}],["callback",{"_index":61,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["callback]{@link",{"_index":78,"title":{},"body":{"interfaces/IMessage.html":{}}}],["callbacks",{"_index":13,"title":{},"body":{"interfaces/IFrame.html":{}}}],["called",{"_index":354,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{}}}],["calling",{"_index":204,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["calls",{"_index":321,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["care",{"_index":531,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["carry",{"_index":808,"title":{},"body":{"injectables/StompRService.html":{}}}],["case",{"_index":353,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["cases",{"_index":259,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["caution",{"_index":431,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["caveat",{"_index":207,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["change",{"_index":227,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["check",{"_index":387,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["class",{"_index":277,"title":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["classes",{"_index":315,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"overview.html":{}}}],["cleanup",{"_index":587,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["client",{"_index":402,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"index.html":{}}}],["client#abort",{"_index":211,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#abort]{@link",{"_index":216,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#ack",{"_index":76,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#ack]{@link",{"_index":84,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#appendmissingnullonincoming",{"_index":342,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#appendmissingnullonincoming]{@link",{"_index":492,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect",{"_index":367,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#beforeconnect]{@link",{"_index":503,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#begin",{"_index":205,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#brokerurl",{"_index":375,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#brokerurl]{@link",{"_index":483,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#commit",{"_index":212,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#commit]{@link",{"_index":215,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["client#configure",{"_index":688,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#configure]{@link",{"_index":730,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#connectheaders",{"_index":390,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectheaders]{@link",{"_index":495,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout",{"_index":399,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#connectiontimeout]{@link",{"_index":488,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#debug",{"_index":704,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#debug]{@link",{"_index":740,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure",{"_index":405,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#discardwebsocketoncommfailure]{@link",{"_index":494,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders",{"_index":408,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#disconnectheaders]{@link",{"_index":496,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes",{"_index":410,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#forcebinarywsframes]{@link",{"_index":491,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatincoming",{"_index":709,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatincoming]{@client#heartbeatincoming",{"_index":416,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#heartbeatincoming]{@link",{"_index":732,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing",{"_index":419,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#heartbeatoutgoing]{@link",{"_index":489,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication",{"_index":435,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#lograwcommunication]{@link",{"_index":486,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize",{"_index":437,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#maxwebsocketchunksize]{@link",{"_index":493,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#nack",{"_index":77,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#nack]{@link",{"_index":86,"title":{},"body":{"interfaces/IMessage.html":{}}}],["client#onchangestate",{"_index":714,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onchangestate]{@link",{"_index":741,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect",{"_index":715,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onconnect]{@link",{"_index":735,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect",{"_index":716,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#ondisconnect]{@link",{"_index":736,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror",{"_index":717,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onstomperror]{@link",{"_index":737,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe",{"_index":719,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledframe]{@link",{"_index":734,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledmessage",{"_index":62,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledmessage]{@link",{"_index":79,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompConfig.html":{}}}],["client#onunhandledreceipt",{"_index":722,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onunhandledreceipt]{@link",{"_index":733,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose",{"_index":723,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketclose]{@link",{"_index":738,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror",{"_index":724,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#onwebsocketerror]{@link",{"_index":739,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#publish",{"_index":91,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#publish]{@link",{"_index":123,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["client#reconnectdelay",{"_index":726,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#reconnectdelay]{@client#reconnectdelay",{"_index":440,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["client#reconnectdelay]{@link",{"_index":731,"title":{},"body":{"classes/StompConfig.html":{}}}],["client#splitlargeframes",{"_index":450,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#splitlargeframes]{@link",{"_index":490,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions",{"_index":467,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#stompversions]{@link",{"_index":485,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["client#subscribe",{"_index":65,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#subscribe]{@link",{"_index":83,"title":{},"body":{"interfaces/IMessage.html":{},"classes/StompSubscription.html":{}}}],["client#unsubscribe",{"_index":941,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#unsubscribe]{@link",{"_index":942,"title":{},"body":{"classes/StompSubscription.html":{}}}],["client#watchforreceipt",{"_index":832,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#watchforreceipt]{@link",{"_index":916,"title":{},"body":{"injectables/StompRService.html":{}}}],["client#websocketfactory",{"_index":480,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client#websocketfactory]{@link",{"_index":487,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["client(url",{"_index":623,"title":{},"body":{"classes/Stomp.html":{}}}],["client._connect",{"_index":643,"title":{},"body":{"classes/Stomp.html":{}}}],["client.ts",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["close",{"_index":166,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closed",{"_index":176,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["closeevent",{"_index":1042,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["closeevent]{@link",{"_index":114,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closeeventcallbacktype",{"_index":117,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["closes",{"_index":165,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["closing",{"_index":175,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["combination",{"_index":817,"title":{},"body":{"injectables/StompRService.html":{}}}],["combined",{"_index":300,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["command",{"_index":30,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["commit",{"_index":209,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["communication",{"_index":424,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compat",{"_index":657,"title":{},"body":{"classes/Stomp.html":{}}}],["compatclient",{"_index":633,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["compatclient(wsfn",{"_index":675,"title":{},"body":{"classes/Stomp.html":{}}}],["compatibility",{"_index":125,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["complaint",{"_index":818,"title":{},"body":{"injectables/StompRService.html":{}}}],["completed",{"_index":820,"title":{},"body":{"injectables/StompRService.html":{}}}],["compliant",{"_index":444,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["compodoc",{"_index":1031,"title":{},"body":{"index.html":{}}}],["config",{"_index":542,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["config(config",{"_index":890,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.debug",{"_index":902,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.headers",{"_index":908,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_in",{"_index":897,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.heartbeat_out",{"_index":899,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.reconnect_delay",{"_index":901,"title":{},"body":{"injectables/StompRService.html":{}}}],["config.ts",{"_index":274,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["config.ts:101",{"_index":718,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:102",{"_index":417,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:106",{"_index":700,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:111",{"_index":441,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:116",{"_index":409,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:121",{"_index":341,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:126",{"_index":436,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:131",{"_index":404,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:136",{"_index":711,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:140",{"_index":376,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:141",{"_index":703,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:146",{"_index":705,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:147",{"_index":406,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:151",{"_index":713,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:167",{"_index":343,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:22",{"_index":368,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:23",{"_index":591,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:26",{"_index":701,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:27",{"_index":595,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["config.ts:31",{"_index":728,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:35",{"_index":456,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:36",{"_index":729,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:41",{"_index":702,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:46",{"_index":725,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:47",{"_index":420,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:50",{"_index":400,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:51",{"_index":708,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:56",{"_index":710,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:61",{"_index":727,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:66",{"_index":707,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:71",{"_index":699,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:73",{"_index":468,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:76",{"_index":712,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:81",{"_index":391,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["config.ts:86",{"_index":706,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:88",{"_index":438,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:91",{"_index":720,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.ts:95",{"_index":411,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["config.ts:96",{"_index":721,"title":{},"body":{"classes/StompConfig.html":{}}}],["config.url",{"_index":891,"title":{},"body":{"injectables/StompRService.html":{}}}],["configuration",{"_index":291,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{}}}],["configure",{"_index":893,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["configured",{"_index":1007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["connect",{"_index":346,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["connected",{"_index":627,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["connectheaders",{"_index":326,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connecting",{"_index":173,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["connection",{"_index":160,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["connectiontimeout",{"_index":327,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["connectobservable",{"_index":775,"title":{},"body":{"injectables/StompRService.html":{}}}],["consider",{"_index":233,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["console.log(new",{"_index":905,"title":{},"body":{"injectables/StompRService.html":{}}}],["console.warn",{"_index":678,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/.../i",{"_index":1041,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["consolidated/.../injectable",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consolidated/.../rx",{"_index":999,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/.../stomp",{"_index":1001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["consolidated/.../types.ts",{"_index":998,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/ng2",{"_index":272,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["consolidated/rx",{"_index":183,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/client.ts",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/compat",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts",{"_index":610,"title":{},"body":{"classes/Stomp.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:103",{"_index":635,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:41",{"_index":616,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/compatibility/stomp.ts:57",{"_index":625,"title":{},"body":{"classes/Stomp.html":{}}}],["consolidated/stompjs/src/i",{"_index":6,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/stomp",{"_index":685,"title":{},"body":{"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/types.ts",{"_index":89,"title":{},"body":{"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["consolidated/stompjs/src/versions.ts",{"_index":943,"title":{},"body":{"classes/Versions.html":{},"coverage.html":{}}}],["consolidated/stompjs/src/versions.ts:10",{"_index":956,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:14",{"_index":958,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:18",{"_index":959,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:27",{"_index":951,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:35",{"_index":960,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:40",{"_index":962,"title":{},"body":{"classes/Versions.html":{}}}],["consolidated/stompjs/src/versions.ts:47",{"_index":961,"title":{},"body":{"classes/Versions.html":{}}}],["const",{"_index":235,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["constructor",{"_index":511,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{}}}],["constructor(config",{"_index":925,"title":{},"body":{"injectables/StompService.html":{}}}],["constructor(public",{"_index":966,"title":{},"body":{"classes/Versions.html":{}}}],["constructor(rxstomp",{"_index":512,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["constructor(versions",{"_index":950,"title":{},"body":{"classes/Versions.html":{}}}],["contain",{"_index":748,"title":{},"body":{"classes/StompHeaders.html":{}}}],["content",{"_index":100,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["copied",{"_index":138,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["correlation",{"_index":533,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correlationid",{"_index":578,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["correspond",{"_index":1016,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":824,"title":{},"body":{"injectables/StompRService.html":{}}}],["corresponds",{"_index":686,"title":{},"body":{"classes/StompConfig.html":{}}}],["cover",{"_index":1020,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":970,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cr",{"_index":749,"title":{},"body":{"classes/StompHeaders.html":{}}}],["create",{"_index":515,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{}}}],["created",{"_index":203,"title":{},"body":{"interfaces/ITransaction.html":{},"miscellaneous/functions.html":{}}}],["creates",{"_index":626,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["creating",{"_index":46,"title":{},"body":{"interfaces/IFrame.html":{},"classes/Versions.html":{}}}],["credentials",{"_index":358,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["current",{"_index":836,"title":{},"body":{"injectables/StompRService.html":{}}}],["custom",{"_index":572,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["data",{"_index":136,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["date",{"_index":906,"title":{},"body":{"injectables/StompRService.html":{}}}],["deactivating",{"_index":180,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["debug",{"_index":328,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["debugfntype",{"_index":109,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["debugging",{"_index":403,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["declare",{"_index":659,"title":{},"body":{"classes/Stomp.html":{}}}],["declared",{"_index":955,"title":{},"body":{"classes/Versions.html":{}}}],["default",{"_index":99,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["defaultmessagesobservable",{"_index":777,"title":{},"body":{"injectables/StompRService.html":{}}}],["defaultmessagessubscription",{"_index":577,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaultmessagessubscription.unsubscribe",{"_index":588,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["defaults",{"_index":225,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["define",{"_index":295,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":340,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["defining",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay",{"_index":439,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["dependency",{"_index":143,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["dependent",{"_index":224,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["deprecated",{"_index":312,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":8,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["designed",{"_index":805,"title":{},"body":{"injectables/StompRService.html":{}}}],["destination",{"_index":95,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["details",{"_index":284,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompService.html":{}}}],["development",{"_index":1017,"title":{},"body":{"index.html":{}}}],["disable",{"_index":415,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["discardwebsocketoncommfailure",{"_index":329,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnect",{"_index":770,"title":{},"body":{"injectables/StompRService.html":{}}}],["disconnectheaders",{"_index":330,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["disconnecting",{"_index":1003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disconnection",{"_index":407,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["docs",{"_index":1015,"title":{},"body":{"index.html":{}}}],["docs/latest/classes/stomp.html#over",{"_index":683,"title":{},"body":{"classes/Stomp.html":{}}}],["documentation",{"_index":388,"title":{},"body":{"classes/RxStompConfig.html":{},"coverage.html":{},"index.html":{}}}],["documents",{"_index":1029,"title":{},"body":{"index.html":{}}}],["dom",{"_index":141,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["down",{"_index":194,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["dropped",{"_index":757,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["drops",{"_index":795,"title":{},"body":{"injectables/StompRService.html":{}}}],["during",{"_index":458,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["e.g",{"_index":470,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["each",{"_index":249,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"index.html":{}}}],["effects",{"_index":428,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["elements",{"_index":953,"title":{},"body":{"classes/Versions.html":{}}}],["emit",{"_index":835,"title":{},"body":{"injectables/StompRService.html":{}}}],["enable",{"_index":401,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["end",{"_index":97,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["enqueued",{"_index":193,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["ensure",{"_index":554,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["entry",{"_index":1033,"title":{},"body":{"index.html":{}}}],["enum",{"_index":172,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["enumerations",{"_index":997,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":618,"title":{},"body":{"classes/Stomp.html":{}}}],["error",{"_index":865,"title":{},"body":{"injectables/StompRService.html":{}}}],["errors",{"_index":866,"title":{},"body":{"injectables/StompRService.html":{}}}],["errorsubject",{"_index":779,"title":{},"body":{"injectables/StompRService.html":{}}}],["es6",{"_index":765,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["established",{"_index":393,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["etc",{"_index":360,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ev",{"_index":146,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["even",{"_index":794,"title":{},"body":{"injectables/StompRService.html":{}}}],["event",{"_index":854,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["event]{@link",{"_index":120,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["evt",{"_index":118,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["exactly",{"_index":280,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["example",{"_index":66,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":929,"title":{},"body":{"injectables/StompService.html":{}}}],["explicitly",{"_index":797,"title":{},"body":{"injectables/StompRService.html":{}}}],["export",{"_index":51,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["exposed",{"_index":155,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["extended",{"_index":25,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["extends",{"_index":67,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["factory",{"_index":299,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/functions.html":{}}}],["factory.ts",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["false",{"_index":553,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["favor",{"_index":756,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":357,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["field",{"_index":687,"title":{},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["fields",{"_index":290,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["filter",{"_index":536,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["filter((message",{"_index":582,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["first",{"_index":537,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["fixed",{"_index":292,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["flag",{"_index":252,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["forcebinarywsframes",{"_index":331,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["frame",{"_index":11,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["frame.ts",{"_index":7,"title":{},"body":{"interfaces/IFrame.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["framecallbacktype",{"_index":112,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["frameimpl",{"_index":63,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#body",{"_index":82,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frameimpl#headers",{"_index":80,"title":{},"body":{"interfaces/IMessage.html":{}}}],["frames",{"_index":133,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{}}}],["framework",{"_index":604,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["function",{"_index":70,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":282,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{}}}],["functions",{"_index":743,"title":{"miscellaneous/functions.html":{}},"body":{"classes/StompHeaders.html":{},"miscellaneous/functions.html":{}}}],["generated",{"_index":1030,"title":{},"body":{"index.html":{}}}],["generating",{"_index":532,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["getclient",{"_index":869,"title":{},"body":{"injectables/StompRService.html":{}}}],["getconnectobservable",{"_index":840,"title":{},"body":{"injectables/StompRService.html":{}}}],["getdefaultmessagesobservable",{"_index":856,"title":{},"body":{"injectables/StompRService.html":{}}}],["geterrorsubject",{"_index":863,"title":{},"body":{"injectables/StompRService.html":{}}}],["getreceiptsobservable",{"_index":860,"title":{},"body":{"injectables/StompRService.html":{}}}],["gets",{"_index":789,"title":{},"body":{"injectables/StompRService.html":{}}}],["getserverheadersobservable",{"_index":849,"title":{},"body":{"injectables/StompRService.html":{}}}],["getting",{"_index":1010,"title":{"index.html":{}},"body":{}}],["guide",{"_index":289,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guide/ng2",{"_index":285,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["guide/rx",{"_index":308,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{}}}],["guide](/guide/rx",{"_index":543,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["guides",{"_index":1027,"title":{},"body":{"index.html":{}}}],["hack",{"_index":663,"title":{},"body":{"classes/Stomp.html":{}}}],["handle",{"_index":244,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["handled",{"_index":858,"title":{},"body":{"injectables/StompRService.html":{}}}],["handles",{"_index":762,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["handshake",{"_index":459,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["header",{"_index":102,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["headers",{"_index":21,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["headers.ts",{"_index":742,"title":{},"body":{"classes/StompHeaders.html":{},"coverage.html":{}}}],["headers.ts:10",{"_index":752,"title":{},"body":{"classes/StompHeaders.html":{}}}],["headers['correlation",{"_index":579,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers['reply",{"_index":585,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["headers]{@link",{"_index":48,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{}}}],["heart",{"_index":894,"title":{},"body":{"injectables/StompRService.html":{}}}],["heartbeat",{"_index":413,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["heartbeatincoming",{"_index":332,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["heartbeatoutgoing",{"_index":333,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["host",{"_index":381,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["html5",{"_index":640,"title":{},"body":{"classes/Stomp.html":{}}}],["https://developer.mozilla.org/en",{"_index":115,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["https://stomp",{"_index":681,"title":{},"body":{"classes/Stomp.html":{}}}],["i.e",{"_index":351,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["id",{"_index":210,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["identifier",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":1,"title":{"interfaces/IFrame.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iframe#headers",{"_index":49,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["ignore",{"_index":846,"title":{},"body":{"injectables/StompRService.html":{}}}],["imessage",{"_index":24,"title":{"interfaces/IMessage.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["immediate",{"_index":345,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["immediately",{"_index":838,"title":{},"body":{"injectables/StompRService.html":{}}}],["impact",{"_index":344,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["implementation",{"_index":506,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["implies",{"_index":397,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["import",{"_index":47,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{}}}],["important",{"_index":377,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["inactive",{"_index":181,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["incoming",{"_index":412,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":751,"title":{},"body":{"classes/StompHeaders.html":{}}}],["indicate",{"_index":1025,"title":{},"body":{"index.html":{}}}],["indicates",{"_index":153,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Versions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["information",{"_index":226,"title":{},"body":{"interfaces/IWatchParams.html":{},"index.html":{}}}],["initandconnect",{"_index":771,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialization",{"_index":843,"title":{},"body":{"injectables/StompRService.html":{}}}],["initialize",{"_index":933,"title":{},"body":{"injectables/StompService.html":{}}}],["inject",{"_index":296,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injectable",{"_index":269,"title":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstompconfig",{"_index":270,"title":{"injectables/InjectableRxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/StompConfig.html":{},"coverage.html":{},"index.html":{}}}],["injectablerxstomprpcconfig",{"_index":305,"title":{"injectables/InjectableRxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectables",{"_index":271,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"overview.html":{}}}],["injected",{"_index":298,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["injection",{"_index":603,"title":{},"body":{"injectables/RxStompRPCService.html":{},"miscellaneous/functions.html":{}}}],["instance",{"_index":58,"title":{},"body":{"interfaces/IMessage.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["instead",{"_index":314,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":0,"title":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"overview.html":{}}}],["internal",{"_index":129,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["internally",{"_index":264,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["interval",{"_index":414,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["invoke",{"_index":823,"title":{},"body":{"injectables/StompRService.html":{}}}],["invoked",{"_index":245,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{}}}],["invoking",{"_index":258,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["ipublishparams",{"_index":88,"title":{"interfaces/IPublishParams.html":{}},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irawframetype",{"_index":128,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["irxstomppublishparams",{"_index":182,"title":{"interfaces/IRxStompPublishParams.html":{}},"body":{"interfaces/IRxStompPublishParams.html":{},"coverage.html":{}}}],["isbinarybody",{"_index":31,"title":{},"body":{"interfaces/IFrame.html":{}}}],["issue",{"_index":804,"title":{},"body":{"injectables/StompRService.html":{}}}],["issued",{"_index":265,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["istompsocket",{"_index":144,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["istompsocketmessageevent",{"_index":135,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["itransaction",{"_index":200,"title":{"interfaces/ITransaction.html":{}},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["iwatchparams",{"_index":217,"title":{"interfaces/IWatchParams.html":{}},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["java",{"_index":452,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["javascript",{"_index":484,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["js.github.io/api",{"_index":682,"title":{},"body":{"classes/Stomp.html":{}}}],["key",{"_index":37,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{}}}],["keys",{"_index":378,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["klass",{"_index":673,"title":{},"body":{"classes/Stomp.html":{}}}],["klass(url",{"_index":674,"title":{},"body":{"classes/Stomp.html":{}}}],["know",{"_index":564,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["known",{"_index":257,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["large",{"_index":447,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["later",{"_index":297,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{}}}],["leave",{"_index":800,"title":{},"body":{"injectables/StompRService.html":{}}}],["length",{"_index":101,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["lf",{"_index":750,"title":{},"body":{"classes/StompHeaders.html":{}}}],["libraries",{"_index":1022,"title":{},"body":{"index.html":{}}}],["library",{"_index":764,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["line:variable",{"_index":662,"title":{},"body":{"classes/Stomp.html":{}}}],["link",{"_index":50,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["listed",{"_index":760,"title":{},"body":{"injectables/StompRService.html":{}}}],["literal",{"_index":234,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["locally",{"_index":786,"title":{},"body":{"injectables/StompRService.html":{}}}],["located",{"_index":629,"title":{},"body":{"classes/Stomp.html":{}}}],["log",{"_index":421,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["login",{"_index":379,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["lograwcommunication",{"_index":334,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["logs",{"_index":426,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["major",{"_index":613,"title":{},"body":{"classes/Stomp.html":{}}}],["make",{"_index":520,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["manual",{"_index":72,"title":{},"body":{"interfaces/IMessage.html":{}}}],["manually",{"_index":932,"title":{},"body":{"injectables/StompService.html":{}}}],["many",{"_index":12,"title":{},"body":{"interfaces/IFrame.html":{},"classes/StompHeaders.html":{}}}],["map",{"_index":872,"title":{},"body":{"injectables/StompRService.html":{}}}],["maps",{"_index":366,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["marks",{"_index":385,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["matched",{"_index":821,"title":{},"body":{"injectables/StompRService.html":{}}}],["matching",{"_index":55,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxwebsocketchunksize",{"_index":335,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["means",{"_index":799,"title":{},"body":{"injectables/StompRService.html":{}}}],["mechanism",{"_index":303,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"miscellaneous/functions.html":{}}}],["message",{"_index":59,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/typealiases.html":{}}}],["message.headers['correlation",{"_index":583,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["message.ts",{"_index":57,"title":{},"body":{"interfaces/IMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagecallbacktype",{"_index":111,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":196,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["messaging",{"_index":508,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["method",{"_index":75,"title":{},"body":{"interfaces/IMessage.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["methods",{"_index":509,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["milliseconds",{"_index":395,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["miscellaneous",{"_index":996,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missed",{"_index":803,"title":{},"body":{"injectables/StompRService.html":{}}}],["mode",{"_index":445,"title":{},"body":{"classes/RxStompConfig.html":{},"index.html":{}}}],["modules",{"_index":1035,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":645,"title":{},"body":{"classes/Stomp.html":{},"index.html":{}}}],["mozwebsocket",{"_index":666,"title":{},"body":{"classes/Stomp.html":{}}}],["msg",{"_index":110,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["nack",{"_index":69,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{}}}],["name",{"_index":516,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":785,"title":{},"body":{"injectables/StompRService.html":{}}}],["navigating",{"_index":1012,"title":{},"body":{"index.html":{}}}],["need",{"_index":19,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["needed",{"_index":650,"title":{},"body":{"classes/Stomp.html":{}}}],["needs",{"_index":813,"title":{},"body":{"injectables/StompRService.html":{}}}],["new",{"_index":465,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{},"coverage.html":{}}}],["next",{"_index":429,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["ng2",{"_index":1034,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":617,"title":{},"body":{"classes/Stomp.html":{}}}],["non",{"_index":442,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["note",{"_index":529,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["npm",{"_index":1018,"title":{},"body":{"index.html":{}}}],["null",{"_index":147,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["number",{"_index":164,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["object",{"_index":317,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{}}}],["observable",{"_index":263,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["observable.create((rpcobserver",{"_index":576,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["observer",{"_index":535,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["occasionally",{"_index":256,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{}}}],["occurs",{"_index":844,"title":{},"body":{"injectables/StompRService.html":{}}}],["once",{"_index":646,"title":{},"body":{"classes/Stomp.html":{}}}],["onchangestate",{"_index":690,"title":{},"body":{"classes/StompConfig.html":{}}}],["onclose",{"_index":145,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onconnect",{"_index":691,"title":{},"body":{"classes/StompConfig.html":{}}}],["ondisconnect",{"_index":692,"title":{},"body":{"classes/StompConfig.html":{}}}],["one",{"_index":372,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{}}}],["onerror",{"_index":148,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onmessage",{"_index":149,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onopen",{"_index":150,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["onstomperror",{"_index":693,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledframe",{"_index":694,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledmessage",{"_index":695,"title":{},"body":{"classes/StompConfig.html":{}}}],["onunhandledreceipt",{"_index":696,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketclose",{"_index":697,"title":{},"body":{"classes/StompConfig.html":{}}}],["onwebsocketerror",{"_index":698,"title":{},"body":{"classes/StompConfig.html":{}}}],["open",{"_index":174,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["operation",{"_index":810,"title":{},"body":{"injectables/StompRService.html":{}}}],["optional",{"_index":94,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":189,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/StompConfig.html":{}}}],["order",{"_index":641,"title":{},"body":{"classes/Stomp.html":{}}}],["out",{"_index":809,"title":{},"body":{"injectables/StompRService.html":{}}}],["outgoing",{"_index":418,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["over",{"_index":228,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/Stomp.html":{},"index.html":{}}}],["over(ws",{"_index":634,"title":{},"body":{"classes/Stomp.html":{}}}],["override",{"_index":954,"title":{},"body":{"classes/Versions.html":{}}}],["overview",{"_index":1036,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packets",{"_index":449,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["pairs",{"_index":39,"title":{},"body":{"interfaces/IFrame.html":{}}}],["param",{"_index":606,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{}}}],["parameter",{"_index":108,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":526,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.headers",{"_index":568,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["params.ts",{"_index":187,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["parsed",{"_index":427,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["parser",{"_index":131,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["part",{"_index":22,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["pass",{"_index":14,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["passcode",{"_index":380,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["passed",{"_index":45,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{}}}],["passing",{"_index":653,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["pipe",{"_index":581,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["please",{"_index":283,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"index.html":{}}}],["point",{"_index":98,"title":{},"body":{"interfaces/IPublishParams.html":{},"index.html":{}}}],["possible",{"_index":170,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/enumerations.html":{}}}],["prefer",{"_index":474,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["preferred",{"_index":1032,"title":{},"body":{"index.html":{}}}],["present",{"_index":386,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["prior",{"_index":667,"title":{},"body":{"classes/Stomp.html":{}}}],["private",{"_index":544,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["procedure",{"_index":310,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["promise",{"_index":352,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["promise](https://developer.mozilla.org/en",{"_index":501,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["properties",{"_index":27,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["protocol",{"_index":957,"title":{},"body":{"classes/Versions.html":{}}}],["protocols",{"_index":624,"title":{},"body":{"classes/Stomp.html":{}}}],["protocolversions",{"_index":948,"title":{},"body":{"classes/Versions.html":{}}}],["prototype",{"_index":660,"title":{},"body":{"classes/Stomp.html":{}}}],["provider",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provides",{"_index":851,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/functions.html":{}}}],["public",{"_index":322,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["publish",{"_index":186,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/StompRService.html":{},"coverage.html":{}}}],["publish(queuename",{"_index":783,"title":{},"body":{"injectables/StompRService.html":{}}}],["published",{"_index":197,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["publishing",{"_index":825,"title":{},"body":{"injectables/StompRService.html":{}}}],["publishparams",{"_index":92,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"miscellaneous/typealiases.html":{}}}],["pubparams",{"_index":913,"title":{},"body":{"injectables/StompRService.html":{}}}],["queue",{"_index":573,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["queue/rpc",{"_index":547,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["queued",{"_index":787,"title":{},"body":{"injectables/StompRService.html":{}}}],["queuename",{"_index":242,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["queues",{"_index":792,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service",{"_index":930,"title":{},"body":{"injectables/StompService.html":{}}}],["r.service.ts",{"_index":755,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{}}}],["r.service.ts:102",{"_index":864,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:107",{"_index":868,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:136",{"_index":782,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:147",{"_index":781,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:161",{"_index":784,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:195",{"_index":791,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:230",{"_index":807,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:237",{"_index":870,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:239",{"_index":780,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:40",{"_index":834,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:63",{"_index":841,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:80",{"_index":850,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:87",{"_index":857,"title":{},"body":{"injectables/StompRService.html":{}}}],["r.service.ts:94",{"_index":861,"title":{},"body":{"injectables/StompRService.html":{}}}],["rabbitmq",{"_index":593,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["random",{"_index":816,"title":{},"body":{"injectables/StompRService.html":{}}}],["randomtext",{"_index":827,"title":{},"body":{"injectables/StompRService.html":{}}}],["raw",{"_index":423,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rawheadertype",{"_index":130,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["re)connection",{"_index":251,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["re)subscription",{"_index":247,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["readme",{"_index":927,"title":{},"body":{"injectables/StompService.html":{}}}],["readonly",{"_index":52,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["readystate",{"_index":163,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["receipt",{"_index":113,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{}}}],["receiptid",{"_index":826,"title":{},"body":{"injectables/StompRService.html":{}}}],["receipts",{"_index":862,"title":{},"body":{"injectables/StompRService.html":{}}}],["receiptsobservable",{"_index":778,"title":{},"body":{"injectables/StompRService.html":{}}}],["receive",{"_index":107,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["received",{"_index":15,"title":{},"body":{"interfaces/IFrame.html":{},"injectables/StompRService.html":{}}}],["recent",{"_index":852,"title":{},"body":{"injectables/StompRService.html":{}}}],["reconnect",{"_index":430,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnectdelay",{"_index":336,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["reconnecting",{"_index":647,"title":{},"body":{"classes/Stomp.html":{}}}],["reconnection",{"_index":642,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["reconnects",{"_index":796,"title":{},"body":{"injectables/StompRService.html":{}}}],["reestablished",{"_index":198,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["released",{"_index":1019,"title":{},"body":{"index.html":{}}}],["reliably",{"_index":356,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["remains",{"_index":556,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["remarks",{"_index":670,"title":{},"body":{"classes/Stomp.html":{}}}],["remote",{"_index":507,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["removed",{"_index":612,"title":{},"body":{"classes/Stomp.html":{}}}],["replaced",{"_index":689,"title":{},"body":{"classes/StompConfig.html":{}}}],["replies",{"_index":548,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["repliesobservable",{"_index":570,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["repliesobservable.subscribe",{"_index":575,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["reply",{"_index":565,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["replyqueuename",{"_index":589,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["represents",{"_index":9,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["request",{"_index":521,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["requesting",{"_index":812,"title":{},"body":{"injectables/StompRService.html":{}}}],["require('../../esm5",{"_index":619,"title":{},"body":{"classes/Stomp.html":{}}}],["require('websocket').w3cwebsocket",{"_index":622,"title":{},"body":{"classes/Stomp.html":{}}}],["resolved",{"_index":355,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["response",{"_index":855,"title":{},"body":{"injectables/StompRService.html":{}}}],["resubscribe",{"_index":254,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["resubscriptions",{"_index":232,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["result",{"_index":54,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":56,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":392,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["retryifdisconnected",{"_index":192,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["return",{"_index":237,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["returns",{"_index":152,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/functions.html":{}}}],["rpc",{"_index":306,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rpc(params",{"_index":518,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.service.ts",{"_index":599,"title":{},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{}}}],["rpc.service.ts:15",{"_index":601,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["rpc.ts",{"_index":505,"title":{},"body":{"classes/RxStompRPC.html":{},"coverage.html":{}}}],["rpc.ts:30",{"_index":514,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:56",{"_index":519,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpc.ts:67",{"_index":528,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rpcobserver.next(message",{"_index":584,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rx",{"_index":185,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":262,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/StompRService.html":{}}}],["rxjs/operators",{"_index":538,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["rxstomp",{"_index":318,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxstomp#configure",{"_index":319,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#configure]{@link",{"_index":481,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#deactivate",{"_index":498,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate",{"_index":348,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#decativate]{@link",{"_index":497,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstomp#publish",{"_index":190,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#publish]{@link",{"_index":199,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{}}}],["rxstomp#watch",{"_index":219,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp#watch]{@link",{"_index":267,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp.publish({destination",{"_index":830,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.waitforreceipt(receiptid",{"_index":828,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstomp.watch",{"_index":241,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["rxstomp](@link",{"_index":365,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig",{"_index":279,"title":{"classes/RxStompConfig.html":{}},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompconfig#websocketfactory",{"_index":373,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig#websocketfactory]{@link",{"_index":482,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.brokerurl",{"_index":892,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.connectheaders",{"_index":907,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.debug",{"_index":903,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatincoming",{"_index":896,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.heartbeatoutgoing",{"_index":898,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.reconnectdelay",{"_index":900,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompconfig.stompversions",{"_index":464,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["rxstompconfig.websocketfactory",{"_index":476,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["rxstomprpc",{"_index":504,"title":{"classes/RxStompRPC.html":{}},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpc#stream",{"_index":525,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpc#stream]{@link",{"_index":563,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["rxstomprpcconfig",{"_index":307,"title":{"classes/RxStompRPCConfig.html":{}},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"index.html":{}}}],["rxstomprpcservice",{"_index":597,"title":{"injectables/RxStompRPCService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"coverage.html":{},"index.html":{}}}],["rxstompservice",{"_index":600,"title":{"injectables/RxStompService.html":{}},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory",{"_index":609,"title":{},"body":{"injectables/RxStompService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rxstompservicefactory(rxstompconfig",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxstompstate",{"_index":871,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["rxstompstate.closed",{"_index":882,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.closing",{"_index":880,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.connecting",{"_index":877,"title":{},"body":{"injectables/StompRService.html":{}}}],["rxstompstate.open",{"_index":879,"title":{},"body":{"injectables/StompRService.html":{}}}],["safely",{"_index":793,"title":{},"body":{"injectables/StompRService.html":{}}}],["same",{"_index":281,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{}}}],["samples",{"_index":928,"title":{},"body":{"injectables/StompService.html":{}}}],["scripts",{"_index":156,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["see",{"_index":64,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/ITransaction.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["send",{"_index":213,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["send(data",{"_index":169,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sent",{"_index":745,"title":{},"body":{"classes/StompHeaders.html":{},"injectables/StompRService.html":{}}}],["sequence",{"_index":815,"title":{},"body":{"injectables/StompRService.html":{}}}],["server",{"_index":628,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["serverheadersobservable",{"_index":776,"title":{},"body":{"injectables/StompRService.html":{}}}],["service",{"_index":361,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["set",{"_index":104,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["setconfig(config",{"_index":867,"title":{},"body":{"injectables/StompRService.html":{}}}],["setting",{"_index":475,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["setup",{"_index":596,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueue",{"_index":590,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["setupreplyqueuefntype",{"_index":541,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":839,"title":{},"body":{"injectables/StompRService.html":{}}}],["similar",{"_index":469,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["simple",{"_index":522,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["simplest",{"_index":1009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["skipcontentlengthheader",{"_index":96,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["skipped",{"_index":106,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["socket",{"_index":154,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["sockjs",{"_index":471,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["sockjs(\"http://broker.329broker.com/stomp",{"_index":479,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["soon",{"_index":788,"title":{},"body":{"injectables/StompRService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{}}}],["specific",{"_index":389,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["specification",{"_index":766,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["specified",{"_index":394,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["specify",{"_index":639,"title":{},"body":{"classes/Stomp.html":{}}}],["splitlargeframes",{"_index":337,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["splitting",{"_index":446,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["spring",{"_index":453,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["st",{"_index":876,"title":{},"body":{"injectables/StompRService.html":{}}}],["standard",{"_index":384,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["standards",{"_index":443,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["started",{"_index":1011,"title":{"index.html":{}},"body":{}}],["state",{"_index":159,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["state.ts",{"_index":1000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":171,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":614,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["status",{"_index":837,"title":{},"body":{"injectables/StompRService.html":{}}}],["step",{"_index":288,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stomp",{"_index":10,"title":{"classes/Stomp.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["stomp#client",{"_index":637,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp#client]{@link",{"_index":676,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client",{"_index":668,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.client(url",{"_index":632,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.config",{"_index":874,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.js",{"_index":763,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp.over",{"_index":669,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.over(function",{"_index":654,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp.service",{"_index":605,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["stomp.service.ts",{"_index":608,"title":{},"body":{"injectables/RxStompService.html":{},"coverage.html":{}}}],["stomp.ts",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["stomp.websocketclass",{"_index":621,"title":{},"body":{"classes/Stomp.html":{}}}],["stomp/ng2",{"_index":275,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stomp/rx",{"_index":191,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/src/i",{"_index":184,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["stomp/src/rx",{"_index":316,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["stomp/stomp.js",{"_index":759,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["stomp/stompjs",{"_index":23,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stompconfig",{"_index":684,"title":{"classes/StompConfig.html":{}},"body":{"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{}}}],["stompheaders",{"_index":36,"title":{"classes/StompHeaders.html":{}},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompjs",{"_index":276,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["stompjs.stomp",{"_index":620,"title":{},"body":{"classes/Stomp.html":{}}}],["stompjs/ng2",{"_index":286,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/RxStompService.html":{},"miscellaneous/functions.html":{}}}],["stompjs/remote",{"_index":309,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stompjs/src/app/compatibility/stomp",{"_index":754,"title":{},"body":{"injectables/StompRService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["stompjs/src/app/compatibility/stomp.service.ts",{"_index":924,"title":{},"body":{"injectables/StompService.html":{},"coverage.html":{}}}],["stompjs/src/app/compatibility/stomp.service.ts:25",{"_index":926,"title":{},"body":{"injectables/StompService.html":{}}}],["stompjs/src/app/injectable",{"_index":273,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stompjs/src/app/rx",{"_index":598,"title":{},"body":{"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["stompjs@8.x.x",{"_index":758,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/enumerations.html":{}}}],["stomprpcconfig",{"_index":513,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{}}}],["stomprpcconfig.replyqueuename",{"_index":558,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprpcconfig.setupreplyqueue",{"_index":560,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stomprservice",{"_index":753,"title":{"injectables/StompRService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stomprservice._mapstompstate(st",{"_index":885,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompservice",{"_index":769,"title":{"injectables/StompService.html":{}},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{},"coverage.html":{},"index.html":{}}}],["stompsocketstate",{"_index":162,"title":{},"body":{"interfaces/IPublishParams.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate",{"_index":873,"title":{},"body":{"injectables/StompRService.html":{},"miscellaneous/enumerations.html":{}}}],["stompstate.closed",{"_index":883,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.connected",{"_index":848,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.disconnecting",{"_index":881,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompstate.trying",{"_index":878,"title":{},"body":{"injectables/StompRService.html":{}}}],["stompsubscription",{"_index":936,"title":{"classes/StompSubscription.html":{}},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["stompversions",{"_index":338,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["str",{"_index":904,"title":{},"body":{"injectables/StompRService.html":{}}}],["stream",{"_index":510,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["stream(params",{"_index":527,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["streaming",{"_index":767,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["string",{"_index":35,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPCConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":434,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["structure",{"_index":134,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["sub",{"_index":240,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["sub.unsubscribe",{"_index":266,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaders",{"_index":220,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subheaderscallback",{"_index":236,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subject",{"_index":859,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe",{"_index":772,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribe((message",{"_index":243,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribe(queuename",{"_index":790,"title":{},"body":{"injectables/StompRService.html":{}}}],["subscribed",{"_index":248,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{}}}],["subscribeonlyonce",{"_index":221,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["subscribing",{"_index":71,"title":{},"body":{"interfaces/IMessage.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["subscription",{"_index":60,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["subscription.ts",{"_index":937,"title":{},"body":{"classes/StompSubscription.html":{},"coverage.html":{}}}],["subscription.ts:12",{"_index":938,"title":{},"body":{"classes/StompSubscription.html":{}}}],["subscription.ts:17",{"_index":940,"title":{},"body":{"classes/StompSubscription.html":{}}}],["successful",{"_index":250,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["such",{"_index":195,"title":{},"body":{"interfaces/IRxStompPublishParams.html":{},"interfaces/IWatchParams.html":{}}}],["suitable",{"_index":592,"title":{},"body":{"classes/RxStompRPCConfig.html":{}}}],["super",{"_index":919,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["super(rxstomp",{"_index":607,"title":{},"body":{"injectables/RxStompRPCService.html":{}}}],["super.publish",{"_index":912,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.publish(pubparams",{"_index":914,"title":{},"body":{"injectables/StompRService.html":{}}}],["super.watchforreceipt(receiptid",{"_index":917,"title":{},"body":{"injectables/StompRService.html":{}}}],["support",{"_index":157,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{}}}],["supported",{"_index":944,"title":{},"body":{"classes/Versions.html":{}}}],["supportedversions",{"_index":949,"title":{},"body":{"classes/Versions.html":{}}}],["supports",{"_index":472,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["switch",{"_index":126,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/Stomp.html":{},"miscellaneous/typealiases.html":{}}}],["t",{"_index":119,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["table",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":530,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Versions.html":{}}}],["target",{"_index":223,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["tcp",{"_index":649,"title":{},"body":{"classes/Stomp.html":{}}}],["temp",{"_index":546,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{}}}],["temporary",{"_index":802,"title":{},"body":{"injectables/StompRService.html":{}}}],["terminate",{"_index":151,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["test.destination",{"_index":831,"title":{},"body":{"injectables/StompRService.html":{}}}],["text",{"_index":448,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["thin",{"_index":1024,"title":{},"body":{"index.html":{}}}],["this._customreplyqueue",{"_index":561,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._dummysubscription",{"_index":574,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._repliesobservable",{"_index":569,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._replyqueuename",{"_index":559,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._setupreplyqueue",{"_index":562,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this._stompclient",{"_index":918,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.activate",{"_index":911,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.config",{"_index":934,"title":{},"body":{"injectables/StompService.html":{}}}],["this.configure(rxstompconfig",{"_index":909,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connected$.pipe",{"_index":884,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.connectionstate$.subscribe((st",{"_index":922,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.deactivate",{"_index":910,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.initandconnect",{"_index":935,"title":{},"body":{"injectables/StompService.html":{}}}],["this.rxstomp",{"_index":571,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.publish",{"_index":586,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.rxstomp.unhandledmessage",{"_index":550,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.serverheaders",{"_index":886,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state",{"_index":920,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.state.next(stomprservice._mapstompstate(st",{"_index":923,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stomperrors",{"_index":889,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.stream(params).pipe(first",{"_index":566,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["this.unhandledmessage",{"_index":887,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.unhandledreceipts",{"_index":888,"title":{},"body":{"injectables/StompRService.html":{}}}],["this.versions.join",{"_index":967,"title":{},"body":{"classes/Versions.html":{}}}],["this.versions.map(x",{"_index":968,"title":{},"body":{"classes/Versions.html":{}}}],["this.watch(queuename",{"_index":915,"title":{},"body":{"injectables/StompRService.html":{}}}],["though",{"_index":382,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["three",{"_index":1021,"title":{},"body":{"index.html":{}}}],["through",{"_index":1013,"title":{},"body":{"index.html":{}}}],["time",{"_index":229,"title":{},"body":{"interfaces/IWatchParams.html":{},"injectables/StompRService.html":{}}}],["todo",{"_index":206,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["token",{"_index":359,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["transaction",{"_index":202,"title":{},"body":{"interfaces/ITransaction.html":{}}}],["transaction.ts",{"_index":201,"title":{},"body":{"interfaces/ITransaction.html":{},"coverage.html":{}}}],["transmits",{"_index":167,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["transport",{"_index":648,"title":{},"body":{"classes/Stomp.html":{}}}],["trigger",{"_index":842,"title":{},"body":{"injectables/StompRService.html":{}}}],["true",{"_index":105,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"classes/RxStompRPC.html":{}}}],["try",{"_index":463,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["trying",{"_index":1002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tslint:disable",{"_index":661,"title":{},"body":{"classes/Stomp.html":{}}}],["tutorials",{"_index":1028,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/IRxStompPublishParams.html":{},"interfaces/ITransaction.html":{},"interfaces/IWatchParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/RxStompRPCConfig.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/StompSubscription.html":{},"classes/Versions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1039,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typelib",{"_index":142,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["typeof",{"_index":677,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["types",{"_index":658,"title":{},"body":{"classes/Stomp.html":{},"classes/StompConfig.html":{}}}],["typescript",{"_index":268,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["typical",{"_index":478,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Versions.html":{}}}],["typically",{"_index":294,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/StompRService.html":{}}}],["uint8array",{"_index":32,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IPublishParams.html":{}}}],["underlying",{"_index":555,"title":{},"body":{"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["understand",{"_index":798,"title":{},"body":{"injectables/StompRService.html":{}}}],["unique",{"_index":814,"title":{},"body":{"injectables/StompRService.html":{}}}],["unless",{"_index":761,"title":{},"body":{"injectables/StompRService.html":{}}}],["unset",{"_index":425,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["unsubheaders",{"_index":222,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubheaderscallback",{"_index":260,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["unsubscribe",{"_index":261,"title":{},"body":{"interfaces/IWatchParams.html":{},"classes/StompSubscription.html":{}}}],["unsubscribing",{"_index":255,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["url",{"_index":369,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{}}}],["us/docs/web/api/closeevent",{"_index":116,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/api/event",{"_index":121,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["us/docs/web/javascript/reference/global_objects/promise",{"_index":502,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["us/docs/web/javascript/reference/statements/async_function",{"_index":500,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["usage",{"_index":18,"title":{},"body":{"interfaces/IFrame.html":{},"classes/RxStompConfig.html":{}}}],["use",{"_index":313,"title":{},"body":{"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":127,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/Versions.html":{}}}],["useful",{"_index":451,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["user",{"_index":638,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["using",{"_index":168,"title":{},"body":{"interfaces/IPublishParams.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/RxStompRPC.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["utf8",{"_index":433,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["uuid",{"_index":539,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{}}}],["uuid.uuid",{"_index":580,"title":{},"body":{"classes/RxStompRPC.html":{}}}],["v${x.replace",{"_index":969,"title":{},"body":{"classes/Versions.html":{}}}],["v1_0",{"_index":945,"title":{},"body":{"classes/Versions.html":{}}}],["v1_1",{"_index":946,"title":{},"body":{"classes/Versions.html":{}}}],["v1_2",{"_index":947,"title":{},"body":{"classes/Versions.html":{}}}],["valid",{"_index":347,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompHeaders.html":{}}}],["value",{"_index":38,"title":{},"body":{"interfaces/IFrame.html":{},"interfaces/IWatchParams.html":{},"injectables/InjectableRxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompHeaders.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{},"classes/Versions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":161,"title":{},"body":{"interfaces/IPublishParams.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["var",{"_index":630,"title":{},"body":{"classes/Stomp.html":{}}}],["variable",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1043,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":278,"title":{},"body":{"injectables/InjectableRxStompConfig.html":{},"injectables/InjectableRxStompRPCConfig.html":{},"classes/RxStompConfig.html":{},"injectables/RxStompRPCService.html":{},"injectables/RxStompService.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["versions",{"_index":455,"title":{"classes/Versions.html":{}},"body":{"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/StompConfig.html":{},"classes/Versions.html":{},"coverage.html":{},"index.html":{}}}],["versions(['1.0",{"_index":466,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["versions.default.protocolversions",{"_index":671,"title":{},"body":{"classes/Stomp.html":{}}}],["versions.v1_0",{"_index":963,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_1",{"_index":964,"title":{},"body":{"classes/Versions.html":{}}}],["versions.v1_2",{"_index":965,"title":{},"body":{"classes/Versions.html":{}}}],["via",{"_index":534,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["void",{"_index":85,"title":{},"body":{"interfaces/IMessage.html":{},"interfaces/IPublishParams.html":{},"interfaces/ITransaction.html":{},"classes/RxStompConfig.html":{},"classes/StompConfig.html":{},"injectables/StompRService.html":{},"classes/StompSubscription.html":{}}}],["wait",{"_index":398,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["waitforreceipt",{"_index":773,"title":{},"body":{"injectables/StompRService.html":{}}}],["waitforreceipt(receiptid",{"_index":806,"title":{},"body":{"injectables/StompRService.html":{}}}],["want",{"_index":931,"title":{},"body":{"injectables/StompService.html":{},"classes/Versions.html":{}}}],["watch",{"_index":218,"title":{},"body":{"interfaces/IWatchParams.html":{},"coverage.html":{}}}],["watching",{"_index":822,"title":{},"body":{"injectables/StompRService.html":{}}}],["way",{"_index":363,"title":{},"body":{"classes/RxStompConfig.html":{},"injectables/StompRService.html":{}}}],["websocket",{"_index":139,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/RxStompConfig.html":{},"classes/Stomp.html":{},"classes/Versions.html":{}}}],["websocket(\"wss://broker.329broker.com:15674/ws",{"_index":477,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["websocket('ws://localhost:15674/ws",{"_index":655,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketclass",{"_index":615,"title":{},"body":{"classes/Stomp.html":{}}}],["websocketfactory",{"_index":339,"title":{},"body":{"classes/RxStompConfig.html":{},"classes/StompConfig.html":{}}}],["websockets",{"_index":473,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["well",{"_index":93,"title":{},"body":{"interfaces/IPublishParams.html":{}}}],["whether",{"_index":43,"title":{},"body":{"interfaces/IFrame.html":{}}}],["wiring",{"_index":768,"title":{},"body":{"injectables/StompRService.html":{},"injectables/StompService.html":{}}}],["within",{"_index":214,"title":{},"body":{"interfaces/ITransaction.html":{},"classes/Stomp.html":{}}}],["work",{"_index":680,"title":{},"body":{"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["working",{"_index":801,"title":{},"body":{"injectables/StompRService.html":{}}}],["world",{"_index":239,"title":{},"body":{"interfaces/IWatchParams.html":{}}}],["wrapper",{"_index":523,"title":{},"body":{"classes/RxStompRPC.html":{},"index.html":{}}}],["ws",{"_index":656,"title":{},"body":{"classes/Stomp.html":{}}}],["ws://broker.329broker.com:15674/ws",{"_index":370,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["ws://localhost:61614/stomp",{"_index":631,"title":{},"body":{"classes/Stomp.html":{}}}],["wserrorcallbacktype",{"_index":122,"title":{},"body":{"interfaces/IPublishParams.html":{},"classes/StompConfig.html":{},"miscellaneous/typealiases.html":{}}}],["wsfn",{"_index":672,"title":{},"body":{"classes/Stomp.html":{}}}],["wss://broker.329broker.com:15674/ws",{"_index":371,"title":{},"body":{"classes/RxStompConfig.html":{}}}],["yes",{"_index":517,"title":{},"body":{"classes/RxStompRPC.html":{},"injectables/RxStompRPCService.html":{},"classes/Stomp.html":{},"injectables/StompRService.html":{}}}],["yield",{"_index":132,"title":{},"body":{"interfaces/IPublishParams.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IFrame.html":{"url":"interfaces/IFrame.html","title":"interface - IFrame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFrame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-frame.ts\n        \n\n            \n                Description\n            \n            \n                It represents a STOMP frame. Many of the callbacks pass an IFrame received from\nthe STOMP broker. For advanced usage you might need to access headers.\nPart of @stomp/stompjs.\nIMessage is an extended IFrame.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        binaryBody\n                                \n                                \n                                        body\n                                \n                                \n                                        command\n                                \n                                \n                                        headers\n                                \n                                \n                                        isBinaryBody\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body as Uint8Array\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the frame as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        command\n                                    \n                                \n                                \n                                    \n                                        command:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    STOMP Command\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Headers, key value pairs.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isBinaryBody\n                                    \n                                \n                                \n                                    \n                                        isBinaryBody:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * It represents a STOMP frame. Many of the callbacks pass an IFrame received from\n * the STOMP broker. For advanced usage you might need to access [headers]{@link IFrame#headers}.\n *\n * Part of `@stomp/stompjs`.\n *\n * {@link IMessage} is an extended IFrame.\n */\nexport interface IFrame {\n  /**\n   * STOMP Command\n   */\n  command: string;\n\n  /**\n   * Headers, key value pairs.\n   */\n  headers: StompHeaders;\n\n  /**\n   * Is this frame binary (based on whether body/binaryBody was passed when creating this frame).\n   */\n  isBinaryBody: boolean;\n\n  /**\n   * body of the frame as string\n   */\n  readonly body: string;\n\n  /**\n   * body as Uint8Array\n   */\n  readonly binaryBody: Uint8Array;\n}\n\n/**\n * Alias for {@link IFrame}\n */\nexport type Frame = IFrame;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMessage.html":{"url":"interfaces/IMessage.html","title":"interface - IMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-message.ts\n        \n\n            \n                Description\n            \n            \n                Instance of Message will be passed to subscription callback\nand Client#onUnhandledMessage.\nSince it is an extended FrameImpl, you can access headers\nand body as properties.\nPart of @stomp/stompjs.\nSee Client#subscribe for example.\n\n            \n\n            \n                Extends\n            \n            \n                    IFrame\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ack\n                                \n                                \n                                        nack\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ack\n                                    \n                                \n                                \n                                    \n                                        ack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to ACK the message.\nSee Client#ack for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nack\n                                    \n                                \n                                \n                                    \n                                        nack:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When subscribing with manual acknowledgement, call this method on the message to NACK the message.\nSee Client#nack for an example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * Instance of Message will be passed to [subscription callback]{@link Client#subscribe}\n * and [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n * Since it is an extended {@link FrameImpl}, you can access [headers]{@link FrameImpl#headers}\n * and [body]{@link FrameImpl#body} as properties.\n *\n * Part of `@stomp/stompjs`.\n *\n * See [Client#subscribe]{@link Client#subscribe} for example.\n */\nexport interface IMessage extends IFrame {\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to ACK the message.\n   *\n   * See [Client#ack]{@link Client#ack} for an example.\n   */\n  ack: (headers?: StompHeaders) => void;\n\n  /**\n   * When subscribing with manual acknowledgement, call this method on the message to NACK the message.\n   *\n   * See [Client#nack]{@link Client#nack} for an example.\n   */\n  nack: (headers?: StompHeaders) => void;\n}\n\n/**\n * Aliased to {@link IMessage}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type Message = IMessage;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishParams.html":{"url":"interfaces/IPublishParams.html","title":"interface - IPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/types.ts\n        \n\n            \n                Description\n            \n            \n                Parameters for Client#publish.\nAliased as publishParams as well.\nPart of @stomp/stompjs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        binaryBody\n                                \n                                \n                                            Optional\n                                        body\n                                \n                                \n                                        destination\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        skipContentLengthHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        binaryBody\n                                    \n                                \n                                \n                                    \n                                        binaryBody:     Uint8Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Uint8Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    binary body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    body (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    destination end point\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     StompHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    headers (optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipContentLengthHeader\n                                    \n                                \n                                \n                                    \n                                        skipContentLengthHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default a content-length header will be added in the Frame to the broker.\nSet it to true for the header to be skipped.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IFrame } from './i-frame';\nimport { IMessage } from './i-message';\nimport { StompHeaders } from './stomp-headers';\n\n/**\n * This callback will receive a `string` as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type debugFnType = (msg: string) => void;\n\n/**\n * This callback will receive a {@link IMessage} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type messageCallbackType = (message: IMessage) => void;\n\n/**\n * This callback will receive a {@link IFrame} as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type frameCallbackType = (receipt: IFrame) => void;\n\n/**\n * This callback will receive a [CloseEvent]{@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type closeEventCallbackType = (evt: T) => void;\n\n/**\n * This callback will receive an [Event]{@link https://developer.mozilla.org/en-US/docs/Web/API/Event}\n * as parameter.\n *\n * Part of `@stomp/stompjs`.\n */\nexport type wsErrorCallbackType = (evt: T) => void;\n\n/**\n * Parameters for [Client#publish]{@link Client#publish}.\n * Aliased as publishParams as well.\n *\n * Part of `@stomp/stompjs`.\n */\nexport interface IPublishParams {\n  /**\n   * destination end point\n   */\n  destination: string;\n  /**\n   * headers (optional)\n   */\n  headers?: StompHeaders;\n  /**\n   * body (optional)\n   */\n  body?: string;\n  /**\n   * binary body (optional)\n   */\n  binaryBody?: Uint8Array;\n  /**\n   * By default a `content-length` header will be added in the Frame to the broker.\n   * Set it to `true` for the header to be skipped.\n   */\n  skipContentLengthHeader?: boolean;\n}\n\n/**\n * Backward compatibility, switch to {@link IPublishParams}.\n */\nexport type publishParams = IPublishParams;\n\n/**\n * Used in {@link IRawFrameType}\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport type RawHeaderType = [string, string];\n\n/**\n * The parser yield frames in this structure\n *\n * Part of `@stomp/stompjs`.\n *\n * @internal\n */\nexport interface IRawFrameType {\n  command: string;\n  headers: RawHeaderType[];\n  binaryBody: Uint8Array;\n}\n\n/**\n * @internal\n */\nexport interface IStompSocketMessageEvent {\n  data?: string | ArrayBuffer;\n}\n\n/**\n * Copied from Websocket interface to avoid dom typelib dependency.\n *\n * @internal\n */\nexport interface IStompSocket {\n  onclose: ((this: IStompSocket, ev?: any) => any) | null;\n  onerror: ((this: IStompSocket, ev: any) => any) | null;\n  onmessage: ((this: IStompSocket, ev: IStompSocketMessageEvent) => any) | null;\n  onopen: ((this: IStompSocket, ev?: any) => any) | null;\n  terminate?: ((this: IStompSocket) => any) | null;\n\n  /**\n   * Returns a string that indicates how binary data from the socket is exposed to scripts:\n   * We support only 'arraybuffer'.\n   */\n  binaryType: 'arraybuffer';\n\n  /**\n   * Returns the state of the socket connection. It can have the values of StompSocketState.\n   */\n  readonly readyState: number;\n\n  /**\n   * Closes the connection.\n   */\n  close(): void;\n  /**\n   * Transmits data using the connection. data can be a string or an ArrayBuffer.\n   */\n  send(data: string | ArrayBuffer): void;\n}\n\n/**\n * Possible states for the IStompSocket\n */\nexport enum StompSocketState {\n  CONNECTING,\n  OPEN,\n  CLOSING,\n  CLOSED,\n}\n\n/**\n * Possible activation state\n */\nexport enum ActivationState {\n  ACTIVE,\n  DEACTIVATING,\n  INACTIVE,\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRxStompPublishParams.html":{"url":"interfaces/IRxStompPublishParams.html","title":"interface - IRxStompPublishParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRxStompPublishParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n        \n\n            \n                Description\n            \n            \n                Additional options for RxStomp#publish\nPart of @stomp/rx-stomp\n\n            \n\n            \n                Extends\n            \n            \n                    IPublishParams\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        retryIfDisconnected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        retryIfDisconnected\n                                    \n                                \n                                \n                                    \n                                        retryIfDisconnected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    When set to true message will be enqueued if the connection\nto the broker is down.\nSuch messages will be published when connection is reestablished.\nDefault is true.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { IPublishParams } from '@stomp/stompjs';\n\n/**\n * Additional options for [RxStomp#publish]{@link RxStomp#publish}\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IRxStompPublishParams extends IPublishParams {\n  /**\n   * When set to `true` message will be enqueued if the connection\n   * to the broker is down.\n   * Such messages will be published when connection is reestablished.\n   *\n   * Default is `true`.\n   */\n  retryIfDisconnected?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/i-transaction.ts\n        \n\n            \n                Description\n            \n            \n                A Transaction is created by calling Client#begin\nPart of @stomp/stompjs.\nTODO: Example and caveat\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        abort\n                                \n                                \n                                        commit\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abort\n                                    \n                                \n                                \n                                    \n                                        abort:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Abort this transaction. See Client#abort for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                    \n                                \n                                \n                                    \n                                        commit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Commit this transaction. See Client#commit for an example.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    You will need to access this to send, ack, or nack within this transaction.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ITransaction {\n  /**\n   * You will need to access this to send, ack, or nack within this transaction.\n   */\n  id: string;\n\n  /**\n   * Commit this transaction. See [Client#commit]{@link Client#commit} for an example.\n   */\n  commit: () => void;\n\n  /**\n   * Abort this transaction. See [Client#abort]{@link Client#abort} for an example.\n   */\n  abort: () => void;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWatchParams.html":{"url":"interfaces/IWatchParams.html","title":"interface - IWatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IWatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/i-watch-params.ts\n        \n\n            \n                Description\n            \n            \n                Options for RxStomp#watch.\nPart of @stomp/rx-stomp\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        destination\n                                \n                                \n                                            Optional\n                                        subHeaders\n                                \n                                \n                                            Optional\n                                        subscribeOnlyOnce\n                                \n                                \n                                            Optional\n                                        unsubHeaders\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                    \n                                \n                                \n                                    \n                                        destination:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The subscription target. It is likely to be broker dependent.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subHeaders\n                                    \n                                \n                                \n                                    \n                                        subHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Subscription headers, defaults to {}\nIf header information can change over time and you are allowing automatic resubscriptions,\nconsider using a callback as the value rather than a string literal.\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   *\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscribeOnlyOnce\n                                    \n                                \n                                \n                                    \n                                        subscribeOnlyOnce:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, the destination will be subscribed after each successful (re)connection to the broker.\nSet this flag to not automatically resubscribe.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unsubHeaders\n                                    \n                                \n                                \n                                    \n                                        unsubHeaders:     StompHeaders | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StompHeaders | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Headers to be passed while unsubscribing, defaults to {}.\nOccasionally, headers may not be known while invoking RxStomp#watch,\nin such cases a callback can be passed that would return the headers.\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   *\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StompHeaders } from '@stomp/stompjs';\n\n/**\n * Options for [RxStomp#watch]{@link RxStomp#watch}.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport interface IWatchParams {\n  /**\n   * The subscription target. It is likely to be broker dependent.\n   */\n  readonly destination?: string;\n\n  /**\n   * Subscription headers, defaults to `{}`\n   *\n   * If header information can change over time and you are allowing automatic resubscriptions,\n   * consider using a callback as the value rather than a string literal.\n   *\n   * ```typescript\n   *              const subHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, subHeaders: subHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // The subHeadersCallback will be invoked before every (re)subscription.\n   * ```\n   */\n  readonly subHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * Headers to be passed while unsubscribing, defaults to `{}`.\n   *\n   * Occasionally, headers may not be known while invoking [RxStomp#watch]{@link RxStomp#watch},\n   * in such cases a callback can be passed that would return the headers.\n   *\n   * ```typescript\n   *              const unsubHeadersCallback = () => {\n   *                  return {bye: 'world'};\n   *              };\n   *              const sub = rxStomp.watch({ destination: queueName, unsubHeaders: unsubHeadersCallback})\n   *                                 .subscribe((message) => {\n   *                                    // handle message\n   *                                 });\n   *              // Unsubscribe from RxJS Observable, internally unsubscribe will be issued to the broker.\n   *              // `unsubHeadersCallback` will be invoked to get the headers.\n   *              sub.unsubscribe();\n   * ```\n   */\n  readonly unsubHeaders?: StompHeaders | (() => StompHeaders);\n\n  /**\n   * By default, the destination will be subscribed after each successful (re)connection to the broker.\n   * Set this flag to not automatically resubscribe.\n   */\n  readonly subscribeOnlyOnce?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompConfig.html":{"url":"injectables/InjectableRxStompConfig.html","title":"injectable - InjectableRxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStompConfig with exactly same functionality.\nPlease see RxStompConfig for details.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nIf all fields of configuration are fixed and known in advance you would typically define\na const and inject it using value.\nIf some fields will be known by later, it can be injected using a factory function.\nOccasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStompConfig} with exactly same functionality.\n * Please see {@link RxStompConfig} for details.\n *\n * See: {@link /guide/ng2-stompjs/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * If all fields of configuration are fixed and known in advance you would typically define\n * a `const` and inject it using value.\n *\n * If some fields will be known by later, it can be injected using a factory function.\n *\n * Occasionally it may need to be combined with Angular's APP_INITIALIZER mechanism.\n */\n@Injectable()\nexport class InjectableRxStompConfig extends RxStompConfig {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectableRxStompRPCConfig.html":{"url":"injectables/InjectableRxStompRPCConfig.html","title":"injectable - InjectableRxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectableRxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPCConfig.\nSee guide at /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStompRPCConfig } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPCConfig}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html}\n */\n@Injectable()\nexport class InjectableRxStompRPCConfig extends RxStompRPCConfig {}\n\n// Backward compatibility\n/**\n * Deprecated, use {@link InjectableRxStompRPCConfig} instead\n */\nexport const InjectableRxStompRpcConfig = InjectableRxStompRPCConfig;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompConfig.html":{"url":"classes/RxStompConfig.html","title":"class - RxStompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Represents a configuration object for RxSTOMP.\nInstance of this can be passed to RxStomp#configure\nAll the attributes of this calls are optional.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:121\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:167\n                            \n                        \n\n                \n                    \n                        Callback, invoked on before a connection connection to the STOMP broker.\nYou can change configuration of the rxStomp, which will impact the immediate connect.\nIt is valid to call RxStomp#decativate in this callback.\nAs of version 0.1.1, this callback can be\nasync\n(i.e., it can return a\nPromise).\nIn that case connect will be called only after the Promise is resolved.\nThis can be used to reliably fetch credentials, access token etc. from some other service\nin an asynchronous way.\nAs of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\nMaps to: Client#beforeConnect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:22\n                            \n                        \n\n                \n                    \n                        The URL for the STOMP broker to connect to.\nTypically like \"ws://broker.329broker.com:15674/ws\" or \"wss://broker.329broker.com:15674/ws\".\nOnly one of this or RxStompConfig#webSocketFactory need to be set.\nIf both are set, RxStompConfig#webSocketFactory will be used.\nMaps to: Client#brokerURL\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:140\n                            \n                        \n\n                \n                    \n                        Connection headers, important keys - login, passcode, host.\nThough STOMP 1.2 standard marks these keys to be present, check your broker documentation for\ndetails specific to your broker.\nMaps to: Client#connectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectionTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:81\n                            \n                        \n\n                \n                    \n                        Will retry if Stomp connection is not established in specified milliseconds.\nDefault 0, which implies wait for ever.\nMaps to: Client#connectionTimeout.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:50\n                            \n                        \n\n                \n                    \n                        Enable client debugging? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            discardWebsocketOnCommFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:131\n                            \n                        \n\n                \n                    \n                        Maps to: Client#discardWebsocketOnCommFailure.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:147\n                            \n                        \n\n                \n                    \n                        Disconnection headers.\nMaps to: Client#disconnectHeaders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:116\n                            \n                        \n\n                \n                    \n                        Maps to: Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:95\n                            \n                        \n\n                \n                    \n                        Incoming heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:102\n                            \n                        \n\n                \n                    \n                        Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\nMaps to: Client#heartbeatOutgoing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:47\n                            \n                        \n\n                \n                    \n                        Set it to log the actual raw communication with the broker.\nWhen unset, it logs headers of the parsed frames.\nChange in this effects from next broker reconnect.\nCaution: this assumes that frames only have valid UTF8 strings.\nMaps to: Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:126\n                            \n                        \n\n                \n                    \n                        Maps to: Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:88\n                            \n                        \n\n                \n                    \n                        Automatically reconnect with delay in milliseconds, set to 0 to disable.\nMaps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:111\n                            \n                        \n\n                \n                    \n                        Enable non-standards compliant mode of splitting of outgoing large text packets.\nSee Client#splitLargeFrames for details.\nUseful with Java Spring based brokers.\nMaps to: Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:35\n                            \n                        \n\n                \n                    \n                        STOMP versions to attempt during STOMP handshake. By default versions 1.0, 1.1, and 1.2 are attempted.\nExample:\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   *Maps to: Client#stompVersions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-config.ts:73\n                            \n                        \n\n                \n                    \n                        This function should return a WebSocket or a similar (e.g. SockJS) object.\nIf your STOMP Broker supports WebSockets, prefer setting Client#brokerURL.\nIf both this and Client#brokerURL are set, this will be used.\nExample:\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   *Maps to: Client#webSocketFactory\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { debugFnType, StompHeaders, Versions } from '@stomp/stompjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * Represents a configuration object for RxSTOMP.\n * Instance of this can be passed to [RxStomp#configure]{@link RxStomp#configure}\n *\n * All the attributes of this calls are optional.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompConfig {\n  /**\n   * The URL for the STOMP broker to connect to.\n   * Typically like `\"ws://broker.329broker.com:15674/ws\"` or `\"wss://broker.329broker.com:15674/ws\"`.\n   *\n   * Only one of this or [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} need to be set.\n   * If both are set, [RxStompConfig#webSocketFactory]{@link RxStompConfig#webSocketFactory} will be used.\n   *\n   * Maps to: [Client#brokerURL]{@link Client#brokerURL}\n   */\n  public brokerURL?: string;\n\n  /**\n   * STOMP versions to attempt during STOMP handshake. By default versions `1.0`, `1.1`, and `1.2` are attempted.\n   *\n   * Example:\n   * ```javascript\n   *        // Try only versions 1.0 and 1.1\n   *        rxStompConfig.stompVersions= new Versions(['1.0', '1.1']);\n   * ```\n   *\n   * Maps to: [Client#stompVersions]{@link Client#stompVersions}\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * Set it to log the actual raw communication with the broker.\n   * When unset, it logs headers of the parsed frames.\n   *\n   * Change in this effects from next broker reconnect.\n   *\n   * **Caution: this assumes that frames only have valid UTF8 strings.**\n   *\n   * Maps to: [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /** Enable client debugging? */\n  public debug?: debugFnType;\n\n  /**\n   * This function should return a WebSocket or a similar (e.g. SockJS) object.\n   * If your STOMP Broker supports WebSockets, prefer setting [Client#brokerURL]{@link Client#brokerURL}.\n   *\n   * If both this and [Client#brokerURL]{@link Client#brokerURL} are set, this will be used.\n   *\n   * Example:\n   * ```javascript\n   *        // use a WebSocket\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new WebSocket(\"wss://broker.329broker.com:15674/ws\");\n   *        };\n   *\n   *        // Typical usage with SockJS\n   *        rxStompConfig.webSocketFactory= function () {\n   *          return new SockJS(\"http://broker.329broker.com/stomp\");\n   *        };\n   * ```\n   *\n   * Maps to: [Client#webSocketFactory]{@link Client#webSocketFactory}\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * Will retry if Stomp connection is not established in specified milliseconds.\n   * Default 0, which implies wait for ever.\n   *\n   * Maps to: [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * Automatically reconnect with delay in milliseconds, set to 0 to disable.\n   *\n   * Maps to: [Client#reconnectDelay]{@Client#reconnectDelay}\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * Incoming heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatIncoming]{@Client#heartbeatIncoming}\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * Outgoing heartbeat interval in milliseconds. Set to 0 to disable.\n   *\n   * Maps to: [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * Enable non-standards compliant mode of splitting of outgoing large text packets.\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames} for details.\n   * Useful with Java Spring based brokers.\n   *\n   * Maps to: [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * Maps to: [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * Maps to: [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * Maps to: [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * Connection headers, important keys - `login`, `passcode`, `host`.\n   * Though STOMP 1.2 standard marks these keys to be present, check your broker documentation for\n   * details specific to your broker.\n   *\n   * Maps to: [Client#connectHeaders]{@link Client#connectHeaders}\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * Disconnection headers.\n   *\n   * Maps to: [Client#disconnectHeaders]{@link Client#disconnectHeaders}\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * Callback, invoked on before a connection connection to the STOMP broker.\n   *\n   * You can change configuration of the rxStomp, which will impact the immediate connect.\n   * It is valid to call [RxStomp#decativate]{@link RxStomp#deactivate} in this callback.\n   *\n   * As of version 0.1.1, this callback can be\n   * [async](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)\n   * (i.e., it can return a\n   * [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)).\n   * In that case connect will be called only after the Promise is resolved.\n   * This can be used to reliably fetch credentials, access token etc. from some other service\n   * in an asynchronous way.\n   *\n   * As of 0.3.5, this callback will receive [RxStomp](@link RxStomp) as parameter.\n   *\n   * Maps to: [Client#beforeConnect]{@link Client#beforeConnect}\n   */\n  public beforeConnect?: (client: RxStomp) => void | Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPC.html":{"url":"classes/RxStompRPC.html","title":"class - RxStompRPC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of Remote Procedure Call (RPC) using messaging.\nPlease see the guide for details.\nPart of @stomp/rx-stomp\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                rpc\n                            \n                            \n                                    Public\n                                stream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStomp, stompRPCConfig?: RxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:30\n                            \n                        \n\n                \n                    \n                            Create an instance, see the guide for details.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStomp\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    RxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rpc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rpc(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:56\n                            \n                        \n\n\n                \n                    \n                            Make an RPC request.\nSee the guide for example.\nIt is a simple wrapper around RxStompRPC#stream.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stream\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stream(params: publishParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc.ts:67\n                            \n                        \n\n\n                \n                    \n                            Make an RPC stream request. See the guide.\nNote: This call internally takes care of generating a correlation id,\nhowever, if correlation-id is passed via headers, that will be used instead.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Observer, Subscription } from 'rxjs';\nimport { filter, first } from 'rxjs/operators';\n\nimport { UUID } from 'angular2-uuid';\n\nimport { IMessage, publishParams, StompHeaders } from '@stomp/stompjs';\n\nimport { RxStomp } from './rx-stomp';\nimport { RxStompRPCConfig, setupReplyQueueFnType } from './rx-stomp-rpc-config';\n\n/**\n * An implementation of Remote Procedure Call (RPC) using messaging.\n *\n * Please see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n *\n * Part of `@stomp/rx-stomp`\n */\nexport class RxStompRPC {\n  private _replyQueueName = '/temp-queue/rpc-replies';\n\n  private _setupReplyQueue: setupReplyQueueFnType = () => {\n    return this.rxStomp.unhandledMessage$;\n  };\n\n  private _repliesObservable: Observable;\n\n  private _customReplyQueue: boolean = false;\n\n  // This is used to ensure that underlying subscription remains subscribed\n  private _dummySubscription: Subscription;\n\n  /**\n   * Create an instance, see the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for details.\n   */\n  constructor(\n    private rxStomp: RxStomp,\n    private stompRPCConfig?: RxStompRPCConfig\n  ) {\n    if (stompRPCConfig) {\n      if (stompRPCConfig.replyQueueName) {\n        this._replyQueueName = stompRPCConfig.replyQueueName;\n      }\n      if (stompRPCConfig.setupReplyQueue) {\n        this._customReplyQueue = true;\n        this._setupReplyQueue = stompRPCConfig.setupReplyQueue;\n      }\n    }\n  }\n\n  /**\n   * Make an RPC request.\n   * See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html) for example.\n   *\n   * It is a simple wrapper around [RxStompRPC#stream]{@link RxStompRPC#stream}.\n   */\n  public rpc(params: publishParams): Observable {\n    // We know there will be only one message in reply\n    return this.stream(params).pipe(first());\n  }\n\n  /**\n   * Make an RPC stream request. See the [guide](/guide/rx-stomp/ng2-stompjs/remote-procedure-call.html).\n   *\n   * Note: This call internally takes care of generating a correlation id,\n   * however, if `correlation-id` is passed via `headers`, that will be used instead.\n   */\n  public stream(params: publishParams): Observable {\n    const headers: StompHeaders = (Object as any).assign(\n      {},\n      params.headers || {}\n    );\n    const { destination, body, binaryBody } = params;\n\n    if (!this._repliesObservable) {\n      const repliesObservable = this._setupReplyQueue(\n        this._replyQueueName,\n        this.rxStomp\n      );\n\n      // In case of custom queue, ensure it remains subscribed\n      if (this._customReplyQueue) {\n        this._dummySubscription = repliesObservable.subscribe(() => {});\n      }\n\n      this._repliesObservable = repliesObservable;\n    }\n\n    return Observable.create((rpcObserver: Observer) => {\n      let defaultMessagesSubscription: Subscription;\n\n      const correlationId = headers['correlation-id'] || UUID.UUID();\n\n      defaultMessagesSubscription = this._repliesObservable\n        .pipe(\n          filter((message: IMessage) => {\n            return message.headers['correlation-id'] === correlationId;\n          })\n        )\n        .subscribe((message: IMessage) => {\n          rpcObserver.next(message);\n        });\n\n      // send an RPC request\n      headers['reply-to'] = this._replyQueueName;\n      headers['correlation-id'] = correlationId;\n\n      this.rxStomp.publish({ destination, body, binaryBody, headers });\n\n      return () => {\n        // Cleanup\n        defaultMessagesSubscription.unsubscribe();\n      };\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RxStompRPCConfig.html":{"url":"classes/RxStompRPCConfig.html","title":"class - RxStompRPCConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RxStompRPCConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n        \n\n            \n                Description\n            \n            \n                RPC Config. See the guide for example.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                replyQueueName\n                            \n                            \n                                    Public\n                                    Optional\n                                setupReplyQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            replyQueueName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:23\n                            \n                        \n\n                \n                    \n                        Name of the reply queue. See the guide for details.\nDefault /temp-queue/rpc-replies suitable for RabbitMQ and ActiveMQ.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            setupReplyQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     setupReplyQueueFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/rx-stomp/src/rx-stomp-rpc-config.ts:27\n                            \n                        \n\n                \n                    \n                        Setup the reply queue. See the guide for details.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IMessage } from '@stomp/stompjs';\nimport { Observable } from 'rxjs';\nimport { RxStomp } from './rx-stomp';\n\n/**\n * See the guide for example\n *\n * Part of `@stomp/rx-stomp`\n */\nexport type setupReplyQueueFnType = (\n  replyQueueName: string,\n  rxStomp: RxStomp\n) => Observable;\n\n/**\n * RPC Config. See the guide for example.\n */\nexport class RxStompRPCConfig {\n  /**\n   * Name of the reply queue. See the guide for details.\n   * Default `/temp-queue/rpc-replies` suitable for RabbitMQ and ActiveMQ.\n   */\n  public replyQueueName?: string;\n  /**\n   * Setup the reply queue. See the guide for details.\n   */\n  public setupReplyQueue?: setupReplyQueueFnType;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompRPCService.html":{"url":"injectables/RxStompRPCService.html","title":"injectable - RxStompRPCService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompRPCService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nInjectable version of RxStompRPC.\nSee guide at /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html\n\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rxStomp: RxStompService, stompRPCConfig?: InjectableRxStompRPCConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts:15\n                            \n                        \n\n                \n                    \n                            Create an instance, typically called by Angular Dependency Injection framework.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStomp\n                                                  \n                                                        \n                                                                    RxStompService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stompRPCConfig\n                                                  \n                                                        \n                                                                    InjectableRxStompRPCConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport { RxStompRPC } from '@stomp/rx-stomp';\nimport { RxStompService } from './rx-stomp.service';\nimport { InjectableRxStompRPCConfig } from './injectable-rx-stomp-rpc-config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * Injectable version of {@link RxStompRPC}.\n *\n * See guide at {@link /guide/rx-stomp/ng2-stompjs/remote-procedure-call.html}\n */\n@Injectable()\nexport class RxStompRPCService extends RxStompRPC {\n  /**\n   * Create an instance, typically called by Angular Dependency Injection framework.\n   *\n   * @param rxStomp\n   * @param stompRPCConfig\n   */\n  constructor(\n    rxStomp: RxStompService,\n    @Optional() stompRPCConfig?: InjectableRxStompRPCConfig\n  ) {\n    super(rxStomp, stompRPCConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RxStompService.html":{"url":"injectables/RxStompService.html","title":"injectable - RxStompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxStompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class is Injectable version of RxStomp with exactly same functionality.\nPlease see RxStomp for details.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\nSee also rxStompServiceFactory.\n\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RxStomp } from '@stomp/rx-stomp';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * This class is Injectable version of {@link RxStomp} with exactly same functionality.\n * Please see {@link RxStomp} for details.\n *\n * See: {@link /guide/ng2-stompjs/ng2-stomp-with-angular7.html}\n * for a step-by-step guide.\n *\n * See also {@link rxStompServiceFactory}.\n */\n@Injectable()\nexport class RxStompService extends RxStomp {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stomp.html":{"url":"classes/Stomp.html","title":"class - Stomp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stomp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/compatibility/stomp.ts\n        \n\n            \n                Description\n            \n            \n                STOMP Class, acts like a factory to create Client.\nPart of @stomp/stompjs.\nDeprecated\nIt will be removed in next major version. Please switch to Client.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                WebSocketClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                client\n                            \n                            \n                                    Static\n                                over\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            WebSocketClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:41\n                            \n                        \n\n                \n                    \n                        In case you need to use a non standard class for WebSocket.\nFor example when using within NodeJS environment:\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            client\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        client(url: string, protocols?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:57\n                            \n                        \n\n\n                \n                    \n                            This method creates a WebSocket client that is connected to\nthe STOMP server located at the url.\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#brokerURL.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        protocols\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            over\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        over(ws: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/compatibility/stomp.ts:103\n                            \n                        \n\n\n                \n                    \n                            This method is an alternative to Stomp#client to let the user\nspecify the WebSocket to use (either a standard HTML5 WebSocket or\na similar object).\nIn order to support reconnection, the function Client._connect should be callable more than once.\nWhile reconnecting\na new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\nalternatively allows passing a function that should return a new instance of the underlying socket.\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   *Deprecated\nIt will be removed in next major version. Please switch to Client\nusing Client#webSocketFactory.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompatClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Versions } from '../versions';\nimport { CompatClient } from './compat-client';\nimport { IStompSocket } from '../types';\n\n/**\n * @internal\n */\ndeclare const WebSocket: {\n  prototype: IStompSocket;\n  new (url: string, protocols?: string | string[]): IStompSocket;\n};\n\n/**\n * STOMP Class, acts like a factory to create {@link Client}.\n *\n * Part of `@stomp/stompjs`.\n *\n * **Deprecated**\n *\n * It will be removed in next major version. Please switch to {@link Client}.\n */\nexport class Stomp {\n  /**\n   * In case you need to use a non standard class for WebSocket.\n   *\n   * For example when using within NodeJS environment:\n   *\n   * ```javascript\n   *        StompJs = require('../../esm5/');\n   *        Stomp = StompJs.Stomp;\n   *        Stomp.WebSocketClass = require('websocket').w3cwebsocket;\n   * ```\n   *\n   * **Deprecated**\n   *\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  // tslint:disable-next-line:variable-name\n  public static WebSocketClass: any = null;\n\n  /**\n   * This method creates a WebSocket client that is connected to\n   * the STOMP server located at the url.\n   *\n   * ```javascript\n   *        var url = \"ws://localhost:61614/stomp\";\n   *        var client = Stomp.client(url);\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public static client(url: string, protocols?: string[]): CompatClient {\n    // This is a hack to allow another implementation than the standard\n    // HTML5 WebSocket class.\n    //\n    // It is possible to use another class by calling\n    //\n    //     Stomp.WebSocketClass = MozWebSocket\n    //\n    // *prior* to call `Stomp.client()`.\n    //\n    // This hack is deprecated and `Stomp.over()` method should be used\n    // instead.\n\n    // See remarks on the function Stomp.over\n    if (protocols == null) {\n      protocols = Versions.default.protocolVersions();\n    }\n    const wsFn = () => {\n      const klass = Stomp.WebSocketClass || WebSocket;\n      return new klass(url, protocols);\n    };\n\n    return new CompatClient(wsFn);\n  }\n\n  /**\n   * This method is an alternative to [Stomp#client]{@link Stomp#client} to let the user\n   * specify the WebSocket to use (either a standard HTML5 WebSocket or\n   * a similar object).\n   *\n   * In order to support reconnection, the function Client._connect should be callable more than once.\n   * While reconnecting\n   * a new instance of underlying transport (TCP Socket, WebSocket or SockJS) will be needed. So, this function\n   * alternatively allows passing a function that should return a new instance of the underlying socket.\n   *\n   * ```javascript\n   *        var client = Stomp.over(function(){\n   *          return new WebSocket('ws://localhost:15674/ws')\n   *        });\n   * ```\n   *\n   * **Deprecated**\n   *\n   * It will be removed in next major version. Please switch to {@link Client}\n   * using [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public static over(ws: any): CompatClient {\n    let wsFn: () => any;\n\n    if (typeof ws === 'function') {\n      wsFn = ws;\n    } else {\n      console.warn(\n        'Stomp.over did not receive a factory, auto reconnect will not work. ' +\n          'Please see https://stomp-js.github.io/api-docs/latest/classes/Stomp.html#over'\n      );\n      wsFn = () => ws;\n    }\n\n    return new CompatClient(wsFn);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompConfig.html":{"url":"classes/StompConfig.html","title":"class - StompConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration options for STOMP Client, each key corresponds to\nfield by the same name in Client. This can be passed to\nthe constructor of Client or to Client#configure.\nThere used to be a class with the same name in @stomp/ng2-stompjs, which has been replaced by\nRxStompConfig and InjectableRxStompConfig.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appendMissingNULLonIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                beforeConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                brokerURL\n                            \n                            \n                                    Public\n                                    Optional\n                                connectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                connectionTimeout\n                            \n                            \n                                    Public\n                                    Optional\n                                debug\n                            \n                            \n                                    Public\n                                    Optional\n                                discardWebsocketOnCommFailure\n                            \n                            \n                                    Public\n                                    Optional\n                                disconnectHeaders\n                            \n                            \n                                    Public\n                                    Optional\n                                forceBinaryWSFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatIncoming\n                            \n                            \n                                    Public\n                                    Optional\n                                heartbeatOutgoing\n                            \n                            \n                                    Public\n                                    Optional\n                                logRawCommunication\n                            \n                            \n                                    Public\n                                    Optional\n                                maxWebSocketChunkSize\n                            \n                            \n                                    Public\n                                    Optional\n                                onChangeState\n                            \n                            \n                                    Public\n                                    Optional\n                                onConnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onDisconnect\n                            \n                            \n                                    Public\n                                    Optional\n                                onStompError\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledFrame\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledMessage\n                            \n                            \n                                    Public\n                                    Optional\n                                onUnhandledReceipt\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketClose\n                            \n                            \n                                    Public\n                                    Optional\n                                onWebSocketError\n                            \n                            \n                                    Public\n                                    Optional\n                                reconnectDelay\n                            \n                            \n                                    Public\n                                    Optional\n                                splitLargeFrames\n                            \n                            \n                                    Public\n                                    Optional\n                                stompVersions\n                            \n                            \n                                    Public\n                                    Optional\n                                webSocketFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appendMissingNULLonIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:71\n                            \n                        \n\n                \n                    \n                        See Client#appendMissingNULLonIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            beforeConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:106\n                            \n                        \n\n                \n                    \n                        See Client#beforeConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            brokerURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:26\n                            \n                        \n\n                \n                    \n                        See Client#brokerURL.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:81\n                            \n                        \n\n                \n                    \n                        See Client#connectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            connectionTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:41\n                            \n                        \n\n                \n                    \n                        See Client#connectionTimeout.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            debug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     debugFnType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:141\n                            \n                        \n\n                \n                    \n                        See Client#debug.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            discardWebsocketOnCommFailure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:146\n                            \n                        \n\n                \n                    \n                        See Client#discardWebsocketOnCommFailure.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            disconnectHeaders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StompHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:86\n                            \n                        \n\n                \n                    \n                        See Client#disconnectHeaders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            forceBinaryWSFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:66\n                            \n                        \n\n                \n                    \n                        See Client#forceBinaryWSFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatIncoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:51\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatIncoming.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            heartbeatOutgoing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:56\n                            \n                        \n\n                \n                    \n                        See Client#heartbeatOutgoing.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            logRawCommunication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:136\n                            \n                        \n\n                \n                    \n                        See Client#logRawCommunication.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxWebSocketChunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:76\n                            \n                        \n\n                \n                    \n                        See Client#maxWebSocketChunkSize.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onChangeState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:151\n                            \n                        \n\n                \n                    \n                        See Client#onChangeState.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onConnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:111\n                            \n                        \n\n                \n                    \n                        See Client#onConnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDisconnect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:116\n                            \n                        \n\n                \n                    \n                        See Client#onDisconnect.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onStompError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:121\n                            \n                        \n\n                \n                    \n                        See Client#onStompError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledFrame\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:101\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledFrame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     messageCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:91\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledMessage.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onUnhandledReceipt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     frameCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:96\n                            \n                        \n\n                \n                    \n                        See Client#onUnhandledReceipt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketClose\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     closeEventCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:126\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketClose.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onWebSocketError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     wsErrorCallbackType\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:131\n                            \n                        \n\n                \n                    \n                        See Client#onWebSocketError.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            reconnectDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:46\n                            \n                        \n\n                \n                    \n                        See Client#reconnectDelay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            splitLargeFrames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:61\n                            \n                        \n\n                \n                    \n                        See Client#splitLargeFrames.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            stompVersions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Versions\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:31\n                            \n                        \n\n                \n                    \n                        See See Client#stompVersions.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            webSocketFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-config.ts:36\n                            \n                        \n\n                \n                    \n                        See Client#webSocketFactory.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\nimport {\n  ActivationState,\n  closeEventCallbackType,\n  debugFnType,\n  frameCallbackType,\n  messageCallbackType,\n  wsErrorCallbackType,\n} from './types';\nimport { Versions } from './versions';\n\n/**\n * Configuration options for STOMP Client, each key corresponds to\n * field by the same name in {@link Client}. This can be passed to\n * the constructor of {@link Client} or to [Client#configure]{@link Client#configure}.\n *\n * There used to be a class with the same name in `@stomp/ng2-stompjs`, which has been replaced by\n * {@link RxStompConfig} and {@link InjectableRxStompConfig}.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompConfig {\n  /**\n   * See [Client#brokerURL]{@link Client#brokerURL}.\n   */\n  public brokerURL?: string;\n\n  /**\n   * See See [Client#stompVersions]{@link Client#stompVersions}.\n   */\n  public stompVersions?: Versions;\n\n  /**\n   * See [Client#webSocketFactory]{@link Client#webSocketFactory}.\n   */\n  public webSocketFactory?: () => any;\n\n  /**\n   * See [Client#connectionTimeout]{@link Client#connectionTimeout}.\n   */\n  public connectionTimeout?: number;\n\n  /**\n   * See [Client#reconnectDelay]{@link Client#reconnectDelay}.\n   */\n  public reconnectDelay?: number;\n\n  /**\n   * See [Client#heartbeatIncoming]{@link Client#heartbeatIncoming}.\n   */\n  public heartbeatIncoming?: number;\n\n  /**\n   * See [Client#heartbeatOutgoing]{@link Client#heartbeatOutgoing}.\n   */\n  public heartbeatOutgoing?: number;\n\n  /**\n   * See [Client#splitLargeFrames]{@link Client#splitLargeFrames}.\n   */\n  public splitLargeFrames?: boolean;\n\n  /**\n   * See [Client#forceBinaryWSFrames]{@link Client#forceBinaryWSFrames}.\n   */\n  public forceBinaryWSFrames?: boolean;\n\n  /**\n   * See [Client#appendMissingNULLonIncoming]{@link Client#appendMissingNULLonIncoming}.\n   */\n  public appendMissingNULLonIncoming?: boolean;\n\n  /**\n   * See [Client#maxWebSocketChunkSize]{@link Client#maxWebSocketChunkSize}.\n   */\n  public maxWebSocketChunkSize?: number;\n\n  /**\n   * See [Client#connectHeaders]{@link Client#connectHeaders}.\n   */\n  public connectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#disconnectHeaders]{@link Client#disconnectHeaders}.\n   */\n  public disconnectHeaders?: StompHeaders;\n\n  /**\n   * See [Client#onUnhandledMessage]{@link Client#onUnhandledMessage}.\n   */\n  public onUnhandledMessage?: messageCallbackType;\n\n  /**\n   * See [Client#onUnhandledReceipt]{@link Client#onUnhandledReceipt}.\n   */\n  public onUnhandledReceipt?: frameCallbackType;\n\n  /**\n   * See [Client#onUnhandledFrame]{@link Client#onUnhandledFrame}.\n   */\n  public onUnhandledFrame?: frameCallbackType;\n\n  /**\n   * See [Client#beforeConnect]{@link Client#beforeConnect}.\n   */\n  public beforeConnect?: () => void | Promise;\n\n  /**\n   * See [Client#onConnect]{@link Client#onConnect}.\n   */\n  public onConnect?: frameCallbackType;\n\n  /**\n   * See [Client#onDisconnect]{@link Client#onDisconnect}.\n   */\n  public onDisconnect?: frameCallbackType;\n\n  /**\n   * See [Client#onStompError]{@link Client#onStompError}.\n   */\n  public onStompError?: frameCallbackType;\n\n  /**\n   * See [Client#onWebSocketClose]{@link Client#onWebSocketClose}.\n   */\n  public onWebSocketClose?: closeEventCallbackType;\n\n  /**\n   * See [Client#onWebSocketError]{@link Client#onWebSocketError}.\n   */\n  public onWebSocketError?: wsErrorCallbackType;\n\n  /**\n   * See [Client#logRawCommunication]{@link Client#logRawCommunication}.\n   */\n  public logRawCommunication?: boolean;\n\n  /**\n   * See [Client#debug]{@link Client#debug}.\n   */\n  public debug?: debugFnType;\n\n  /**\n   * See [Client#discardWebsocketOnCommFailure]{@link Client#discardWebsocketOnCommFailure}.\n   */\n  public discardWebsocketOnCommFailure?: boolean;\n\n  /**\n   * See [Client#onChangeState]{@link Client#onChangeState}.\n   */\n  public onChangeState?: (state: ActivationState) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompHeaders.html":{"url":"classes/StompHeaders.html","title":"class - StompHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-headers.ts\n        \n\n            \n                Description\n            \n            \n                STOMP headers. Many functions calls will accept headers as parameters.\nThe headers sent by Broker will be available as IFrame#headers.\nkey and value must be valid strings.\nIn addition, key must not contain CR, LF, or :.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/stomp-headers.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class StompHeaders {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompRService.html":{"url":"injectables/StompRService.html","title":"injectable - StompRService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompRService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Raw Service using @stomp/stomp.js\nYou will only need the public properties and\nmethods listed unless you are an advanced user. This service handles subscribing to a\nmessage queue using the stomp.js library, and returns\nvalues via the ES6 Observable specification for\nasynchronous value streaming by wiring the STOMP\nmessages into an observable.\nIf you will like to pass the configuration as a dependency,\nplease use StompService class.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disconnect\n                            \n                            \n                                    Public\n                                initAndConnect\n                            \n                            \n                                    Public\n                                publish\n                            \n                            \n                                    Public\n                                subscribe\n                            \n                            \n                                    Public\n                                waitForReceipt\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectObservable\n                                \n                                \n                                    serverHeadersObservable\n                                \n                                \n                                    defaultMessagesObservable\n                                \n                                \n                                    receiptsObservable\n                                \n                                \n                                    errorSubject\n                                \n                                \n                                    config\n                                \n                                \n                                    client\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:239\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disconnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disconnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            It will disconnect from the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initAndConnect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAndConnect()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:136\n                            \n                        \n\n\n                \n                    \n                            It will connect to the STOMP broker.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            publish\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        publish(queueName: string | publishParams, message?: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:161\n                            \n                        \n\n\n                \n                    \n                            It will send a message to a named destination. The message must be string.\nThe message will get locally queued if the STOMP broker is not connected. It will attempt to\npublish queued messages as soon as the broker gets connected.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string | publishParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribe(queueName: string, headers: StompHeaders)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:195\n                            \n                        \n\n\n                \n                    \n                            It will subscribe to server message queues\nThis method can be safely called even if the STOMP broker is not connected.\nIf the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\nIf a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\ndo not understand what it means, please leave it as is.\nNote that when working with temporary queues where the subscription request\ncreates the\nunderlying queue, messages might be missed during reconnect. This issue is not specific\nto this library but the way STOMP brokers are designed to work.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        queueName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    StompHeaders\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForReceipt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForReceipt(receiptId: string, callback: (frame: Frame) => void)\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:230\n                            \n                        \n\n\n                \n                    \n                            STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\nTo request an acknowledgement, a receipt header needs to be sent with the actual request.\nThe value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\nrandom number or a combination may be used.\nA complaint broker will send a RECEIPT frame when an operation has actually been completed.\nThe operation needs to be matched based in the value of the receipt-id.\nThis method allow watching for a receipt and invoke the callback\nwhen corresponding receipt has been received.\nThe actual Frame\nwill be passed as parameter to the callback.\nExample:\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   *Maps to: Client#watchForReceipt\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        callback\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:40\n                            \n                        \n\n                \n                    \n                        State of the STOMPService\nIt is a BehaviorSubject and will emit current status immediately. This will typically get\nused to show current status to the end user.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        connectObservable\n                    \n                \n\n                \n                    \n                        getconnectObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:63\n                                \n                            \n                    \n                        \n                                Will trigger when connection is established. Use this to carry out initialization.\nIt will trigger every time a (re)connection occurs. If it is already connected\nit will trigger immediately. You can safely ignore the value, as it will always be\nStompState.CONNECTED\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serverHeadersObservable\n                    \n                \n\n                \n                    \n                        getserverHeadersObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:80\n                                \n                            \n                    \n                        \n                                Provides headers from most recent connection to the server as return by the CONNECTED\nframe.\nIf the STOMP connection has already been established it will trigger immediately.\nIt will additionally trigger in event of reconnection, the value will be set of headers from\nthe recent server response.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        defaultMessagesObservable\n                    \n                \n\n                \n                    \n                        getdefaultMessagesObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:87\n                                \n                            \n                    \n                        \n                                Will emit all messages to the default queue (any message that are not handled by a subscription)\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        receiptsObservable\n                    \n                \n\n                \n                    \n                        getreceiptsObservable()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:94\n                                \n                            \n                    \n                        \n                                Will emit all receipts\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorSubject\n                    \n                \n\n                \n                    \n                        geterrorSubject()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:102\n                                \n                            \n                    \n                        \n                                Will trigger when an error occurs. This Subject can be used to handle errors from\nthe stomp broker.\n\n\n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n\n                \n                    \n                        setconfig(config)\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:107\n                                \n                            \n                    \n                        \n                                Set configuration \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            config\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        client\n                    \n                \n\n                \n                    \n                        getclient()\n                    \n                \n                            \n                                \n                                    Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts:237\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { RxStomp, RxStompConfig, RxStompState } from '@stomp/rx-stomp';\n\nimport { publishParams, Client, Message, Frame } from '@stomp/stompjs';\n\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StompState } from './stomp-state';\nimport { StompHeaders } from './stomp-headers';\nimport { StompConfig } from './stomp.config';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Raw Service using @stomp/stomp.js\n *\n * You will only need the public properties and\n * methods listed unless you are an advanced user. This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you will like to pass the configuration as a dependency,\n * please use StompService class.\n */\n@Injectable()\nexport class StompRService extends RxStomp {\n  /**\n   * State of the STOMPService\n   *\n   * It is a BehaviorSubject and will emit current status immediately. This will typically get\n   * used to show current status to the end user.\n   */\n  public state: BehaviorSubject;\n\n  private static _mapStompState(st: RxStompState): StompState {\n    if (st === RxStompState.CONNECTING) {\n      return StompState.TRYING;\n    }\n    if (st === RxStompState.OPEN) {\n      return StompState.CONNECTED;\n    }\n    if (st === RxStompState.CLOSING) {\n      return StompState.DISCONNECTING;\n    }\n    if (st === RxStompState.CLOSED) {\n      return StompState.CLOSED;\n    }\n  }\n\n  /**\n   * Will trigger when connection is established. Use this to carry out initialization.\n   * It will trigger every time a (re)connection occurs. If it is already connected\n   * it will trigger immediately. You can safely ignore the value, as it will always be\n   * StompState.CONNECTED\n   */\n  get connectObservable(): Observable {\n    return this.connected$.pipe(\n      map(\n        (st: RxStompState): StompState => {\n          return StompRService._mapStompState(st);\n        }\n      )\n    );\n  }\n\n  /**\n   * Provides headers from most recent connection to the server as return by the CONNECTED\n   * frame.\n   * If the STOMP connection has already been established it will trigger immediately.\n   * It will additionally trigger in event of reconnection, the value will be set of headers from\n   * the recent server response.\n   */\n  get serverHeadersObservable(): Observable {\n    return this.serverHeaders$;\n  }\n\n  /**\n   * Will emit all messages to the default queue (any message that are not handled by a subscription)\n   */\n  get defaultMessagesObservable(): Subject {\n    return this.unhandledMessage$;\n  }\n\n  /**\n   * Will emit all receipts\n   */\n  get receiptsObservable(): Subject {\n    return this.unhandledReceipts$;\n  }\n\n  /**\n   * Will trigger when an error occurs. This Subject can be used to handle errors from\n   * the stomp broker.\n   */\n  get errorSubject(): Subject {\n    return this.stompErrors$;\n  }\n\n  /** Set configuration */\n  set config(config: StompConfig) {\n    const rxStompConfig: RxStompConfig = {};\n\n    if (typeof config.url === 'string') {\n      rxStompConfig.brokerURL = config.url;\n    } else {\n      rxStompConfig.webSocketFactory = config.url;\n    }\n\n    // Configure client heart-beating\n    rxStompConfig.heartbeatIncoming = config.heartbeat_in;\n    rxStompConfig.heartbeatOutgoing = config.heartbeat_out;\n\n    // Auto reconnect\n    rxStompConfig.reconnectDelay = config.reconnect_delay;\n\n    if (config.debug) {\n      rxStompConfig.debug = (str: string): void => {\n        console.log(new Date(), str);\n      };\n    }\n\n    rxStompConfig.connectHeaders = config.headers;\n\n    this.configure(rxStompConfig);\n  }\n  /**\n   * It will connect to the STOMP broker.\n   */\n  public initAndConnect(): void {\n    // disconnect if connected\n    this.deactivate();\n\n    // Attempt connection, passing in a callback\n    this.activate();\n  }\n\n  /**\n   * It will disconnect from the STOMP broker.\n   */\n  public disconnect(): void {\n    this.deactivate();\n  }\n\n  /**\n   * It will send a message to a named destination. The message must be `string`.\n   *\n   * The message will get locally queued if the STOMP broker is not connected. It will attempt to\n   * publish queued messages as soon as the broker gets connected.\n   *\n   * @param queueName\n   * @param message\n   * @param headers\n   */\n  public publish(\n    queueName: string | publishParams,\n    message?: string,\n    headers: StompHeaders = {}\n  ): void {\n    if (typeof queueName === 'string') {\n      super.publish({\n        destination: queueName as string,\n        body: message,\n        headers,\n      });\n    } else {\n      const pubParams: publishParams = queueName;\n      super.publish(pubParams);\n    }\n  }\n\n  /**\n   * It will subscribe to server message queues\n   *\n   * This method can be safely called even if the STOMP broker is not connected.\n   * If the underlying STOMP connection drops and reconnects, it will resubscribe automatically.\n   *\n   * If a header field 'ack' is not explicitly passed, 'ack' will be set to 'auto'. If you\n   * do not understand what it means, please leave it as is.\n   *\n   * Note that when working with temporary queues where the subscription request\n   * creates the\n   * underlying queue, messages might be missed during reconnect. This issue is not specific\n   * to this library but the way STOMP brokers are designed to work.\n   *\n   * @param queueName\n   * @param headers\n   */\n  public subscribe(\n    queueName: string,\n    headers: StompHeaders = {}\n  ): Observable {\n    return this.watch(queueName, headers);\n  }\n\n  /**\n   * STOMP brokers may carry out operation asynchronously and allow requesting for acknowledgement.\n   * To request an acknowledgement, a `receipt` header needs to be sent with the actual request.\n   * The value (say receipt-id) for this header needs to be unique for each use. Typically a sequence, a UUID, a\n   * random number or a combination may be used.\n   *\n   * A complaint broker will send a RECEIPT frame when an operation has actually been completed.\n   * The operation needs to be matched based in the value of the receipt-id.\n   *\n   * This method allow watching for a receipt and invoke the callback\n   * when corresponding receipt has been received.\n   *\n   * The actual {@link Frame}\n   * will be passed as parameter to the callback.\n   *\n   * Example:\n   * ```javascript\n   *        // Publishing with acknowledgement\n   *        let receiptId = randomText();\n   *\n   *        rxStomp.waitForReceipt(receiptId, function() {\n   *          // Will be called after server acknowledges\n   *        });\n   *        rxStomp.publish({destination: TEST.destination, headers: {receipt: receiptId}, body: msg});\n   * ```\n   *\n   * Maps to: [Client#watchForReceipt]{@link Client#watchForReceipt}\n   */\n  public waitForReceipt(\n    receiptId: string,\n    callback: (frame: Frame) => void\n  ): void {\n    super.watchForReceipt(receiptId, callback);\n  }\n\n  get client(): Client {\n    return this._stompClient;\n  }\n\n  public constructor() {\n    super();\n\n    this.state = new BehaviorSubject(StompState.CLOSED);\n\n    this.connectionState$.subscribe((st: RxStompState) => {\n      this.state.next(StompRService._mapStompState(st));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StompService.html":{"url":"injectables/StompService.html","title":"injectable - StompService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StompService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts\n        \n\n            \n                Description\n            \n            \n                Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompService with rxStompServiceFactory.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nAngular2 STOMP Service using @stomp/stomp.js\n\n            \n\n            \n                Example\n            \n            \n            \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: StompConfig)\n                    \n                \n                        \n                            \n                                Defined in consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\nSee README and samples for configuration examples\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    StompConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { StompConfig } from './stomp.config';\n\nimport { StompRService } from './stomp-r.service';\n\n/**\n * Part of `@stomp/ng2-stompjs`.\n *\n * **This class has been deprecated in favor of {@link RxStompService} with {@link rxStompServiceFactory}.\n * It will be dropped `@stomp/ng2-stompjs@8.x.x`.**\n *\n * Angular2 STOMP Service using @stomp/stomp.js\n *\n * @description This service handles subscribing to a\n * message queue using the stomp.js library, and returns\n * values via the ES6 Observable specification for\n * asynchronous value streaming by wiring the STOMP\n * messages into an observable.\n *\n * If you want to manually configure and initialize the service\n * please use StompRService\n */\n@Injectable()\nexport class StompService extends StompRService {\n  /**\n   * Constructor\n   *\n   * See README and samples for configuration examples\n   */\n  public constructor(config: StompConfig) {\n    super();\n\n    this.config = config;\n    this.initAndConnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StompSubscription.html":{"url":"classes/StompSubscription.html","title":"class - StompSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StompSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/stomp-subscription.ts\n        \n\n            \n                Description\n            \n            \n                Call Client#subscribe to create a StompSubscription.\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:12\n                            \n                        \n\n                \n                    \n                        Id associated with this subscription.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/stomp-subscription.ts:17\n                            \n                        \n\n                \n                    \n                        Unsubscribe. See Client#unsubscribe for an example.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { StompHeaders } from './stomp-headers';\n\n/**\n * Call [Client#subscribe]{@link Client#subscribe} to create a StompSubscription.\n *\n * Part of `@stomp/stompjs`.\n */\nexport class StompSubscription {\n  /**\n   * Id associated with this subscription.\n   */\n  public id: string;\n\n  /**\n   * Unsubscribe. See [Client#unsubscribe]{@link Client#unsubscribe} for an example.\n   */\n  public unsubscribe: (headers?: StompHeaders) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Versions.html":{"url":"classes/Versions.html","title":"class - Versions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Versions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            consolidated/stompjs/src/versions.ts\n        \n\n            \n                Description\n            \n            \n                Supported STOMP versions\nPart of @stomp/stompjs.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                V1_0\n                            \n                            \n                                    Static\n                                V1_1\n                            \n                            \n                                    Static\n                                V1_2\n                            \n                            \n                                    Public\n                                versions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                protocolVersions\n                            \n                            \n                                    Public\n                                supportedVersions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(versions: string[])\n                    \n                \n                        \n                            \n                                Defined in consolidated/stompjs/src/versions.ts:27\n                            \n                        \n\n                \n                    \n                            Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\nYou will an instance if this class if you want to override supported versions to be declared during\nSTOMP handshake.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        versions\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:10\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.0\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.1'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:14\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            V1_2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.2'\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:18\n                            \n                        \n\n                \n                    \n                        Indicates protocol version 1.2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            versions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            protocolVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        protocolVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:47\n                            \n                        \n\n\n                \n                    \n                            Used while creating a WebSocket\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            supportedVersions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        supportedVersions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in consolidated/stompjs/src/versions.ts:40\n                            \n                        \n\n\n                \n                    \n                            Used as part of CONNECT STOMP Frame\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class Versions {\n  /**\n   * Indicates protocol version 1.0\n   */\n  public static V1_0 = '1.0';\n  /**\n   * Indicates protocol version 1.1\n   */\n  public static V1_1 = '1.1';\n  /**\n   * Indicates protocol version 1.2\n   */\n  public static V1_2 = '1.2';\n\n  /**\n   * @internal\n   */\n  public static default = new Versions([\n    Versions.V1_0,\n    Versions.V1_1,\n    Versions.V1_2,\n  ]);\n\n  /**\n   * Takes an array of string of versions, typical elements '1.0', '1.1', or '1.2'\n   *\n   * You will an instance if this class if you want to override supported versions to be declared during\n   * STOMP handshake.\n   */\n  constructor(public versions: string[]) {}\n\n  /**\n   * Used as part of CONNECT STOMP Frame\n   */\n  public supportedVersions() {\n    return this.versions.join(',');\n  }\n\n  /**\n   * Used while creating a WebSocket\n   */\n  public protocolVersions() {\n    return this.versions.map(x => `v${x.replace('.', '')}.stomp`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp-r.service.ts\n            \n            injectable\n            StompRService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/compatibility/stomp.service.ts\n            \n            injectable\n            StompService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-config.ts\n            \n            injectable\n            InjectableRxStompConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            injectable\n            InjectableRxStompRPCConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n            \n            variable\n            InjectableRxStompRpcConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-rpc.service.ts\n            \n            injectable\n            RxStompRPCService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n            \n            function\n            rxStompServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/ng2-stompjs/src/app/rx-stomp.service.ts\n            \n            injectable\n            RxStompService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-rx-stomp-publish-params.ts\n            \n            interface\n            IRxStompPublishParams\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/i-watch-params.ts\n            \n            interface\n            IWatchParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-config.ts\n            \n            class\n            RxStompConfig\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n            \n            class\n            RxStompRPCConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp-rpc.ts\n            \n            class\n            RxStompRPC\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/rx-stomp/src/rx-stomp.ts\n            \n            class\n            RxStomp\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/client.ts\n            \n            class\n            Client\n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/compat-client.ts\n            \n            class\n            CompatClient\n            \n                100 %\n                (44/44)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/compatibility/stomp.ts\n            \n            class\n            Stomp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-frame.ts\n            \n            interface\n            IFrame\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-message.ts\n            \n            interface\n            IMessage\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/i-transaction.ts\n            \n            interface\n            ITransaction\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-config.ts\n            \n            class\n            StompConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-headers.ts\n            \n            class\n            StompHeaders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/stomp-subscription.ts\n            \n            class\n            StompSubscription\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/types.ts\n            \n            interface\n            IPublishParams\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                consolidated/stompjs/src/versions.ts\n            \n            class\n            Versions\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivationState   (consolidated/.../types.ts)\n                        \n                        \n                            RxStompState   (consolidated/.../rx-stomp-state.ts)\n                        \n                        \n                            StompSocketState   (consolidated/.../types.ts)\n                        \n                        \n                            StompState   (consolidated/.../stomp-state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivationState\n                    \n                \n                    \n                        \n                            Possible activation state\n\n                        \n                    \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                 DEACTIVATING\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StompSocketState\n                    \n                \n                    \n                        \n                            Possible states for the IStompSocket\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/rx-stomp/src/rx-stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        RxStompState\n                    \n                \n                    \n                        \n                            Possible states for the RxStomp\nPart of @stomp/rx-stomp\n\n                        \n                    \n                        \n                            \n                                 CONNECTING\n                            \n                        \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                 CLOSING\n                            \n                        \n                        \n                            \n                                 CLOSED\n                            \n                        \n            \n        \n\n    consolidated/ng2-stompjs/src/app/compatibility/stomp-state.ts\n    \n        \n            \n                \n                    \n                        \n                        StompState\n                    \n                \n                    \n                        \n                            Part of @stomp/ng2-stompjs.\nThis class has been deprecated in favor of RxStompState.\nIt will be dropped @stomp/ng2-stompjs@8.x.x.\nPossible states for the STOMP service\n\n                        \n                    \n                        \n                            \n                                 CLOSED\n                            \n                        \n                        \n                            \n                                 TRYING\n                            \n                        \n                        \n                            \n                                 CONNECTED\n                            \n                        \n                        \n                            \n                                 DISCONNECTING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            rxStompServiceFactory   (consolidated/.../rx-stomp-service-factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/app/rx-stomp-service-factory.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rxStompServiceFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nrxStompServiceFactory(rxStompConfig)\n                    \n                \n\n\n\n\n                \n                    \n                            Part of @stomp/ng2-stompjs.\nThis is factory function that can create RxStompService\nwhen configuration is already known.\nYou can use this function for defining provider for RxStompService.\nRxStompService created using this function is configured and activated.\nThis provides the simplest mechanism to define RxStompService for Dependency Injection.\nSee: /guide/ng2-stompjs/ng2-stomp-with-angular7.html\nfor a step-by-step guide.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rxStompConfig\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RxStompService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNavigating through the API docs\nThese docs correspond to development versions. Please see api-docs for NPM released versions.\nThe API docs cover three libraries:\n\n@stomp/stompjs\n@stomp/rx-stomp - builds over @stomp/stompjs\n@stomp/ng2-stompjs - thin wrapper over @stomp/rx-stomp\n\nThe documentation for classes indicate which library each of the classes\nbelong. See the guides for more information and tutorials.\nThese documents have been generated using Compodoc.\nstompjs\nPreferred entry point is Client.\nIf you are using compatibility mode your entry point would be\nStomp.\nrx-stomp\nYour entry point would be RxStomp.\nFor RPC RxStompRPC.\nng2-stompjs\nInjectable versions of rx-stomp classes:\n\nRxStompService for RxStomp\nInjectableRxStompConfig for RxStompConfig\nRxStompRPCService for RxStompRPC\nInjectableRxStompRPCConfig for RxStompRPCConfig\nrxStompServiceFactory\n\nDeprecated classes:\n\nStompRService\nStompService\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            closeEventCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            debugFnType   (consolidated/.../types.ts)\n                        \n                        \n                            Frame   (consolidated/.../i-frame.ts)\n                        \n                        \n                            frameCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            Message   (consolidated/.../i-message.ts)\n                        \n                        \n                            messageCallbackType   (consolidated/.../types.ts)\n                        \n                        \n                            publishParams   (consolidated/.../types.ts)\n                        \n                        \n                            setupReplyQueueFnType   (consolidated/.../rx-stomp-rpc-config.ts)\n                        \n                        \n                            wsErrorCallbackType   (consolidated/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/stompjs/src/types.ts\n    \n    \n        \n            \n                \n                    \n                    closeEventCallbackType\n                \n            \n            \n                \n                    This callback will receive a CloseEvent\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    debugFnType\n                \n            \n            \n                \n                    This callback will receive a string as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    frameCallbackType\n                \n            \n            \n                \n                    This callback will receive a IFrame as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    messageCallbackType\n                \n            \n            \n                \n                    This callback will receive a IMessage as parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    publishParams\n                \n            \n            \n                \n                    Backward compatibility, switch to IPublishParams.\n\n                \n            \n            \n                \n                        IPublishParams\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    wsErrorCallbackType\n                \n            \n            \n                \n                    This callback will receive an Event\nas parameter.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-frame.ts\n    \n    \n        \n            \n                \n                    \n                    Frame\n                \n            \n            \n                \n                    Alias for IFrame\n\n                \n            \n            \n                \n                        IFrame\n\n                \n            \n        \n    \n    consolidated/stompjs/src/i-message.ts\n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Aliased to IMessage.\nPart of @stomp/stompjs.\n\n                \n            \n            \n                \n                        IMessage\n\n                \n            \n        \n    \n    consolidated/rx-stomp/src/rx-stomp-rpc-config.ts\n    \n    \n        \n            \n                \n                    \n                    setupReplyQueueFnType\n                \n            \n            \n                \n                    See the guide for example\nPart of @stomp/rx-stomp\n\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            InjectableRxStompRpcConfig   (consolidated/.../injectable-rx-stomp-rpc-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    consolidated/ng2-stompjs/src/app/injectable-rx-stomp-rpc-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectableRxStompRpcConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : InjectableRxStompRPCConfig\n                        \n                    \n\n                \n                    \n                        Deprecated, use InjectableRxStompRPCConfig instead\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
